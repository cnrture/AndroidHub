(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', './kotlin-kotlin-stdlib.js', './kotlinx-coroutines-core.js', './compose-multiplatform-core-compose-runtime-runtime.js', './compose-multiplatform-core-collection-collection.js', './compose-multiplatform-core-compose-ui-ui-geometry.js', './compose-multiplatform-core-compose-ui-ui-graphics.js', './compose-multiplatform-core-compose-ui-ui-unit.js', './kotlin_org_jetbrains_kotlin_kotlin_dom_api_compat.js', './skiko-kjs.js', './compose-multiplatform-core-compose-ui-ui-text.js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('./kotlin-kotlin-stdlib.js'), require('./kotlinx-coroutines-core.js'), require('./compose-multiplatform-core-compose-runtime-runtime.js'), require('./compose-multiplatform-core-collection-collection.js'), require('./compose-multiplatform-core-compose-ui-ui-geometry.js'), require('./compose-multiplatform-core-compose-ui-ui-graphics.js'), require('./compose-multiplatform-core-compose-ui-ui-unit.js'), require('./kotlin_org_jetbrains_kotlin_kotlin_dom_api_compat.js'), require('./skiko-kjs.js'), require('./compose-multiplatform-core-compose-ui-ui-text.js'));
  else {
    if (typeof this['kotlin-kotlin-stdlib'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'kotlin-kotlin-stdlib' was not found. Please, check whether 'kotlin-kotlin-stdlib' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    if (typeof this['kotlinx-coroutines-core'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'kotlinx-coroutines-core' was not found. Please, check whether 'kotlinx-coroutines-core' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    if (typeof this['compose-multiplatform-core-compose-runtime-runtime'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'compose-multiplatform-core-compose-runtime-runtime' was not found. Please, check whether 'compose-multiplatform-core-compose-runtime-runtime' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    if (typeof this['compose-multiplatform-core-collection-collection'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'compose-multiplatform-core-collection-collection' was not found. Please, check whether 'compose-multiplatform-core-collection-collection' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    if (typeof this['compose-multiplatform-core-compose-ui-ui-geometry'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'compose-multiplatform-core-compose-ui-ui-geometry' was not found. Please, check whether 'compose-multiplatform-core-compose-ui-ui-geometry' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    if (typeof this['compose-multiplatform-core-compose-ui-ui-graphics'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'compose-multiplatform-core-compose-ui-ui-graphics' was not found. Please, check whether 'compose-multiplatform-core-compose-ui-ui-graphics' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    if (typeof this['compose-multiplatform-core-compose-ui-ui-unit'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'compose-multiplatform-core-compose-ui-ui-unit' was not found. Please, check whether 'compose-multiplatform-core-compose-ui-ui-unit' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    if (typeof kotlin_org_jetbrains_kotlin_kotlin_dom_api_compat === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'kotlin_org_jetbrains_kotlin_kotlin_dom_api_compat' was not found. Please, check whether 'kotlin_org_jetbrains_kotlin_kotlin_dom_api_compat' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    if (typeof this['skiko-kjs'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'skiko-kjs' was not found. Please, check whether 'skiko-kjs' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    if (typeof this['compose-multiplatform-core-compose-ui-ui-text'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-compose-ui-ui'. Its dependency 'compose-multiplatform-core-compose-ui-ui-text' was not found. Please, check whether 'compose-multiplatform-core-compose-ui-ui-text' is loaded prior to 'compose-multiplatform-core-compose-ui-ui'.");
    }
    root['compose-multiplatform-core-compose-ui-ui'] = factory(typeof this['compose-multiplatform-core-compose-ui-ui'] === 'undefined' ? {} : this['compose-multiplatform-core-compose-ui-ui'], this['kotlin-kotlin-stdlib'], this['kotlinx-coroutines-core'], this['compose-multiplatform-core-compose-runtime-runtime'], this['compose-multiplatform-core-collection-collection'], this['compose-multiplatform-core-compose-ui-ui-geometry'], this['compose-multiplatform-core-compose-ui-ui-graphics'], this['compose-multiplatform-core-compose-ui-ui-unit'], kotlin_org_jetbrains_kotlin_kotlin_dom_api_compat, this['skiko-kjs'], this['compose-multiplatform-core-compose-ui-ui-text']);
  }
}(this, function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core, kotlin_org_jetbrains_compose_runtime_runtime, kotlin_org_jetbrains_compose_collection_internal_collection, kotlin_org_jetbrains_compose_ui_ui_geometry, kotlin_org_jetbrains_compose_ui_ui_graphics, kotlin_org_jetbrains_compose_ui_ui_unit, kotlin_org_jetbrains_kotlin_kotlin_dom_api_compat, kotlin_org_jetbrains_skiko_skiko, kotlin_org_jetbrains_compose_ui_ui_text) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var sign = Math.sign;
  var VOID = kotlin_kotlin.$_$.g;
  var protoOf = kotlin_kotlin.$_$.ic;
  var classMeta = kotlin_kotlin.$_$.xa;
  var setMetadataFor = kotlin_kotlin.$_$.jc;
  var THROW_CCE = kotlin_kotlin.$_$.ng;
  var interfaceMeta = kotlin_kotlin.$_$.mb;
  var Key_instance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.p;
  var Job = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.g1;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.c1;
  var toString = kotlin_kotlin.$_$.nc;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.a2;
  var cancel = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.m1;
  var Unit_instance = kotlin_kotlin.$_$.k5;
  var objectMeta = kotlin_kotlin.$_$.hc;
  var charSequenceLength = kotlin_kotlin.$_$.va;
  var equals = kotlin_kotlin.$_$.ab;
  var hashCode = kotlin_kotlin.$_$.kb;
  var captureStack = kotlin_kotlin.$_$.ra;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.x;
  var fillArrayVal = kotlin_kotlin.$_$.cb;
  var MutableVector = kotlin_org_jetbrains_compose_runtime_runtime.$_$.a;
  var isInterface = kotlin_kotlin.$_$.vb;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.z;
  var objectCreate = kotlin_kotlin.$_$.gc;
  var MutableLongSet = kotlin_org_jetbrains_compose_collection_internal_collection.$_$.d;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.nh;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.uh;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.n;
  var isArray = kotlin_kotlin.$_$.nb;
  var Enum = kotlin_kotlin.$_$.bg;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.v1;
  var Companion_getInstance = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.z;
  var numberRangeToNumber = kotlin_kotlin.$_$.cc;
  var compareTo = kotlin_kotlin.$_$.ya;
  var Rect = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.e;
  var numberToLong = kotlin_kotlin.$_$.fc;
  var get_RectangleShape = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.m;
  var Color = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.f;
  var getNumberHashCode = kotlin_kotlin.$_$.gb;
  var getBooleanHashCode = kotlin_kotlin.$_$.eb;
  var Color__hashCode_impl_vjyivj = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.b1;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.i1;
  var Density = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.g;
  var Companion_getInstance_0 = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.a1;
  var Density_0 = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.f;
  var toPx = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.c;
  var toPx_0 = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.d;
  var toDp = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.i;
  var toSize = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.e;
  var Companion_getInstance_1 = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.t1;
  var FloatCompanionObject_instance = kotlin_kotlin.$_$.w4;
  var floatFromBits = kotlin_kotlin.$_$.db;
  var Long = kotlin_kotlin.$_$.gg;
  var toRawBits = kotlin_kotlin.$_$.xh;
  var toLong = kotlin_kotlin.$_$.lc;
  var LongSparseArray = kotlin_org_jetbrains_compose_collection_internal_collection.$_$.b;
  var ensureNotNull = kotlin_kotlin.$_$.fh;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.m;
  var Companion_getInstance_2 = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.y;
  var Offset = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.c;
  var Offset__hashCode_impl_hbql41 = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.o;
  var emptyList = kotlin_kotlin.$_$.i7;
  var Offset__minus_impl_hoj2c0 = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.p;
  var _Offset___get_x__impl__xvi35n = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.s;
  var _Offset___get_y__impl__8bzhra = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.t;
  var _IntSize___get_width__impl__d9yl4o = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.l1;
  var _IntSize___get_height__impl__prv63b = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.k1;
  var _Size___get_width__impl__58y75t = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.x;
  var _Size___get_height__impl__a04p02 = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.v;
  var contentEquals = kotlin_kotlin.$_$.t6;
  var contentHashCode = kotlin_kotlin.$_$.v6;
  var CoroutineImpl = kotlin_kotlin.$_$.ja;
  var CoroutineScope_0 = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.d1;
  var delay = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.d;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.v9;
  var Companion_instance = kotlin_kotlin.$_$.f5;
  var createFailure = kotlin_kotlin.$_$.eh;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.b3;
  var launch = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.t1;
  var EmptyCoroutineContext_getInstance = kotlin_kotlin.$_$.s4;
  var intercepted = kotlin_kotlin.$_$.x9;
  var get_MODE_CANCELLABLE = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.i1;
  var CancellableContinuationImpl = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.x;
  var Continuation = kotlin_kotlin.$_$.da;
  var Companion_getInstance_3 = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.x1;
  var Size = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.f;
  var CoroutineStart_UNDISPATCHED_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a;
  var createCoroutine = kotlin_kotlin.$_$.ka;
  var longArray = kotlin_kotlin.$_$.bc;
  var copyOf = kotlin_kotlin.$_$.y6;
  var min = kotlin_kotlin.$_$.rc;
  var max = kotlin_kotlin.$_$.qc;
  var Constraints = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.b;
  var IntSize = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.m;
  var Companion_getInstance_4 = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.w1;
  var Offset__plus_impl_c78cg0 = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.q;
  var roundToInt = kotlin_kotlin.$_$.sc;
  var IntOffset = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.j;
  var _IntOffset___get_x__impl__qiqr5o = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.h1;
  var _IntOffset___get_y__impl__2avpwj = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.i1;
  var Offset_0 = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.b;
  var emptyMap = kotlin_kotlin.$_$.j7;
  var _Constraints___get_minWidth__impl__hi9lfi = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.e1;
  var _Constraints___get_maxWidth__impl__uuyqc = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.c1;
  var coerceIn = kotlin_kotlin.$_$.bd;
  var _Constraints___get_minHeight__impl__ev4bgx = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.d1;
  var _Constraints___get_maxHeight__impl__dt3e8z = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.b1;
  var LayoutDirection_Ltr_getInstance = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.x;
  var IntOffset_0 = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.k;
  var Constraints_0 = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.a;
  var Companion_instance_0 = kotlin_org_jetbrains_compose_runtime_runtime.$_$.o1;
  var mutableStateOf = kotlin_org_jetbrains_compose_runtime_runtime.$_$.z;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.u;
  var LazyThreadSafetyMode_NONE_getInstance = kotlin_kotlin.$_$.i;
  var lazy = kotlin_kotlin.$_$.lh;
  var KProperty1 = kotlin_kotlin.$_$.kd;
  var getPropertyCallableRef = kotlin_kotlin.$_$.ib;
  var get_lastIndex = kotlin_kotlin.$_$.g8;
  var copyOf_0 = kotlin_kotlin.$_$.e7;
  var List = kotlin_kotlin.$_$.x5;
  var arrayCopy = kotlin_kotlin.$_$.h6;
  var numberToInt = kotlin_kotlin.$_$.ec;
  var toBits = kotlin_kotlin.$_$.vh;
  var Paint = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.k;
  var Companion_getInstance_5 = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.u1;
  var isFinite = kotlin_kotlin.$_$.ih;
  var KMutableProperty1 = kotlin_kotlin.$_$.id;
  var Companion_getInstance_6 = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.v1;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.t2;
  var Companion_getInstance_7 = kotlin_org_jetbrains_compose_runtime_runtime.$_$.q1;
  var println = kotlin_kotlin.$_$.na;
  var ComposeNodeLifecycleCallback = kotlin_org_jetbrains_compose_runtime_runtime.$_$.i;
  var Map = kotlin_kotlin.$_$.z5;
  var getValue = kotlin_kotlin.$_$.y7;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.q;
  var CanvasDrawScope = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.a;
  var drawPath$default = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.x;
  var toSize_0 = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.w;
  var DrawScope = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.b;
  var IntCompanionObject_instance = kotlin_kotlin.$_$.x4;
  var copyOf_1 = kotlin_kotlin.$_$.f7;
  var abs = kotlin_kotlin.$_$.pc;
  var coerceAtLeast = kotlin_kotlin.$_$.wc;
  var _Matrix___init__impl__q3kp4w = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.d1;
  var MutableRect = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.a;
  var Offset__unaryMinus_impl_ssu2iv = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.r;
  var toRect = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.i;
  var plus = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.u;
  var minus = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.s;
  var get_isFinite = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.h;
  var Offset__getDistanceSquared_impl_97mhi6 = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.m;
  var SnapshotStateObserver = kotlin_org_jetbrains_compose_runtime_runtime.$_$.e;
  var sourceInformation = kotlin_org_jetbrains_compose_runtime_runtime.$_$.f1;
  var traceEventStart = kotlin_org_jetbrains_compose_runtime_runtime.$_$.j1;
  var isTraceInProgress = kotlin_org_jetbrains_compose_runtime_runtime.$_$.x;
  var CompositionLocalProvider = kotlin_org_jetbrains_compose_runtime_runtime.$_$.j;
  var traceEventEnd = kotlin_org_jetbrains_compose_runtime_runtime.$_$.i1;
  var updateChangedFlags = kotlin_org_jetbrains_compose_runtime_runtime.$_$.k1;
  var staticCompositionLocalOf = kotlin_org_jetbrains_compose_runtime_runtime.$_$.g1;
  var _Matrix___get_values__impl__fblr7b = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.l1;
  var Generic = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.h;
  var Rounded = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.j;
  var Rectangle = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.i;
  var Path = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.l;
  var _CornerRadius___get_x__impl__1594cn = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.k;
  var _CornerRadius___get_y__impl__tyvleu = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.l;
  var Companion_getInstance_8 = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.v1;
  var _Dp___init__impl__ms3zkb = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.f1;
  var DpSize = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.h;
  var identityHashCode = kotlin_org_jetbrains_compose_runtime_runtime.$_$.v;
  var getStringHashCode = kotlin_kotlin.$_$.jb;
  var toMutableList = kotlin_kotlin.$_$.o9;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.q2;
  var listOf = kotlin_kotlin.$_$.m8;
  var lazy_0 = kotlin_kotlin.$_$.mh;
  var EventListener = kotlin_org_jetbrains_kotlin_kotlin_dom_api_compat.$_$.a;
  var CancellationException = kotlin_kotlin.$_$.u9;
  var CancellationException_init_$Init$ = kotlin_kotlin.$_$.b1;
  var SkikoKey_KEY_UNKNOWN_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.l6;
  var SkikoKey_KEY_HOME_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.l4;
  var SkikoKey_KEY_UP_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.m6;
  var SkikoKey_KEY_DOWN_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.q3;
  var SkikoKey_KEY_LEFT_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.v4;
  var SkikoKey_KEY_RIGHT_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.c6;
  var SkikoKey_KEY_0_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.w2;
  var SkikoKey_KEY_1_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.x2;
  var SkikoKey_KEY_2_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.y2;
  var SkikoKey_KEY_3_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.z2;
  var SkikoKey_KEY_4_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.a3;
  var SkikoKey_KEY_5_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.b3;
  var SkikoKey_KEY_6_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.c3;
  var SkikoKey_KEY_7_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.d3;
  var SkikoKey_KEY_8_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.e3;
  var SkikoKey_KEY_9_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.f3;
  var SkikoKey_KEY_MINUS_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.x4;
  var SkikoKey_KEY_EQUALS_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.u3;
  var SkikoKey_KEY_A_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.g3;
  var SkikoKey_KEY_B_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.k3;
  var SkikoKey_KEY_C_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.o3;
  var SkikoKey_KEY_D_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.r3;
  var SkikoKey_KEY_E_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.w3;
  var SkikoKey_KEY_F_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.j4;
  var SkikoKey_KEY_G_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.k4;
  var SkikoKey_KEY_H_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.m4;
  var SkikoKey_KEY_I_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.o4;
  var SkikoKey_KEY_J_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.p4;
  var SkikoKey_KEY_K_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.q4;
  var SkikoKey_KEY_L_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.w4;
  var SkikoKey_KEY_M_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.y4;
  var SkikoKey_KEY_N_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.p5;
  var SkikoKey_KEY_O_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.r5;
  var SkikoKey_KEY_P_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.w5;
  var SkikoKey_KEY_Q_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.x5;
  var SkikoKey_KEY_R_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.d6;
  var SkikoKey_KEY_S_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.i6;
  var SkikoKey_KEY_T_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.k6;
  var SkikoKey_KEY_U_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.n6;
  var SkikoKey_KEY_V_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.o6;
  var SkikoKey_KEY_W_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.p6;
  var SkikoKey_KEY_X_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.q6;
  var SkikoKey_KEY_Y_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.r6;
  var SkikoKey_KEY_Z_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.s6;
  var SkikoKey_KEY_COMMA_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.n3;
  var SkikoKey_KEY_PERIOD_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.s5;
  var SkikoKey_KEY_LEFT_ALT_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.r4;
  var SkikoKey_KEY_RIGHT_ALT_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.y5;
  var SkikoKey_KEY_LEFT_SHIFT_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.u4;
  var SkikoKey_KEY_RIGHT_SHIFT_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.b6;
  var SkikoKey_KEY_TAB_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.j6;
  var SkikoKey_KEY_SPACE_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.h6;
  var SkikoKey_KEY_ENTER_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.t3;
  var SkikoKey_KEY_BACKSPACE_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.i3;
  var SkikoKey_KEY_DELETE_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.p3;
  var SkikoKey_KEY_ESCAPE_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.v3;
  var SkikoKey_KEY_LEFT_CONTROL_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.s4;
  var SkikoKey_KEY_RIGHT_CONTROL_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.z5;
  var SkikoKey_KEY_CAPSLOCK_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.l3;
  var SkikoKey_KEY_SCROLL_LOCK_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.e6;
  var SkikoKey_KEY_LEFT_META_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.t4;
  var SkikoKey_KEY_RIGHT_META_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.a6;
  var SkikoKey_KEY_PRINTSCEEN_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.v5;
  var SkikoKey_KEY_INSERT_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.n4;
  var SkikoKey_KEY_BACK_QUOTE_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.j3;
  var SkikoKey_KEY_OPEN_BRACKET_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.q5;
  var SkikoKey_KEY_CLOSE_BRACKET_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.m3;
  var SkikoKey_KEY_SLASH_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.g6;
  var SkikoKey_KEY_BACKSLASH_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.h3;
  var SkikoKey_KEY_SEMICOLON_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.f6;
  var SkikoKey_KEY_PGUP_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.u5;
  var SkikoKey_KEY_PGDOWN_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.t5;
  var SkikoKey_KEY_F1_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.a4;
  var SkikoKey_KEY_F2_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.b4;
  var SkikoKey_KEY_F3_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.c4;
  var SkikoKey_KEY_F4_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.d4;
  var SkikoKey_KEY_F5_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.e4;
  var SkikoKey_KEY_F6_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.f4;
  var SkikoKey_KEY_F7_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.g4;
  var SkikoKey_KEY_F8_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.h4;
  var SkikoKey_KEY_F9_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.i4;
  var SkikoKey_KEY_F10_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.x3;
  var SkikoKey_KEY_F11_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.y3;
  var SkikoKey_KEY_F12_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.z3;
  var SkikoKey_KEY_NUM_LOCK_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.o5;
  var SkikoKey_KEY_NUMPAD_0_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.z4;
  var SkikoKey_KEY_NUMPAD_1_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.a5;
  var SkikoKey_KEY_NUMPAD_2_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.b5;
  var SkikoKey_KEY_NUMPAD_3_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.c5;
  var SkikoKey_KEY_NUMPAD_4_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.d5;
  var SkikoKey_KEY_NUMPAD_5_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.e5;
  var SkikoKey_KEY_NUMPAD_6_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.f5;
  var SkikoKey_KEY_NUMPAD_7_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.g5;
  var SkikoKey_KEY_NUMPAD_8_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.h5;
  var SkikoKey_KEY_NUMPAD_9_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.i5;
  var SkikoKey_KEY_NUMPAD_DIVIDE_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.k5;
  var SkikoKey_KEY_NUMPAD_MULTIPLY_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.m5;
  var SkikoKey_KEY_NUMPAD_SUBTRACT_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.n5;
  var SkikoKey_KEY_NUMPAD_ADD_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.j5;
  var SkikoKey_KEY_NUMPAD_ENTER_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.l5;
  var SkikoKey_KEY_END_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.s3;
  var Companion_getInstance_9 = kotlin_org_jetbrains_skiko_skiko.$_$.b8;
  var SkikoInputModifiers__has_impl_qg30o6 = kotlin_org_jetbrains_skiko_skiko.$_$.j7;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.r6;
  var asComposeCanvas = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.q;
  var firstOrNull = kotlin_kotlin.$_$.p7;
  var SkikoPointerDevice_TOUCH_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.v6;
  var SkikoView = kotlin_org_jetbrains_skiko_skiko.$_$.t8;
  var Dispatchers_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.n;
  var IntRect = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.l;
  var SkikoPointerEventKind_SCROLL_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.z6;
  var currentNanoTime = kotlin_org_jetbrains_skiko_skiko.$_$.v8;
  var first = kotlin_kotlin.$_$.s7;
  var binarySearch = kotlin_kotlin.$_$.n6;
  var asList = kotlin_kotlin.$_$.di;
  var SkikoPointer = kotlin_org_jetbrains_skiko_skiko.$_$.s8;
  var average = kotlin_kotlin.$_$.m6;
  var SkikoPointerEvent = kotlin_org_jetbrains_skiko_skiko.$_$.r8;
  var _SkikoMouseButtons___init__impl__kylsco = kotlin_org_jetbrains_skiko_skiko.$_$.l7;
  var SkikoPointerEventKind_DRAG_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.x6;
  var Companion_getInstance_10 = kotlin_org_jetbrains_skiko_skiko.$_$.d8;
  var Companion_instance_1 = kotlin_org_jetbrains_skiko_skiko.$_$.c8;
  var SkikoKeyboardEvent = kotlin_org_jetbrains_skiko_skiko.$_$.q8;
  var SkikoPointerEventKind_DOWN_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.w6;
  var _SkikoInputModifiers___get_value__impl__13eq4a = kotlin_org_jetbrains_skiko_skiko.$_$.k7;
  var _SkikoInputModifiers___init__impl__z8g2zy = kotlin_org_jetbrains_skiko_skiko.$_$.i7;
  var _SkikoMouseButtons___get_value__impl__ltkvwc = kotlin_org_jetbrains_skiko_skiko.$_$.m7;
  var Empty_instance = kotlin_org_jetbrains_skiko_skiko.$_$.a8;
  var Factory_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.k;
  var Channel = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.q;
  var composableLambdaInstance = kotlin_org_jetbrains_compose_runtime_runtime.$_$.b;
  var SkikoPointerEventKind_MOVE_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.y6;
  var SkikoPointerEventKind_UP_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.a7;
  var SkikoKeyboardEventKind_DOWN_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.t6;
  var SkikoKeyboardEventKind_UP_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.u6;
  var CompositionLocalProvider_0 = kotlin_org_jetbrains_compose_runtime_runtime.$_$.k;
  var SkiaLayer = kotlin_org_jetbrains_skiko_skiko.$_$.p8;
  var IntSize_0 = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.n;
  var get_isActive = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.r1;
  var LaunchedEffect = kotlin_org_jetbrains_compose_runtime_runtime.$_$.n;
  var get_currentSystemTheme = kotlin_org_jetbrains_skiko_skiko.$_$.w8;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var toString_0 = kotlin_kotlin.$_$.yh;
  var mapCapacity = kotlin_kotlin.$_$.o8;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.w;
  var to = kotlin_kotlin.$_$.zh;
  var Collection = kotlin_kotlin.$_$.s5;
  var toSet = kotlin_kotlin.$_$.ud;
  var minus_0 = kotlin_kotlin.$_$.rd;
  var toList = kotlin_kotlin.$_$.td;
  var HashSet_init_$Create$_0 = kotlin_kotlin.$_$.t;
  var emptySequence = kotlin_kotlin.$_$.nd;
  var asSequence = kotlin_kotlin.$_$.l6;
  var filter = kotlin_kotlin.$_$.od;
  var map = kotlin_kotlin.$_$.qd;
  var TextInputService = kotlin_org_jetbrains_compose_ui_ui_text.$_$.c;
  var FontLoader = kotlin_org_jetbrains_compose_ui_ui_text.$_$.d;
  var createFontFamilyResolver = kotlin_org_jetbrains_compose_ui_ui_text.$_$.b;
  var _Constraints___get_hasBoundedWidth__impl__7hd0wr = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.z;
  var _Constraints___get_hasBoundedHeight__impl__bsh4rw = kotlin_org_jetbrains_compose_ui_ui_unit.$_$.y;
  var AbstractApplier = kotlin_org_jetbrains_compose_runtime_runtime.$_$.f;
  var Runnable = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.j1;
  var CoroutineDispatcher = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a1;
  var invokeOnTimeout = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.e1;
  var Delay = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.f1;
  var cancelConsumed = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.r;
  var ClipboardManager = kotlin_org_jetbrains_skiko_skiko.$_$.o8;
  var URIManager = kotlin_org_jetbrains_skiko_skiko.$_$.u8;
  var Matrix = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.g;
  var Matrix__reset_impl_4l49i7 = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.g1;
  var Matrix__translate$default_impl_10t8ql = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.o1;
  var Matrix__rotateZ_impl_2g2pf5 = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.j1;
  var Matrix__rotateY_impl_2x4btc = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.i1;
  var Matrix__rotateX_impl_3e5y7j = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.h1;
  var Matrix__scale$default_impl_snaws9 = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.n1;
  var Matrix__timesAssign_impl_oas521 = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.k1;
  var set_alphaMultiplier = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.p;
  var get_nativeCanvas = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.t;
  var toSkiaRRect = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.w;
  var Companion_getInstance_11 = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.s1;
  var ClipMode_INTERSECT_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.d2;
  var ClipMode_DIFFERENCE_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.c2;
  var PictureRecorder_init_$Create$ = kotlin_org_jetbrains_skiko_skiko.$_$.h7;
  var Matrix__map_impl_7meu7m = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.e1;
  var Matrix__map_impl_7meu7m_0 = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.f1;
  var toRect_0 = kotlin_org_jetbrains_compose_ui_ui_geometry.$_$.j;
  var Companion_instance_2 = kotlin_org_jetbrains_skiko_skiko.$_$.x7;
  var Point3 = kotlin_org_jetbrains_skiko_skiko.$_$.n8;
  var Color__copy$default_impl_ectz3s = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.m1;
  var ShadowUtils_getInstance = kotlin_org_jetbrains_skiko_skiko.$_$.y7;
  var asSkiaPath = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.s;
  var toArgb = kotlin_org_jetbrains_compose_ui_ui_graphics.$_$.u;
  var Composition = kotlin_org_jetbrains_compose_runtime_runtime.$_$.m;
  var CompositionLocalProvider_1 = kotlin_org_jetbrains_compose_runtime_runtime.$_$.l;
  var Companion_getInstance_12 = kotlin_org_jetbrains_compose_runtime_runtime.$_$.p1;
  var composableLambda = kotlin_org_jetbrains_compose_runtime_runtime.$_$.c;
  var BroadcastFrameClock = kotlin_org_jetbrains_compose_runtime_runtime.$_$.h;
  var KProperty0 = kotlin_kotlin.$_$.jd;
  var mutableStateMapOf = kotlin_org_jetbrains_compose_runtime_runtime.$_$.y;
  var firstOrNull_0 = kotlin_kotlin.$_$.q7;
  var Recomposer = kotlin_org_jetbrains_compose_runtime_runtime.$_$.o;
  var MutableList = kotlin_kotlin.$_$.b6;
  //endregion
  //region block: pre-declaration
  function then(other) {
    return other === Companion_instance_3 ? this : new CombinedModifier(this, other);
  }
  setMetadataFor(Modifier, 'Modifier', interfaceMeta);
  function foldIn(initial, operation) {
    return operation(initial, this);
  }
  function all(predicate) {
    return predicate(this);
  }
  setMetadataFor(Element, 'Element', interfaceMeta, VOID, [Modifier]);
  setMetadataFor(InspectorValueInfo, 'InspectorValueInfo', classMeta);
  setMetadataFor(ComposedModifier, 'ComposedModifier', classMeta, InspectorValueInfo, [Element, InspectorValueInfo]);
  setMetadataFor(Node, 'Node', classMeta);
  setMetadataFor(Companion, 'Companion', objectMeta, VOID, [Modifier]);
  setMetadataFor(CombinedModifier, 'CombinedModifier', classMeta, VOID, [Modifier]);
  setMetadataFor(PlatformOptimizedCancellationException, 'PlatformOptimizedCancellationException', classMeta, CancellationException);
  setMetadataFor(ModifierNodeDetachedCancellationException, 'ModifierNodeDetachedCancellationException', classMeta, PlatformOptimizedCancellationException, VOID, ModifierNodeDetachedCancellationException);
  setMetadataFor(SynchronizedObject, 'SynchronizedObject', classMeta, VOID, VOID, SynchronizedObject);
  setMetadataFor(AutofillTree, 'AutofillTree', classMeta, VOID, VOID, AutofillTree);
  setMetadataFor(DrawModifier, 'DrawModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(DrawCacheModifier, 'DrawCacheModifier', interfaceMeta, VOID, [DrawModifier]);
  setMetadataFor(Companion_0, 'Companion', objectMeta);
  setMetadataFor(FocusDirection, 'FocusDirection', classMeta);
  setMetadataFor(FocusEventModifier, 'FocusEventModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(FocusEventModifierNode, 'FocusEventModifierNode', interfaceMeta);
  setMetadataFor(FocusInvalidationManager, 'FocusInvalidationManager', classMeta);
  setMetadataFor(FocusOrderModifier, 'FocusOrderModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(FocusOrder, 'FocusOrder', classMeta, VOID, VOID, FocusOrder_init_$Create$);
  setMetadataFor(ModifierNodeElement, 'ModifierNodeElement', classMeta, VOID, [Element]);
  setMetadataFor(FocusOwnerImpl$modifier$1, VOID, classMeta, ModifierNodeElement);
  setMetadataFor(FocusOwnerImpl, 'FocusOwnerImpl', classMeta);
  function get_next() {
    return Companion_getInstance_15().e4p_1;
  }
  function get_previous() {
    return Companion_getInstance_15().e4p_1;
  }
  function get_up() {
    return Companion_getInstance_15().e4p_1;
  }
  function get_down() {
    return Companion_getInstance_15().e4p_1;
  }
  function get_left() {
    return Companion_getInstance_15().e4p_1;
  }
  function get_right() {
    return Companion_getInstance_15().e4p_1;
  }
  function get_start() {
    return Companion_getInstance_15().e4p_1;
  }
  function get_end() {
    return Companion_getInstance_15().e4p_1;
  }
  function get_enter() {
    return FocusProperties$_get_enter_$lambda_k4mh3f;
  }
  function get_exit() {
    return FocusProperties$_get_exit_$lambda_gv47az;
  }
  setMetadataFor(FocusProperties, 'FocusProperties', interfaceMeta);
  setMetadataFor(FocusPropertiesImpl, 'FocusPropertiesImpl', classMeta, VOID, [FocusProperties], FocusPropertiesImpl);
  setMetadataFor(FocusPropertiesModifierNode, 'FocusPropertiesModifierNode', interfaceMeta);
  setMetadataFor(Companion_1, 'Companion', objectMeta);
  setMetadataFor(FocusRequester, 'FocusRequester', classMeta, VOID, VOID, FocusRequester);
  setMetadataFor(FocusRequesterModifier, 'FocusRequesterModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(FocusStateImpl, 'FocusStateImpl', classMeta, Enum);
  setMetadataFor(CompositionLocalConsumerModifierNode, 'CompositionLocalConsumerModifierNode', interfaceMeta);
  function get_providedValues() {
    return EmptyMap_getInstance();
  }
  function get_current(_this__u8e3s4) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.modifier.ModifierLocalModifierNode.<get-current>.<anonymous>' call
      var message = 'ModifierLocal accessed from an unattached node';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var key = _this__u8e3s4;
    // Inline function 'androidx.compose.ui.node.visitAncestors' call
    // Inline function 'androidx.compose.ui.node.Nodes.Locals' call
    var type = _NodeKind___init__impl__ojsprp(32);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
      var message_0 = 'visitAncestors called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    var node = false ? this.c4j() : this.c4j().t4i_1;
    var layout = requireLayoutNode(this);
    while (!(layout == null)) {
      var head = layout.d4l_1.y4j_1;
      if (!((head.s4i_1 & mask) === 0)) {
        while (!(node == null)) {
          if (!((node.r4i_1 & mask) === 0)) {
            // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
            // Inline function 'androidx.compose.ui.node.dispatchForKind' call
            var stack = null;
            var node_0 = node;
            $l$loop: while (!(node_0 == null)) {
              if (!(node_0 == null) ? isInterface(node_0, ModifierLocalModifierNode) : false) {
                // Inline function 'androidx.compose.ui.modifier.ModifierLocalModifierNode.<get-current>.<anonymous>' call
                var it = node_0;
                if (it.m4q().v5e(key)) {
                  var tmp = it.m4q().h5f(key);
                  return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                }
              } else {
                var tmp_0;
                // Inline function 'androidx.compose.ui.Node.isKind' call
                if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                  tmp_0 = node_0 instanceof DelegatingNode;
                } else {
                  tmp_0 = false;
                }
                if (tmp_0) {
                  var count = 0;
                  // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                  var node_1 = node_0.b4m_1;
                  while (!(node_1 == null)) {
                    // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                    var next = node_1;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      count = count + 1 | 0;
                      if (count === 1) {
                        node_0 = next;
                      } else {
                        var tmp1_elvis_lhs = stack;
                        var tmp_1;
                        if (tmp1_elvis_lhs == null) {
                          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                          // Inline function 'kotlin.arrayOfNulls' call
                          var tmp$ret$5 = fillArrayVal(Array(16), null);
                          tmp_1 = new MutableVector(tmp$ret$5, 0);
                        } else {
                          tmp_1 = tmp1_elvis_lhs;
                        }
                        stack = tmp_1;
                        var theNode = node_0;
                        if (!(theNode == null)) {
                          var tmp2_safe_receiver = stack;
                          if (tmp2_safe_receiver == null)
                            null;
                          else
                            tmp2_safe_receiver.q1q(theNode);
                          node_0 = null;
                        }
                        var tmp3_safe_receiver = stack;
                        if (tmp3_safe_receiver == null)
                          null;
                        else
                          tmp3_safe_receiver.q1q(next);
                      }
                    }
                    node_1 = node_1.u4i_1;
                  }
                  if (count === 1) {
                    continue $l$loop;
                  }
                }
              }
              node_0 = pop$accessor$hxafa1(stack);
            }
          }
          node = node.t4i_1;
        }
      }
      layout = layout.pp();
      var tmp0_safe_receiver = layout;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
      node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
    }
    return key.b5e_1();
  }
  setMetadataFor(ModifierLocalModifierNode, 'ModifierLocalModifierNode', interfaceMeta);
  setMetadataFor(FocusTargetNode, 'FocusTargetNode', classMeta, Node, [CompositionLocalConsumerModifierNode, ModifierLocalModifierNode, Node], FocusTargetNode);
  setMetadataFor(FocusTransactionManager, 'FocusTransactionManager', classMeta, VOID, VOID, FocusTransactionManager);
  setMetadataFor(CustomDestinationResult, 'CustomDestinationResult', classMeta, Enum);
  setMetadataFor(FocusableChildrenComparator, 'FocusableChildrenComparator', objectMeta);
  setMetadataFor(Companion_2, 'Companion', objectMeta);
  setMetadataFor(CompositingStrategy, 'CompositingStrategy', classMeta);
  setMetadataFor(GraphicsLayerElement, 'GraphicsLayerElement', classMeta, ModifierNodeElement);
  setMetadataFor(LayoutModifierNode, 'LayoutModifierNode', interfaceMeta);
  setMetadataFor(SimpleGraphicsLayerModifier, 'SimpleGraphicsLayerModifier', classMeta, Node, [LayoutModifierNode, Node]);
  function set_ambientShadowColor(ambientShadowColor) {
  }
  function set_spotShadowColor(spotShadowColor) {
  }
  function set_renderEffect(_anonymous_parameter_0__qggqh8) {
  }
  function set_compositingStrategy(compositingStrategy) {
  }
  setMetadataFor(GraphicsLayerScope, 'GraphicsLayerScope', interfaceMeta, VOID, [Density]);
  setMetadataFor(ReusableGraphicsLayerScope, 'ReusableGraphicsLayerScope', classMeta, VOID, [GraphicsLayerScope], ReusableGraphicsLayerScope);
  setMetadataFor(Fields, 'Fields', objectMeta);
  setMetadataFor(Companion_3, 'Companion', objectMeta);
  setMetadataFor(TransformOrigin, 'TransformOrigin', classMeta);
  setMetadataFor(Companion_4, 'Companion', objectMeta);
  setMetadataFor(InputMode, 'InputMode', classMeta);
  setMetadataFor(KeyEvent, 'KeyEvent', classMeta);
  setMetadataFor(Companion_5, 'Companion', objectMeta);
  setMetadataFor(KeyInputElement, 'KeyInputElement', classMeta, ModifierNodeElement);
  setMetadataFor(KeyInputModifierNode, 'KeyInputModifierNode', interfaceMeta);
  setMetadataFor(KeyInputNode, 'KeyInputNode', classMeta, Node, [KeyInputModifierNode, Node]);
  setMetadataFor(SoftKeyboardInterceptionModifierNode, 'SoftKeyboardInterceptionModifierNode', interfaceMeta);
  setMetadataFor(HitPathTracker, 'HitPathTracker', classMeta);
  setMetadataFor(NodeParent, 'NodeParent', classMeta, VOID, VOID, NodeParent);
  setMetadataFor(Node_0, 'Node', classMeta, NodeParent);
  setMetadataFor(PointerInputEventData, 'PointerInputEventData', classMeta);
  setMetadataFor(PointerInputChange, 'PointerInputChange', classMeta);
  setMetadataFor(PointerInputModifier, 'PointerInputModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(PointerEventPass, 'PointerEventPass', classMeta, Enum);
  setMetadataFor(PointerButtons, 'PointerButtons', classMeta);
  setMetadataFor(PointerKeyboardModifiers, 'PointerKeyboardModifiers', classMeta);
  setMetadataFor(Companion_6, 'Companion', objectMeta);
  setMetadataFor(PointerEventType, 'PointerEventType', classMeta);
  setMetadataFor(Companion_7, 'Companion', objectMeta);
  setMetadataFor(PointerType, 'PointerType', classMeta);
  setMetadataFor(PointerId, 'PointerId', classMeta);
  setMetadataFor(HistoricalChange, 'HistoricalChange', classMeta);
  setMetadataFor(ConsumedData, 'ConsumedData', classMeta, VOID, VOID, ConsumedData);
  setMetadataFor(Companion_8, 'Companion', objectMeta);
  setMetadataFor(PointerHoverIconModifierElement, 'PointerHoverIconModifierElement', classMeta, ModifierNodeElement);
  setMetadataFor(TraversableNode, 'TraversableNode', interfaceMeta);
  function interceptOutOfBoundsChildEvents() {
    return false;
  }
  function sharePointerInputWithSiblings() {
    return false;
  }
  function onDensityChange() {
    this.i50();
  }
  function onViewConfigurationChange() {
    this.i50();
  }
  setMetadataFor(PointerInputModifierNode, 'PointerInputModifierNode', interfaceMeta);
  setMetadataFor(PointerHoverIconModifierNode, 'PointerHoverIconModifierNode', classMeta, Node, [Node, TraversableNode, PointerInputModifierNode, CompositionLocalConsumerModifierNode]);
  setMetadataFor(PointerInputEventProcessor, 'PointerInputEventProcessor', classMeta);
  setMetadataFor(PointerInputData, 'PointerInputData', classMeta);
  setMetadataFor(PointerInputChangeEventProducer, 'PointerInputChangeEventProducer', classMeta, VOID, VOID, PointerInputChangeEventProducer);
  setMetadataFor(SuspendPointerInputElement, 'SuspendPointerInputElement', classMeta, ModifierNodeElement);
  setMetadataFor(SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda, 'SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor($withTimeoutCOROUTINE$5, '$withTimeoutCOROUTINE$5', classMeta, CoroutineImpl);
  function get_extendedTouchPadding() {
    return Companion_getInstance_0().i2w_1;
  }
  function awaitPointerEvent$default(pass, $completion, $super) {
    pass = pass === VOID ? PointerEventPass_Main_getInstance() : pass;
    return $super === VOID ? this.g56(pass, $completion) : $super.g56.call(this, pass, $completion);
  }
  function withTimeout(timeMillis, block, $completion) {
    return block(this, $completion);
  }
  setMetadataFor(AwaitPointerEventScope, 'AwaitPointerEventScope', interfaceMeta, VOID, [Density], VOID, VOID, VOID, [1, 2]);
  setMetadataFor(PointerEventHandlerCoroutine, 'PointerEventHandlerCoroutine', classMeta, VOID, [AwaitPointerEventScope, Density, Continuation], VOID, VOID, VOID, [1, 2]);
  setMetadataFor(SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda, 'SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(PointerInputScope, 'PointerInputScope', interfaceMeta, VOID, [Density], VOID, VOID, VOID, [1]);
  setMetadataFor(SuspendingPointerInputModifierNodeImpl, 'SuspendingPointerInputModifierNodeImpl', classMeta, Node, [Node, PointerInputModifierNode, PointerInputScope, Density], VOID, VOID, VOID, [1]);
  setMetadataFor(PointerInputResetException, 'PointerInputResetException', classMeta, PlatformOptimizedCancellationException, VOID, PointerInputResetException);
  setMetadataFor(CancelTimeoutCancellationException, 'CancelTimeoutCancellationException', objectMeta, PlatformOptimizedCancellationException);
  setMetadataFor(PointerIdArray, 'PointerIdArray', classMeta, VOID, VOID, PointerIdArray);
  setMetadataFor(RotaryInputModifierNode, 'RotaryInputModifierNode', interfaceMeta);
  setMetadataFor(AlignmentLine, 'AlignmentLine', classMeta);
  setMetadataFor(HorizontalAlignmentLine, 'HorizontalAlignmentLine', classMeta, AlignmentLine);
  setMetadataFor(Companion_9, 'Companion', objectMeta);
  setMetadataFor(VerticalAlignmentLine, 'VerticalAlignmentLine', classMeta, AlignmentLine);
  setMetadataFor(Companion_10, 'Companion', objectMeta);
  setMetadataFor(Placeable, 'Placeable', classMeta);
  setMetadataFor(IntermediateMeasurablePlaceable, 'IntermediateMeasurablePlaceable', classMeta, Placeable);
  setMetadataFor(IntermediateLayoutModifierNode, 'IntermediateLayoutModifierNode', classMeta, Node, [LayoutModifierNode, Node]);
  setMetadataFor(LayoutModifier, 'LayoutModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(LookaheadLayoutCoordinates, 'LookaheadLayoutCoordinates', classMeta);
  setMetadataFor(MeasureScope$layout$1, VOID, classMeta);
  function layout(width, height, alignmentLines, placementBlock) {
    // Inline function 'androidx.compose.ui.node.checkMeasuredSize' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!((width & _get_MaxLayoutMask_$accessor$18xfr8u_6p75ka()) === 0 ? (height & _get_MaxLayoutMask_$accessor$18xfr8u_6p75ka()) === 0 : false)) {
      // Inline function 'androidx.compose.ui.node.checkMeasuredSize.<anonymous>' call
      var message = 'Size(' + width + ' x ' + height + ') is out of range. Each dimension must be between 0 and ' + ('' + get_MaxLayoutDimension() + '.');
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return new MeasureScope$layout$1(width, height, alignmentLines, this, placementBlock);
  }
  function layout$default(width, height, alignmentLines, placementBlock, $super) {
    alignmentLines = alignmentLines === VOID ? emptyMap() : alignmentLines;
    return $super === VOID ? this.v59(width, height, alignmentLines, placementBlock) : layout(width, height, alignmentLines, placementBlock);
  }
  setMetadataFor(MeasureScope, 'MeasureScope', interfaceMeta, VOID, [Density]);
  setMetadataFor(PlacementScope, 'PlacementScope', classMeta);
  setMetadataFor(SimplePlacementScope, 'SimplePlacementScope', classMeta, PlacementScope);
  setMetadataFor(OnGloballyPositionedModifier, 'OnGloballyPositionedModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(OnPlacedModifier, 'OnPlacedModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(OnRemeasuredModifier, 'OnRemeasuredModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(ParentDataModifier, 'ParentDataModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(LookaheadCapablePlacementScope, 'LookaheadCapablePlacementScope', classMeta, PlacementScope);
  setMetadataFor(OuterPlacementScope, 'OuterPlacementScope', classMeta, PlacementScope);
  setMetadataFor(RemeasurementModifier, 'RemeasurementModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(NoIntrinsicsMeasurePolicy, 'NoIntrinsicsMeasurePolicy', classMeta);
  setMetadataFor(RootMeasurePolicy, 'RootMeasurePolicy', objectMeta, NoIntrinsicsMeasurePolicy);
  setMetadataFor(ReusedSlotId$1, VOID, classMeta);
  setMetadataFor(ModifierLocal, 'ModifierLocal', classMeta);
  setMetadataFor(ProvidableModifierLocal, 'ProvidableModifierLocal', classMeta, ModifierLocal);
  setMetadataFor(ModifierLocalConsumer, 'ModifierLocalConsumer', interfaceMeta, VOID, [Element]);
  setMetadataFor(ModifierLocalManager, 'ModifierLocalManager', classMeta);
  setMetadataFor(ModifierLocalMap, 'ModifierLocalMap', classMeta);
  setMetadataFor(EmptyMap, 'EmptyMap', objectMeta, ModifierLocalMap);
  setMetadataFor(BackwardsCompatLocalMap, 'BackwardsCompatLocalMap', classMeta, ModifierLocalMap);
  setMetadataFor(ModifierLocalProvider, 'ModifierLocalProvider', interfaceMeta, VOID, [Element]);
  setMetadataFor(BackwardsCompatNode$initializeModifier$3, VOID, classMeta);
  function onMeasureResultChanged() {
  }
  setMetadataFor(DrawModifierNode, 'DrawModifierNode', interfaceMeta);
  function get_shouldClearDescendantSemantics() {
    return false;
  }
  function get_shouldMergeDescendantSemantics() {
    return false;
  }
  setMetadataFor(SemanticsModifierNode, 'SemanticsModifierNode', interfaceMeta);
  setMetadataFor(ParentDataModifierNode, 'ParentDataModifierNode', interfaceMeta);
  function onPlaced(coordinates) {
  }
  function onRemeasured(size) {
  }
  setMetadataFor(LayoutAwareModifierNode, 'LayoutAwareModifierNode', interfaceMeta);
  setMetadataFor(GlobalPositionAwareModifierNode, 'GlobalPositionAwareModifierNode', interfaceMeta);
  setMetadataFor(OwnerScope, 'OwnerScope', interfaceMeta);
  setMetadataFor(BackwardsCompatNode, 'BackwardsCompatNode', classMeta, Node, [LayoutModifierNode, DrawModifierNode, SemanticsModifierNode, PointerInputModifierNode, ModifierLocalModifierNode, ParentDataModifierNode, LayoutAwareModifierNode, GlobalPositionAwareModifierNode, FocusEventModifierNode, FocusPropertiesModifierNode, OwnerScope, Node]);
  setMetadataFor(DetachedModifierLocalReadScope$1, VOID, classMeta);
  setMetadataFor(Companion_11, 'Companion', objectMeta);
  setMetadataFor(DelegatingNode, 'DelegatingNode', classMeta, Node);
  setMetadataFor(DepthSortedSetsForDifferentPasses, 'DepthSortedSetsForDifferentPasses', classMeta);
  setMetadataFor(DepthSortedSet$DepthComparator$1, VOID, classMeta);
  setMetadataFor(DepthSortedSet, 'DepthSortedSet', classMeta);
  setMetadataFor(HitTestResultIterator, 'HitTestResultIterator', classMeta);
  setMetadataFor(SubList, 'SubList', classMeta, VOID, [List]);
  setMetadataFor(HitTestResult, 'HitTestResult', classMeta, VOID, [List], HitTestResult);
  setMetadataFor(TailModifierNode, 'TailModifierNode', classMeta, Node, VOID, TailModifierNode);
  setMetadataFor(LookaheadCapablePlaceable, 'LookaheadCapablePlaceable', classMeta, Placeable, [Placeable, MeasureScope]);
  setMetadataFor(LookaheadDelegate, 'LookaheadDelegate', classMeta, LookaheadCapablePlaceable);
  setMetadataFor(LookaheadDelegateImpl, 'LookaheadDelegateImpl', classMeta, LookaheadDelegate);
  setMetadataFor(Companion_12, 'Companion', objectMeta);
  setMetadataFor(NodeCoordinator, 'NodeCoordinator', classMeta, LookaheadCapablePlaceable, [LookaheadCapablePlaceable, OwnerScope]);
  setMetadataFor(InnerNodeCoordinator, 'InnerNodeCoordinator', classMeta, NodeCoordinator);
  setMetadataFor(Companion_13, 'Companion', objectMeta);
  setMetadataFor(IntrinsicsPolicy, 'IntrinsicsPolicy', classMeta);
  setMetadataFor(LookaheadDelegateForLayoutModifierNode, 'LookaheadDelegateForLayoutModifierNode', classMeta, LookaheadDelegate);
  setMetadataFor(Companion_14, 'Companion', objectMeta);
  setMetadataFor(LayoutModifierNodeCoordinator, 'LayoutModifierNodeCoordinator', classMeta, NodeCoordinator);
  setMetadataFor(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0', classMeta);
  setMetadataFor(LayoutNode$Companion$ErrorMeasurePolicy$1, VOID, classMeta, NoIntrinsicsMeasurePolicy);
  function get_minimumTouchTargetSize() {
    // Inline function 'androidx.compose.ui.unit.dp' call
    var tmp = _Dp___init__impl__ms3zkb(48);
    // Inline function 'androidx.compose.ui.unit.dp' call
    var tmp$ret$1 = _Dp___init__impl__ms3zkb(48);
    return DpSize(tmp, tmp$ret$1);
  }
  setMetadataFor(ViewConfiguration, 'ViewConfiguration', interfaceMeta);
  setMetadataFor(LayoutNode$Companion$DummyViewConfiguration$1, VOID, classMeta, VOID, [ViewConfiguration]);
  setMetadataFor(Companion_15, 'Companion', objectMeta);
  setMetadataFor(LayoutState, 'LayoutState', classMeta, Enum);
  setMetadataFor(UsageByParent, 'UsageByParent', classMeta, Enum);
  setMetadataFor(LayoutNode, 'LayoutNode', classMeta, VOID, [ComposeNodeLifecycleCallback, OwnerScope], LayoutNode);
  setMetadataFor(AlignmentLines, 'AlignmentLines', classMeta);
  setMetadataFor(LayoutNodeAlignmentLines, 'LayoutNodeAlignmentLines', classMeta, AlignmentLines);
  setMetadataFor(LookaheadAlignmentLines, 'LookaheadAlignmentLines', classMeta, AlignmentLines);
  setMetadataFor(LayoutNodeDrawScope, 'LayoutNodeDrawScope', classMeta, VOID, [DrawScope], LayoutNodeDrawScope);
  setMetadataFor(MeasurePassDelegate, 'MeasurePassDelegate', classMeta, Placeable);
  setMetadataFor(LookaheadPassDelegate, 'LookaheadPassDelegate', classMeta, Placeable);
  setMetadataFor(LayoutNodeLayoutDelegate, 'LayoutNodeLayoutDelegate', classMeta);
  setMetadataFor(LayoutTreeConsistencyChecker, 'LayoutTreeConsistencyChecker', classMeta);
  setMetadataFor(LookaheadCapablePlaceable$layout$1, VOID, classMeta);
  setMetadataFor(PostponedRequest, 'PostponedRequest', classMeta);
  setMetadataFor(MeasureAndLayoutDelegate, 'MeasureAndLayoutDelegate', classMeta);
  setMetadataFor(MutableVectorWithMutationTracking, 'MutableVectorWithMutationTracking', classMeta);
  setMetadataFor(IntStack, 'IntStack', classMeta);
  setMetadataFor(Differ, 'Differ', classMeta);
  setMetadataFor(NodeChain, 'NodeChain', classMeta);
  setMetadataFor(ForceUpdateElement, 'ForceUpdateElement', classMeta, ModifierNodeElement);
  setMetadataFor(SentinelHead$1, VOID, classMeta, Node);
  setMetadataFor(NodeCoordinator$Companion$PointerInputSource$1, VOID, classMeta);
  setMetadataFor(NodeCoordinator$Companion$SemanticsSource$1, VOID, classMeta);
  setMetadataFor(Companion_16, 'Companion', objectMeta);
  setMetadataFor(LayerPositionalProperties, 'LayerPositionalProperties', classMeta, VOID, VOID, LayerPositionalProperties);
  setMetadataFor(Nodes, 'Nodes', objectMeta);
  setMetadataFor(CanFocusChecker, 'CanFocusChecker', objectMeta, VOID, [FocusProperties]);
  setMetadataFor(Companion_17, 'Companion', objectMeta);
  setMetadataFor(ObserverNodeOwnerScope, 'ObserverNodeOwnerScope', classMeta, VOID, [OwnerScope]);
  setMetadataFor(DepthComparator, 'DepthComparator', objectMeta);
  setMetadataFor(Companion_18, 'Companion', objectMeta);
  setMetadataFor(OnPositionedDispatcher, 'OnPositionedDispatcher', classMeta, VOID, VOID, OnPositionedDispatcher);
  setMetadataFor(Companion_19, 'Companion', objectMeta);
  function onRequestMeasure$default(layoutNode, affectsLookahead, forceRequest, scheduleMeasureAndLayout, $super) {
    affectsLookahead = affectsLookahead === VOID ? false : affectsLookahead;
    forceRequest = forceRequest === VOID ? false : forceRequest;
    scheduleMeasureAndLayout = scheduleMeasureAndLayout === VOID ? true : scheduleMeasureAndLayout;
    var tmp;
    if ($super === VOID) {
      this.p5s(layoutNode, affectsLookahead, forceRequest, scheduleMeasureAndLayout);
      tmp = Unit_instance;
    } else {
      tmp = $super.p5s.call(this, layoutNode, affectsLookahead, forceRequest, scheduleMeasureAndLayout);
    }
    return tmp;
  }
  function onRequestRelayout$default(layoutNode, affectsLookahead, forceRequest, $super) {
    affectsLookahead = affectsLookahead === VOID ? false : affectsLookahead;
    forceRequest = forceRequest === VOID ? false : forceRequest;
    var tmp;
    if ($super === VOID) {
      this.s5s(layoutNode, affectsLookahead, forceRequest);
      tmp = Unit_instance;
    } else {
      tmp = $super.s5s.call(this, layoutNode, affectsLookahead, forceRequest);
    }
    return tmp;
  }
  function forceMeasureTheSubtree$default(layoutNode, affectsLookahead, $super) {
    affectsLookahead = affectsLookahead === VOID ? false : affectsLookahead;
    var tmp;
    if ($super === VOID) {
      this.b5v(layoutNode, affectsLookahead);
      tmp = Unit_instance;
    } else {
      tmp = $super.b5v.call(this, layoutNode, affectsLookahead);
    }
    return tmp;
  }
  function get_placementScope() {
    return PlacementScope_1(this);
  }
  setMetadataFor(Owner, 'Owner', interfaceMeta, VOID, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(OwnerSnapshotObserver, 'OwnerSnapshotObserver', classMeta);
  setMetadataFor(TraverseDescendantsAction, 'TraverseDescendantsAction', classMeta, Enum);
  setMetadataFor(DelegatingSoftwareKeyboardController, 'DelegatingSoftwareKeyboardController', classMeta);
  setMetadataFor(TextToolbarStatus, 'TextToolbarStatus', classMeta, Enum);
  setMetadataFor(SemanticsConfiguration, 'SemanticsConfiguration', classMeta, VOID, VOID, SemanticsConfiguration);
  setMetadataFor(SemanticsModifier, 'SemanticsModifier', interfaceMeta, VOID, [Element]);
  setMetadataFor(EmptySemanticsElement, 'EmptySemanticsElement', objectMeta, ModifierNodeElement);
  setMetadataFor(EmptySemanticsModifier, 'EmptySemanticsModifier', classMeta, Node, [Node, SemanticsModifierNode], EmptySemanticsModifier);
  setMetadataFor(SemanticsOwner, 'SemanticsOwner', classMeta);
  setMetadataFor(SemanticsPropertyKey, 'SemanticsPropertyKey', classMeta);
  setMetadataFor(AccessibilityAction, 'AccessibilityAction', classMeta);
  setMetadataFor(SemanticsProperties, 'SemanticsProperties', objectMeta);
  setMetadataFor(SemanticsActions, 'SemanticsActions', objectMeta);
  setMetadataFor(SystemThemeObserverImpl, 'SystemThemeObserverImpl', classMeta);
  setMetadataFor(Companion_20, 'Companion', objectMeta);
  setMetadataFor(PointerEventTimeoutCancellationException, 'PointerEventTimeoutCancellationException', classMeta, CancellationException);
  setMetadataFor(ComponentImpl, 'ComponentImpl', classMeta, VOID, [SkikoView]);
  function get_platformContext() {
    return Companion_getInstance_37().g6f_1;
  }
  setMetadataFor(ComposeSceneContext, 'ComposeSceneContext', interfaceMeta);
  setMetadataFor(ComposeLayer$scene$1, VOID, classMeta, VOID, [ComposeSceneContext]);
  setMetadataFor(ComposeLayer, 'ComposeLayer', classMeta);
  setMetadataFor(SortedSet, 'SortedSet', classMeta);
  setMetadataFor(BrowserCursor, 'BrowserCursor', classMeta);
  setMetadataFor(JSTextInputService, 'JSTextInputService', classMeta, VOID, VOID, JSTextInputService);
  setMetadataFor(ComposableSingletons$ComposeWindow_jsKt, 'ComposableSingletons$ComposeWindow_jsKt', objectMeta);
  setMetadataFor(ComposeWindow$platformContext$1$viewConfiguration$1, VOID, classMeta, VOID, [ViewConfiguration]);
  function get_viewConfiguration() {
    return EmptyViewConfiguration_getInstance();
  }
  function get_textInputService() {
    return EmptyPlatformTextInputService_instance;
  }
  function get_textToolbar() {
    return EmptyTextToolbar_getInstance();
  }
  function setPointerIcon(pointerIcon) {
    return Unit_instance;
  }
  function get_parentFocusManager() {
    return EmptyFocusManager_instance;
  }
  function requestFocus() {
    return false;
  }
  function get_rootForTestListener() {
    return null;
  }
  function get_semanticsOwnerListener() {
    return null;
  }
  setMetadataFor(PlatformContext, 'PlatformContext', interfaceMeta);
  setMetadataFor(ComposeWindow$platformContext$1, VOID, classMeta, VOID, [PlatformContext]);
  setMetadataFor(ComposeWindow, 'ComposeWindow', classMeta);
  setMetadataFor(CanvasBasedWindow$slambda, 'CanvasBasedWindow$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [0]);
  setMetadataFor(CanvasBasedWindow$lambda$slambda, 'CanvasBasedWindow$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(SystemTheme, 'SystemTheme', classMeta, Enum);
  setMetadataFor(InternalPointerEvent, 'InternalPointerEvent', classMeta);
  setMetadataFor(Companion_21, 'Companion', objectMeta);
  setMetadataFor(PointerButton, 'PointerButton', classMeta);
  setMetadataFor(Companion_22, 'Companion', objectMeta);
  setMetadataFor(PointerEvent, 'PointerEvent', classMeta);
  setMetadataFor(PointerInputEvent, 'PointerInputEvent', classMeta);
  setMetadataFor(SyntheticEventSender, 'SyntheticEventSender', classMeta);
  setMetadataFor(OwnerImpl, 'OwnerImpl', classMeta, VOID, [Owner], VOID, VOID, VOID, [1]);
  setMetadataFor(PlatformRootForTestImpl, 'PlatformRootForTestImpl', classMeta);
  setMetadataFor(PointerIconServiceImpl, 'PointerIconServiceImpl', classMeta);
  setMetadataFor(RootNodeOwner, 'RootNodeOwner', classMeta);
  setMetadataFor(IdentityPositionCalculator, 'IdentityPositionCalculator', objectMeta);
  setMetadataFor(SnapshotInvalidationTracker, 'SnapshotInvalidationTracker', classMeta, VOID, VOID, SnapshotInvalidationTracker);
  setMetadataFor(CommandList, 'CommandList', classMeta);
  setMetadataFor(AtomicInt, 'AtomicInt', classMeta);
  setMetadataFor(DefaultAccessibilityManager, 'DefaultAccessibilityManager', classMeta, VOID, VOID, DefaultAccessibilityManager);
  setMetadataFor(DefaultHapticFeedback, 'DefaultHapticFeedback', classMeta, VOID, VOID, DefaultHapticFeedback);
  setMetadataFor(DefaultUiApplier, 'DefaultUiApplier', classMeta, AbstractApplier);
  setMetadataFor(FlushCoroutineDispatcher$dispatch$slambda, 'FlushCoroutineDispatcher$dispatch$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(_no_name_provided__qut3iv, VOID, classMeta, VOID, [Runnable]);
  setMetadataFor(FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda, 'FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(FlushCoroutineDispatcher, 'FlushCoroutineDispatcher', classMeta, CoroutineDispatcher, [CoroutineDispatcher, Delay], VOID, VOID, VOID, [1]);
  setMetadataFor(GlobalSnapshotManager$ensureStarted$slambda, 'GlobalSnapshotManager$ensureStarted$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(GlobalSnapshotManager, 'GlobalSnapshotManager', objectMeta);
  setMetadataFor(OutlineCache, 'OutlineCache', classMeta);
  setMetadataFor(PlatformClipboardManager, 'PlatformClipboardManager', classMeta, VOID, VOID, PlatformClipboardManager);
  setMetadataFor(PlatformContext$Companion$Empty$1, VOID, classMeta, VOID, [PlatformContext]);
  setMetadataFor(Companion_23, 'Companion', objectMeta);
  setMetadataFor(EmptyViewConfiguration, 'EmptyViewConfiguration', objectMeta, VOID, [ViewConfiguration]);
  setMetadataFor(EmptyPlatformTextInputService, 'EmptyPlatformTextInputService', objectMeta);
  setMetadataFor(EmptyTextToolbar, 'EmptyTextToolbar', objectMeta);
  setMetadataFor(EmptyFocusManager, 'EmptyFocusManager', objectMeta);
  setMetadataFor(DefaultInputModeManager, 'DefaultInputModeManager', classMeta, VOID, VOID, DefaultInputModeManager);
  setMetadataFor(PlatformUriHandler, 'PlatformUriHandler', classMeta, URIManager, VOID, PlatformUriHandler);
  setMetadataFor(RenderNodeLayer, 'RenderNodeLayer', classMeta);
  setMetadataFor(Companion_24, 'Companion', objectMeta);
  setMetadataFor(WindowInfoImpl, 'WindowInfoImpl', classMeta, VOID, VOID, WindowInfoImpl);
  function sendPointerEvent$default(eventType, position, scrollDelta, timeMillis, type, buttons, keyboardModifiers, nativeEvent, button, $super) {
    scrollDelta = scrollDelta === VOID ? Companion_getInstance_2().v2v_1 : scrollDelta;
    timeMillis = timeMillis === VOID ? currentTimeForEvent() : timeMillis;
    type = type === VOID ? Companion_getInstance_21().x50_1 : type;
    buttons = buttons === VOID ? null : buttons;
    keyboardModifiers = keyboardModifiers === VOID ? null : keyboardModifiers;
    nativeEvent = nativeEvent === VOID ? null : nativeEvent;
    button = button === VOID ? null : button;
    var tmp;
    if ($super === VOID) {
      this.d6p(eventType, position, scrollDelta, timeMillis, type, buttons, keyboardModifiers, nativeEvent, button);
      tmp = Unit_instance;
    } else {
      var tmp_0 = $super.d6p;
      var tmp_1 = buttons;
      var tmp_2 = tmp_1 == null ? null : new PointerButtons(tmp_1);
      var tmp_3 = keyboardModifiers;
      var tmp_4 = tmp_3 == null ? null : new PointerKeyboardModifiers(tmp_3);
      var tmp_5 = button;
      tmp = tmp_0.call(this, new PointerEventType(eventType), new Offset(position), new Offset(scrollDelta), timeMillis, new PointerType(type), tmp_2, tmp_4, nativeEvent, tmp_5 == null ? null : new PointerButton(tmp_5));
    }
    return tmp;
  }
  function sendPointerEvent$default_0(eventType, pointers, buttons, keyboardModifiers, scrollDelta, timeMillis, nativeEvent, button, $super) {
    buttons = buttons === VOID ? PointerButtons_0() : buttons;
    keyboardModifiers = keyboardModifiers === VOID ? PointerKeyboardModifiers_0() : keyboardModifiers;
    scrollDelta = scrollDelta === VOID ? Companion_getInstance_2().v2v_1 : scrollDelta;
    timeMillis = timeMillis === VOID ? currentTimeForEvent() : timeMillis;
    nativeEvent = nativeEvent === VOID ? null : nativeEvent;
    button = button === VOID ? null : button;
    var tmp;
    if ($super === VOID) {
      this.f6p(eventType, pointers, buttons, keyboardModifiers, scrollDelta, timeMillis, nativeEvent, button);
      tmp = Unit_instance;
    } else {
      var tmp_0 = $super.f6p;
      var tmp_1 = button;
      tmp = tmp_0.call(this, new PointerEventType(eventType), pointers, new PointerButtons(buttons), new PointerKeyboardModifiers(keyboardModifiers), new Offset(scrollDelta), timeMillis, nativeEvent, tmp_1 == null ? null : new PointerButton(tmp_1));
    }
    return tmp;
  }
  setMetadataFor(ComposeScene, 'ComposeScene', interfaceMeta);
  setMetadataFor(BaseComposeScene, 'BaseComposeScene', classMeta, VOID, [ComposeScene]);
  setMetadataFor(ComposeSceneContext$Companion$Empty$1, VOID, classMeta, VOID, [ComposeSceneContext]);
  setMetadataFor(Companion_25, 'Companion', objectMeta);
  setMetadataFor(ComposeSceneInputHandler, 'ComposeSceneInputHandler', classMeta);
  setMetadataFor(DefaultPointerStateTracker, 'DefaultPointerStateTracker', classMeta, VOID, VOID, DefaultPointerStateTracker);
  setMetadataFor(ComposeScenePointer, 'ComposeScenePointer', classMeta);
  setMetadataFor(ComposeSceneRecomposer$slambda, 'ComposeSceneRecomposer$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(ComposeSceneRecomposer, 'ComposeSceneRecomposer', classMeta);
  setMetadataFor(ComposeSceneFocusManagerImpl, 'ComposeSceneFocusManagerImpl', classMeta);
  setMetadataFor(MultiLayerComposeSceneImpl, 'MultiLayerComposeSceneImpl', classMeta, BaseComposeScene);
  setMetadataFor(CopiedList, 'CopiedList', classMeta, VOID, [MutableList]);
  //endregion
  function composed(_this__u8e3s4, inspectorInfo, factory) {
    inspectorInfo = inspectorInfo === VOID ? get_NoInspectorInfo() : inspectorInfo;
    return _this__u8e3s4.j4i(new ComposedModifier(inspectorInfo, factory));
  }
  function ComposedModifier(inspectorInfo, factory) {
    InspectorValueInfo.call(this, inspectorInfo);
    this.m4i_1 = factory;
  }
  function materialize(_this__u8e3s4, modifier) {
    if (modifier.o4i(materialize$lambda)) {
      return modifier;
    }
    _this__u8e3s4.a1s(1219399079);
    var tmp = Companion_instance_3;
    var result = modifier.n4i(tmp, materialize$lambda_0(_this__u8e3s4));
    _this__u8e3s4.b1s();
    return result;
  }
  function materialize$lambda(it) {
    return !(it instanceof ComposedModifier);
  }
  function materialize$lambda_0($this_materialize) {
    return function (acc, element) {
      var tmp;
      if (element instanceof ComposedModifier) {
        var tmp_0 = element.m4i_1;
        var factory = typeof tmp_0 === 'function' ? tmp_0 : THROW_CCE();
        var composedMod = factory(Companion_instance_3, $this_materialize, 0);
        tmp = materialize($this_materialize, composedMod);
      } else {
        tmp = element;
      }
      return acc.j4i(tmp);
    };
  }
  function Element() {
  }
  function Node() {
    this.p4i_1 = this;
    this.q4i_1 = null;
    this.r4i_1 = 0;
    this.s4i_1 = -1;
    this.t4i_1 = null;
    this.u4i_1 = null;
    this.v4i_1 = null;
    this.w4i_1 = null;
    this.x4i_1 = false;
    this.y4i_1 = false;
    this.z4i_1 = false;
    this.a4j_1 = false;
    this.b4j_1 = false;
  }
  protoOf(Node).c4j = function () {
    return this.p4i_1;
  };
  protoOf(Node).d4j = function () {
    var tmp0_elvis_lhs = this.q4i_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = CoroutineScope(requireOwner(this).vo().yf(Job(requireOwner(this).vo().hc(Key_instance))));
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.Node.<get-coroutineScope>.<anonymous>' call
      this.q4i_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(Node).e4j = function () {
    return true;
  };
  protoOf(Node).f4j = function (coordinator) {
    this.w4i_1 = coordinator;
  };
  protoOf(Node).g4j = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.b4j_1) {
      // Inline function 'androidx.compose.ui.Node.markAsAttached.<anonymous>' call
      var message = 'node attached multiple times';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.w4i_1 == null)) {
      // Inline function 'androidx.compose.ui.Node.markAsAttached.<anonymous>' call
      var message_0 = 'attach invoked on a node without a coordinator';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    this.b4j_1 = true;
    this.z4i_1 = true;
  };
  protoOf(Node).h4j = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.b4j_1) {
      // Inline function 'androidx.compose.ui.Node.runAttachLifecycle.<anonymous>' call
      var message = 'Must run markAsAttached() prior to runAttachLifecycle';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.z4i_1) {
      // Inline function 'androidx.compose.ui.Node.runAttachLifecycle.<anonymous>' call
      var message_0 = 'Must run runAttachLifecycle() only once after markAsAttached()';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    this.z4i_1 = false;
    this.i4j();
    this.a4j_1 = true;
  };
  protoOf(Node).j4j = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.b4j_1) {
      // Inline function 'androidx.compose.ui.Node.runDetachLifecycle.<anonymous>' call
      var message = 'node detached multiple times';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.w4i_1 == null)) {
      // Inline function 'androidx.compose.ui.Node.runDetachLifecycle.<anonymous>' call
      var message_0 = 'detach invoked on a node without a coordinator';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.a4j_1) {
      // Inline function 'androidx.compose.ui.Node.runDetachLifecycle.<anonymous>' call
      var message_1 = 'Must run runDetachLifecycle() once after runAttachLifecycle() and before markAsDetached()';
      throw IllegalStateException_init_$Create$(toString(message_1));
    }
    this.a4j_1 = false;
    this.k4j();
  };
  protoOf(Node).l4j = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.b4j_1) {
      // Inline function 'androidx.compose.ui.Node.markAsDetached.<anonymous>' call
      var message = 'Cannot detach a node that is not attached';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.z4i_1) {
      // Inline function 'androidx.compose.ui.Node.markAsDetached.<anonymous>' call
      var message_0 = 'Must run runAttachLifecycle() before markAsDetached()';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.a4j_1) {
      // Inline function 'androidx.compose.ui.Node.markAsDetached.<anonymous>' call
      var message_1 = 'Must run runDetachLifecycle() before markAsDetached()';
      throw IllegalStateException_init_$Create$(toString(message_1));
    }
    this.b4j_1 = false;
    var tmp0_safe_receiver = this.q4i_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      cancel(tmp0_safe_receiver, new ModifierNodeDetachedCancellationException());
      this.q4i_1 = null;
    }
  };
  protoOf(Node).a26 = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.b4j_1) {
      // Inline function 'androidx.compose.ui.Node.reset.<anonymous>' call
      var message = 'reset() called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.m4j();
  };
  protoOf(Node).i4j = function () {
  };
  protoOf(Node).k4j = function () {
  };
  protoOf(Node).m4j = function () {
  };
  protoOf(Node).j1t = function (effect) {
    requireOwner(this).n4j(effect);
  };
  protoOf(Node).o4j = function (owner) {
    this.p4i_1 = owner;
  };
  function Companion() {
  }
  protoOf(Companion).n4i = function (initial, operation) {
    return initial;
  };
  protoOf(Companion).o4i = function (predicate) {
    return true;
  };
  protoOf(Companion).j4i = function (other) {
    return other;
  };
  protoOf(Companion).toString = function () {
    return 'Modifier';
  };
  var Companion_instance_3;
  function Companion_getInstance_13() {
    return Companion_instance_3;
  }
  function Modifier() {
  }
  function CombinedModifier$toString$lambda(acc, element) {
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if (charSequenceLength(acc) === 0) {
      tmp = toString(element);
    } else {
      tmp = acc + ', ' + element;
    }
    return tmp;
  }
  function CombinedModifier(outer, inner) {
    this.p4j_1 = outer;
    this.q4j_1 = inner;
  }
  protoOf(CombinedModifier).n4i = function (initial, operation) {
    return this.q4j_1.n4i(this.p4j_1.n4i(initial, operation), operation);
  };
  protoOf(CombinedModifier).o4i = function (predicate) {
    return this.p4j_1.o4i(predicate) ? this.q4j_1.o4i(predicate) : false;
  };
  protoOf(CombinedModifier).equals = function (other) {
    var tmp;
    var tmp_0;
    if (other instanceof CombinedModifier) {
      tmp_0 = equals(this.p4j_1, other.p4j_1);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = equals(this.q4j_1, other.q4j_1);
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(CombinedModifier).hashCode = function () {
    return hashCode(this.p4j_1) + imul(31, hashCode(this.q4j_1)) | 0;
  };
  protoOf(CombinedModifier).toString = function () {
    return '[' + this.n4i('', CombinedModifier$toString$lambda) + ']';
  };
  function ModifierNodeDetachedCancellationException() {
    PlatformOptimizedCancellationException.call(this, 'The Modifier.Node was detached');
    captureStack(this, ModifierNodeDetachedCancellationException);
  }
  function SynchronizedObject() {
  }
  function createSynchronizedObject() {
    return new SynchronizedObject();
  }
  function AutofillTree() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.r4j_1 = LinkedHashMap_init_$Create$();
  }
  function DrawCacheModifier() {
  }
  function DrawModifier() {
  }
  function searchBeyondBounds(_this__u8e3s4, direction, block) {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'androidx.compose.ui.node.nearestAncestor' call
      // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
      // Inline function 'androidx.compose.ui.node.visitAncestors' call
      var type = _NodeKind___init__impl__ojsprp(1024);
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!_this__u8e3s4.c4j().b4j_1) {
        // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
        var message = 'visitAncestors called on an unattached node';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var node = false ? _this__u8e3s4.c4j() : _this__u8e3s4.c4j().t4i_1;
      var layout = requireLayoutNode(_this__u8e3s4);
      while (!(layout == null)) {
        var head = layout.d4l_1.y4j_1;
        if (!((head.s4i_1 & mask) === 0)) {
          while (!(node == null)) {
            if (!((node.r4i_1 & mask) === 0)) {
              // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
              // Inline function 'androidx.compose.ui.node.dispatchForKind' call
              var stack = null;
              var node_0 = node;
              $l$loop: while (!(node_0 == null)) {
                if (node_0 instanceof FocusTargetNode) {
                  // Inline function 'androidx.compose.ui.node.nearestAncestor.<anonymous>' call
                  tmp$ret$2 = node_0;
                  break $l$block;
                } else {
                  var tmp;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    tmp = node_0 instanceof DelegatingNode;
                  } else {
                    tmp = false;
                  }
                  if (tmp) {
                    var count = 0;
                    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                    var node_1 = node_0.b4m_1;
                    while (!(node_1 == null)) {
                      // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                      var next = node_1;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                        count = count + 1 | 0;
                        if (count === 1) {
                          node_0 = next;
                        } else {
                          var tmp1_elvis_lhs = stack;
                          var tmp_0;
                          if (tmp1_elvis_lhs == null) {
                            // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                            // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                            // Inline function 'kotlin.arrayOfNulls' call
                            var tmp$ret$5 = fillArrayVal(Array(16), null);
                            tmp_0 = new MutableVector(tmp$ret$5, 0);
                          } else {
                            tmp_0 = tmp1_elvis_lhs;
                          }
                          stack = tmp_0;
                          var theNode = node_0;
                          if (!(theNode == null)) {
                            var tmp2_safe_receiver = stack;
                            if (tmp2_safe_receiver == null)
                              null;
                            else
                              tmp2_safe_receiver.q1q(theNode);
                            node_0 = null;
                          }
                          var tmp3_safe_receiver = stack;
                          if (tmp3_safe_receiver == null)
                            null;
                          else
                            tmp3_safe_receiver.q1q(next);
                        }
                      }
                      node_1 = node_1.u4i_1;
                    }
                    if (count === 1) {
                      continue $l$loop;
                    }
                  }
                }
                node_0 = pop$accessor$hxafa1(stack);
              }
            }
            node = node.t4i_1;
          }
        }
        layout = layout.pp();
        var tmp0_safe_receiver = layout;
        var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
        node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
      }
      tmp$ret$2 = null;
    }
    var tmp0_safe_receiver_0 = tmp$ret$2;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp_1;
      if (equals(tmp0_safe_receiver_0.t4m(), _this__u8e3s4.t4m())) {
        return null;
      }
    }
    var tmp2_safe_receiver_0 = _this__u8e3s4.t4m();
    var tmp_2;
    if (tmp2_safe_receiver_0 == null) {
      tmp_2 = null;
    } else {
      var tmp_3;
      if (direction === Companion_getInstance_14().e4n_1) {
        tmp_3 = Companion_getInstance_24().y4m_1;
      } else if (direction === Companion_getInstance_14().f4n_1) {
        tmp_3 = Companion_getInstance_24().z4m_1;
      } else if (direction === Companion_getInstance_14().c4n_1) {
        tmp_3 = Companion_getInstance_24().w4m_1;
      } else if (direction === Companion_getInstance_14().d4n_1) {
        tmp_3 = Companion_getInstance_24().x4m_1;
      } else if (direction === Companion_getInstance_14().a4n_1) {
        tmp_3 = Companion_getInstance_24().v4m_1;
      } else if (direction === Companion_getInstance_14().b4n_1) {
        tmp_3 = Companion_getInstance_24().u4m_1;
      } else {
        var message_0 = 'Unsupported direction for beyond bounds layout';
        throw IllegalStateException_init_$Create$(toString(message_0));
      }
      tmp_2 = tmp2_safe_receiver_0.i4n(tmp_3, block);
    }
    return tmp_2;
  }
  function _FocusDirection___init__impl__7vv8u2(value) {
    return value;
  }
  function FocusDirection__toString_impl_h9c1oa($this) {
    return $this === Companion_getInstance_14().a4n_1 ? 'Next' : $this === Companion_getInstance_14().b4n_1 ? 'Previous' : $this === Companion_getInstance_14().c4n_1 ? 'Left' : $this === Companion_getInstance_14().d4n_1 ? 'Right' : $this === Companion_getInstance_14().e4n_1 ? 'Up' : $this === Companion_getInstance_14().f4n_1 ? 'Down' : $this === Companion_getInstance_14().g4n_1 ? 'Enter' : $this === Companion_getInstance_14().h4n_1 ? 'Exit' : 'Invalid FocusDirection';
  }
  function Companion_0() {
    Companion_instance_4 = this;
    this.a4n_1 = _FocusDirection___init__impl__7vv8u2(1);
    this.b4n_1 = _FocusDirection___init__impl__7vv8u2(2);
    this.c4n_1 = _FocusDirection___init__impl__7vv8u2(3);
    this.d4n_1 = _FocusDirection___init__impl__7vv8u2(4);
    this.e4n_1 = _FocusDirection___init__impl__7vv8u2(5);
    this.f4n_1 = _FocusDirection___init__impl__7vv8u2(6);
    this.g4n_1 = _FocusDirection___init__impl__7vv8u2(7);
    this.h4n_1 = _FocusDirection___init__impl__7vv8u2(8);
  }
  var Companion_instance_4;
  function Companion_getInstance_14() {
    if (Companion_instance_4 == null)
      new Companion_0();
    return Companion_instance_4;
  }
  function FocusDirection__hashCode_impl_4htv4l($this) {
    return $this;
  }
  function FocusDirection__equals_impl_wfq8xl($this, other) {
    if (!(other instanceof FocusDirection))
      return false;
    if (!($this === (other instanceof FocusDirection ? other.j4n_1 : THROW_CCE())))
      return false;
    return true;
  }
  function FocusDirection(value) {
    Companion_getInstance_14();
    this.j4n_1 = value;
  }
  protoOf(FocusDirection).toString = function () {
    return FocusDirection__toString_impl_h9c1oa(this.j4n_1);
  };
  protoOf(FocusDirection).hashCode = function () {
    return FocusDirection__hashCode_impl_4htv4l(this.j4n_1);
  };
  protoOf(FocusDirection).equals = function (other) {
    return FocusDirection__equals_impl_wfq8xl(this.j4n_1, other);
  };
  function FocusEventModifier() {
  }
  function FocusEventModifierNode() {
  }
  function invalidateFocusEvent(_this__u8e3s4) {
    requireOwner(_this__u8e3s4).l4n().m4n(_this__u8e3s4);
  }
  function refreshFocusEventNodes(_this__u8e3s4) {
    $l$block: {
      // Inline function 'androidx.compose.ui.node.visitSelfAndAncestors' call
      // Inline function 'androidx.compose.ui.node.Nodes.FocusEvent' call
      var type = _NodeKind___init__impl__ojsprp(4096);
      // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
      var untilType = _NodeKind___init__impl__ojsprp(1024);
      var self_0 = _this__u8e3s4.c4j();
      // Inline function 'androidx.compose.ui.node.visitAncestors' call
      var mask = _NodeKind___get_mask__impl__1uopb6(type) | _NodeKind___get_mask__impl__1uopb6(untilType);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!_this__u8e3s4.c4j().b4j_1) {
        // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
        var message = 'visitAncestors called on an unattached node';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var node = true ? _this__u8e3s4.c4j() : _this__u8e3s4.c4j().t4i_1;
      var layout = requireLayoutNode(_this__u8e3s4);
      while (!(layout == null)) {
        var head = layout.d4l_1.y4j_1;
        if (!((head.s4i_1 & mask) === 0)) {
          while (!(node == null)) {
            if (!((node.r4i_1 & mask) === 0)) {
              // Inline function 'androidx.compose.ui.node.visitSelfAndAncestors.<anonymous>' call
              var it = node;
              var tmp;
              if (!(it === self_0)) {
                // Inline function 'androidx.compose.ui.Node.isKind' call
                tmp = !((it.r4i_1 & _NodeKind___get_mask__impl__1uopb6(untilType)) === 0);
              } else {
                tmp = false;
              }
              if (tmp) {
                break $l$block;
              }
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((it.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                var stack = null;
                var node_0 = it;
                $l$loop: while (!(node_0 == null)) {
                  if (!(node_0 == null) ? isInterface(node_0, FocusEventModifierNode) : false) {
                    // Inline function 'androidx.compose.ui.focus.refreshFocusEventNodes.<anonymous>' call
                    var it_0 = node_0;
                    it_0.k4n(getFocusState(it_0));
                  } else {
                    var tmp_0;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      tmp_0 = node_0 instanceof DelegatingNode;
                    } else {
                      tmp_0 = false;
                    }
                    if (tmp_0) {
                      var count = 0;
                      // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                      var node_1 = node_0.b4m_1;
                      while (!(node_1 == null)) {
                        // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                        var next = node_1;
                        // Inline function 'androidx.compose.ui.Node.isKind' call
                        if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                          count = count + 1 | 0;
                          if (count === 1) {
                            node_0 = next;
                          } else {
                            var tmp1_elvis_lhs = stack;
                            var tmp_1;
                            if (tmp1_elvis_lhs == null) {
                              // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                              // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                              // Inline function 'kotlin.arrayOfNulls' call
                              var tmp$ret$8 = fillArrayVal(Array(16), null);
                              tmp_1 = new MutableVector(tmp$ret$8, 0);
                            } else {
                              tmp_1 = tmp1_elvis_lhs;
                            }
                            stack = tmp_1;
                            var theNode = node_0;
                            if (!(theNode == null)) {
                              var tmp2_safe_receiver = stack;
                              if (tmp2_safe_receiver == null)
                                null;
                              else
                                tmp2_safe_receiver.q1q(theNode);
                              node_0 = null;
                            }
                            var tmp3_safe_receiver = stack;
                            if (tmp3_safe_receiver == null)
                              null;
                            else
                              tmp3_safe_receiver.q1q(next);
                          }
                        }
                        node_1 = node_1.u4i_1;
                      }
                      if (count === 1) {
                        continue $l$loop;
                      }
                    }
                  }
                  node_0 = pop$accessor$hxafa1(stack);
                }
              }
            }
            node = node.t4i_1;
          }
        }
        layout = layout.pp();
        var tmp0_safe_receiver = layout;
        var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
        node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
      }
    }
  }
  function getFocusState(_this__u8e3s4) {
    // Inline function 'androidx.compose.ui.node.visitSelfAndChildren' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    // Inline function 'androidx.compose.ui.node.dispatchForKind' call
    var stack = null;
    var node = _this__u8e3s4.c4j();
    $l$loop: while (!(node == null)) {
      if (node instanceof FocusTargetNode) {
        $l$block: {
          // Inline function 'androidx.compose.ui.focus.getFocusState.<anonymous>' call
          var focusState = node.n4n();
          switch (focusState.t9_1) {
            case 0:
            case 1:
            case 2:
              return focusState;
            case 3:
              break $l$block;
          }
        }
      } else {
        var tmp;
        // Inline function 'androidx.compose.ui.Node.isKind' call
        if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
          tmp = node instanceof DelegatingNode;
        } else {
          tmp = false;
        }
        if (tmp) {
          var count = 0;
          // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
          var node_0 = node.b4m_1;
          while (!(node_0 == null)) {
            // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
            var next = node_0;
            // Inline function 'androidx.compose.ui.Node.isKind' call
            if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
              count = count + 1 | 0;
              if (count === 1) {
                node = next;
              } else {
                var tmp1_elvis_lhs = stack;
                var tmp_0;
                if (tmp1_elvis_lhs == null) {
                  // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                  // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                  // Inline function 'kotlin.arrayOfNulls' call
                  var tmp$ret$4 = fillArrayVal(Array(16), null);
                  tmp_0 = new MutableVector(tmp$ret$4, 0);
                } else {
                  tmp_0 = tmp1_elvis_lhs;
                }
                stack = tmp_0;
                var theNode = node;
                if (!(theNode == null)) {
                  var tmp2_safe_receiver = stack;
                  if (tmp2_safe_receiver == null)
                    null;
                  else
                    tmp2_safe_receiver.q1q(theNode);
                  node = null;
                }
                var tmp3_safe_receiver = stack;
                if (tmp3_safe_receiver == null)
                  null;
                else
                  tmp3_safe_receiver.q1q(next);
              }
            }
            node_0 = node_0.u4i_1;
          }
          if (count === 1) {
            continue $l$loop;
          }
        }
      }
      node = pop$accessor$hxafa1(stack);
    }
    // Inline function 'androidx.compose.ui.node.visitChildren' call
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
      var message = 'visitChildren called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$8 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$8, 0);
    var child = _this__u8e3s4.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
    } else {
      branches.q1q(child);
    }
    $l$loop_0: while (branches.pn()) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var tmp$ret$11 = branches.p1q_1 - 1 | 0;
      var branch = branches.m1(tmp$ret$11);
      if ((branch.s4i_1 & mask) === 0) {
        addLayoutNodeChildren$accessor$hxafa1(branches, branch);
        continue $l$loop_0;
      }
      var node_1 = branch;
      $l$loop_2: while (!(node_1 == null)) {
        if (!((node_1.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.visitSelfAndChildren.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack_0 = null;
          var node_2 = node_1;
          $l$loop_1: while (!(node_2 == null)) {
            if (node_2 instanceof FocusTargetNode) {
              $l$block_0: {
                // Inline function 'androidx.compose.ui.focus.getFocusState.<anonymous>' call
                var focusState_0 = node_2.n4n();
                switch (focusState_0.t9_1) {
                  case 0:
                  case 1:
                  case 2:
                    return focusState_0;
                  case 3:
                    break $l$block_0;
                }
              }
            } else {
              var tmp_1;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_2.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp_1 = node_2 instanceof DelegatingNode;
              } else {
                tmp_1 = false;
              }
              if (tmp_1) {
                var count_0 = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_3 = node_2.b4m_1;
                while (!(node_3 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next_0 = node_3;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count_0 = count_0 + 1 | 0;
                    if (count_0 === 1) {
                      node_2 = next_0;
                    } else {
                      var tmp1_elvis_lhs_0 = stack_0;
                      var tmp_2;
                      if (tmp1_elvis_lhs_0 == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$15 = fillArrayVal(Array(16), null);
                        tmp_2 = new MutableVector(tmp$ret$15, 0);
                      } else {
                        tmp_2 = tmp1_elvis_lhs_0;
                      }
                      stack_0 = tmp_2;
                      var theNode_0 = node_2;
                      if (!(theNode_0 == null)) {
                        var tmp2_safe_receiver_0 = stack_0;
                        if (tmp2_safe_receiver_0 == null)
                          null;
                        else
                          tmp2_safe_receiver_0.q1q(theNode_0);
                        node_2 = null;
                      }
                      var tmp3_safe_receiver_0 = stack_0;
                      if (tmp3_safe_receiver_0 == null)
                        null;
                      else
                        tmp3_safe_receiver_0.q1q(next_0);
                    }
                  }
                  node_3 = node_3.u4i_1;
                }
                if (count_0 === 1) {
                  continue $l$loop_1;
                }
              }
            }
            node_2 = pop$accessor$hxafa1(stack_0);
          }
          break $l$loop_2;
        }
        node_1 = node_1.u4i_1;
      }
    }
    return FocusStateImpl_Inactive_getInstance();
  }
  function scheduleInvalidation(_this__u8e3s4, $this, node) {
    if (_this__u8e3s4.a1(node)) {
      if ((($this.p4n_1.m() + $this.q4n_1.m() | 0) + $this.r4n_1.m() | 0) === 1) {
        $this.o4n_1($this.s4n_1);
      }
    }
  }
  function FocusInvalidationManager$invalidateNodes$lambda(this$0) {
    return function () {
      var tmp0_iterator = this$0.r4n_1.o();
      while (tmp0_iterator.d1()) {
        var element = tmp0_iterator.f1();
        $l$block: {
          // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>' call
          if (!element.c4j().b4j_1) {
            break $l$block;
          }
          // Inline function 'androidx.compose.ui.node.visitSelfAndChildren' call
          // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
          var type = _NodeKind___init__impl__ojsprp(1024);
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node = element.c4j();
          $l$loop: while (!(node == null)) {
            if (node instanceof FocusTargetNode) {
              // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>.<anonymous>' call
              var focusTarget = node;
              this$0.p4n_1.a1(focusTarget);
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_0 = node.b4m_1;
                while (!(node_0 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_0;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$4 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$4, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_0 = node_0.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop;
                }
              }
            }
            node = pop$accessor$hxafa1(stack);
          }
          // Inline function 'androidx.compose.ui.node.visitChildren' call
          var mask = _NodeKind___get_mask__impl__1uopb6(type);
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!element.c4j().b4j_1) {
            // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
            var message = 'visitChildren called on an unattached node';
            throw IllegalStateException_init_$Create$(toString(message));
          }
          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
          // Inline function 'kotlin.arrayOfNulls' call
          var tmp$ret$8 = fillArrayVal(Array(16), null);
          var branches = new MutableVector(tmp$ret$8, 0);
          var child = element.c4j().u4i_1;
          if (child == null) {
            addLayoutNodeChildren$accessor$hxafa1(branches, element.c4j());
          } else {
            branches.q1q(child);
          }
          $l$loop_0: while (branches.pn()) {
            // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
            var tmp$ret$11 = branches.p1q_1 - 1 | 0;
            var branch = branches.m1(tmp$ret$11);
            if ((branch.s4i_1 & mask) === 0) {
              addLayoutNodeChildren$accessor$hxafa1(branches, branch);
              continue $l$loop_0;
            }
            var node_1 = branch;
            $l$loop_2: while (!(node_1 == null)) {
              if (!((node_1.r4i_1 & mask) === 0)) {
                // Inline function 'androidx.compose.ui.node.visitSelfAndChildren.<anonymous>' call
                // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                var stack_0 = null;
                var node_2 = node_1;
                $l$loop_1: while (!(node_2 == null)) {
                  if (node_2 instanceof FocusTargetNode) {
                    // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>.<anonymous>' call
                    var focusTarget_0 = node_2;
                    this$0.p4n_1.a1(focusTarget_0);
                  } else {
                    var tmp_1;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((node_2.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      tmp_1 = node_2 instanceof DelegatingNode;
                    } else {
                      tmp_1 = false;
                    }
                    if (tmp_1) {
                      var count_0 = 0;
                      // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                      var node_3 = node_2.b4m_1;
                      while (!(node_3 == null)) {
                        // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                        var next_0 = node_3;
                        // Inline function 'androidx.compose.ui.Node.isKind' call
                        if (!((next_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                          count_0 = count_0 + 1 | 0;
                          if (count_0 === 1) {
                            node_2 = next_0;
                          } else {
                            var tmp1_elvis_lhs_0 = stack_0;
                            var tmp_2;
                            if (tmp1_elvis_lhs_0 == null) {
                              // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                              // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                              // Inline function 'kotlin.arrayOfNulls' call
                              var tmp$ret$14 = fillArrayVal(Array(16), null);
                              tmp_2 = new MutableVector(tmp$ret$14, 0);
                            } else {
                              tmp_2 = tmp1_elvis_lhs_0;
                            }
                            stack_0 = tmp_2;
                            var theNode_0 = node_2;
                            if (!(theNode_0 == null)) {
                              var tmp2_safe_receiver_0 = stack_0;
                              if (tmp2_safe_receiver_0 == null)
                                null;
                              else
                                tmp2_safe_receiver_0.q1q(theNode_0);
                              node_2 = null;
                            }
                            var tmp3_safe_receiver_0 = stack_0;
                            if (tmp3_safe_receiver_0 == null)
                              null;
                            else
                              tmp3_safe_receiver_0.q1q(next_0);
                          }
                        }
                        node_3 = node_3.u4i_1;
                      }
                      if (count_0 === 1) {
                        continue $l$loop_1;
                      }
                    }
                  }
                  node_2 = pop$accessor$hxafa1(stack_0);
                }
                break $l$loop_2;
              }
              node_1 = node_1.u4i_1;
            }
          }
        }
      }
      this$0.r4n_1.h1();
      // Inline function 'kotlin.collections.mutableSetOf' call
      var focusTargetsWithInvalidatedFocusEvents = LinkedHashSet_init_$Create$();
      var tmp0_iterator_0 = this$0.q4n_1.o();
      while (tmp0_iterator_0.d1()) {
        var element_0 = tmp0_iterator_0.f1();
        $l$block_0: {
          // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>' call
          if (!element_0.c4j().b4j_1) {
            element_0.k4n(FocusStateImpl_Inactive_getInstance());
            break $l$block_0;
          }
          var requiresUpdate = true;
          var aggregatedNode = false;
          var focusTarget_1 = null;
          // Inline function 'androidx.compose.ui.node.visitSelfAndChildren' call
          // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
          var type_0 = _NodeKind___init__impl__ojsprp(1024);
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack_1 = null;
          var node_4 = element_0.c4j();
          $l$loop_3: while (!(node_4 == null)) {
            if (node_4 instanceof FocusTargetNode) {
              $l$block_1: {
                // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>.<anonymous>' call
                var it = node_4;
                if (!(focusTarget_1 == null)) {
                  aggregatedNode = true;
                }
                focusTarget_1 = it;
                if (this$0.p4n_1.s(it)) {
                  requiresUpdate = false;
                  focusTargetsWithInvalidatedFocusEvents.a1(it);
                  break $l$block_1;
                }
              }
            } else {
              var tmp_3;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_4.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                tmp_3 = node_4 instanceof DelegatingNode;
              } else {
                tmp_3 = false;
              }
              if (tmp_3) {
                var count_1 = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_5 = node_4.b4m_1;
                while (!(node_5 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next_1 = node_5;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next_1.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                    count_1 = count_1 + 1 | 0;
                    if (count_1 === 1) {
                      node_4 = next_1;
                    } else {
                      var tmp1_elvis_lhs_1 = stack_1;
                      var tmp_4;
                      if (tmp1_elvis_lhs_1 == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$23 = fillArrayVal(Array(16), null);
                        tmp_4 = new MutableVector(tmp$ret$23, 0);
                      } else {
                        tmp_4 = tmp1_elvis_lhs_1;
                      }
                      stack_1 = tmp_4;
                      var theNode_1 = node_4;
                      if (!(theNode_1 == null)) {
                        var tmp2_safe_receiver_1 = stack_1;
                        if (tmp2_safe_receiver_1 == null)
                          null;
                        else
                          tmp2_safe_receiver_1.q1q(theNode_1);
                        node_4 = null;
                      }
                      var tmp3_safe_receiver_1 = stack_1;
                      if (tmp3_safe_receiver_1 == null)
                        null;
                      else
                        tmp3_safe_receiver_1.q1q(next_1);
                    }
                  }
                  node_5 = node_5.u4i_1;
                }
                if (count_1 === 1) {
                  continue $l$loop_3;
                }
              }
            }
            node_4 = pop$accessor$hxafa1(stack_1);
          }
          // Inline function 'androidx.compose.ui.node.visitChildren' call
          var mask_0 = _NodeKind___get_mask__impl__1uopb6(type_0);
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!element_0.c4j().b4j_1) {
            // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
            var message_0 = 'visitChildren called on an unattached node';
            throw IllegalStateException_init_$Create$(toString(message_0));
          }
          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
          // Inline function 'kotlin.arrayOfNulls' call
          var tmp$ret$27 = fillArrayVal(Array(16), null);
          var branches_0 = new MutableVector(tmp$ret$27, 0);
          var child_0 = element_0.c4j().u4i_1;
          if (child_0 == null) {
            addLayoutNodeChildren$accessor$hxafa1(branches_0, element_0.c4j());
          } else {
            branches_0.q1q(child_0);
          }
          $l$loop_4: while (branches_0.pn()) {
            // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
            var tmp$ret$30 = branches_0.p1q_1 - 1 | 0;
            var branch_0 = branches_0.m1(tmp$ret$30);
            if ((branch_0.s4i_1 & mask_0) === 0) {
              addLayoutNodeChildren$accessor$hxafa1(branches_0, branch_0);
              continue $l$loop_4;
            }
            var node_6 = branch_0;
            $l$loop_6: while (!(node_6 == null)) {
              if (!((node_6.r4i_1 & mask_0) === 0)) {
                // Inline function 'androidx.compose.ui.node.visitSelfAndChildren.<anonymous>' call
                // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                var stack_2 = null;
                var node_7 = node_6;
                $l$loop_5: while (!(node_7 == null)) {
                  if (node_7 instanceof FocusTargetNode) {
                    $l$block_2: {
                      // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>.<anonymous>' call
                      var it_0 = node_7;
                      if (!(focusTarget_1 == null)) {
                        aggregatedNode = true;
                      }
                      focusTarget_1 = it_0;
                      if (this$0.p4n_1.s(it_0)) {
                        requiresUpdate = false;
                        focusTargetsWithInvalidatedFocusEvents.a1(it_0);
                        break $l$block_2;
                      }
                    }
                  } else {
                    var tmp_5;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((node_7.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                      tmp_5 = node_7 instanceof DelegatingNode;
                    } else {
                      tmp_5 = false;
                    }
                    if (tmp_5) {
                      var count_2 = 0;
                      // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                      var node_8 = node_7.b4m_1;
                      while (!(node_8 == null)) {
                        // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                        var next_2 = node_8;
                        // Inline function 'androidx.compose.ui.Node.isKind' call
                        if (!((next_2.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                          count_2 = count_2 + 1 | 0;
                          if (count_2 === 1) {
                            node_7 = next_2;
                          } else {
                            var tmp1_elvis_lhs_2 = stack_2;
                            var tmp_6;
                            if (tmp1_elvis_lhs_2 == null) {
                              // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                              // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                              // Inline function 'kotlin.arrayOfNulls' call
                              var tmp$ret$34 = fillArrayVal(Array(16), null);
                              tmp_6 = new MutableVector(tmp$ret$34, 0);
                            } else {
                              tmp_6 = tmp1_elvis_lhs_2;
                            }
                            stack_2 = tmp_6;
                            var theNode_2 = node_7;
                            if (!(theNode_2 == null)) {
                              var tmp2_safe_receiver_2 = stack_2;
                              if (tmp2_safe_receiver_2 == null)
                                null;
                              else
                                tmp2_safe_receiver_2.q1q(theNode_2);
                              node_7 = null;
                            }
                            var tmp3_safe_receiver_2 = stack_2;
                            if (tmp3_safe_receiver_2 == null)
                              null;
                            else
                              tmp3_safe_receiver_2.q1q(next_2);
                          }
                        }
                        node_8 = node_8.u4i_1;
                      }
                      if (count_2 === 1) {
                        continue $l$loop_5;
                      }
                    }
                  }
                  node_7 = pop$accessor$hxafa1(stack_2);
                }
                break $l$loop_6;
              }
              node_6 = node_6.u4i_1;
            }
          }
          if (requiresUpdate) {
            var tmp_7;
            if (aggregatedNode) {
              tmp_7 = getFocusState(element_0);
            } else {
              var tmp0_safe_receiver = focusTarget_1;
              var tmp1_elvis_lhs_3 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n4n();
              tmp_7 = tmp1_elvis_lhs_3 == null ? FocusStateImpl_Inactive_getInstance() : tmp1_elvis_lhs_3;
            }
            element_0.k4n(tmp_7);
          }
        }
      }
      this$0.q4n_1.h1();
      var tmp0_iterator_1 = this$0.p4n_1.o();
      while (tmp0_iterator_1.d1()) {
        var element_1 = tmp0_iterator_1.f1();
        $l$block_3: {
          // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>' call
          if (!element_1.b4j_1) {
            break $l$block_3;
          }
          var preInvalidationState = element_1.n4n();
          element_1.t4n();
          if (!preInvalidationState.equals(element_1.n4n()) ? true : focusTargetsWithInvalidatedFocusEvents.s(element_1)) {
            refreshFocusEventNodes(element_1);
          }
        }
      }
      this$0.p4n_1.h1();
      focusTargetsWithInvalidatedFocusEvents.h1();
      // Inline function 'kotlin.contracts.contract' call
      var tmp_8;
      if (!this$0.r4n_1.u()) {
        // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>' call
        var message_1 = 'Unprocessed FocusProperties nodes';
        throw IllegalStateException_init_$Create$(toString(message_1));
      }
      // Inline function 'kotlin.contracts.contract' call
      var tmp_9;
      if (!this$0.q4n_1.u()) {
        // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>' call
        var message_2 = 'Unprocessed FocusEvent nodes';
        throw IllegalStateException_init_$Create$(toString(message_2));
      }
      // Inline function 'kotlin.contracts.contract' call
      var tmp_10;
      if (!this$0.p4n_1.u()) {
        // Inline function 'androidx.compose.ui.focus.FocusInvalidationManager.invalidateNodes.<anonymous>.<anonymous>' call
        var message_3 = 'Unprocessed FocusTarget nodes';
        throw IllegalStateException_init_$Create$(toString(message_3));
      }
      return Unit_instance;
    };
  }
  function FocusInvalidationManager(onRequestApplyChangesListener) {
    this.o4n_1 = onRequestApplyChangesListener;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableSetOf' call
    tmp.p4n_1 = LinkedHashSet_init_$Create$();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableSetOf' call
    tmp_0.q4n_1 = LinkedHashSet_init_$Create$();
    var tmp_1 = this;
    // Inline function 'kotlin.collections.mutableSetOf' call
    tmp_1.r4n_1 = LinkedHashSet_init_$Create$();
    var tmp_2 = this;
    tmp_2.s4n_1 = FocusInvalidationManager$invalidateNodes$lambda(this);
  }
  protoOf(FocusInvalidationManager).u4n = function (node) {
    scheduleInvalidation(this.p4n_1, this, node);
  };
  protoOf(FocusInvalidationManager).m4n = function (node) {
    scheduleInvalidation(this.q4n_1, this, node);
  };
  protoOf(FocusInvalidationManager).v4n = function (node) {
    scheduleInvalidation(this.r4n_1, this, node);
  };
  function FocusOrderModifier() {
  }
  function FocusOrder_init_$Init$($this) {
    FocusOrder.call($this, new FocusPropertiesImpl());
    return $this;
  }
  function FocusOrder_init_$Create$() {
    return FocusOrder_init_$Init$(objectCreate(protoOf(FocusOrder)));
  }
  function FocusOrder(focusProperties) {
    this.x4n_1 = focusProperties;
  }
  function moveParentFocus($this, focusDirection) {
    var tmp0_safe_receiver = $this.y4n_1;
    return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f4o(focusDirection)) === true;
  }
  function lastLocalKeyInputNode(_this__u8e3s4, $this) {
    var focusedKeyInputNode = null;
    $l$block: {
      // Inline function 'androidx.compose.ui.node.visitLocalDescendants' call
      // Inline function 'androidx.compose.ui.node.NodeKind.or' call
      // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
      var this_0 = _NodeKind___init__impl__ojsprp(1024);
      // Inline function 'androidx.compose.ui.node.Nodes.KeyInput' call
      var other = _NodeKind___init__impl__ojsprp(8192);
      var mask = _NodeKind___get_mask__impl__1uopb6(this_0) | _NodeKind___get_mask__impl__1uopb6(other);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!_this__u8e3s4.c4j().b4j_1) {
        // Inline function 'androidx.compose.ui.node.visitLocalDescendants.<anonymous>' call
        var message = 'visitLocalDescendants called on an unattached node';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var self_0 = _this__u8e3s4.c4j();
      if ((self_0.s4i_1 & mask) === 0) {
        break $l$block;
      }
      var next = self_0.u4i_1;
      while (!(next == null)) {
        if (!((next.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.lastLocalKeyInputNode.<anonymous>' call
          var modifierNode = next;
          // Inline function 'androidx.compose.ui.Node.isKind' call
          // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
          var kind = _NodeKind___init__impl__ojsprp(1024);
          if (!((modifierNode.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0))
            return focusedKeyInputNode;
          focusedKeyInputNode = modifierNode;
        }
        next = next.u4i_1;
      }
    }
    return focusedKeyInputNode;
  }
  function wrapAroundFocus($this, focusDirection) {
    if (!$this.z4n_1.n4n().j4o() ? true : $this.z4n_1.n4n().i4o())
      return false;
    if (focusDirection === Companion_getInstance_14().a4n_1 ? true : focusDirection === Companion_getInstance_14().b4n_1) {
      $this.k4o(false);
      if (!$this.z4n_1.n4n().i4o())
        return false;
      return $this.f4o(focusDirection);
    } else
      return false;
  }
  function validateKeyEvent($this, keyEvent) {
    var keyCode = _Key___get_keyCode__impl__ymzu5v(get_key(keyEvent));
    var tmp0_subject = get_type(keyEvent);
    if (tmp0_subject === Companion_getInstance_19().n4o_1) {
      var tmp1_elvis_lhs = $this.e4o_1;
      var tmp;
      if (tmp1_elvis_lhs == null) {
        // Inline function 'kotlin.also' call
        var this_0 = new MutableLongSet(3);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.validateKeyEvent.<anonymous>' call
        $this.e4o_1 = this_0;
        tmp = this_0;
      } else {
        tmp = tmp1_elvis_lhs;
      }
      var keysCurrentlyDown = tmp;
      keysCurrentlyDown.lm(keyCode);
    } else if (tmp0_subject === Companion_getInstance_19().m4o_1) {
      var tmp2_safe_receiver = $this.e4o_1;
      if (!((tmp2_safe_receiver == null ? null : tmp2_safe_receiver.em(keyCode)) === true)) {
        return false;
      }
      var tmp3_safe_receiver = $this.e4o_1;
      if (tmp3_safe_receiver == null)
        null;
      else
        tmp3_safe_receiver.mm(keyCode);
    }
    return true;
  }
  function FocusOwnerImpl$modifier$1(this$0) {
    this.p4o_1 = this$0;
    ModifierNodeElement.call(this);
  }
  protoOf(FocusOwnerImpl$modifier$1).i29 = function () {
    return this.p4o_1.z4n_1;
  };
  protoOf(FocusOwnerImpl$modifier$1).q4o = function (node) {
  };
  protoOf(FocusOwnerImpl$modifier$1).r4o = function (node) {
    return this.q4o(node instanceof FocusTargetNode ? node : THROW_CCE());
  };
  protoOf(FocusOwnerImpl$modifier$1).hashCode = function () {
    return hashCode(this.p4o_1.z4n_1);
  };
  protoOf(FocusOwnerImpl$modifier$1).equals = function (other) {
    return other === this;
  };
  function FocusOwnerImpl$moveFocus$lambda($source, this$0, $focusDirection, $isCancelled) {
    return function (destination) {
      var tmp;
      if (equals(destination, $source)) {
        return false;
      }
      $l$block_0: {
        // Inline function 'kotlin.checkNotNull' call
        var tmp$ret$2;
        $l$block: {
          // Inline function 'androidx.compose.ui.node.nearestAncestor' call
          // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
          // Inline function 'androidx.compose.ui.node.visitAncestors' call
          var type = _NodeKind___init__impl__ojsprp(1024);
          var mask = _NodeKind___get_mask__impl__1uopb6(type);
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!destination.c4j().b4j_1) {
            // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
            var message = 'visitAncestors called on an unattached node';
            throw IllegalStateException_init_$Create$(toString(message));
          }
          var node = false ? destination.c4j() : destination.c4j().t4i_1;
          var layout = requireLayoutNode(destination);
          while (!(layout == null)) {
            var head = layout.d4l_1.y4j_1;
            if (!((head.s4i_1 & mask) === 0)) {
              while (!(node == null)) {
                if (!((node.r4i_1 & mask) === 0)) {
                  // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
                  // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                  var stack = null;
                  var node_0 = node;
                  $l$loop: while (!(node_0 == null)) {
                    if (node_0 instanceof FocusTargetNode) {
                      // Inline function 'androidx.compose.ui.node.nearestAncestor.<anonymous>' call
                      tmp$ret$2 = node_0;
                      break $l$block;
                    } else {
                      var tmp_0;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                        tmp_0 = node_0 instanceof DelegatingNode;
                      } else {
                        tmp_0 = false;
                      }
                      if (tmp_0) {
                        var count = 0;
                        // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                        var node_1 = node_0.b4m_1;
                        while (!(node_1 == null)) {
                          // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                          var next = node_1;
                          // Inline function 'androidx.compose.ui.Node.isKind' call
                          if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                            count = count + 1 | 0;
                            if (count === 1) {
                              node_0 = next;
                            } else {
                              var tmp1_elvis_lhs = stack;
                              var tmp_1;
                              if (tmp1_elvis_lhs == null) {
                                // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                                // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                                // Inline function 'kotlin.arrayOfNulls' call
                                var tmp$ret$5 = fillArrayVal(Array(16), null);
                                tmp_1 = new MutableVector(tmp$ret$5, 0);
                              } else {
                                tmp_1 = tmp1_elvis_lhs;
                              }
                              stack = tmp_1;
                              var theNode = node_0;
                              if (!(theNode == null)) {
                                var tmp2_safe_receiver = stack;
                                if (tmp2_safe_receiver == null)
                                  null;
                                else
                                  tmp2_safe_receiver.q1q(theNode);
                                node_0 = null;
                              }
                              var tmp3_safe_receiver = stack;
                              if (tmp3_safe_receiver == null)
                                null;
                              else
                                tmp3_safe_receiver.q1q(next);
                            }
                          }
                          node_1 = node_1.u4i_1;
                        }
                        if (count === 1) {
                          continue $l$loop;
                        }
                      }
                    }
                    node_0 = pop$accessor$hxafa1(stack);
                  }
                }
                node = node.t4i_1;
              }
            }
            layout = layout.pp();
            var tmp0_safe_receiver = layout;
            var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
            node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
          }
          tmp$ret$2 = null;
        }
        // Inline function 'kotlin.contracts.contract' call
        if (tmp$ret$2 == null) {
          // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.moveFocus.<anonymous>.<anonymous>' call
          var message_0 = 'Focus search landed at the root.';
          throw IllegalStateException_init_$Create$(toString(message_0));
        } else {
          break $l$block_0;
        }
      }
      // Inline function 'androidx.compose.ui.focus.FocusTransactionManager.withNewTransaction' call
      var this_0 = this$0.b4o_1;
      var tmp_2;
      try {
        if (this_0.u4o_1) {
          cancelTransaction(this_0);
        }
        beginTransaction(this_0);
        if (null == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          this_0.t4o_1.q1q(null);
        }
        // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.moveFocus.<anonymous>.<anonymous>' call
        var tmp_3;
        switch (performCustomRequestFocus(destination, $focusDirection).t9_1) {
          case 2:
            tmp_3 = true;
            break;
          case 1:
          case 3:
            $isCancelled._v = true;
            tmp_3 = true;
            break;
          case 0:
            tmp_3 = performRequestFocus(destination);
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        tmp_2 = tmp_3;
      }finally {
        commitTransaction(this_0);
      }
      return tmp_2;
    };
  }
  function FocusOwnerImpl(parent, onRequestApplyChangesListener) {
    parent = parent === VOID ? null : parent;
    this.y4n_1 = parent;
    this.z4n_1 = new FocusTargetNode();
    this.a4o_1 = new FocusInvalidationManager(onRequestApplyChangesListener);
    this.b4o_1 = new FocusTransactionManager();
    var tmp = this;
    tmp.c4o_1 = new FocusOwnerImpl$modifier$1(this);
    this.e4o_1 = null;
  }
  protoOf(FocusOwnerImpl).v4o = function () {
    return this.b4o_1;
  };
  protoOf(FocusOwnerImpl).w4o = function () {
    return this.c4o_1;
  };
  protoOf(FocusOwnerImpl).x4o = function () {
    var tmp = this.d4o_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('layoutDirection');
    }
  };
  protoOf(FocusOwnerImpl).y4o = function () {
    if (this.z4n_1.n4n().equals(FocusStateImpl_Inactive_getInstance())) {
      this.z4n_1.z4o(FocusStateImpl_Active_getInstance());
    }
  };
  protoOf(FocusOwnerImpl).a4p = function () {
    clearFocus(this.z4n_1, true, true);
  };
  protoOf(FocusOwnerImpl).k4o = function (force) {
    this.b4p(force, true);
  };
  protoOf(FocusOwnerImpl).b4p = function (force, refreshFocusEvents) {
    // Inline function 'androidx.compose.ui.focus.FocusTransactionManager.withNewTransaction' call
    var this_0 = this.b4o_1;
    var tmp;
    try {
      if (this_0.u4o_1) {
        cancelTransaction(this_0);
      }
      beginTransaction(this_0);
      if (null == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        this_0.t4o_1.q1q(null);
      }
      // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.clearFocus.<anonymous>' call
      if (!force) {
        switch (performCustomClearFocus(this.z4n_1, Companion_getInstance_14().h4n_1).t9_1) {
          case 2:
          case 1:
          case 3:
            return Unit_instance;
          case 0:
            break;
        }
      }
      var rootInitialState = this.z4n_1.n4n();
      if (clearFocus(this.z4n_1, force, refreshFocusEvents)) {
        var tmp_0 = this.z4n_1;
        var tmp_1;
        switch (rootInitialState.t9_1) {
          case 0:
          case 1:
          case 2:
            tmp_1 = FocusStateImpl_Active_getInstance();
            break;
          case 3:
            tmp_1 = FocusStateImpl_Inactive_getInstance();
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        tmp_0.z4o(tmp_1);
      }
      var tmp2_safe_receiver = this.y4n_1;
      var tmp_2;
      if (tmp2_safe_receiver == null) {
        tmp_2 = null;
      } else {
        tmp2_safe_receiver.k4o(force);
        tmp_2 = Unit_instance;
      }
      tmp = tmp_2;
    }finally {
      commitTransaction(this_0);
    }
  };
  protoOf(FocusOwnerImpl).f4o = function (focusDirection) {
    var tmp0_elvis_lhs = findActiveFocusNode(this.z4n_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var source = tmp;
    // Inline function 'kotlin.also' call
    var this_0 = customFocusSearch(source, focusDirection, this.x4o());
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.moveFocus.<anonymous>' call
    if (!(this_0 === Companion_getInstance_15().e4p_1)) {
      return !(this_0 === Companion_getInstance_15().f4p_1) ? this_0.d4p() : false;
    }
    var isCancelled = {_v: false};
    var tmp_0 = this.z4n_1;
    var tmp_1 = this.x4o();
    var foundNextItem = focusSearch(tmp_0, focusDirection, tmp_1, FocusOwnerImpl$moveFocus$lambda(source, this, focusDirection, isCancelled));
    return !isCancelled._v ? (foundNextItem ? true : moveParentFocus(this, focusDirection)) ? true : wrapAroundFocus(this, focusDirection) : false;
  };
  protoOf(FocusOwnerImpl).g4p = function (keyEvent) {
    if (!validateKeyEvent(this, keyEvent))
      return false;
    var activeFocusTarget = findActiveFocusNode(this.z4n_1);
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (activeFocusTarget == null) {
        // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.dispatchKeyEvent.<anonymous>' call
        var message = "Event can't be processed because we do not have an active focus target.";
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        break $l$block;
      }
    }
    var tmp1_elvis_lhs = lastLocalKeyInputNode(activeFocusTarget, this);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$4;
      $l$block_0: {
        // Inline function 'androidx.compose.ui.node.nearestAncestor' call
        // Inline function 'androidx.compose.ui.node.Nodes.KeyInput' call
        // Inline function 'androidx.compose.ui.node.visitAncestors' call
        var type = _NodeKind___init__impl__ojsprp(8192);
        var mask = _NodeKind___get_mask__impl__1uopb6(type);
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!activeFocusTarget.c4j().b4j_1) {
          // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
          var message_0 = 'visitAncestors called on an unattached node';
          throw IllegalStateException_init_$Create$(toString(message_0));
        }
        var node = false ? activeFocusTarget.c4j() : activeFocusTarget.c4j().t4i_1;
        var layout = requireLayoutNode(activeFocusTarget);
        while (!(layout == null)) {
          var head = layout.d4l_1.y4j_1;
          if (!((head.s4i_1 & mask) === 0)) {
            while (!(node == null)) {
              if (!((node.r4i_1 & mask) === 0)) {
                // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
                // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                var stack = null;
                var node_0 = node;
                $l$loop: while (!(node_0 == null)) {
                  if (!(node_0 == null) ? isInterface(node_0, KeyInputModifierNode) : false) {
                    // Inline function 'androidx.compose.ui.node.nearestAncestor.<anonymous>' call
                    tmp$ret$4 = node_0;
                    break $l$block_0;
                  } else {
                    var tmp_0;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      tmp_0 = node_0 instanceof DelegatingNode;
                    } else {
                      tmp_0 = false;
                    }
                    if (tmp_0) {
                      var count = 0;
                      // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                      var node_1 = node_0.b4m_1;
                      while (!(node_1 == null)) {
                        // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                        var next = node_1;
                        // Inline function 'androidx.compose.ui.Node.isKind' call
                        if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                          count = count + 1 | 0;
                          if (count === 1) {
                            node_0 = next;
                          } else {
                            var tmp1_elvis_lhs_0 = stack;
                            var tmp_1;
                            if (tmp1_elvis_lhs_0 == null) {
                              // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                              // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                              // Inline function 'kotlin.arrayOfNulls' call
                              var tmp$ret$7 = fillArrayVal(Array(16), null);
                              tmp_1 = new MutableVector(tmp$ret$7, 0);
                            } else {
                              tmp_1 = tmp1_elvis_lhs_0;
                            }
                            stack = tmp_1;
                            var theNode = node_0;
                            if (!(theNode == null)) {
                              var tmp2_safe_receiver = stack;
                              if (tmp2_safe_receiver == null)
                                null;
                              else
                                tmp2_safe_receiver.q1q(theNode);
                              node_0 = null;
                            }
                            var tmp3_safe_receiver = stack;
                            if (tmp3_safe_receiver == null)
                              null;
                            else
                              tmp3_safe_receiver.q1q(next);
                          }
                        }
                        node_1 = node_1.u4i_1;
                      }
                      if (count === 1) {
                        continue $l$loop;
                      }
                    }
                  }
                  node_0 = pop$accessor$hxafa1(stack);
                }
              }
              node = node.t4i_1;
            }
          }
          layout = layout.pp();
          var tmp0_safe_receiver = layout;
          var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
          node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
        }
        tmp$ret$4 = null;
      }
      var tmp0_safe_receiver_0 = tmp$ret$4;
      tmp = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.c4j();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var focusedKeyInputNode = tmp;
    if (focusedKeyInputNode == null)
      null;
    else {
      // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.traverseAncestors' call
      // Inline function 'androidx.compose.ui.node.Nodes.KeyInput' call
      var type_0 = _NodeKind___init__impl__ojsprp(8192);
      // Inline function 'androidx.compose.ui.node.ancestors' call
      var result = null;
      // Inline function 'androidx.compose.ui.node.visitAncestors' call
      var mask_0 = _NodeKind___get_mask__impl__1uopb6(type_0);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!focusedKeyInputNode.c4j().b4j_1) {
        // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
        var message_1 = 'visitAncestors called on an unattached node';
        throw IllegalStateException_init_$Create$(toString(message_1));
      }
      var node_2 = false ? focusedKeyInputNode.c4j() : focusedKeyInputNode.c4j().t4i_1;
      var layout_0 = requireLayoutNode(focusedKeyInputNode);
      while (!(layout_0 == null)) {
        var head_0 = layout_0.d4l_1.y4j_1;
        if (!((head_0.s4i_1 & mask_0) === 0)) {
          while (!(node_2 == null)) {
            if (!((node_2.r4i_1 & mask_0) === 0)) {
              // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
              // Inline function 'androidx.compose.ui.node.dispatchForKind' call
              var stack_0 = null;
              var node_3 = node_2;
              $l$loop_0: while (!(node_3 == null)) {
                if (!(node_3 == null) ? isInterface(node_3, KeyInputModifierNode) : false) {
                  // Inline function 'androidx.compose.ui.node.ancestors.<anonymous>' call
                  var it = node_3;
                  if (result == null) {
                    // Inline function 'kotlin.collections.mutableListOf' call
                    result = ArrayList_init_$Create$();
                  }
                  var tmp0_safe_receiver_1 = result;
                  if (tmp0_safe_receiver_1 == null)
                    null;
                  else
                    tmp0_safe_receiver_1.a1(it);
                } else {
                  var tmp_2;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((node_3.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                    tmp_2 = node_3 instanceof DelegatingNode;
                  } else {
                    tmp_2 = false;
                  }
                  if (tmp_2) {
                    var count_0 = 0;
                    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                    var node_4 = node_3.b4m_1;
                    while (!(node_4 == null)) {
                      // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                      var next_0 = node_4;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((next_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                        count_0 = count_0 + 1 | 0;
                        if (count_0 === 1) {
                          node_3 = next_0;
                        } else {
                          var tmp1_elvis_lhs_1 = stack_0;
                          var tmp_3;
                          if (tmp1_elvis_lhs_1 == null) {
                            // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                            // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                            // Inline function 'kotlin.arrayOfNulls' call
                            var tmp$ret$16 = fillArrayVal(Array(16), null);
                            tmp_3 = new MutableVector(tmp$ret$16, 0);
                          } else {
                            tmp_3 = tmp1_elvis_lhs_1;
                          }
                          stack_0 = tmp_3;
                          var theNode_0 = node_3;
                          if (!(theNode_0 == null)) {
                            var tmp2_safe_receiver_0 = stack_0;
                            if (tmp2_safe_receiver_0 == null)
                              null;
                            else
                              tmp2_safe_receiver_0.q1q(theNode_0);
                            node_3 = null;
                          }
                          var tmp3_safe_receiver_0 = stack_0;
                          if (tmp3_safe_receiver_0 == null)
                            null;
                          else
                            tmp3_safe_receiver_0.q1q(next_0);
                        }
                      }
                      node_4 = node_4.u4i_1;
                    }
                    if (count_0 === 1) {
                      continue $l$loop_0;
                    }
                  }
                }
                node_3 = pop$accessor$hxafa1(stack_0);
              }
            }
            node_2 = node_2.t4i_1;
          }
        }
        layout_0 = layout_0.pp();
        var tmp0_safe_receiver_2 = layout_0;
        var tmp1_safe_receiver_0 = tmp0_safe_receiver_2 == null ? null : tmp0_safe_receiver_2.d4l_1;
        node_2 = tmp1_safe_receiver_0 == null ? null : tmp1_safe_receiver_0.x4j_1;
      }
      var ancestors = result;
      if (ancestors == null)
        null;
      else {
        // Inline function 'androidx.compose.ui.util.fastForEachReversed' call
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = ancestors.m() - 1 | 0;
        if (0 <= inductionVariable)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            var item = ancestors.n(index);
            // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.dispatchKeyEvent.<anonymous>' call
            if (item.h4p(keyEvent))
              return true;
          }
           while (0 <= inductionVariable);
      }
      // Inline function 'androidx.compose.ui.node.dispatchForKind' call
      var stack_1 = null;
      var node_5 = focusedKeyInputNode.c4j();
      $l$loop_1: while (!(node_5 == null)) {
        if (!(node_5 == null) ? isInterface(node_5, KeyInputModifierNode) : false) {
          // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.dispatchKeyEvent.<anonymous>' call
          if (node_5.h4p(keyEvent))
            return true;
        } else {
          var tmp_4;
          // Inline function 'androidx.compose.ui.Node.isKind' call
          if (!((node_5.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
            tmp_4 = node_5 instanceof DelegatingNode;
          } else {
            tmp_4 = false;
          }
          if (tmp_4) {
            var count_1 = 0;
            // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
            var node_6 = node_5.b4m_1;
            while (!(node_6 == null)) {
              // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
              var next_1 = node_6;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((next_1.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                count_1 = count_1 + 1 | 0;
                if (count_1 === 1) {
                  node_5 = next_1;
                } else {
                  var tmp1_elvis_lhs_2 = stack_1;
                  var tmp_5;
                  if (tmp1_elvis_lhs_2 == null) {
                    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                    // Inline function 'kotlin.arrayOfNulls' call
                    var tmp$ret$23 = fillArrayVal(Array(16), null);
                    tmp_5 = new MutableVector(tmp$ret$23, 0);
                  } else {
                    tmp_5 = tmp1_elvis_lhs_2;
                  }
                  stack_1 = tmp_5;
                  var theNode_1 = node_5;
                  if (!(theNode_1 == null)) {
                    var tmp2_safe_receiver_1 = stack_1;
                    if (tmp2_safe_receiver_1 == null)
                      null;
                    else
                      tmp2_safe_receiver_1.q1q(theNode_1);
                    node_5 = null;
                  }
                  var tmp3_safe_receiver_1 = stack_1;
                  if (tmp3_safe_receiver_1 == null)
                    null;
                  else
                    tmp3_safe_receiver_1.q1q(next_1);
                }
              }
              node_6 = node_6.u4i_1;
            }
            if (count_1 === 1) {
              continue $l$loop_1;
            }
          }
        }
        node_5 = pop$accessor$hxafa1(stack_1);
      }
      // Inline function 'androidx.compose.ui.node.dispatchForKind' call
      var stack_2 = null;
      var node_7 = focusedKeyInputNode.c4j();
      $l$loop_2: while (!(node_7 == null)) {
        if (!(node_7 == null) ? isInterface(node_7, KeyInputModifierNode) : false) {
          // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.dispatchKeyEvent.<anonymous>' call
          if (node_7.i4p(keyEvent))
            return true;
        } else {
          var tmp_6;
          // Inline function 'androidx.compose.ui.Node.isKind' call
          if (!((node_7.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
            tmp_6 = node_7 instanceof DelegatingNode;
          } else {
            tmp_6 = false;
          }
          if (tmp_6) {
            var count_2 = 0;
            // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
            var node_8 = node_7.b4m_1;
            while (!(node_8 == null)) {
              // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
              var next_2 = node_8;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((next_2.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                count_2 = count_2 + 1 | 0;
                if (count_2 === 1) {
                  node_7 = next_2;
                } else {
                  var tmp1_elvis_lhs_3 = stack_2;
                  var tmp_7;
                  if (tmp1_elvis_lhs_3 == null) {
                    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                    // Inline function 'kotlin.arrayOfNulls' call
                    var tmp$ret$28 = fillArrayVal(Array(16), null);
                    tmp_7 = new MutableVector(tmp$ret$28, 0);
                  } else {
                    tmp_7 = tmp1_elvis_lhs_3;
                  }
                  stack_2 = tmp_7;
                  var theNode_2 = node_7;
                  if (!(theNode_2 == null)) {
                    var tmp2_safe_receiver_2 = stack_2;
                    if (tmp2_safe_receiver_2 == null)
                      null;
                    else
                      tmp2_safe_receiver_2.q1q(theNode_2);
                    node_7 = null;
                  }
                  var tmp3_safe_receiver_2 = stack_2;
                  if (tmp3_safe_receiver_2 == null)
                    null;
                  else
                    tmp3_safe_receiver_2.q1q(next_2);
                }
              }
              node_8 = node_8.u4i_1;
            }
            if (count_2 === 1) {
              continue $l$loop_2;
            }
          }
        }
        node_7 = pop$accessor$hxafa1(stack_2);
      }
      if (ancestors == null)
        null;
      else {
        // Inline function 'androidx.compose.ui.util.fastForEach' call
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable_0 = 0;
        var last = ancestors.m() - 1 | 0;
        if (inductionVariable_0 <= last)
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var item_0 = ancestors.n(index_0);
            // Inline function 'androidx.compose.ui.focus.FocusOwnerImpl.dispatchKeyEvent.<anonymous>' call
            if (item_0.i4p(keyEvent))
              return true;
          }
           while (inductionVariable_0 <= last);
      }
    }
    return false;
  };
  protoOf(FocusOwnerImpl).u4n = function (node) {
    this.a4o_1.u4n(node);
  };
  protoOf(FocusOwnerImpl).m4n = function (node) {
    this.a4o_1.m4n(node);
  };
  protoOf(FocusOwnerImpl).v4n = function (node) {
    this.a4o_1.v4n(node);
  };
  function FocusProperties$_get_enter_$lambda_k4mh3f(it) {
    return Companion_getInstance_15().e4p_1;
  }
  function FocusProperties$_get_exit_$lambda_gv47az(it) {
    return Companion_getInstance_15().e4p_1;
  }
  function FocusProperties() {
  }
  function FocusPropertiesImpl$enter$lambda(it) {
    return Companion_getInstance_15().e4p_1;
  }
  function FocusPropertiesImpl$exit$lambda(it) {
    return Companion_getInstance_15().e4p_1;
  }
  function FocusPropertiesImpl() {
    this.s4p_1 = true;
    this.t4p_1 = Companion_getInstance_15().e4p_1;
    this.u4p_1 = Companion_getInstance_15().e4p_1;
    this.v4p_1 = Companion_getInstance_15().e4p_1;
    this.w4p_1 = Companion_getInstance_15().e4p_1;
    this.x4p_1 = Companion_getInstance_15().e4p_1;
    this.y4p_1 = Companion_getInstance_15().e4p_1;
    this.z4p_1 = Companion_getInstance_15().e4p_1;
    this.a4q_1 = Companion_getInstance_15().e4p_1;
    var tmp = this;
    tmp.b4q_1 = FocusPropertiesImpl$enter$lambda;
    var tmp_0 = this;
    tmp_0.c4q_1 = FocusPropertiesImpl$exit$lambda;
  }
  protoOf(FocusPropertiesImpl).j4p = function () {
    return this.s4p_1;
  };
  protoOf(FocusPropertiesImpl).f13 = function () {
    return this.t4p_1;
  };
  protoOf(FocusPropertiesImpl).k4p = function () {
    return this.u4p_1;
  };
  protoOf(FocusPropertiesImpl).l4p = function () {
    return this.v4p_1;
  };
  protoOf(FocusPropertiesImpl).m4p = function () {
    return this.w4p_1;
  };
  protoOf(FocusPropertiesImpl).n4p = function () {
    return this.x4p_1;
  };
  protoOf(FocusPropertiesImpl).o4p = function () {
    return this.y4p_1;
  };
  protoOf(FocusPropertiesImpl).tg = function () {
    return this.z4p_1;
  };
  protoOf(FocusPropertiesImpl).p4p = function () {
    return this.a4q_1;
  };
  protoOf(FocusPropertiesImpl).q4p = function () {
    return this.b4q_1;
  };
  protoOf(FocusPropertiesImpl).r4p = function () {
    return this.c4q_1;
  };
  function FocusPropertiesModifierNode() {
  }
  function invalidateFocusProperties(_this__u8e3s4) {
    requireOwner(_this__u8e3s4).l4n().v4n(_this__u8e3s4);
  }
  function Companion_1() {
    Companion_instance_5 = this;
    this.e4p_1 = new FocusRequester();
    this.f4p_1 = new FocusRequester();
  }
  var Companion_instance_5;
  function Companion_getInstance_15() {
    if (Companion_instance_5 == null)
      new Companion_1();
    return Companion_instance_5;
  }
  function FocusRequester$focus$lambda(it) {
    return requestFocus_0(it);
  }
  function FocusRequester() {
    Companion_getInstance_15();
    var tmp = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp.c4p_1 = new MutableVector(tmp$ret$0, 0);
  }
  protoOf(FocusRequester).d4p = function () {
    // Inline function 'androidx.compose.ui.focus.FocusRequester.findFocusTarget' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this === Companion_getInstance_15().e4p_1)) {
      // Inline function 'androidx.compose.ui.focus.FocusRequester.findFocusTarget.<anonymous>' call
      var message = '\n    Please check whether the focusRequester is FocusRequester.Cancel or FocusRequester.Default\n    before invoking any functions on the focusRequester.\n';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this === Companion_getInstance_15().f4p_1)) {
      // Inline function 'androidx.compose.ui.focus.FocusRequester.findFocusTarget.<anonymous>' call
      var message_0 = '\n    Please check whether the focusRequester is FocusRequester.Cancel or FocusRequester.Default\n    before invoking any functions on the focusRequester.\n';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.c4p_1.pn()) {
      // Inline function 'androidx.compose.ui.focus.FocusRequester.findFocusTarget.<anonymous>' call
      var message_1 = '\n   FocusRequester is not initialized. Here are some possible fixes:\n\n   1. Remember the FocusRequester: val focusRequester = remember { FocusRequester() }\n   2. Did you forget to add a Modifier.focusRequester() ?\n   3. Are you attempting to request focus during composition? Focus requests should be made in\n   response to some event. Eg Modifier.clickable { focusRequester.requestFocus() }\n';
      throw IllegalStateException_init_$Create$(toString(message_1));
    }
    var success = false;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    var this_0 = this.c4p_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        $l$block: {
          // Inline function 'androidx.compose.ui.focus.FocusRequester.findFocusTarget.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.visitChildren' call
          var this_1 = content[i];
          // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
          var type = _NodeKind___init__impl__ojsprp(1024);
          var mask = _NodeKind___get_mask__impl__1uopb6(type);
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!this_1.c4j().b4j_1) {
            // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
            var message_2 = 'visitChildren called on an unattached node';
            throw IllegalStateException_init_$Create$(toString(message_2));
          }
          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
          // Inline function 'kotlin.arrayOfNulls' call
          var tmp$ret$5 = fillArrayVal(Array(16), null);
          var branches = new MutableVector(tmp$ret$5, 0);
          var child = this_1.c4j().u4i_1;
          if (child == null) {
            addLayoutNodeChildren$accessor$hxafa1(branches, this_1.c4j());
          } else {
            branches.q1q(child);
          }
          $l$loop: while (branches.pn()) {
            // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
            var tmp$ret$8 = branches.p1q_1 - 1 | 0;
            var branch = branches.m1(tmp$ret$8);
            if ((branch.s4i_1 & mask) === 0) {
              addLayoutNodeChildren$accessor$hxafa1(branches, branch);
              continue $l$loop;
            }
            var node = branch;
            $l$loop_1: while (!(node == null)) {
              if (!((node.r4i_1 & mask) === 0)) {
                // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
                // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                var stack = null;
                var node_0 = node;
                $l$loop_0: while (!(node_0 == null)) {
                  if (node_0 instanceof FocusTargetNode) {
                    // Inline function 'androidx.compose.ui.focus.FocusRequester.findFocusTarget.<anonymous>.<anonymous>' call
                    // Inline function 'androidx.compose.ui.focus.FocusRequester.focus.<anonymous>' call
                    var focusTarget = node_0;
                    var focusProperties = focusTarget.e4q();
                    var tmp_0;
                    if (focusProperties.j4p()) {
                      tmp_0 = requestFocus_0(focusTarget);
                    } else {
                      var tmp_1 = Companion_getInstance_14().g4n_1;
                      tmp_0 = findChildCorrespondingToFocusEnter(focusTarget, tmp_1, FocusRequester$focus$lambda);
                    }
                    if (tmp_0) {
                      success = true;
                      break $l$block;
                    }
                  } else {
                    var tmp_2;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      tmp_2 = node_0 instanceof DelegatingNode;
                    } else {
                      tmp_2 = false;
                    }
                    if (tmp_2) {
                      var count = 0;
                      // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                      var node_1 = node_0.b4m_1;
                      while (!(node_1 == null)) {
                        // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                        var next = node_1;
                        // Inline function 'androidx.compose.ui.Node.isKind' call
                        if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                          count = count + 1 | 0;
                          if (count === 1) {
                            node_0 = next;
                          } else {
                            var tmp1_elvis_lhs = stack;
                            var tmp_3;
                            if (tmp1_elvis_lhs == null) {
                              // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                              // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                              // Inline function 'kotlin.arrayOfNulls' call
                              var tmp$ret$13 = fillArrayVal(Array(16), null);
                              tmp_3 = new MutableVector(tmp$ret$13, 0);
                            } else {
                              tmp_3 = tmp1_elvis_lhs;
                            }
                            stack = tmp_3;
                            var theNode = node_0;
                            if (!(theNode == null)) {
                              var tmp2_safe_receiver = stack;
                              if (tmp2_safe_receiver == null)
                                null;
                              else
                                tmp2_safe_receiver.q1q(theNode);
                              node_0 = null;
                            }
                            var tmp3_safe_receiver = stack;
                            if (tmp3_safe_receiver == null)
                              null;
                            else
                              tmp3_safe_receiver.q1q(next);
                          }
                        }
                        node_1 = node_1.u4i_1;
                      }
                      if (count === 1) {
                        continue $l$loop_0;
                      }
                    }
                  }
                  node_0 = pop$accessor$hxafa1(stack);
                }
                break $l$loop_1;
              }
              node = node.u4i_1;
            }
          }
        }
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return success;
  };
  function FocusRequesterModifier() {
  }
  var FocusStateImpl_Active_instance;
  var FocusStateImpl_ActiveParent_instance;
  var FocusStateImpl_Captured_instance;
  var FocusStateImpl_Inactive_instance;
  var FocusStateImpl_entriesInitialized;
  function FocusStateImpl_initEntries() {
    if (FocusStateImpl_entriesInitialized)
      return Unit_instance;
    FocusStateImpl_entriesInitialized = true;
    FocusStateImpl_Active_instance = new FocusStateImpl('Active', 0);
    FocusStateImpl_ActiveParent_instance = new FocusStateImpl('ActiveParent', 1);
    FocusStateImpl_Captured_instance = new FocusStateImpl('Captured', 2);
    FocusStateImpl_Inactive_instance = new FocusStateImpl('Inactive', 3);
  }
  function FocusStateImpl(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  protoOf(FocusStateImpl).i4o = function () {
    var tmp;
    switch (this.t9_1) {
      case 2:
      case 0:
        tmp = true;
        break;
      case 1:
      case 3:
        tmp = false;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(FocusStateImpl).j4o = function () {
    var tmp;
    switch (this.t9_1) {
      case 0:
      case 1:
      case 2:
        tmp = true;
        break;
      case 3:
        tmp = false;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  function FocusStateImpl_Active_getInstance() {
    FocusStateImpl_initEntries();
    return FocusStateImpl_Active_instance;
  }
  function FocusStateImpl_ActiveParent_getInstance() {
    FocusStateImpl_initEntries();
    return FocusStateImpl_ActiveParent_instance;
  }
  function FocusStateImpl_Inactive_getInstance() {
    FocusStateImpl_initEntries();
    return FocusStateImpl_Inactive_instance;
  }
  function FocusTargetNode$invalidateFocus$lambda($focusProperties, this$0) {
    return function () {
      $focusProperties._v = this$0.e4q();
      return Unit_instance;
    };
  }
  function FocusTargetNode() {
    Node.call(this);
    this.p4m_1 = false;
    this.q4m_1 = false;
    this.r4m_1 = FocusStateImpl_Inactive_getInstance();
    this.s4m_1 = 0;
  }
  protoOf(FocusTargetNode).z4o = function (value) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    requireTransactionManager(this).g4q(this, value);
  };
  protoOf(FocusTargetNode).n4n = function () {
    var tmp0_safe_receiver = get_focusTransactionManager(this);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.focus.FocusTargetNode.<get-focusState>.<anonymous>' call
      tmp = tmp0_safe_receiver.h4q(this);
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? this.r4m_1 : tmp1_elvis_lhs;
  };
  protoOf(FocusTargetNode).t4m = function () {
    return this.i4q(get_ModifierLocalBeyondBoundsLayout());
  };
  protoOf(FocusTargetNode).j4q = function () {
    var previousFocusState = this.n4n();
    this.t4n();
    if (!previousFocusState.equals(this.n4n())) {
      refreshFocusEventNodes(this);
    }
  };
  protoOf(FocusTargetNode).m4j = function () {
    switch (this.n4n().t9_1) {
      case 0:
      case 2:
        requireOwner(this).l4n().k4o(true);
        break;
      case 1:
        this.k4q();
        // Inline function 'androidx.compose.ui.focus.FocusTransactionManager.withNewTransaction' call

        var this_0 = requireTransactionManager(this);
        var tmp;
        try {
          if (this_0.u4o_1) {
            cancelTransaction(this_0);
          }
          beginTransaction(this_0);
          if (null == null)
            null;
          else {
            // Inline function 'kotlin.let' call
            // Inline function 'kotlin.contracts.contract' call
            this_0.t4o_1.q1q(null);
          }
          this.z4o(FocusStateImpl_Inactive_getInstance());
          tmp = Unit_instance;
        }finally {
          commitTransaction(this_0);
        }

        break;
      case 3:
        this.k4q();
        break;
    }
  };
  protoOf(FocusTargetNode).e4q = function () {
    var properties = new FocusPropertiesImpl();
    $l$block: {
      // Inline function 'androidx.compose.ui.node.visitSelfAndAncestors' call
      // Inline function 'androidx.compose.ui.node.Nodes.FocusProperties' call
      var type = _NodeKind___init__impl__ojsprp(2048);
      // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
      var untilType = _NodeKind___init__impl__ojsprp(1024);
      var self_0 = this.c4j();
      // Inline function 'androidx.compose.ui.node.visitAncestors' call
      var mask = _NodeKind___get_mask__impl__1uopb6(type) | _NodeKind___get_mask__impl__1uopb6(untilType);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.c4j().b4j_1) {
        // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
        var message = 'visitAncestors called on an unattached node';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var node = true ? this.c4j() : this.c4j().t4i_1;
      var layout = requireLayoutNode(this);
      while (!(layout == null)) {
        var head = layout.d4l_1.y4j_1;
        if (!((head.s4i_1 & mask) === 0)) {
          while (!(node == null)) {
            if (!((node.r4i_1 & mask) === 0)) {
              // Inline function 'androidx.compose.ui.node.visitSelfAndAncestors.<anonymous>' call
              var it = node;
              var tmp;
              if (!(it === self_0)) {
                // Inline function 'androidx.compose.ui.Node.isKind' call
                tmp = !((it.r4i_1 & _NodeKind___get_mask__impl__1uopb6(untilType)) === 0);
              } else {
                tmp = false;
              }
              if (tmp) {
                break $l$block;
              }
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((it.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                var stack = null;
                var node_0 = it;
                $l$loop: while (!(node_0 == null)) {
                  if (!(node_0 == null) ? isInterface(node_0, FocusPropertiesModifierNode) : false) {
                    // Inline function 'androidx.compose.ui.focus.FocusTargetNode.fetchFocusProperties.<anonymous>' call
                    node_0.d4q(properties);
                  } else {
                    var tmp_0;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      tmp_0 = node_0 instanceof DelegatingNode;
                    } else {
                      tmp_0 = false;
                    }
                    if (tmp_0) {
                      var count = 0;
                      // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                      var node_1 = node_0.b4m_1;
                      while (!(node_1 == null)) {
                        // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                        var next = node_1;
                        // Inline function 'androidx.compose.ui.Node.isKind' call
                        if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                          count = count + 1 | 0;
                          if (count === 1) {
                            node_0 = next;
                          } else {
                            var tmp1_elvis_lhs = stack;
                            var tmp_1;
                            if (tmp1_elvis_lhs == null) {
                              // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                              // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                              // Inline function 'kotlin.arrayOfNulls' call
                              var tmp$ret$8 = fillArrayVal(Array(16), null);
                              tmp_1 = new MutableVector(tmp$ret$8, 0);
                            } else {
                              tmp_1 = tmp1_elvis_lhs;
                            }
                            stack = tmp_1;
                            var theNode = node_0;
                            if (!(theNode == null)) {
                              var tmp2_safe_receiver = stack;
                              if (tmp2_safe_receiver == null)
                                null;
                              else
                                tmp2_safe_receiver.q1q(theNode);
                              node_0 = null;
                            }
                            var tmp3_safe_receiver = stack;
                            if (tmp3_safe_receiver == null)
                              null;
                            else
                              tmp3_safe_receiver.q1q(next);
                          }
                        }
                        node_1 = node_1.u4i_1;
                      }
                      if (count === 1) {
                        continue $l$loop;
                      }
                    }
                  }
                  node_0 = pop$accessor$hxafa1(stack);
                }
              }
            }
            node = node.t4i_1;
          }
        }
        layout = layout.pp();
        var tmp0_safe_receiver = layout;
        var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
        node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
      }
    }
    return properties;
  };
  protoOf(FocusTargetNode).l4q = function () {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = requireTransactionManager(this);
    var tmp = this;
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      var value = $this$with.h4q(this);
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'androidx.compose.ui.focus.FocusTargetNode.commitFocusState.<anonymous>.<anonymous>' call
        var message = 'committing a node that was not updated in the current transaction';
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    tmp.r4m_1 = tmp$ret$1;
  };
  protoOf(FocusTargetNode).t4n = function () {
    switch (this.n4n().t9_1) {
      case 0:
      case 2:
        var focusProperties = {_v: null};
        observeReads(this, FocusTargetNode$invalidateFocus$lambda(focusProperties, this));
        var tmp;
        if (focusProperties._v == null) {
          throwUninitializedPropertyAccessException('focusProperties');
        } else {
          tmp = focusProperties._v;
        }

        if (!tmp.j4p()) {
          requireOwner(this).l4n().k4o(true);
        }

        break;
      case 1:
      case 3:
        break;
    }
  };
  protoOf(FocusTargetNode).k4q = function () {
    // Inline function 'androidx.compose.ui.node.dispatchForKind' call
    var this_0 = this.p4i_1;
    // Inline function 'androidx.compose.ui.node.Nodes.FocusEvent' call
    var kind = _NodeKind___init__impl__ojsprp(4096);
    var stack = null;
    var node = this_0;
    $l$loop: while (!(node == null)) {
      if (!(node == null) ? isInterface(node, FocusEventModifierNode) : false) {
        // Inline function 'androidx.compose.ui.focus.FocusTargetNode.scheduleInvalidationForFocusEvents.<anonymous>' call
        var eventNode = node;
        invalidateFocusEvent(eventNode);
      } else {
        var tmp;
        // Inline function 'androidx.compose.ui.Node.isKind' call
        if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
          tmp = node instanceof DelegatingNode;
        } else {
          tmp = false;
        }
        if (tmp) {
          var count = 0;
          // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
          var node_0 = node.b4m_1;
          while (!(node_0 == null)) {
            // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
            var next = node_0;
            // Inline function 'androidx.compose.ui.Node.isKind' call
            if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
              count = count + 1 | 0;
              if (count === 1) {
                node = next;
              } else {
                var tmp1_elvis_lhs = stack;
                var tmp_0;
                if (tmp1_elvis_lhs == null) {
                  // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                  // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                  // Inline function 'kotlin.arrayOfNulls' call
                  var tmp$ret$3 = fillArrayVal(Array(16), null);
                  tmp_0 = new MutableVector(tmp$ret$3, 0);
                } else {
                  tmp_0 = tmp1_elvis_lhs;
                }
                stack = tmp_0;
                var theNode = node;
                if (!(theNode == null)) {
                  var tmp2_safe_receiver = stack;
                  if (tmp2_safe_receiver == null)
                    null;
                  else
                    tmp2_safe_receiver.q1q(theNode);
                  node = null;
                }
                var tmp3_safe_receiver = stack;
                if (tmp3_safe_receiver == null)
                  null;
                else
                  tmp3_safe_receiver.q1q(next);
              }
            }
            node_0 = node_0.u4i_1;
          }
          if (count === 1) {
            continue $l$loop;
          }
        }
      }
      node = pop$accessor$hxafa1(stack);
    }
    // Inline function 'androidx.compose.ui.node.visitAncestors' call
    // Inline function 'androidx.compose.ui.node.NodeKind.or' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusEvent' call
    var this_1 = _NodeKind___init__impl__ojsprp(4096);
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var other = _NodeKind___init__impl__ojsprp(1024);
    var mask = _NodeKind___get_mask__impl__1uopb6(this_1) | _NodeKind___get_mask__impl__1uopb6(other);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
      var message = 'visitAncestors called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var node_1 = false ? this.c4j() : this.c4j().t4i_1;
    var layout = requireLayoutNode(this);
    while (!(layout == null)) {
      var head = layout.d4l_1.y4j_1;
      if (!((head.s4i_1 & mask) === 0)) {
        while (!(node_1 == null)) {
          if (!((node_1.r4i_1 & mask) === 0)) {
            $l$block: {
              // Inline function 'androidx.compose.ui.focus.FocusTargetNode.scheduleInvalidationForFocusEvents.<anonymous>' call
              var it = node_1;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
              var kind_0 = _NodeKind___init__impl__ojsprp(1024);
              if (!((it.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_0)) === 0)) {
                break $l$block;
              }
              if (it.b4j_1) {
                // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                // Inline function 'androidx.compose.ui.node.Nodes.FocusEvent' call
                var kind_1 = _NodeKind___init__impl__ojsprp(4096);
                var stack_0 = null;
                var node_2 = it;
                $l$loop_0: while (!(node_2 == null)) {
                  if (!(node_2 == null) ? isInterface(node_2, FocusEventModifierNode) : false) {
                    // Inline function 'androidx.compose.ui.focus.FocusTargetNode.scheduleInvalidationForFocusEvents.<anonymous>.<anonymous>' call
                    var eventNode_0 = node_2;
                    invalidateFocusEvent(eventNode_0);
                  } else {
                    var tmp_1;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((node_2.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_1)) === 0)) {
                      tmp_1 = node_2 instanceof DelegatingNode;
                    } else {
                      tmp_1 = false;
                    }
                    if (tmp_1) {
                      var count_0 = 0;
                      // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                      var node_3 = node_2.b4m_1;
                      while (!(node_3 == null)) {
                        // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                        var next_0 = node_3;
                        // Inline function 'androidx.compose.ui.Node.isKind' call
                        if (!((next_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_1)) === 0)) {
                          count_0 = count_0 + 1 | 0;
                          if (count_0 === 1) {
                            node_2 = next_0;
                          } else {
                            var tmp1_elvis_lhs_0 = stack_0;
                            var tmp_2;
                            if (tmp1_elvis_lhs_0 == null) {
                              // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                              // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                              // Inline function 'kotlin.arrayOfNulls' call
                              var tmp$ret$16 = fillArrayVal(Array(16), null);
                              tmp_2 = new MutableVector(tmp$ret$16, 0);
                            } else {
                              tmp_2 = tmp1_elvis_lhs_0;
                            }
                            stack_0 = tmp_2;
                            var theNode_0 = node_2;
                            if (!(theNode_0 == null)) {
                              var tmp2_safe_receiver_0 = stack_0;
                              if (tmp2_safe_receiver_0 == null)
                                null;
                              else
                                tmp2_safe_receiver_0.q1q(theNode_0);
                              node_2 = null;
                            }
                            var tmp3_safe_receiver_0 = stack_0;
                            if (tmp3_safe_receiver_0 == null)
                              null;
                            else
                              tmp3_safe_receiver_0.q1q(next_0);
                          }
                        }
                        node_3 = node_3.u4i_1;
                      }
                      if (count_0 === 1) {
                        continue $l$loop_0;
                      }
                    }
                  }
                  node_2 = pop$accessor$hxafa1(stack_0);
                }
              }
            }
          }
          node_1 = node_1.t4i_1;
        }
      }
      layout = layout.pp();
      var tmp0_safe_receiver = layout;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
      node_1 = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
    }
  };
  function invalidateFocusTarget(_this__u8e3s4) {
    requireOwner(_this__u8e3s4).l4n().u4n(_this__u8e3s4);
  }
  function get_focusTransactionManager(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.p4i_1.w4i_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o4r();
    var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.n4k_1;
    var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.l4n();
    return tmp3_safe_receiver == null ? null : tmp3_safe_receiver.v4o();
  }
  function requireTransactionManager(_this__u8e3s4) {
    return requireOwner(_this__u8e3s4).l4n().v4o();
  }
  function beginTransaction($this) {
    $this.u4o_1 = true;
  }
  function commitTransaction($this) {
    var tmp0_iterator = $this.s4o_1.k2().o();
    while (tmp0_iterator.d1()) {
      var focusTargetNode = tmp0_iterator.f1();
      focusTargetNode.l4q();
    }
    $this.s4o_1.h1();
    $this.u4o_1 = false;
  }
  function cancelTransaction($this) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    var this_0 = $this.t4o_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.focus.FocusTransactionManager.cancelTransaction.<anonymous>' call
        content[i]();
        i = i + 1 | 0;
      }
       while (i < size);
    }
    $this.t4o_1.h1();
    $this.s4o_1.h1();
    $this.u4o_1 = false;
  }
  function FocusTransactionManager() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.s4o_1 = LinkedHashMap_init_$Create$();
    var tmp_0 = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$1 = fillArrayVal(Array(16), null);
    tmp_0.t4o_1 = new MutableVector(tmp$ret$1, 0);
    this.u4o_1 = false;
  }
  protoOf(FocusTransactionManager).g4q = function (_this__u8e3s4, value) {
    // Inline function 'kotlin.collections.set' call
    var this_0 = this.s4o_1;
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'androidx.compose.ui.focus.FocusTransactionManager.<set-uncommittedFocusState>.<anonymous>' call
        var message = 'requires a non-null focus state';
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    var value_0 = tmp$ret$1;
    this_0.n2(_this__u8e3s4, value_0);
  };
  protoOf(FocusTransactionManager).h4q = function (_this__u8e3s4) {
    return this.s4o_1.x2(_this__u8e3s4);
  };
  function requestFocus_0(_this__u8e3s4) {
    // Inline function 'androidx.compose.ui.focus.FocusTransactionManager.withNewTransaction' call
    var this_0 = requireTransactionManager(_this__u8e3s4);
    var tmp;
    try {
      if (this_0.u4o_1) {
        cancelTransaction(this_0);
      }
      beginTransaction(this_0);
      if (null == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        this_0.t4o_1.q1q(null);
      }
      // Inline function 'androidx.compose.ui.focus.requestFocus.<anonymous>' call
      var tmp_0;
      switch (performCustomRequestFocus(_this__u8e3s4, Companion_getInstance_14().g4n_1).t9_1) {
        case 0:
          tmp_0 = performRequestFocus(_this__u8e3s4);
          break;
        case 2:
          tmp_0 = true;
          break;
        case 1:
        case 3:
          tmp_0 = false;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      tmp = tmp_0;
    }finally {
      commitTransaction(this_0);
    }
    return tmp;
  }
  var CustomDestinationResult_None_instance;
  var CustomDestinationResult_Cancelled_instance;
  var CustomDestinationResult_Redirected_instance;
  var CustomDestinationResult_RedirectCancelled_instance;
  var CustomDestinationResult_entriesInitialized;
  function CustomDestinationResult_initEntries() {
    if (CustomDestinationResult_entriesInitialized)
      return Unit_instance;
    CustomDestinationResult_entriesInitialized = true;
    CustomDestinationResult_None_instance = new CustomDestinationResult('None', 0);
    CustomDestinationResult_Cancelled_instance = new CustomDestinationResult('Cancelled', 1);
    CustomDestinationResult_Redirected_instance = new CustomDestinationResult('Redirected', 2);
    CustomDestinationResult_RedirectCancelled_instance = new CustomDestinationResult('RedirectCancelled', 3);
  }
  function CustomDestinationResult(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function performCustomRequestFocus(_this__u8e3s4, focusDirection) {
    switch (_this__u8e3s4.n4n().t9_1) {
      case 0:
      case 2:
        return CustomDestinationResult_None_getInstance();
      case 1:
        return performCustomClearFocus(requireActiveChild(_this__u8e3s4), focusDirection);
      case 3:
        var tmp$ret$2;
        $l$block: {
          // Inline function 'androidx.compose.ui.node.nearestAncestor' call
          // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
          // Inline function 'androidx.compose.ui.node.visitAncestors' call
          var type = _NodeKind___init__impl__ojsprp(1024);
          var mask = _NodeKind___get_mask__impl__1uopb6(type);
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!_this__u8e3s4.c4j().b4j_1) {
            // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
            var message = 'visitAncestors called on an unattached node';
            throw IllegalStateException_init_$Create$(toString(message));
          }
          var node = false ? _this__u8e3s4.c4j() : _this__u8e3s4.c4j().t4i_1;
          var layout = requireLayoutNode(_this__u8e3s4);
          while (!(layout == null)) {
            var head = layout.d4l_1.y4j_1;
            if (!((head.s4i_1 & mask) === 0)) {
              while (!(node == null)) {
                if (!((node.r4i_1 & mask) === 0)) {
                  // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
                  // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                  var stack = null;
                  var node_0 = node;
                  $l$loop: while (!(node_0 == null)) {
                    if (node_0 instanceof FocusTargetNode) {
                      // Inline function 'androidx.compose.ui.node.nearestAncestor.<anonymous>' call
                      tmp$ret$2 = node_0;
                      break $l$block;
                    } else {
                      var tmp;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                        tmp = node_0 instanceof DelegatingNode;
                      } else {
                        tmp = false;
                      }
                      if (tmp) {
                        var count = 0;
                        // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                        var node_1 = node_0.b4m_1;
                        while (!(node_1 == null)) {
                          // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                          var next = node_1;
                          // Inline function 'androidx.compose.ui.Node.isKind' call
                          if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                            count = count + 1 | 0;
                            if (count === 1) {
                              node_0 = next;
                            } else {
                              var tmp1_elvis_lhs = stack;
                              var tmp_0;
                              if (tmp1_elvis_lhs == null) {
                                // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                                // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                                // Inline function 'kotlin.arrayOfNulls' call
                                var tmp$ret$5 = fillArrayVal(Array(16), null);
                                tmp_0 = new MutableVector(tmp$ret$5, 0);
                              } else {
                                tmp_0 = tmp1_elvis_lhs;
                              }
                              stack = tmp_0;
                              var theNode = node_0;
                              if (!(theNode == null)) {
                                var tmp2_safe_receiver = stack;
                                if (tmp2_safe_receiver == null)
                                  null;
                                else
                                  tmp2_safe_receiver.q1q(theNode);
                                node_0 = null;
                              }
                              var tmp3_safe_receiver = stack;
                              if (tmp3_safe_receiver == null)
                                null;
                              else
                                tmp3_safe_receiver.q1q(next);
                            }
                          }
                          node_1 = node_1.u4i_1;
                        }
                        if (count === 1) {
                          continue $l$loop;
                        }
                      }
                    }
                    node_0 = pop$accessor$hxafa1(stack);
                  }
                }
                node = node.t4i_1;
              }
            }
            layout = layout.pp();
            var tmp0_safe_receiver = layout;
            var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
            node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
          }
          tmp$ret$2 = null;
        }

        var tmp1_elvis_lhs_0 = tmp$ret$2;
        var tmp_1;
        if (tmp1_elvis_lhs_0 == null) {
          return CustomDestinationResult_None_getInstance();
        } else {
          tmp_1 = tmp1_elvis_lhs_0;
        }

        var focusParent = tmp_1;
        var tmp_2;
        switch (focusParent.n4n().t9_1) {
          case 2:
            tmp_2 = CustomDestinationResult_Cancelled_getInstance();
            break;
          case 1:
            tmp_2 = performCustomRequestFocus(focusParent, focusDirection);
            break;
          case 0:
            tmp_2 = performCustomEnter(focusParent, focusDirection);
            break;
          case 3:
            // Inline function 'kotlin.takeUnless' call

            var this_0 = performCustomRequestFocus(focusParent, focusDirection);
            // Inline function 'kotlin.contracts.contract' call

            var tmp_3;
            // Inline function 'androidx.compose.ui.focus.performCustomRequestFocus.<anonymous>' call

            if (!this_0.equals(CustomDestinationResult_None_getInstance())) {
              tmp_3 = this_0;
            } else {
              tmp_3 = null;
            }

            var tmp3_elvis_lhs = tmp_3;
            tmp_2 = tmp3_elvis_lhs == null ? performCustomEnter(focusParent, focusDirection) : tmp3_elvis_lhs;
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }

        return tmp_2;
      default:
        noWhenBranchMatchedException();
        break;
    }
  }
  function performRequestFocus(_this__u8e3s4) {
    var tmp;
    switch (_this__u8e3s4.n4n().t9_1) {
      case 0:
      case 2:
        tmp = true;
        break;
      case 1:
        tmp = clearChildFocus(_this__u8e3s4) ? grantFocus(_this__u8e3s4) : false;
        break;
      case 3:
        var tmp$ret$2;
        $l$block: {
          // Inline function 'androidx.compose.ui.node.nearestAncestor' call
          // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
          // Inline function 'androidx.compose.ui.node.visitAncestors' call
          var type = _NodeKind___init__impl__ojsprp(1024);
          var mask = _NodeKind___get_mask__impl__1uopb6(type);
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!_this__u8e3s4.c4j().b4j_1) {
            // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
            var message = 'visitAncestors called on an unattached node';
            throw IllegalStateException_init_$Create$(toString(message));
          }
          var node = false ? _this__u8e3s4.c4j() : _this__u8e3s4.c4j().t4i_1;
          var layout = requireLayoutNode(_this__u8e3s4);
          while (!(layout == null)) {
            var head = layout.d4l_1.y4j_1;
            if (!((head.s4i_1 & mask) === 0)) {
              while (!(node == null)) {
                if (!((node.r4i_1 & mask) === 0)) {
                  // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
                  // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                  var stack = null;
                  var node_0 = node;
                  $l$loop: while (!(node_0 == null)) {
                    if (node_0 instanceof FocusTargetNode) {
                      // Inline function 'androidx.compose.ui.node.nearestAncestor.<anonymous>' call
                      tmp$ret$2 = node_0;
                      break $l$block;
                    } else {
                      var tmp_0;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                        tmp_0 = node_0 instanceof DelegatingNode;
                      } else {
                        tmp_0 = false;
                      }
                      if (tmp_0) {
                        var count = 0;
                        // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                        var node_1 = node_0.b4m_1;
                        while (!(node_1 == null)) {
                          // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                          var next = node_1;
                          // Inline function 'androidx.compose.ui.Node.isKind' call
                          if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                            count = count + 1 | 0;
                            if (count === 1) {
                              node_0 = next;
                            } else {
                              var tmp1_elvis_lhs = stack;
                              var tmp_1;
                              if (tmp1_elvis_lhs == null) {
                                // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                                // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                                // Inline function 'kotlin.arrayOfNulls' call
                                var tmp$ret$5 = fillArrayVal(Array(16), null);
                                tmp_1 = new MutableVector(tmp$ret$5, 0);
                              } else {
                                tmp_1 = tmp1_elvis_lhs;
                              }
                              stack = tmp_1;
                              var theNode = node_0;
                              if (!(theNode == null)) {
                                var tmp2_safe_receiver = stack;
                                if (tmp2_safe_receiver == null)
                                  null;
                                else
                                  tmp2_safe_receiver.q1q(theNode);
                                node_0 = null;
                              }
                              var tmp3_safe_receiver = stack;
                              if (tmp3_safe_receiver == null)
                                null;
                              else
                                tmp3_safe_receiver.q1q(next);
                            }
                          }
                          node_1 = node_1.u4i_1;
                        }
                        if (count === 1) {
                          continue $l$loop;
                        }
                      }
                    }
                    node_0 = pop$accessor$hxafa1(stack);
                  }
                }
                node = node.t4i_1;
              }
            }
            layout = layout.pp();
            var tmp0_safe_receiver = layout;
            var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
            node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
          }
          tmp$ret$2 = null;
        }

        var parent = tmp$ret$2;
        var tmp_2;
        if (!(parent == null)) {
          var prevState = parent.n4n();
          var success = requestFocusForChild(parent, _this__u8e3s4);
          if (success ? !(prevState === parent.n4n()) : false) {
            refreshFocusEventNodes(parent);
          }
          tmp_2 = success;
        } else {
          tmp_2 = requestFocusForOwner(_this__u8e3s4) ? grantFocus(_this__u8e3s4) : false;
        }

        tmp = tmp_2;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var success_0 = tmp;
    if (success_0) {
      refreshFocusEventNodes(_this__u8e3s4);
    }
    return success_0;
  }
  function performCustomClearFocus(_this__u8e3s4, focusDirection) {
    var tmp;
    switch (_this__u8e3s4.n4n().t9_1) {
      case 0:
      case 3:
        tmp = CustomDestinationResult_None_getInstance();
        break;
      case 2:
        tmp = CustomDestinationResult_Cancelled_getInstance();
        break;
      case 1:
        // Inline function 'kotlin.takeUnless' call

        var this_0 = performCustomClearFocus(requireActiveChild(_this__u8e3s4), focusDirection);
        // Inline function 'kotlin.contracts.contract' call

        var tmp_0;
        // Inline function 'androidx.compose.ui.focus.performCustomClearFocus.<anonymous>' call

        if (!this_0.equals(CustomDestinationResult_None_getInstance())) {
          tmp_0 = this_0;
        } else {
          tmp_0 = null;
        }

        var tmp1_elvis_lhs = tmp_0;
        tmp = tmp1_elvis_lhs == null ? performCustomExit(_this__u8e3s4, focusDirection) : tmp1_elvis_lhs;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function requireActiveChild(_this__u8e3s4) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.requireNotNull' call
      var value = get_activeChild(_this__u8e3s4);
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'androidx.compose.ui.focus.requireActiveChild.<anonymous>' call
        var message = 'ActiveParent with no focused child';
        throw IllegalArgumentException_init_$Create$(toString(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    return tmp$ret$1;
  }
  function performCustomEnter(_this__u8e3s4, focusDirection) {
    // Inline function 'androidx.compose.ui.focus.FocusTargetNode.fetchCustomEnter' call
    if (!_this__u8e3s4.q4m_1) {
      _this__u8e3s4.q4m_1 = true;
      try {
        // Inline function 'kotlin.also' call
        var this_0 = _this__u8e3s4.e4q().q4p()(new FocusDirection(focusDirection));
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.focus.FocusTargetNode.fetchCustomEnter.<anonymous>' call
        if (!(this_0 === Companion_getInstance_15().e4p_1)) {
          // Inline function 'androidx.compose.ui.focus.performCustomEnter.<anonymous>' call
          if (this_0 === Companion_getInstance_15().f4p_1)
            return CustomDestinationResult_Cancelled_getInstance();
          return this_0.d4p() ? CustomDestinationResult_Redirected_getInstance() : CustomDestinationResult_RedirectCancelled_getInstance();
        }
      }finally {
        _this__u8e3s4.q4m_1 = false;
      }
    }
    return CustomDestinationResult_None_getInstance();
  }
  function clearChildFocus(_this__u8e3s4, forced, refreshFocusEvents) {
    forced = forced === VOID ? false : forced;
    refreshFocusEvents = refreshFocusEvents === VOID ? true : refreshFocusEvents;
    var tmp0_safe_receiver = get_activeChild(_this__u8e3s4);
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : clearFocus(tmp0_safe_receiver, forced, refreshFocusEvents);
    return tmp1_elvis_lhs == null ? true : tmp1_elvis_lhs;
  }
  function grantFocus(_this__u8e3s4) {
    observeReads(_this__u8e3s4, grantFocus$lambda(_this__u8e3s4));
    switch (_this__u8e3s4.n4n().t9_1) {
      case 3:
      case 1:
        _this__u8e3s4.z4o(FocusStateImpl_Active_getInstance());
        break;
      case 0:
      case 2:
        break;
    }
    return true;
  }
  function requestFocusForChild(_this__u8e3s4, childNode) {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'androidx.compose.ui.node.nearestAncestor' call
      // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
      // Inline function 'androidx.compose.ui.node.visitAncestors' call
      var type = _NodeKind___init__impl__ojsprp(1024);
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!childNode.c4j().b4j_1) {
        // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
        var message = 'visitAncestors called on an unattached node';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var node = false ? childNode.c4j() : childNode.c4j().t4i_1;
      var layout = requireLayoutNode(childNode);
      while (!(layout == null)) {
        var head = layout.d4l_1.y4j_1;
        if (!((head.s4i_1 & mask) === 0)) {
          while (!(node == null)) {
            if (!((node.r4i_1 & mask) === 0)) {
              // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
              // Inline function 'androidx.compose.ui.node.dispatchForKind' call
              var stack = null;
              var node_0 = node;
              $l$loop: while (!(node_0 == null)) {
                if (node_0 instanceof FocusTargetNode) {
                  // Inline function 'androidx.compose.ui.node.nearestAncestor.<anonymous>' call
                  tmp$ret$2 = node_0;
                  break $l$block;
                } else {
                  var tmp;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    tmp = node_0 instanceof DelegatingNode;
                  } else {
                    tmp = false;
                  }
                  if (tmp) {
                    var count = 0;
                    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                    var node_1 = node_0.b4m_1;
                    while (!(node_1 == null)) {
                      // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                      var next = node_1;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                        count = count + 1 | 0;
                        if (count === 1) {
                          node_0 = next;
                        } else {
                          var tmp1_elvis_lhs = stack;
                          var tmp_0;
                          if (tmp1_elvis_lhs == null) {
                            // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                            // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                            // Inline function 'kotlin.arrayOfNulls' call
                            var tmp$ret$5 = fillArrayVal(Array(16), null);
                            tmp_0 = new MutableVector(tmp$ret$5, 0);
                          } else {
                            tmp_0 = tmp1_elvis_lhs;
                          }
                          stack = tmp_0;
                          var theNode = node_0;
                          if (!(theNode == null)) {
                            var tmp2_safe_receiver = stack;
                            if (tmp2_safe_receiver == null)
                              null;
                            else
                              tmp2_safe_receiver.q1q(theNode);
                            node_0 = null;
                          }
                          var tmp3_safe_receiver = stack;
                          if (tmp3_safe_receiver == null)
                            null;
                          else
                            tmp3_safe_receiver.q1q(next);
                        }
                      }
                      node_1 = node_1.u4i_1;
                    }
                    if (count === 1) {
                      continue $l$loop;
                    }
                  }
                }
                node_0 = pop$accessor$hxafa1(stack);
              }
            }
            node = node.t4i_1;
          }
        }
        layout = layout.pp();
        var tmp0_safe_receiver = layout;
        var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
        node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
      }
      tmp$ret$2 = null;
    }
    if (!equals(tmp$ret$2, _this__u8e3s4)) {
      // Inline function 'kotlin.error' call
      var message_0 = 'Non child node cannot request focus.';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    var tmp_1;
    switch (_this__u8e3s4.n4n().t9_1) {
      case 0:
        // Inline function 'kotlin.also' call

        var this_0 = grantFocus(childNode);
        // Inline function 'kotlin.contracts.contract' call

        // Inline function 'androidx.compose.ui.focus.requestFocusForChild.<anonymous>' call

        if (this_0) {
          _this__u8e3s4.z4o(FocusStateImpl_ActiveParent_getInstance());
        }

        tmp_1 = this_0;
        break;
      case 1:
        requireActiveChild(_this__u8e3s4);
        tmp_1 = clearChildFocus(_this__u8e3s4) ? grantFocus(childNode) : false;
        break;
      case 3:
        var tmp$ret$12;
        $l$block_0: {
          // Inline function 'androidx.compose.ui.node.nearestAncestor' call
          // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
          // Inline function 'androidx.compose.ui.node.visitAncestors' call
          var type_0 = _NodeKind___init__impl__ojsprp(1024);
          var mask_0 = _NodeKind___get_mask__impl__1uopb6(type_0);
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!_this__u8e3s4.c4j().b4j_1) {
            // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
            var message_1 = 'visitAncestors called on an unattached node';
            throw IllegalStateException_init_$Create$(toString(message_1));
          }
          var node_2 = false ? _this__u8e3s4.c4j() : _this__u8e3s4.c4j().t4i_1;
          var layout_0 = requireLayoutNode(_this__u8e3s4);
          while (!(layout_0 == null)) {
            var head_0 = layout_0.d4l_1.y4j_1;
            if (!((head_0.s4i_1 & mask_0) === 0)) {
              while (!(node_2 == null)) {
                if (!((node_2.r4i_1 & mask_0) === 0)) {
                  // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
                  // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                  var stack_0 = null;
                  var node_3 = node_2;
                  $l$loop_0: while (!(node_3 == null)) {
                    if (node_3 instanceof FocusTargetNode) {
                      // Inline function 'androidx.compose.ui.node.nearestAncestor.<anonymous>' call
                      tmp$ret$12 = node_3;
                      break $l$block_0;
                    } else {
                      var tmp_2;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((node_3.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                        tmp_2 = node_3 instanceof DelegatingNode;
                      } else {
                        tmp_2 = false;
                      }
                      if (tmp_2) {
                        var count_0 = 0;
                        // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                        var node_4 = node_3.b4m_1;
                        while (!(node_4 == null)) {
                          // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                          var next_0 = node_4;
                          // Inline function 'androidx.compose.ui.Node.isKind' call
                          if (!((next_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type_0)) === 0)) {
                            count_0 = count_0 + 1 | 0;
                            if (count_0 === 1) {
                              node_3 = next_0;
                            } else {
                              var tmp1_elvis_lhs_0 = stack_0;
                              var tmp_3;
                              if (tmp1_elvis_lhs_0 == null) {
                                // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                                // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                                // Inline function 'kotlin.arrayOfNulls' call
                                var tmp$ret$15 = fillArrayVal(Array(16), null);
                                tmp_3 = new MutableVector(tmp$ret$15, 0);
                              } else {
                                tmp_3 = tmp1_elvis_lhs_0;
                              }
                              stack_0 = tmp_3;
                              var theNode_0 = node_3;
                              if (!(theNode_0 == null)) {
                                var tmp2_safe_receiver_0 = stack_0;
                                if (tmp2_safe_receiver_0 == null)
                                  null;
                                else
                                  tmp2_safe_receiver_0.q1q(theNode_0);
                                node_3 = null;
                              }
                              var tmp3_safe_receiver_0 = stack_0;
                              if (tmp3_safe_receiver_0 == null)
                                null;
                              else
                                tmp3_safe_receiver_0.q1q(next_0);
                            }
                          }
                          node_4 = node_4.u4i_1;
                        }
                        if (count_0 === 1) {
                          continue $l$loop_0;
                        }
                      }
                    }
                    node_3 = pop$accessor$hxafa1(stack_0);
                  }
                }
                node_2 = node_2.t4i_1;
              }
            }
            layout_0 = layout_0.pp();
            var tmp0_safe_receiver_0 = layout_0;
            var tmp1_safe_receiver_0 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.d4l_1;
            node_2 = tmp1_safe_receiver_0 == null ? null : tmp1_safe_receiver_0.x4j_1;
          }
          tmp$ret$12 = null;
        }

        var focusParent = tmp$ret$12;
        var tmp_4;
        if (focusParent == null ? requestFocusForOwner(_this__u8e3s4) : false) {
          _this__u8e3s4.z4o(FocusStateImpl_Active_getInstance());
          tmp_4 = requestFocusForChild(_this__u8e3s4, childNode);
        } else if (!(focusParent == null) ? requestFocusForChild(focusParent, _this__u8e3s4) : false) {
          // Inline function 'kotlin.also' call
          var this_1 = requestFocusForChild(_this__u8e3s4, childNode);
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.ui.focus.requestFocusForChild.<anonymous>' call
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!_this__u8e3s4.n4n().equals(FocusStateImpl_ActiveParent_getInstance())) {
            // Inline function 'androidx.compose.ui.focus.requestFocusForChild.<anonymous>.<anonymous>' call
            var message_2 = 'Deactivated node is focused';
            throw IllegalStateException_init_$Create$(toString(message_2));
          }
          if (this_1) {
            refreshFocusEventNodes(focusParent);
          }
          tmp_4 = this_1;
        } else {
          tmp_4 = false;
        }

        tmp_1 = tmp_4;
        break;
      case 2:
        tmp_1 = false;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp_1;
  }
  function requestFocusForOwner(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.w4i_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o4r();
    var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.n4k_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.p4r();
    var tmp;
    if (tmp3_elvis_lhs == null) {
      var message = 'Owner not initialized.';
      throw IllegalStateException_init_$Create$(toString(message));
    } else {
      tmp = tmp3_elvis_lhs;
    }
    return tmp;
  }
  function performCustomExit(_this__u8e3s4, focusDirection) {
    // Inline function 'androidx.compose.ui.focus.FocusTargetNode.fetchCustomExit' call
    if (!_this__u8e3s4.p4m_1) {
      _this__u8e3s4.p4m_1 = true;
      try {
        // Inline function 'kotlin.also' call
        var this_0 = _this__u8e3s4.e4q().r4p()(new FocusDirection(focusDirection));
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.focus.FocusTargetNode.fetchCustomExit.<anonymous>' call
        if (!(this_0 === Companion_getInstance_15().e4p_1)) {
          // Inline function 'androidx.compose.ui.focus.performCustomExit.<anonymous>' call
          if (this_0 === Companion_getInstance_15().f4p_1)
            return CustomDestinationResult_Cancelled_getInstance();
          return this_0.d4p() ? CustomDestinationResult_Redirected_getInstance() : CustomDestinationResult_RedirectCancelled_getInstance();
        }
      }finally {
        _this__u8e3s4.p4m_1 = false;
      }
    }
    return CustomDestinationResult_None_getInstance();
  }
  function clearFocus(_this__u8e3s4, forced, refreshFocusEvents) {
    forced = forced === VOID ? false : forced;
    var tmp;
    switch (_this__u8e3s4.n4n().t9_1) {
      case 0:
        _this__u8e3s4.z4o(FocusStateImpl_Inactive_getInstance());
        if (refreshFocusEvents) {
          refreshFocusEventNodes(_this__u8e3s4);
        }

        tmp = true;
        break;
      case 1:
        var tmp_0;
        if (clearChildFocus(_this__u8e3s4, forced, refreshFocusEvents)) {
          _this__u8e3s4.z4o(FocusStateImpl_Inactive_getInstance());
          if (refreshFocusEvents) {
            refreshFocusEventNodes(_this__u8e3s4);
          }
          tmp_0 = true;
        } else {
          tmp_0 = false;
        }

        tmp = tmp_0;
        break;
      case 2:
        if (forced) {
          _this__u8e3s4.z4o(FocusStateImpl_Inactive_getInstance());
          if (refreshFocusEvents) {
            refreshFocusEventNodes(_this__u8e3s4);
          }
        }

        tmp = forced;
        break;
      case 3:
        tmp = true;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function grantFocus$lambda($this_grantFocus) {
    return function () {
      $this_grantFocus.e4q();
      return Unit_instance;
    };
  }
  function CustomDestinationResult_None_getInstance() {
    CustomDestinationResult_initEntries();
    return CustomDestinationResult_None_instance;
  }
  function CustomDestinationResult_Cancelled_getInstance() {
    CustomDestinationResult_initEntries();
    return CustomDestinationResult_Cancelled_instance;
  }
  function CustomDestinationResult_Redirected_getInstance() {
    CustomDestinationResult_initEntries();
    return CustomDestinationResult_Redirected_instance;
  }
  function CustomDestinationResult_RedirectCancelled_getInstance() {
    CustomDestinationResult_initEntries();
    return CustomDestinationResult_RedirectCancelled_instance;
  }
  function get_activeChild(_this__u8e3s4) {
    if (!_this__u8e3s4.p4i_1.b4j_1)
      return null;
    // Inline function 'androidx.compose.ui.node.visitChildren' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
      var message = 'visitChildren called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$2 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$2, 0);
    var child = _this__u8e3s4.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
    } else {
      branches.q1q(child);
    }
    $l$loop: while (branches.pn()) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var tmp$ret$5 = branches.p1q_1 - 1 | 0;
      var branch = branches.m1(tmp$ret$5);
      if ((branch.s4i_1 & mask) === 0) {
        addLayoutNodeChildren$accessor$hxafa1(branches, branch);
        continue $l$loop;
      }
      var node = branch;
      $l$loop_1: while (!(node == null)) {
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop_0: while (!(node_0 == null)) {
            if (node_0 instanceof FocusTargetNode) {
              $l$block_0: {
                // Inline function 'androidx.compose.ui.focus.<get-activeChild>.<anonymous>' call
                var it = node_0;
                if (!it.p4i_1.b4j_1) {
                  break $l$block_0;
                }
                switch (it.n4n().t9_1) {
                  case 0:
                  case 1:
                  case 2:
                    return it;
                  case 3:
                    break $l$block_0;
                }
              }
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$9 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$9, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop_0;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
          break $l$loop_1;
        }
        node = node.u4i_1;
      }
    }
    return null;
  }
  function focusRect(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.w4i_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.focus.focusRect.<anonymous>' call
      tmp = findRootCoordinates(tmp0_safe_receiver).q4r(tmp0_safe_receiver, false);
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? Companion_getInstance().z2v_1 : tmp1_elvis_lhs;
  }
  function get_isEligibleForFocusSearch(_this__u8e3s4) {
    var tmp;
    var tmp0_safe_receiver = _this__u8e3s4.w4i_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o4r();
    if ((tmp1_safe_receiver == null ? null : tmp1_safe_receiver.s4r()) === true) {
      var tmp2_safe_receiver = _this__u8e3s4.w4i_1;
      var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.o4r();
      tmp = (tmp3_safe_receiver == null ? null : tmp3_safe_receiver.r4r()) === true;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function findActiveFocusNode(_this__u8e3s4) {
    switch (_this__u8e3s4.n4n().t9_1) {
      case 0:
      case 2:
        return _this__u8e3s4;
      case 1:
        // Inline function 'androidx.compose.ui.node.visitChildren' call

        // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call

        var type = _NodeKind___init__impl__ojsprp(1024);
        var mask = _NodeKind___get_mask__impl__1uopb6(type);
        // Inline function 'kotlin.check' call

        // Inline function 'kotlin.contracts.contract' call

        if (!_this__u8e3s4.c4j().b4j_1) {
          // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
          var message = 'visitChildren called on an unattached node';
          throw IllegalStateException_init_$Create$(toString(message));
        }

        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call

        // Inline function 'androidx.compose.runtime.collection.MutableVector' call

        // Inline function 'kotlin.arrayOfNulls' call

        var tmp$ret$2 = fillArrayVal(Array(16), null);
        var branches = new MutableVector(tmp$ret$2, 0);
        var child = _this__u8e3s4.c4j().u4i_1;
        if (child == null) {
          addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
        } else {
          branches.q1q(child);
        }

        $l$loop: while (branches.pn()) {
          // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
          var tmp$ret$5 = branches.p1q_1 - 1 | 0;
          var branch = branches.m1(tmp$ret$5);
          if ((branch.s4i_1 & mask) === 0) {
            addLayoutNodeChildren$accessor$hxafa1(branches, branch);
            continue $l$loop;
          }
          var node = branch;
          $l$loop_1: while (!(node == null)) {
            if (!((node.r4i_1 & mask) === 0)) {
              // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
              // Inline function 'androidx.compose.ui.node.dispatchForKind' call
              var stack = null;
              var node_0 = node;
              $l$loop_0: while (!(node_0 == null)) {
                if (node_0 instanceof FocusTargetNode) {
                  // Inline function 'androidx.compose.ui.focus.findActiveFocusNode.<anonymous>' call
                  var node_1 = node_0;
                  var tmp0_safe_receiver = findActiveFocusNode(node_1);
                  if (tmp0_safe_receiver == null)
                    null;
                  else {
                    // Inline function 'kotlin.let' call
                    // Inline function 'kotlin.contracts.contract' call
                    return tmp0_safe_receiver;
                  }
                } else {
                  var tmp;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    tmp = node_0 instanceof DelegatingNode;
                  } else {
                    tmp = false;
                  }
                  if (tmp) {
                    var count = 0;
                    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                    var node_2 = node_0.b4m_1;
                    while (!(node_2 == null)) {
                      // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                      var next = node_2;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                        count = count + 1 | 0;
                        if (count === 1) {
                          node_0 = next;
                        } else {
                          var tmp1_elvis_lhs = stack;
                          var tmp_0;
                          if (tmp1_elvis_lhs == null) {
                            // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                            // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                            // Inline function 'kotlin.arrayOfNulls' call
                            var tmp$ret$9 = fillArrayVal(Array(16), null);
                            tmp_0 = new MutableVector(tmp$ret$9, 0);
                          } else {
                            tmp_0 = tmp1_elvis_lhs;
                          }
                          stack = tmp_0;
                          var theNode = node_0;
                          if (!(theNode == null)) {
                            var tmp2_safe_receiver = stack;
                            if (tmp2_safe_receiver == null)
                              null;
                            else
                              tmp2_safe_receiver.q1q(theNode);
                            node_0 = null;
                          }
                          var tmp3_safe_receiver = stack;
                          if (tmp3_safe_receiver == null)
                            null;
                          else
                            tmp3_safe_receiver.q1q(next);
                        }
                      }
                      node_2 = node_2.u4i_1;
                    }
                    if (count === 1) {
                      continue $l$loop_0;
                    }
                  }
                }
                node_0 = pop$accessor$hxafa1(stack);
              }
              break $l$loop_1;
            }
            node = node.u4i_1;
          }
        }

        return null;
      case 3:
        return null;
      default:
        noWhenBranchMatchedException();
        break;
    }
  }
  function customFocusSearch(_this__u8e3s4, focusDirection, layoutDirection) {
    var focusProperties = _this__u8e3s4.e4q();
    var tmp;
    if (focusDirection === Companion_getInstance_14().a4n_1) {
      tmp = focusProperties.f13();
    } else if (focusDirection === Companion_getInstance_14().b4n_1) {
      tmp = focusProperties.k4p();
    } else if (focusDirection === Companion_getInstance_14().e4n_1) {
      tmp = focusProperties.l4p();
    } else if (focusDirection === Companion_getInstance_14().f4n_1) {
      tmp = focusProperties.m4p();
    } else if (focusDirection === Companion_getInstance_14().c4n_1) {
      // Inline function 'kotlin.takeUnless' call
      var tmp_0;
      switch (layoutDirection.t9_1) {
        case 0:
          tmp_0 = focusProperties.tg();
          break;
        case 1:
          tmp_0 = focusProperties.p4p();
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var this_0 = tmp_0;
      // Inline function 'kotlin.contracts.contract' call
      var tmp_1;
      // Inline function 'androidx.compose.ui.focus.customFocusSearch.<anonymous>' call
      if (!(this_0 === Companion_getInstance_15().e4p_1)) {
        tmp_1 = this_0;
      } else {
        tmp_1 = null;
      }
      var tmp2_elvis_lhs = tmp_1;
      tmp = tmp2_elvis_lhs == null ? focusProperties.n4p() : tmp2_elvis_lhs;
    } else if (focusDirection === Companion_getInstance_14().d4n_1) {
      // Inline function 'kotlin.takeUnless' call
      var tmp_2;
      switch (layoutDirection.t9_1) {
        case 0:
          tmp_2 = focusProperties.p4p();
          break;
        case 1:
          tmp_2 = focusProperties.tg();
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var this_1 = tmp_2;
      // Inline function 'kotlin.contracts.contract' call
      var tmp_3;
      // Inline function 'androidx.compose.ui.focus.customFocusSearch.<anonymous>' call
      if (!(this_1 === Companion_getInstance_15().e4p_1)) {
        tmp_3 = this_1;
      } else {
        tmp_3 = null;
      }
      var tmp4_elvis_lhs = tmp_3;
      tmp = tmp4_elvis_lhs == null ? focusProperties.o4p() : tmp4_elvis_lhs;
    } else if (focusDirection === Companion_getInstance_14().g4n_1) {
      tmp = focusProperties.q4p()(new FocusDirection(focusDirection));
    } else if (focusDirection === Companion_getInstance_14().h4n_1) {
      tmp = focusProperties.r4p()(new FocusDirection(focusDirection));
    } else {
      var message = 'invalid FocusDirection';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return tmp;
  }
  function focusSearch(_this__u8e3s4, focusDirection, layoutDirection, onFound) {
    var tmp;
    if (focusDirection === Companion_getInstance_14().a4n_1 ? true : focusDirection === Companion_getInstance_14().b4n_1) {
      tmp = oneDimensionalFocusSearch(_this__u8e3s4, focusDirection, onFound);
    } else if (((focusDirection === Companion_getInstance_14().c4n_1 ? true : focusDirection === Companion_getInstance_14().d4n_1) ? true : focusDirection === Companion_getInstance_14().e4n_1) ? true : focusDirection === Companion_getInstance_14().f4n_1) {
      var tmp1_elvis_lhs = twoDimensionalFocusSearch(_this__u8e3s4, focusDirection, onFound);
      tmp = tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
    } else if (focusDirection === Companion_getInstance_14().g4n_1) {
      var tmp_0;
      switch (layoutDirection.t9_1) {
        case 1:
          tmp_0 = Companion_getInstance_14().c4n_1;
          break;
        case 0:
          tmp_0 = Companion_getInstance_14().d4n_1;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var direction = tmp_0;
      var tmp3_safe_receiver = findActiveFocusNode(_this__u8e3s4);
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : twoDimensionalFocusSearch(tmp3_safe_receiver, direction, onFound);
      tmp = tmp4_elvis_lhs == null ? false : tmp4_elvis_lhs;
    } else if (focusDirection === Companion_getInstance_14().h4n_1) {
      // Inline function 'kotlin.let' call
      var tmp5_safe_receiver = findActiveFocusNode(_this__u8e3s4);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.focus.focusSearch.<anonymous>' call
      var it = tmp5_safe_receiver == null ? null : findNonDeactivatedParent(tmp5_safe_receiver);
      tmp = (it == null ? true : equals(it, _this__u8e3s4)) ? false : onFound(it);
    } else {
      var message = 'Focus search invoked with invalid FocusDirection ' + new FocusDirection(focusDirection);
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return tmp;
  }
  function findNonDeactivatedParent(_this__u8e3s4) {
    // Inline function 'androidx.compose.ui.node.visitAncestors' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
      var message = 'visitAncestors called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var node = false ? _this__u8e3s4.c4j() : _this__u8e3s4.c4j().t4i_1;
    var layout = requireLayoutNode(_this__u8e3s4);
    while (!(layout == null)) {
      var head = layout.d4l_1.y4j_1;
      if (!((head.s4i_1 & mask) === 0)) {
        while (!(node == null)) {
          if (!((node.r4i_1 & mask) === 0)) {
            // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
            // Inline function 'androidx.compose.ui.node.dispatchForKind' call
            var stack = null;
            var node_0 = node;
            $l$loop: while (!(node_0 == null)) {
              if (node_0 instanceof FocusTargetNode) {
                // Inline function 'androidx.compose.ui.focus.findNonDeactivatedParent.<anonymous>' call
                var it = node_0;
                if (it.e4q().j4p())
                  return it;
              } else {
                var tmp;
                // Inline function 'androidx.compose.ui.Node.isKind' call
                if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                  tmp = node_0 instanceof DelegatingNode;
                } else {
                  tmp = false;
                }
                if (tmp) {
                  var count = 0;
                  // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                  var node_1 = node_0.b4m_1;
                  while (!(node_1 == null)) {
                    // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                    var next = node_1;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      count = count + 1 | 0;
                      if (count === 1) {
                        node_0 = next;
                      } else {
                        var tmp1_elvis_lhs = stack;
                        var tmp_0;
                        if (tmp1_elvis_lhs == null) {
                          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                          // Inline function 'kotlin.arrayOfNulls' call
                          var tmp$ret$4 = fillArrayVal(Array(16), null);
                          tmp_0 = new MutableVector(tmp$ret$4, 0);
                        } else {
                          tmp_0 = tmp1_elvis_lhs;
                        }
                        stack = tmp_0;
                        var theNode = node_0;
                        if (!(theNode == null)) {
                          var tmp2_safe_receiver = stack;
                          if (tmp2_safe_receiver == null)
                            null;
                          else
                            tmp2_safe_receiver.q1q(theNode);
                          node_0 = null;
                        }
                        var tmp3_safe_receiver = stack;
                        if (tmp3_safe_receiver == null)
                          null;
                        else
                          tmp3_safe_receiver.q1q(next);
                      }
                    }
                    node_1 = node_1.u4i_1;
                  }
                  if (count === 1) {
                    continue $l$loop;
                  }
                }
              }
              node_0 = pop$accessor$hxafa1(stack);
            }
          }
          node = node.t4i_1;
        }
      }
      layout = layout.pp();
      var tmp0_safe_receiver = layout;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
      node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
    }
    return null;
  }
  function oneDimensionalFocusSearch(_this__u8e3s4, direction, onFound) {
    var tmp;
    if (direction === Companion_getInstance_14().a4n_1) {
      tmp = forwardFocusSearch(_this__u8e3s4, onFound);
    } else if (direction === Companion_getInstance_14().b4n_1) {
      tmp = backwardFocusSearch(_this__u8e3s4, onFound);
    } else {
      var message = 'This function should only be used for 1-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return tmp;
  }
  function forwardFocusSearch(_this__u8e3s4, onFound) {
    var tmp;
    switch (_this__u8e3s4.n4n().t9_1) {
      case 1:
        var tmp1_elvis_lhs = get_activeChild(_this__u8e3s4);
        var tmp_0;
        if (tmp1_elvis_lhs == null) {
          var message = 'ActiveParent must have a focusedChild';
          throw IllegalStateException_init_$Create$(toString(message));
        } else {
          tmp_0 = tmp1_elvis_lhs;
        }

        var focusedChild = tmp_0;
        tmp = forwardFocusSearch(focusedChild, onFound) ? true : generateAndSearchChildren(_this__u8e3s4, focusedChild, Companion_getInstance_14().a4n_1, onFound);
        break;
      case 0:
      case 2:
        tmp = pickChildForForwardSearch(_this__u8e3s4, onFound);
        break;
      case 3:
        var tmp_1;
        if (_this__u8e3s4.e4q().j4p()) {
          tmp_1 = onFound(_this__u8e3s4);
        } else {
          tmp_1 = pickChildForForwardSearch(_this__u8e3s4, onFound);
        }

        tmp = tmp_1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function backwardFocusSearch(_this__u8e3s4, onFound) {
    var tmp;
    switch (_this__u8e3s4.n4n().t9_1) {
      case 1:
        var tmp1_elvis_lhs = get_activeChild(_this__u8e3s4);
        var tmp_0;
        if (tmp1_elvis_lhs == null) {
          var message = 'ActiveParent must have a focusedChild';
          throw IllegalStateException_init_$Create$(toString(message));
        } else {
          tmp_0 = tmp1_elvis_lhs;
        }

        var focusedChild = tmp_0;
        var tmp_1;
        switch (focusedChild.n4n().t9_1) {
          case 1:
            tmp_1 = (backwardFocusSearch(focusedChild, onFound) ? true : generateAndSearchChildren(_this__u8e3s4, focusedChild, Companion_getInstance_14().b4n_1, onFound)) ? true : focusedChild.e4q().j4p() ? onFound(focusedChild) : false;
            break;
          case 0:
          case 2:
            tmp_1 = generateAndSearchChildren(_this__u8e3s4, focusedChild, Companion_getInstance_14().b4n_1, onFound);
            break;
          case 3:
            var message_0 = 'ActiveParent must have a focusedChild';
            throw IllegalStateException_init_$Create$(toString(message_0));
          default:
            noWhenBranchMatchedException();
            break;
        }

        tmp = tmp_1;
        break;
      case 0:
      case 2:
        tmp = pickChildForBackwardSearch(_this__u8e3s4, onFound);
        break;
      case 3:
        tmp = pickChildForBackwardSearch(_this__u8e3s4, onFound) ? true : _this__u8e3s4.e4q().j4p() ? onFound(_this__u8e3s4) : false;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function generateAndSearchChildren(_this__u8e3s4, focusedItem, direction, onFound) {
    if (searchChildren(_this__u8e3s4, focusedItem, direction, onFound)) {
      return true;
    }
    var tmp0_elvis_lhs = searchBeyondBounds(_this__u8e3s4, direction, generateAndSearchChildren$lambda(_this__u8e3s4, focusedItem, direction, onFound));
    return tmp0_elvis_lhs == null ? false : tmp0_elvis_lhs;
  }
  function pickChildForForwardSearch(_this__u8e3s4, onFound) {
    // Inline function 'kotlin.apply' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    var this_0 = new MutableVector(tmp$ret$0, 0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.focus.pickChildForForwardSearch.<anonymous>' call
    // Inline function 'androidx.compose.ui.node.visitChildren' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
      var message = 'visitChildren called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$4 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$4, 0);
    var child = _this__u8e3s4.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
    } else {
      branches.q1q(child);
    }
    $l$loop: while (branches.pn()) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var tmp$ret$7 = branches.p1q_1 - 1 | 0;
      var branch = branches.m1(tmp$ret$7);
      if ((branch.s4i_1 & mask) === 0) {
        addLayoutNodeChildren$accessor$hxafa1(branches, branch);
        continue $l$loop;
      }
      var node = branch;
      $l$loop_1: while (!(node == null)) {
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop_0: while (!(node_0 == null)) {
            if (node_0 instanceof FocusTargetNode) {
              // Inline function 'androidx.compose.ui.focus.pickChildForForwardSearch.<anonymous>.<anonymous>' call
              var it = node_0;
              this_0.q1q(it);
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$10 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$10, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop_0;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
          break $l$loop_1;
        }
        node = node.u4i_1;
      }
    }
    var children = this_0;
    children.c2h(FocusableChildrenComparator_instance);
    var tmp$ret$16;
    $l$block: {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.any' call
      // Inline function 'kotlin.contracts.contract' call
      var size = children.p1q_1;
      if (size > 0) {
        var i = 0;
        var tmp_1 = children.n1q_1;
        var content = isArray(tmp_1) ? tmp_1 : THROW_CCE();
        do {
          // Inline function 'androidx.compose.ui.focus.pickChildForForwardSearch.<anonymous>' call
          var it_0 = content[i];
          if (get_isEligibleForFocusSearch(it_0) ? forwardFocusSearch(it_0, onFound) : false) {
            tmp$ret$16 = true;
            break $l$block;
          }
          i = i + 1 | 0;
        }
         while (i < size);
      }
      tmp$ret$16 = false;
    }
    return tmp$ret$16;
  }
  function pickChildForBackwardSearch(_this__u8e3s4, onFound) {
    // Inline function 'kotlin.apply' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    var this_0 = new MutableVector(tmp$ret$0, 0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.focus.pickChildForBackwardSearch.<anonymous>' call
    // Inline function 'androidx.compose.ui.node.visitChildren' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
      var message = 'visitChildren called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$4 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$4, 0);
    var child = _this__u8e3s4.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
    } else {
      branches.q1q(child);
    }
    $l$loop: while (branches.pn()) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var tmp$ret$7 = branches.p1q_1 - 1 | 0;
      var branch = branches.m1(tmp$ret$7);
      if ((branch.s4i_1 & mask) === 0) {
        addLayoutNodeChildren$accessor$hxafa1(branches, branch);
        continue $l$loop;
      }
      var node = branch;
      $l$loop_1: while (!(node == null)) {
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop_0: while (!(node_0 == null)) {
            if (node_0 instanceof FocusTargetNode) {
              // Inline function 'androidx.compose.ui.focus.pickChildForBackwardSearch.<anonymous>.<anonymous>' call
              var it = node_0;
              this_0.q1q(it);
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$10 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$10, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop_0;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
          break $l$loop_1;
        }
        node = node.u4i_1;
      }
    }
    var children = this_0;
    children.c2h(FocusableChildrenComparator_instance);
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var size = children.p1q_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp_1 = children.n1q_1;
      var content = isArray(tmp_1) ? tmp_1 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.focus.pickChildForBackwardSearch.<anonymous>' call
        var it_0 = content[i];
        if (get_isEligibleForFocusSearch(it_0) ? backwardFocusSearch(it_0, onFound) : false) {
          return true;
        }
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
    return false;
  }
  function searchChildren(_this__u8e3s4, focusedItem, direction, onFound) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.n4n().equals(FocusStateImpl_ActiveParent_getInstance())) {
      // Inline function 'androidx.compose.ui.focus.searchChildren.<anonymous>' call
      var message = 'This function should only be used within a parent that has focus.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.apply' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$1 = fillArrayVal(Array(16), null);
    var this_0 = new MutableVector(tmp$ret$1, 0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.focus.searchChildren.<anonymous>' call
    // Inline function 'androidx.compose.ui.node.visitChildren' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
      var message_0 = 'visitChildren called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$5 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$5, 0);
    var child = _this__u8e3s4.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
    } else {
      branches.q1q(child);
    }
    $l$loop: while (branches.pn()) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var tmp$ret$8 = branches.p1q_1 - 1 | 0;
      var branch = branches.m1(tmp$ret$8);
      if ((branch.s4i_1 & mask) === 0) {
        addLayoutNodeChildren$accessor$hxafa1(branches, branch);
        continue $l$loop;
      }
      var node = branch;
      $l$loop_1: while (!(node == null)) {
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop_0: while (!(node_0 == null)) {
            if (node_0 instanceof FocusTargetNode) {
              // Inline function 'androidx.compose.ui.focus.searchChildren.<anonymous>.<anonymous>' call
              var it = node_0;
              this_0.q1q(it);
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$11 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$11, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop_0;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
          break $l$loop_1;
        }
        node = node.u4i_1;
      }
    }
    var children = this_0;
    children.c2h(FocusableChildrenComparator_instance);
    if (direction === Companion_getInstance_14().a4n_1) {
      // Inline function 'androidx.compose.ui.focus.forEachItemAfter' call
      // Inline function 'kotlin.contracts.contract' call
      var itemFound = false;
      // Inline function 'androidx.compose.runtime.collection.MutableVector.indices' call
      var progression = numberRangeToNumber(0, children.p1q_1 - 1 | 0);
      var inductionVariable = progression.ba_1;
      var last = progression.ca_1;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (itemFound) {
            // Inline function 'androidx.compose.ui.focus.searchChildren.<anonymous>' call
            // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
            var index_0 = index;
            var tmp_1 = children.n1q_1[index_0];
            var child_0 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
            if (get_isEligibleForFocusSearch(child_0) ? forwardFocusSearch(child_0, onFound) : false)
              return true;
          }
          // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
          var index_1 = index;
          var tmp_2 = children.n1q_1[index_1];
          var tmp$ret$18 = (tmp_2 == null ? true : !(tmp_2 == null)) ? tmp_2 : THROW_CCE();
          if (equals(tmp$ret$18, focusedItem)) {
            itemFound = true;
          }
        }
         while (!(index === last));
    } else if (direction === Companion_getInstance_14().b4n_1) {
      // Inline function 'androidx.compose.ui.focus.forEachItemBefore' call
      // Inline function 'kotlin.contracts.contract' call
      var itemFound_0 = false;
      // Inline function 'androidx.compose.runtime.collection.MutableVector.indices' call
      var progression_0 = numberRangeToNumber(0, children.p1q_1 - 1 | 0);
      var last_0 = progression_0.ba_1;
      var inductionVariable_0 = progression_0.ca_1;
      if (last_0 <= inductionVariable_0)
        do {
          var index_2 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + -1 | 0;
          if (itemFound_0) {
            // Inline function 'androidx.compose.ui.focus.searchChildren.<anonymous>' call
            // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
            var index_3 = index_2;
            var tmp_3 = children.n1q_1[index_3];
            var child_1 = (tmp_3 == null ? true : !(tmp_3 == null)) ? tmp_3 : THROW_CCE();
            if (get_isEligibleForFocusSearch(child_1) ? backwardFocusSearch(child_1, onFound) : false)
              return true;
          }
          // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
          var index_4 = index_2;
          var tmp_4 = children.n1q_1[index_4];
          var tmp$ret$21 = (tmp_4 == null ? true : !(tmp_4 == null)) ? tmp_4 : THROW_CCE();
          if (equals(tmp$ret$21, focusedItem)) {
            itemFound_0 = true;
          }
        }
         while (!(index_2 === last_0));
    } else {
      // Inline function 'kotlin.error' call
      var message_1 = 'This function should only be used for 1-D focus search';
      throw IllegalStateException_init_$Create$(toString(message_1));
    }
    if ((direction === Companion_getInstance_14().a4n_1 ? true : !_this__u8e3s4.e4q().j4p()) ? true : isRoot(_this__u8e3s4))
      return false;
    return onFound(_this__u8e3s4);
  }
  function pathFromRoot($this, layoutNode) {
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    var path = new MutableVector(tmp$ret$0, 0);
    var current = layoutNode;
    while (!(current == null)) {
      path.r2g(0, current);
      current = current.pp();
    }
    return path;
  }
  function FocusableChildrenComparator() {
  }
  protoOf(FocusableChildrenComparator).t4r = function (focusTarget1, focusTarget2) {
    if (!get_isEligibleForFocusSearch(focusTarget1) ? true : !get_isEligibleForFocusSearch(focusTarget2)) {
      if (get_isEligibleForFocusSearch(focusTarget1))
        return -1;
      if (get_isEligibleForFocusSearch(focusTarget2))
        return 1;
      return 0;
    }
    var layoutNode1 = requireLayoutNode(focusTarget1);
    var layoutNode2 = requireLayoutNode(focusTarget2);
    if (equals(layoutNode1, layoutNode2))
      return 0;
    var pathFromRoot1 = pathFromRoot(this, layoutNode1);
    var pathFromRoot2 = pathFromRoot(this, layoutNode2);
    var inductionVariable = 0;
    // Inline function 'kotlin.comparisons.minOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    var a = pathFromRoot1.p1q_1 - 1 | 0;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    var b = pathFromRoot2.p1q_1 - 1 | 0;
    var last = Math.min(a, b);
    if (inductionVariable <= last)
      do {
        var depth = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var index = depth;
        var tmp = pathFromRoot1.n1q_1[index];
        var tmp_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var index_0 = depth;
        var tmp_1 = pathFromRoot2.n1q_1[index_0];
        var tmp$ret$4 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
        if (!equals(tmp_0, tmp$ret$4)) {
          // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
          var index_1 = depth;
          var tmp_2 = pathFromRoot1.n1q_1[index_1];
          var tmp_3 = ((tmp_2 == null ? true : !(tmp_2 == null)) ? tmp_2 : THROW_CCE()).u4r();
          // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
          var index_2 = depth;
          var tmp_4 = pathFromRoot2.n1q_1[index_2];
          var tmp$ret$6 = (tmp_4 == null ? true : !(tmp_4 == null)) ? tmp_4 : THROW_CCE();
          return compareTo(tmp_3, tmp$ret$6.u4r());
        }
      }
       while (!(depth === last));
    // Inline function 'kotlin.error' call
    var message = 'Could not find a common ancestor between the two FocusModifiers.';
    throw IllegalStateException_init_$Create$(toString(message));
  };
  protoOf(FocusableChildrenComparator).compare = function (a, b) {
    var tmp = a instanceof FocusTargetNode ? a : THROW_CCE();
    return this.t4r(tmp, b instanceof FocusTargetNode ? b : THROW_CCE());
  };
  var FocusableChildrenComparator_instance;
  function FocusableChildrenComparator_getInstance() {
    return FocusableChildrenComparator_instance;
  }
  function isRoot(_this__u8e3s4) {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'androidx.compose.ui.node.nearestAncestor' call
      // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
      // Inline function 'androidx.compose.ui.node.visitAncestors' call
      var type = _NodeKind___init__impl__ojsprp(1024);
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!_this__u8e3s4.c4j().b4j_1) {
        // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
        var message = 'visitAncestors called on an unattached node';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var node = false ? _this__u8e3s4.c4j() : _this__u8e3s4.c4j().t4i_1;
      var layout = requireLayoutNode(_this__u8e3s4);
      while (!(layout == null)) {
        var head = layout.d4l_1.y4j_1;
        if (!((head.s4i_1 & mask) === 0)) {
          while (!(node == null)) {
            if (!((node.r4i_1 & mask) === 0)) {
              // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
              // Inline function 'androidx.compose.ui.node.dispatchForKind' call
              var stack = null;
              var node_0 = node;
              $l$loop: while (!(node_0 == null)) {
                if (node_0 instanceof FocusTargetNode) {
                  // Inline function 'androidx.compose.ui.node.nearestAncestor.<anonymous>' call
                  tmp$ret$2 = node_0;
                  break $l$block;
                } else {
                  var tmp;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    tmp = node_0 instanceof DelegatingNode;
                  } else {
                    tmp = false;
                  }
                  if (tmp) {
                    var count = 0;
                    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                    var node_1 = node_0.b4m_1;
                    while (!(node_1 == null)) {
                      // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                      var next = node_1;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                        count = count + 1 | 0;
                        if (count === 1) {
                          node_0 = next;
                        } else {
                          var tmp1_elvis_lhs = stack;
                          var tmp_0;
                          if (tmp1_elvis_lhs == null) {
                            // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                            // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                            // Inline function 'kotlin.arrayOfNulls' call
                            var tmp$ret$5 = fillArrayVal(Array(16), null);
                            tmp_0 = new MutableVector(tmp$ret$5, 0);
                          } else {
                            tmp_0 = tmp1_elvis_lhs;
                          }
                          stack = tmp_0;
                          var theNode = node_0;
                          if (!(theNode == null)) {
                            var tmp2_safe_receiver = stack;
                            if (tmp2_safe_receiver == null)
                              null;
                            else
                              tmp2_safe_receiver.q1q(theNode);
                            node_0 = null;
                          }
                          var tmp3_safe_receiver = stack;
                          if (tmp3_safe_receiver == null)
                            null;
                          else
                            tmp3_safe_receiver.q1q(next);
                        }
                      }
                      node_1 = node_1.u4i_1;
                    }
                    if (count === 1) {
                      continue $l$loop;
                    }
                  }
                }
                node_0 = pop$accessor$hxafa1(stack);
              }
            }
            node = node.t4i_1;
          }
        }
        layout = layout.pp();
        var tmp0_safe_receiver = layout;
        var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
        node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
      }
      tmp$ret$2 = null;
    }
    return tmp$ret$2 == null;
  }
  function generateAndSearchChildren$lambda($this_generateAndSearchChildren, $focusedItem, $direction, $onFound) {
    return function ($this$searchBeyondBounds) {
      // Inline function 'kotlin.takeIf' call
      var this_0 = searchChildren($this_generateAndSearchChildren, $focusedItem, $direction, $onFound);
      // Inline function 'kotlin.contracts.contract' call
      var tmp;
      // Inline function 'androidx.compose.ui.focus.generateAndSearchChildren.<anonymous>.<anonymous>' call
      if (this_0 ? true : !$this$searchBeyondBounds.v4r()) {
        tmp = this_0;
      } else {
        tmp = null;
      }
      return tmp;
    };
  }
  function findChildCorrespondingToFocusEnter(_this__u8e3s4, direction, onFound) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    var focusableChildren = new MutableVector(tmp$ret$0, 0);
    collectAccessibleChildren(_this__u8e3s4, focusableChildren);
    if (focusableChildren.p1q_1 <= 1) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.firstOrNull' call
      var tmp;
      if (focusableChildren.u()) {
        tmp = null;
      } else {
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var tmp_0 = focusableChildren.n1q_1[0];
        tmp = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
      }
      var tmp0_safe_receiver = tmp;
      var tmp_1;
      if (tmp0_safe_receiver == null) {
        tmp_1 = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.focus.findChildCorrespondingToFocusEnter.<anonymous>' call
        tmp_1 = onFound(tmp0_safe_receiver);
      }
      var tmp1_elvis_lhs = tmp_1;
      return tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
    }
    var requestedDirection = direction === Companion_getInstance_14().g4n_1 ? Companion_getInstance_14().d4n_1 : direction;
    var tmp_2;
    if (requestedDirection === Companion_getInstance_14().d4n_1 ? true : requestedDirection === Companion_getInstance_14().f4n_1) {
      tmp_2 = topLeft(focusRect(_this__u8e3s4));
    } else if (requestedDirection === Companion_getInstance_14().c4n_1 ? true : requestedDirection === Companion_getInstance_14().e4n_1) {
      tmp_2 = bottomRight(focusRect(_this__u8e3s4));
    } else {
      var message = 'This function should only be used for 2-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var initialFocusRect = tmp_2;
    var nextCandidate = findBestCandidate(focusableChildren, initialFocusRect, requestedDirection);
    var tmp_3;
    if (nextCandidate == null) {
      tmp_3 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.focus.findChildCorrespondingToFocusEnter.<anonymous>' call
      tmp_3 = onFound(nextCandidate);
    }
    var tmp5_elvis_lhs = tmp_3;
    return tmp5_elvis_lhs == null ? false : tmp5_elvis_lhs;
  }
  function collectAccessibleChildren(_this__u8e3s4, accessibleChildren) {
    // Inline function 'androidx.compose.ui.node.visitChildren' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
      var message = 'visitChildren called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$2 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$2, 0);
    var child = _this__u8e3s4.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
    } else {
      branches.q1q(child);
    }
    $l$loop: while (branches.pn()) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var tmp$ret$5 = branches.p1q_1 - 1 | 0;
      var branch = branches.m1(tmp$ret$5);
      if ((branch.s4i_1 & mask) === 0) {
        addLayoutNodeChildren$accessor$hxafa1(branches, branch);
        continue $l$loop;
      }
      var node = branch;
      $l$loop_1: while (!(node == null)) {
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop_0: while (!(node_0 == null)) {
            if (node_0 instanceof FocusTargetNode) {
              $l$block: {
                // Inline function 'androidx.compose.ui.focus.collectAccessibleChildren.<anonymous>' call
                var it = node_0;
                if (!it.b4j_1) {
                  break $l$block;
                }
                if (it.e4q().j4p()) {
                  accessibleChildren.q1q(it);
                } else {
                  collectAccessibleChildren(it, accessibleChildren);
                }
              }
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$9 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$9, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop_0;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
          break $l$loop_1;
        }
        node = node.u4i_1;
      }
    }
  }
  function topLeft(_this__u8e3s4) {
    return new Rect(_this__u8e3s4.a2w_1, _this__u8e3s4.b2w_1, _this__u8e3s4.a2w_1, _this__u8e3s4.b2w_1);
  }
  function bottomRight(_this__u8e3s4) {
    return new Rect(_this__u8e3s4.c2w_1, _this__u8e3s4.d2w_1, _this__u8e3s4.c2w_1, _this__u8e3s4.d2w_1);
  }
  function findBestCandidate(_this__u8e3s4, focusRect_0, direction) {
    var tmp;
    if (direction === Companion_getInstance_14().c4n_1) {
      tmp = focusRect_0.h2w(focusRect_0.e2w() + 1, 0.0);
    } else if (direction === Companion_getInstance_14().d4n_1) {
      tmp = focusRect_0.h2w(-(focusRect_0.e2w() + 1), 0.0);
    } else if (direction === Companion_getInstance_14().e4n_1) {
      tmp = focusRect_0.h2w(0.0, focusRect_0.f2w() + 1);
    } else if (direction === Companion_getInstance_14().f4n_1) {
      tmp = focusRect_0.h2w(0.0, -(focusRect_0.f2w() + 1));
    } else {
      var message = 'This function should only be used for 2-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var bestCandidate = tmp;
    var searchResult = null;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var size = _this__u8e3s4.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp_0 = _this__u8e3s4.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.focus.findBestCandidate.<anonymous>' call
        var candidateNode = content[i];
        if (get_isEligibleForFocusSearch(candidateNode)) {
          var candidateRect = focusRect(candidateNode);
          if (isBetterCandidate(candidateRect, bestCandidate, focusRect_0, direction)) {
            bestCandidate = candidateRect;
            searchResult = candidateNode;
          }
        }
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return searchResult;
  }
  function isBetterCandidate(proposedCandidate, currentCandidate, focusedRect, direction) {
    return !isBetterCandidate$isCandidate(proposedCandidate, direction, focusedRect) ? false : !isBetterCandidate$isCandidate(currentCandidate, direction, focusedRect) ? true : beamBeats(focusedRect, proposedCandidate, currentCandidate, direction) ? true : beamBeats(focusedRect, currentCandidate, proposedCandidate, direction) ? false : isBetterCandidate$weightedDistance(direction, focusedRect, proposedCandidate).x9(isBetterCandidate$weightedDistance(direction, focusedRect, currentCandidate)) < 0;
  }
  function beamBeats(source, rect1, rect2, direction) {
    return (beamBeats$inSourceBeam(rect2, direction, source) ? true : !beamBeats$inSourceBeam(rect1, direction, source)) ? false : !beamBeats$isInDirectionOfSearch(rect2, direction, source) ? true : (direction === Companion_getInstance_14().c4n_1 ? true : direction === Companion_getInstance_14().d4n_1) ? true : beamBeats$majorAxisDistance(rect1, direction, source) < beamBeats$majorAxisDistanceToFarEdge(rect2, direction, source);
  }
  function twoDimensionalFocusSearch(_this__u8e3s4, direction, onFound) {
    switch (_this__u8e3s4.n4n().t9_1) {
      case 3:
        return _this__u8e3s4.e4q().j4p() ? onFound(_this__u8e3s4) : false;
      case 1:
        var tmp1_elvis_lhs = get_activeChild(_this__u8e3s4);
        var tmp;
        if (tmp1_elvis_lhs == null) {
          var message = 'ActiveParent must have a focusedChild';
          throw IllegalStateException_init_$Create$(toString(message));
        } else {
          tmp = tmp1_elvis_lhs;
        }

        var focusedChild = tmp;
        switch (focusedChild.n4n().t9_1) {
          case 1:
            var found = twoDimensionalFocusSearch(focusedChild, direction, onFound);
            if (!(found === false))
              return found;
            return generateAndSearchChildren_0(_this__u8e3s4, activeNode(focusedChild), direction, onFound);
          case 0:
          case 2:
            return generateAndSearchChildren_0(_this__u8e3s4, focusedChild, direction, onFound);
          case 3:
            // Inline function 'kotlin.error' call

            var message_0 = 'ActiveParent must have a focusedChild';
            throw IllegalStateException_init_$Create$(toString(message_0));
          default:
            noWhenBranchMatchedException();
            break;
        }

        break;
      case 0:
      case 2:
        return findChildCorrespondingToFocusEnter(_this__u8e3s4, direction, onFound);
      default:
        noWhenBranchMatchedException();
        break;
    }
  }
  function generateAndSearchChildren_0(_this__u8e3s4, focusedItem, direction, onFound) {
    if (searchChildren_0(_this__u8e3s4, focusedItem, direction, onFound)) {
      return true;
    }
    var tmp0_elvis_lhs = searchBeyondBounds(_this__u8e3s4, direction, generateAndSearchChildren$lambda_0(_this__u8e3s4, focusedItem, direction, onFound));
    return tmp0_elvis_lhs == null ? false : tmp0_elvis_lhs;
  }
  function activeNode(_this__u8e3s4) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.n4n().equals(FocusStateImpl_ActiveParent_getInstance())) {
      // Inline function 'androidx.compose.ui.focus.activeNode.<anonymous>' call
      var message = 'Searching for active node in inactive hierarchy';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var tmp0_elvis_lhs = findActiveFocusNode(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var message_0 = 'ActiveParent must have a focusedChild';
      throw IllegalStateException_init_$Create$(toString(message_0));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function searchChildren_0(_this__u8e3s4, focusedItem, direction, onFound) {
    // Inline function 'kotlin.apply' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    var this_0 = new MutableVector(tmp$ret$0, 0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.focus.searchChildren.<anonymous>' call
    // Inline function 'androidx.compose.ui.node.visitChildren' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
      var message = 'visitChildren called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$4 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$4, 0);
    var child = _this__u8e3s4.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
    } else {
      branches.q1q(child);
    }
    $l$loop: while (branches.pn()) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var tmp$ret$7 = branches.p1q_1 - 1 | 0;
      var branch = branches.m1(tmp$ret$7);
      if ((branch.s4i_1 & mask) === 0) {
        addLayoutNodeChildren$accessor$hxafa1(branches, branch);
        continue $l$loop;
      }
      var node = branch;
      $l$loop_1: while (!(node == null)) {
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop_0: while (!(node_0 == null)) {
            if (node_0 instanceof FocusTargetNode) {
              // Inline function 'androidx.compose.ui.focus.searchChildren.<anonymous>.<anonymous>' call
              var it = node_0;
              this_0.q1q(it);
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$10 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$10, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop_0;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
          break $l$loop_1;
        }
        node = node.u4i_1;
      }
    }
    var children = this_0;
    while (children.pn()) {
      var tmp0_elvis_lhs = findBestCandidate(children, focusRect(focusedItem), direction);
      var tmp_1;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp_1 = tmp0_elvis_lhs;
      }
      var nextItem = tmp_1;
      if (nextItem.e4q().j4p())
        return onFound(nextItem);
      if (generateAndSearchChildren_0(nextItem, focusedItem, direction, onFound))
        return true;
      children.u2g(nextItem);
    }
    return false;
  }
  function isBetterCandidate$isCandidate(_this__u8e3s4, $direction, $focusedRect) {
    var tmp;
    if ($direction === Companion_getInstance_14().c4n_1) {
      tmp = ($focusedRect.c2w_1 > _this__u8e3s4.c2w_1 ? true : $focusedRect.a2w_1 >= _this__u8e3s4.c2w_1) ? $focusedRect.a2w_1 > _this__u8e3s4.a2w_1 : false;
    } else if ($direction === Companion_getInstance_14().d4n_1) {
      tmp = ($focusedRect.a2w_1 < _this__u8e3s4.a2w_1 ? true : $focusedRect.c2w_1 <= _this__u8e3s4.a2w_1) ? $focusedRect.c2w_1 < _this__u8e3s4.c2w_1 : false;
    } else if ($direction === Companion_getInstance_14().e4n_1) {
      tmp = ($focusedRect.d2w_1 > _this__u8e3s4.d2w_1 ? true : $focusedRect.b2w_1 >= _this__u8e3s4.d2w_1) ? $focusedRect.b2w_1 > _this__u8e3s4.b2w_1 : false;
    } else if ($direction === Companion_getInstance_14().f4n_1) {
      tmp = ($focusedRect.b2w_1 < _this__u8e3s4.b2w_1 ? true : $focusedRect.d2w_1 <= _this__u8e3s4.b2w_1) ? $focusedRect.d2w_1 < _this__u8e3s4.d2w_1 : false;
    } else {
      var message = 'This function should only be used for 2-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return tmp;
  }
  function isBetterCandidate$majorAxisDistance(_this__u8e3s4, $direction, $focusedRect) {
    var tmp;
    if ($direction === Companion_getInstance_14().c4n_1) {
      tmp = $focusedRect.a2w_1 - _this__u8e3s4.c2w_1;
    } else if ($direction === Companion_getInstance_14().d4n_1) {
      tmp = _this__u8e3s4.a2w_1 - $focusedRect.c2w_1;
    } else if ($direction === Companion_getInstance_14().e4n_1) {
      tmp = $focusedRect.b2w_1 - _this__u8e3s4.d2w_1;
    } else if ($direction === Companion_getInstance_14().f4n_1) {
      tmp = _this__u8e3s4.b2w_1 - $focusedRect.d2w_1;
    } else {
      var message = 'This function should only be used for 2-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var majorAxisDistance = tmp;
    // Inline function 'kotlin.math.max' call
    return Math.max(0.0, majorAxisDistance);
  }
  function isBetterCandidate$minorAxisDistance(_this__u8e3s4, $direction, $focusedRect) {
    var tmp;
    if ($direction === Companion_getInstance_14().c4n_1 ? true : $direction === Companion_getInstance_14().d4n_1) {
      tmp = $focusedRect.b2w_1 + $focusedRect.f2w() / 2 - (_this__u8e3s4.b2w_1 + _this__u8e3s4.f2w() / 2);
    } else if ($direction === Companion_getInstance_14().e4n_1 ? true : $direction === Companion_getInstance_14().f4n_1) {
      tmp = $focusedRect.a2w_1 + $focusedRect.e2w() / 2 - (_this__u8e3s4.a2w_1 + _this__u8e3s4.e2w() / 2);
    } else {
      var message = 'This function should only be used for 2-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return tmp;
  }
  function isBetterCandidate$weightedDistance($direction, $focusedRect, candidate) {
    // Inline function 'kotlin.math.absoluteValue' call
    var this_0 = isBetterCandidate$majorAxisDistance(candidate, $direction, $focusedRect);
    var tmp$ret$0 = Math.abs(this_0);
    var majorAxisDistance = numberToLong(tmp$ret$0);
    // Inline function 'kotlin.math.absoluteValue' call
    var this_1 = isBetterCandidate$minorAxisDistance(candidate, $direction, $focusedRect);
    var tmp$ret$1 = Math.abs(this_1);
    var minorAxisDistance = numberToLong(tmp$ret$1);
    return numberToLong(13).w9(majorAxisDistance).w9(majorAxisDistance).eb(minorAxisDistance.w9(minorAxisDistance));
  }
  function beamBeats$inSourceBeam(_this__u8e3s4, $direction, $source) {
    var tmp;
    if ($direction === Companion_getInstance_14().c4n_1 ? true : $direction === Companion_getInstance_14().d4n_1) {
      tmp = _this__u8e3s4.d2w_1 > $source.b2w_1 ? _this__u8e3s4.b2w_1 < $source.d2w_1 : false;
    } else if ($direction === Companion_getInstance_14().e4n_1 ? true : $direction === Companion_getInstance_14().f4n_1) {
      tmp = _this__u8e3s4.c2w_1 > $source.a2w_1 ? _this__u8e3s4.a2w_1 < $source.c2w_1 : false;
    } else {
      var message = 'This function should only be used for 2-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return tmp;
  }
  function beamBeats$isInDirectionOfSearch(_this__u8e3s4, $direction, $source) {
    var tmp;
    if ($direction === Companion_getInstance_14().c4n_1) {
      tmp = $source.a2w_1 >= _this__u8e3s4.c2w_1;
    } else if ($direction === Companion_getInstance_14().d4n_1) {
      tmp = $source.c2w_1 <= _this__u8e3s4.a2w_1;
    } else if ($direction === Companion_getInstance_14().e4n_1) {
      tmp = $source.b2w_1 >= _this__u8e3s4.d2w_1;
    } else if ($direction === Companion_getInstance_14().f4n_1) {
      tmp = $source.d2w_1 <= _this__u8e3s4.b2w_1;
    } else {
      var message = 'This function should only be used for 2-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return tmp;
  }
  function beamBeats$majorAxisDistance(_this__u8e3s4, $direction, $source) {
    var tmp;
    if ($direction === Companion_getInstance_14().c4n_1) {
      tmp = $source.a2w_1 - _this__u8e3s4.c2w_1;
    } else if ($direction === Companion_getInstance_14().d4n_1) {
      tmp = _this__u8e3s4.a2w_1 - $source.c2w_1;
    } else if ($direction === Companion_getInstance_14().e4n_1) {
      tmp = $source.b2w_1 - _this__u8e3s4.d2w_1;
    } else if ($direction === Companion_getInstance_14().f4n_1) {
      tmp = _this__u8e3s4.b2w_1 - $source.d2w_1;
    } else {
      var message = 'This function should only be used for 2-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var majorAxisDistance = tmp;
    // Inline function 'kotlin.math.max' call
    return Math.max(0.0, majorAxisDistance);
  }
  function beamBeats$majorAxisDistanceToFarEdge(_this__u8e3s4, $direction, $source) {
    var tmp;
    if ($direction === Companion_getInstance_14().c4n_1) {
      tmp = $source.a2w_1 - _this__u8e3s4.a2w_1;
    } else if ($direction === Companion_getInstance_14().d4n_1) {
      tmp = _this__u8e3s4.c2w_1 - $source.c2w_1;
    } else if ($direction === Companion_getInstance_14().e4n_1) {
      tmp = $source.b2w_1 - _this__u8e3s4.b2w_1;
    } else if ($direction === Companion_getInstance_14().f4n_1) {
      tmp = _this__u8e3s4.d2w_1 - $source.d2w_1;
    } else {
      var message = 'This function should only be used for 2-D focus search';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var majorAxisDistance = tmp;
    // Inline function 'kotlin.math.max' call
    return Math.max(1.0, majorAxisDistance);
  }
  function generateAndSearchChildren$lambda_0($this_generateAndSearchChildren, $focusedItem, $direction, $onFound) {
    return function ($this$searchBeyondBounds) {
      // Inline function 'kotlin.takeIf' call
      var this_0 = searchChildren_0($this_generateAndSearchChildren, $focusedItem, $direction, $onFound);
      // Inline function 'kotlin.contracts.contract' call
      var tmp;
      // Inline function 'androidx.compose.ui.focus.generateAndSearchChildren.<anonymous>.<anonymous>' call
      if (this_0 ? true : !$this$searchBeyondBounds.v4r()) {
        tmp = this_0;
      } else {
        tmp = null;
      }
      return tmp;
    };
  }
  function _CompositingStrategy___init__impl__pgr8e(value) {
    return value;
  }
  function Companion_2() {
    Companion_instance_6 = this;
    this.w4r_1 = _CompositingStrategy___init__impl__pgr8e(0);
    this.x4r_1 = _CompositingStrategy___init__impl__pgr8e(1);
    this.y4r_1 = _CompositingStrategy___init__impl__pgr8e(2);
  }
  var Companion_instance_6;
  function Companion_getInstance_16() {
    if (Companion_instance_6 == null)
      new Companion_2();
    return Companion_instance_6;
  }
  function CompositingStrategy__toString_impl_3ar76y($this) {
    return 'CompositingStrategy(value=' + $this + ')';
  }
  function CompositingStrategy__hashCode_impl_igeplx($this) {
    return $this;
  }
  function CompositingStrategy__equals_impl_1k01l5($this, other) {
    if (!(other instanceof CompositingStrategy))
      return false;
    if (!($this === (other instanceof CompositingStrategy ? other.z4r_1 : THROW_CCE())))
      return false;
    return true;
  }
  function CompositingStrategy(value) {
    Companion_getInstance_16();
    this.z4r_1 = value;
  }
  protoOf(CompositingStrategy).toString = function () {
    return CompositingStrategy__toString_impl_3ar76y(this.z4r_1);
  };
  protoOf(CompositingStrategy).hashCode = function () {
    return CompositingStrategy__hashCode_impl_igeplx(this.z4r_1);
  };
  protoOf(CompositingStrategy).equals = function (other) {
    return CompositingStrategy__equals_impl_1k01l5(this.z4r_1, other);
  };
  function graphicsLayer(_this__u8e3s4, scaleX, scaleY, alpha, translationX, translationY, shadowElevation, rotationX, rotationY, rotationZ, cameraDistance, transformOrigin, shape, clip, renderEffect, ambientShadowColor, spotShadowColor, compositingStrategy) {
    scaleX = scaleX === VOID ? 1.0 : scaleX;
    scaleY = scaleY === VOID ? 1.0 : scaleY;
    alpha = alpha === VOID ? 1.0 : alpha;
    translationX = translationX === VOID ? 0.0 : translationX;
    translationY = translationY === VOID ? 0.0 : translationY;
    shadowElevation = shadowElevation === VOID ? 0.0 : shadowElevation;
    rotationX = rotationX === VOID ? 0.0 : rotationX;
    rotationY = rotationY === VOID ? 0.0 : rotationY;
    rotationZ = rotationZ === VOID ? 0.0 : rotationZ;
    cameraDistance = cameraDistance === VOID ? get_DefaultCameraDistance() : cameraDistance;
    transformOrigin = transformOrigin === VOID ? Companion_getInstance_17().a4s_1 : transformOrigin;
    shape = shape === VOID ? get_RectangleShape() : shape;
    clip = clip === VOID ? false : clip;
    renderEffect = renderEffect === VOID ? null : renderEffect;
    ambientShadowColor = ambientShadowColor === VOID ? get_DefaultShadowColor() : ambientShadowColor;
    spotShadowColor = spotShadowColor === VOID ? get_DefaultShadowColor() : spotShadowColor;
    compositingStrategy = compositingStrategy === VOID ? Companion_getInstance_16().w4r_1 : compositingStrategy;
    return _this__u8e3s4.j4i(new GraphicsLayerElement(scaleX, scaleY, alpha, translationX, translationY, shadowElevation, rotationX, rotationY, rotationZ, cameraDistance, transformOrigin, shape, clip, renderEffect, ambientShadowColor, spotShadowColor, compositingStrategy));
  }
  function GraphicsLayerElement(scaleX, scaleY, alpha, translationX, translationY, shadowElevation, rotationX, rotationY, rotationZ, cameraDistance, transformOrigin, shape, clip, renderEffect, ambientShadowColor, spotShadowColor, compositingStrategy) {
    ModifierNodeElement.call(this);
    this.c4s_1 = scaleX;
    this.d4s_1 = scaleY;
    this.e4s_1 = alpha;
    this.f4s_1 = translationX;
    this.g4s_1 = translationY;
    this.h4s_1 = shadowElevation;
    this.i4s_1 = rotationX;
    this.j4s_1 = rotationY;
    this.k4s_1 = rotationZ;
    this.l4s_1 = cameraDistance;
    this.m4s_1 = transformOrigin;
    this.n4s_1 = shape;
    this.o4s_1 = clip;
    this.p4s_1 = renderEffect;
    this.q4s_1 = ambientShadowColor;
    this.r4s_1 = spotShadowColor;
    this.s4s_1 = compositingStrategy;
  }
  protoOf(GraphicsLayerElement).i29 = function () {
    return new SimpleGraphicsLayerModifier(this.c4s_1, this.d4s_1, this.e4s_1, this.f4s_1, this.g4s_1, this.h4s_1, this.i4s_1, this.j4s_1, this.k4s_1, this.l4s_1, this.m4s_1, this.n4s_1, this.o4s_1, this.p4s_1, this.q4s_1, this.r4s_1, this.s4s_1);
  };
  protoOf(GraphicsLayerElement).t4s = function (node) {
    node.h4t_1 = this.c4s_1;
    node.i4t_1 = this.d4s_1;
    node.j4t_1 = this.e4s_1;
    node.k4t_1 = this.f4s_1;
    node.l4t_1 = this.g4s_1;
    node.m4t_1 = this.h4s_1;
    node.n4t_1 = this.i4s_1;
    node.o4t_1 = this.j4s_1;
    node.p4t_1 = this.k4s_1;
    node.q4t_1 = this.l4s_1;
    node.r4t_1 = this.m4s_1;
    node.s4t_1 = this.n4s_1;
    node.t4t_1 = this.o4s_1;
    node.u4t_1 = this.p4s_1;
    node.v4t_1 = this.q4s_1;
    node.w4t_1 = this.r4s_1;
    node.x4t_1 = this.s4s_1;
    node.z4t();
  };
  protoOf(GraphicsLayerElement).r4o = function (node) {
    return this.t4s(node instanceof SimpleGraphicsLayerModifier ? node : THROW_CCE());
  };
  protoOf(GraphicsLayerElement).toString = function () {
    return 'GraphicsLayerElement(scaleX=' + this.c4s_1 + ', scaleY=' + this.d4s_1 + ', alpha=' + this.e4s_1 + ', translationX=' + this.f4s_1 + ', translationY=' + this.g4s_1 + ', shadowElevation=' + this.h4s_1 + ', rotationX=' + this.i4s_1 + ', rotationY=' + this.j4s_1 + ', rotationZ=' + this.k4s_1 + ', cameraDistance=' + this.l4s_1 + ', transformOrigin=' + new TransformOrigin(this.m4s_1) + ', shape=' + this.n4s_1 + ', clip=' + this.o4s_1 + ', renderEffect=' + this.p4s_1 + ', ambientShadowColor=' + new Color(this.q4s_1) + ', spotShadowColor=' + new Color(this.r4s_1) + ', compositingStrategy=' + new CompositingStrategy(this.s4s_1) + ')';
  };
  protoOf(GraphicsLayerElement).hashCode = function () {
    var result = getNumberHashCode(this.c4s_1);
    result = imul(result, 31) + getNumberHashCode(this.d4s_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.e4s_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.f4s_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.g4s_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.h4s_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.i4s_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.j4s_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.k4s_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.l4s_1) | 0;
    result = imul(result, 31) + TransformOrigin__hashCode_impl_pmqpcw(this.m4s_1) | 0;
    result = imul(result, 31) + hashCode(this.n4s_1) | 0;
    result = imul(result, 31) + getBooleanHashCode(this.o4s_1) | 0;
    result = imul(result, 31) + (this.p4s_1 == null ? 0 : hashCode(this.p4s_1)) | 0;
    result = imul(result, 31) + Color__hashCode_impl_vjyivj(this.q4s_1) | 0;
    result = imul(result, 31) + Color__hashCode_impl_vjyivj(this.r4s_1) | 0;
    result = imul(result, 31) + CompositingStrategy__hashCode_impl_igeplx(this.s4s_1) | 0;
    return result;
  };
  protoOf(GraphicsLayerElement).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof GraphicsLayerElement))
      return false;
    var tmp0_other_with_cast = other instanceof GraphicsLayerElement ? other : THROW_CCE();
    if (!equals(this.c4s_1, tmp0_other_with_cast.c4s_1))
      return false;
    if (!equals(this.d4s_1, tmp0_other_with_cast.d4s_1))
      return false;
    if (!equals(this.e4s_1, tmp0_other_with_cast.e4s_1))
      return false;
    if (!equals(this.f4s_1, tmp0_other_with_cast.f4s_1))
      return false;
    if (!equals(this.g4s_1, tmp0_other_with_cast.g4s_1))
      return false;
    if (!equals(this.h4s_1, tmp0_other_with_cast.h4s_1))
      return false;
    if (!equals(this.i4s_1, tmp0_other_with_cast.i4s_1))
      return false;
    if (!equals(this.j4s_1, tmp0_other_with_cast.j4s_1))
      return false;
    if (!equals(this.k4s_1, tmp0_other_with_cast.k4s_1))
      return false;
    if (!equals(this.l4s_1, tmp0_other_with_cast.l4s_1))
      return false;
    if (!equals(this.m4s_1, tmp0_other_with_cast.m4s_1))
      return false;
    if (!equals(this.n4s_1, tmp0_other_with_cast.n4s_1))
      return false;
    if (!(this.o4s_1 === tmp0_other_with_cast.o4s_1))
      return false;
    if (!equals(this.p4s_1, tmp0_other_with_cast.p4s_1))
      return false;
    if (!equals(this.q4s_1, tmp0_other_with_cast.q4s_1))
      return false;
    if (!equals(this.r4s_1, tmp0_other_with_cast.r4s_1))
      return false;
    if (!(this.s4s_1 === tmp0_other_with_cast.s4s_1))
      return false;
    return true;
  };
  function SimpleGraphicsLayerModifier$layerBlock$lambda(this$0) {
    return function ($this$null) {
      $this$null.a4u(this$0.h4t_1);
      $this$null.b4u(this$0.i4t_1);
      $this$null.b3v(this$0.j4t_1);
      $this$null.c4u(this$0.k4t_1);
      $this$null.d4u(this$0.l4t_1);
      $this$null.e4u(this$0.m4t_1);
      $this$null.f4u(this$0.n4t_1);
      $this$null.g4u(this$0.o4t_1);
      $this$null.h4u(this$0.p4t_1);
      $this$null.i4u(this$0.q4t_1);
      $this$null.j4u(this$0.r4t_1);
      $this$null.k4u(this$0.s4t_1);
      $this$null.l4u(this$0.t4t_1);
      $this$null.m4u(this$0.u4t_1);
      $this$null.n4u(this$0.v4t_1);
      $this$null.o4u(this$0.w4t_1);
      $this$null.p4u(this$0.x4t_1);
      return Unit_instance;
    };
  }
  function SimpleGraphicsLayerModifier$measure$lambda($placeable, this$0) {
    return function ($this$layout) {
      $this$layout.q4u($placeable, 0, 0, VOID, this$0.y4t_1);
      return Unit_instance;
    };
  }
  function SimpleGraphicsLayerModifier(scaleX, scaleY, alpha, translationX, translationY, shadowElevation, rotationX, rotationY, rotationZ, cameraDistance, transformOrigin, shape, clip, renderEffect, ambientShadowColor, spotShadowColor, compositingStrategy) {
    compositingStrategy = compositingStrategy === VOID ? Companion_getInstance_16().w4r_1 : compositingStrategy;
    Node.call(this);
    this.h4t_1 = scaleX;
    this.i4t_1 = scaleY;
    this.j4t_1 = alpha;
    this.k4t_1 = translationX;
    this.l4t_1 = translationY;
    this.m4t_1 = shadowElevation;
    this.n4t_1 = rotationX;
    this.o4t_1 = rotationY;
    this.p4t_1 = rotationZ;
    this.q4t_1 = cameraDistance;
    this.r4t_1 = transformOrigin;
    this.s4t_1 = shape;
    this.t4t_1 = clip;
    this.u4t_1 = renderEffect;
    this.v4t_1 = ambientShadowColor;
    this.w4t_1 = spotShadowColor;
    this.x4t_1 = compositingStrategy;
    var tmp = this;
    tmp.y4t_1 = SimpleGraphicsLayerModifier$layerBlock$lambda(this);
  }
  protoOf(SimpleGraphicsLayerModifier).e4j = function () {
    return false;
  };
  protoOf(SimpleGraphicsLayerModifier).z4t = function () {
    // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(2);
    var tmp0_safe_receiver = requireCoordinator(this, tmp$ret$0).w4q_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.r4u(this.y4t_1, true);
    }
  };
  protoOf(SimpleGraphicsLayerModifier).s4u = function (_this__u8e3s4, measurable, constraints) {
    var placeable = measurable.t4u(constraints);
    var tmp = placeable.u4u_1;
    var tmp_0 = placeable.v4u_1;
    return _this__u8e3s4.z4u(tmp, tmp_0, VOID, SimpleGraphicsLayerModifier$measure$lambda(placeable, this));
  };
  protoOf(SimpleGraphicsLayerModifier).toString = function () {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.graphics.SimpleGraphicsLayerModifier.toString.<anonymous>' call
    this_0.x5('SimpleGraphicsLayerModifier(');
    this_0.x5('scaleX=' + this.h4t_1 + ', ');
    this_0.x5('scaleY=' + this.i4t_1 + ', ');
    this_0.x5('alpha = ' + this.j4t_1 + ', ');
    this_0.x5('translationX=' + this.k4t_1 + ', ');
    this_0.x5('translationY=' + this.l4t_1 + ', ');
    this_0.x5('shadowElevation=' + this.m4t_1 + ', ');
    this_0.x5('rotationX=' + this.n4t_1 + ', ');
    this_0.x5('rotationY=' + this.o4t_1 + ', ');
    this_0.x5('rotationZ=' + this.p4t_1 + ', ');
    this_0.x5('cameraDistance=' + this.q4t_1 + ', ');
    this_0.x5('transformOrigin=' + new TransformOrigin(this.r4t_1) + ', ');
    this_0.x5('shape=' + this.s4t_1 + ', ');
    this_0.x5('clip=' + this.t4t_1 + ', ');
    this_0.x5('renderEffect=' + this.u4t_1 + ', ');
    this_0.x5('ambientShadowColor=' + new Color(this.v4t_1) + ', ');
    this_0.x5('spotShadowColor=' + new Color(this.w4t_1) + ', ');
    this_0.x5('compositingStrategy=' + new CompositingStrategy(this.x4t_1) + ')');
    return this_0.toString();
  };
  function get_DefaultShadowColor() {
    _init_properties_GraphicsLayerScope_kt__7b4fv2();
    return DefaultShadowColor;
  }
  var DefaultShadowColor;
  function GraphicsLayerScope() {
  }
  function ReusableGraphicsLayerScope() {
    this.j4v_1 = 0;
    this.k4v_1 = 1.0;
    this.l4v_1 = 1.0;
    this.m4v_1 = 1.0;
    this.n4v_1 = 0.0;
    this.o4v_1 = 0.0;
    this.p4v_1 = 0.0;
    this.q4v_1 = get_DefaultShadowColor();
    this.r4v_1 = get_DefaultShadowColor();
    this.s4v_1 = 0.0;
    this.t4v_1 = 0.0;
    this.u4v_1 = 0.0;
    this.v4v_1 = 8.0;
    this.w4v_1 = Companion_getInstance_17().a4s_1;
    this.x4v_1 = get_RectangleShape();
    this.y4v_1 = false;
    this.z4v_1 = Companion_getInstance_16().w4r_1;
    this.a4w_1 = Companion_getInstance_0().j2w_1;
    this.b4w_1 = Density_0(1.0);
    this.c4w_1 = null;
  }
  protoOf(ReusableGraphicsLayerScope).a4u = function (value) {
    if (!(this.k4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 1;
      this.k4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).a4v = function () {
    return this.k4v_1;
  };
  protoOf(ReusableGraphicsLayerScope).b4u = function (value) {
    if (!(this.l4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 2;
      this.l4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).b4v = function () {
    return this.l4v_1;
  };
  protoOf(ReusableGraphicsLayerScope).b3v = function (value) {
    if (!(this.m4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 4;
      this.m4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).c4u = function (value) {
    if (!(this.n4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 8;
      this.n4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).c4v = function () {
    return this.n4v_1;
  };
  protoOf(ReusableGraphicsLayerScope).d4u = function (value) {
    if (!(this.o4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 16;
      this.o4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).d4v = function () {
    return this.o4v_1;
  };
  protoOf(ReusableGraphicsLayerScope).e4u = function (value) {
    if (!(this.p4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 32;
      this.p4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).n4u = function (value) {
    if (!equals(this.q4v_1, value)) {
      this.j4v_1 = this.j4v_1 | 64;
      this.q4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).o4u = function (value) {
    if (!equals(this.r4v_1, value)) {
      this.j4v_1 = this.j4v_1 | 128;
      this.r4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).f4u = function (value) {
    if (!(this.s4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 256;
      this.s4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).e4v = function () {
    return this.s4v_1;
  };
  protoOf(ReusableGraphicsLayerScope).g4u = function (value) {
    if (!(this.t4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 512;
      this.t4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).f4v = function () {
    return this.t4v_1;
  };
  protoOf(ReusableGraphicsLayerScope).h4u = function (value) {
    if (!(this.u4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 1024;
      this.u4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).g4v = function () {
    return this.u4v_1;
  };
  protoOf(ReusableGraphicsLayerScope).i4u = function (value) {
    if (!(this.v4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 2048;
      this.v4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).h4v = function () {
    return this.v4v_1;
  };
  protoOf(ReusableGraphicsLayerScope).j4u = function (value) {
    if (!equals(this.w4v_1, value)) {
      this.j4v_1 = this.j4v_1 | 4096;
      this.w4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).i4v = function () {
    return this.w4v_1;
  };
  protoOf(ReusableGraphicsLayerScope).k4u = function (value) {
    if (!equals(this.x4v_1, value)) {
      this.j4v_1 = this.j4v_1 | 8192;
      this.x4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).l4u = function (value) {
    if (!(this.y4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 16384;
      this.y4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).p4u = function (value) {
    if (!(this.z4v_1 === value)) {
      this.j4v_1 = this.j4v_1 | 32768;
      this.z4v_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).g2x = function () {
    return this.b4w_1.g2x();
  };
  protoOf(ReusableGraphicsLayerScope).q2x = function () {
    return this.b4w_1.q2x();
  };
  protoOf(ReusableGraphicsLayerScope).m4u = function (value) {
    if (!equals(this.c4w_1, value)) {
      this.j4v_1 = this.j4v_1 | 131072;
      this.c4w_1 = value;
    }
  };
  protoOf(ReusableGraphicsLayerScope).a26 = function () {
    this.a4u(1.0);
    this.b4u(1.0);
    this.b3v(1.0);
    this.c4u(0.0);
    this.d4u(0.0);
    this.e4u(0.0);
    this.n4u(get_DefaultShadowColor());
    this.o4u(get_DefaultShadowColor());
    this.f4u(0.0);
    this.g4u(0.0);
    this.h4u(0.0);
    this.i4u(8.0);
    this.j4u(Companion_getInstance_17().a4s_1);
    this.k4u(get_RectangleShape());
    this.l4u(false);
    this.m4u(null);
    this.p4u(Companion_getInstance_16().w4r_1);
    this.a4w_1 = Companion_getInstance_0().j2w_1;
    this.j4v_1 = 0;
  };
  function get_DefaultCameraDistance() {
    return DefaultCameraDistance;
  }
  var DefaultCameraDistance;
  function Fields() {
    this.d4w_1 = 1;
    this.e4w_1 = 2;
    this.f4w_1 = 4;
    this.g4w_1 = 8;
    this.h4w_1 = 16;
    this.i4w_1 = 32;
    this.j4w_1 = 64;
    this.k4w_1 = 128;
    this.l4w_1 = 256;
    this.m4w_1 = 512;
    this.n4w_1 = 1024;
    this.o4w_1 = 2048;
    this.p4w_1 = 4096;
    this.q4w_1 = 8192;
    this.r4w_1 = 16384;
    this.s4w_1 = 32768;
    this.t4w_1 = 131072;
    this.u4w_1 = 7963;
  }
  var Fields_instance;
  function Fields_getInstance() {
    return Fields_instance;
  }
  var properties_initialized_GraphicsLayerScope_kt_mgrju8;
  function _init_properties_GraphicsLayerScope_kt__7b4fv2() {
    if (!properties_initialized_GraphicsLayerScope_kt_mgrju8) {
      properties_initialized_GraphicsLayerScope_kt_mgrju8 = true;
      DefaultShadowColor = Companion_getInstance_1().w3k_1;
    }
  }
  function _TransformOrigin___init__impl__ats3ll(packedValue) {
    return packedValue;
  }
  function _TransformOrigin___get_packedValue__impl__iu9z4d($this) {
    return $this;
  }
  function _TransformOrigin___get_pivotFractionX__impl__a9pmci($this) {
    // Inline function 'androidx.compose.ui.util.unpackFloat1' call
    // Inline function 'kotlin.fromBits' call
    var bits = _TransformOrigin___get_packedValue__impl__iu9z4d($this).mb(32).fa();
    return floatFromBits(bits);
  }
  function _TransformOrigin___get_pivotFractionY__impl__ijwupp($this) {
    // Inline function 'androidx.compose.ui.util.unpackFloat2' call
    // Inline function 'kotlin.fromBits' call
    var bits = _TransformOrigin___get_packedValue__impl__iu9z4d($this).ob(new Long(-1, 0)).fa();
    return floatFromBits(bits);
  }
  function Companion_3() {
    Companion_instance_7 = this;
    this.a4s_1 = TransformOrigin_0(0.5, 0.5);
  }
  var Companion_instance_7;
  function Companion_getInstance_17() {
    if (Companion_instance_7 == null)
      new Companion_3();
    return Companion_instance_7;
  }
  function TransformOrigin__toString_impl_nn7ftd($this) {
    return 'TransformOrigin(packedValue=' + $this.toString() + ')';
  }
  function TransformOrigin__hashCode_impl_pmqpcw($this) {
    return $this.hashCode();
  }
  function TransformOrigin__equals_impl_jrzhoc($this, other) {
    if (!(other instanceof TransformOrigin))
      return false;
    var tmp0_other_with_cast = other instanceof TransformOrigin ? other.v4w_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function TransformOrigin(packedValue) {
    Companion_getInstance_17();
    this.v4w_1 = packedValue;
  }
  protoOf(TransformOrigin).toString = function () {
    return TransformOrigin__toString_impl_nn7ftd(this.v4w_1);
  };
  protoOf(TransformOrigin).hashCode = function () {
    return TransformOrigin__hashCode_impl_pmqpcw(this.v4w_1);
  };
  protoOf(TransformOrigin).equals = function (other) {
    return TransformOrigin__equals_impl_jrzhoc(this.v4w_1, other);
  };
  function TransformOrigin_0(pivotFractionX, pivotFractionY) {
    // Inline function 'androidx.compose.ui.util.packFloats' call
    var v1 = toLong(toRawBits(pivotFractionX));
    var v2 = toLong(toRawBits(pivotFractionY));
    var tmp$ret$0 = v1.lb(32).pb(v2.ob(new Long(-1, 0)));
    return _TransformOrigin___init__impl__ats3ll(tmp$ret$0);
  }
  function _InputMode___init__impl__v9lqz8(value) {
    return value;
  }
  function InputMode__toString_impl_z22qz0($this) {
    return $this === Companion_getInstance_18().w4w_1 ? 'Touch' : $this === Companion_getInstance_18().x4w_1 ? 'Keyboard' : 'Error';
  }
  function Companion_4() {
    Companion_instance_8 = this;
    this.w4w_1 = _InputMode___init__impl__v9lqz8(1);
    this.x4w_1 = _InputMode___init__impl__v9lqz8(2);
  }
  var Companion_instance_8;
  function Companion_getInstance_18() {
    if (Companion_instance_8 == null)
      new Companion_4();
    return Companion_instance_8;
  }
  function InputMode__hashCode_impl_e7ve79($this) {
    return $this;
  }
  function InputMode__equals_impl_rgqy7z($this, other) {
    if (!(other instanceof InputMode))
      return false;
    if (!($this === (other instanceof InputMode ? other.y4w_1 : THROW_CCE())))
      return false;
    return true;
  }
  function InputMode(value) {
    Companion_getInstance_18();
    this.y4w_1 = value;
  }
  protoOf(InputMode).toString = function () {
    return InputMode__toString_impl_z22qz0(this.y4w_1);
  };
  protoOf(InputMode).hashCode = function () {
    return InputMode__hashCode_impl_e7ve79(this.y4w_1);
  };
  protoOf(InputMode).equals = function (other) {
    return InputMode__equals_impl_rgqy7z(this.y4w_1, other);
  };
  function _KeyEvent___init__impl__411tom(nativeKeyEvent) {
    return nativeKeyEvent;
  }
  function _KeyEvent___get_nativeKeyEvent__impl__py13j5($this) {
    return $this;
  }
  function KeyEvent__toString_impl_1f7sp2($this) {
    return 'KeyEvent(nativeKeyEvent=' + $this + ')';
  }
  function KeyEvent__hashCode_impl_kby43t($this) {
    return $this.hashCode();
  }
  function KeyEvent__equals_impl_vn1w6l($this, other) {
    if (!(other instanceof KeyEvent))
      return false;
    var tmp0_other_with_cast = other instanceof KeyEvent ? other.z4w_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function KeyEvent(nativeKeyEvent) {
    this.z4w_1 = nativeKeyEvent;
  }
  protoOf(KeyEvent).toString = function () {
    return KeyEvent__toString_impl_1f7sp2(this.z4w_1);
  };
  protoOf(KeyEvent).hashCode = function () {
    return KeyEvent__hashCode_impl_kby43t(this.z4w_1);
  };
  protoOf(KeyEvent).equals = function (other) {
    return KeyEvent__equals_impl_vn1w6l(this.z4w_1, other);
  };
  function _KeyEventType___init__impl__85599o(value) {
    return value;
  }
  function Companion_5() {
    Companion_instance_9 = this;
    this.l4o_1 = _KeyEventType___init__impl__85599o(0);
    this.m4o_1 = _KeyEventType___init__impl__85599o(1);
    this.n4o_1 = _KeyEventType___init__impl__85599o(2);
  }
  var Companion_instance_9;
  function Companion_getInstance_19() {
    if (Companion_instance_9 == null)
      new Companion_5();
    return Companion_instance_9;
  }
  function KeyInputElement(onKeyEvent, onPreKeyEvent) {
    ModifierNodeElement.call(this);
    this.b4x_1 = onKeyEvent;
    this.c4x_1 = onPreKeyEvent;
  }
  protoOf(KeyInputElement).i29 = function () {
    return new KeyInputNode(this.b4x_1, this.c4x_1);
  };
  protoOf(KeyInputElement).d4x = function (node) {
    node.r4x_1 = this.b4x_1;
    node.s4x_1 = this.c4x_1;
  };
  protoOf(KeyInputElement).r4o = function (node) {
    return this.d4x(node instanceof KeyInputNode ? node : THROW_CCE());
  };
  protoOf(KeyInputElement).toString = function () {
    return 'KeyInputElement(onKeyEvent=' + this.b4x_1 + ', onPreKeyEvent=' + this.c4x_1 + ')';
  };
  protoOf(KeyInputElement).hashCode = function () {
    var result = this.b4x_1 == null ? 0 : hashCode(this.b4x_1);
    result = imul(result, 31) + (this.c4x_1 == null ? 0 : hashCode(this.c4x_1)) | 0;
    return result;
  };
  protoOf(KeyInputElement).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof KeyInputElement))
      return false;
    var tmp0_other_with_cast = other instanceof KeyInputElement ? other : THROW_CCE();
    if (!equals(this.b4x_1, tmp0_other_with_cast.b4x_1))
      return false;
    if (!equals(this.c4x_1, tmp0_other_with_cast.c4x_1))
      return false;
    return true;
  };
  function onKeyEvent(_this__u8e3s4, onKeyEvent) {
    return _this__u8e3s4.j4i(new KeyInputElement(onKeyEvent, null));
  }
  function KeyInputNode(onEvent, onPreEvent) {
    Node.call(this);
    this.r4x_1 = onEvent;
    this.s4x_1 = onPreEvent;
  }
  protoOf(KeyInputNode).i4p = function (event) {
    var tmp0_safe_receiver = this.r4x_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver(new KeyEvent(event));
    return tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
  };
  protoOf(KeyInputNode).h4p = function (event) {
    var tmp0_safe_receiver = this.s4x_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver(new KeyEvent(event));
    return tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
  };
  function KeyInputModifierNode() {
  }
  function SoftKeyboardInterceptionModifierNode() {
  }
  function HitPathTracker(rootCoordinates) {
    this.t4x_1 = rootCoordinates;
    this.u4x_1 = new NodeParent();
  }
  protoOf(HitPathTracker).v4x = function (pointerId, pointerInputNodes) {
    var parent = this.u4x_1;
    var merging = true;
    var inductionVariable = 0;
    var last = pointerInputNodes.m() - 1 | 0;
    if (inductionVariable <= last)
      eachPin: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var pointerInputNode = pointerInputNodes.n(i);
        if (merging) {
          var tmp$ret$1;
          $l$block: {
            // Inline function 'androidx.compose.runtime.collection.MutableVector.firstOrNull' call
            var this_0 = parent.w4x_1;
            // Inline function 'kotlin.contracts.contract' call
            var size = this_0.p1q_1;
            if (size > 0) {
              var i_0 = 0;
              var tmp = this_0.n1q_1;
              var content = isArray(tmp) ? tmp : THROW_CCE();
              do {
                var item = content[i_0];
                // Inline function 'androidx.compose.ui.input.pointer.HitPathTracker.addHitPath.<anonymous>' call
                if (equals(item.y4x_1, pointerInputNode)) {
                  tmp$ret$1 = item;
                  break $l$block;
                }
                i_0 = i_0 + 1 | 0;
              }
               while (i_0 < size);
            }
            tmp$ret$1 = null;
          }
          var node = tmp$ret$1;
          if (!(node == null)) {
            node.g4y();
            node.z4x_1.j4y(pointerId);
            parent = node;
            continue eachPin;
          } else {
            merging = false;
          }
        }
        // Inline function 'kotlin.apply' call
        var this_1 = new Node_0(pointerInputNode);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.input.pointer.HitPathTracker.addHitPath.<anonymous>' call
        this_1.z4x_1.j4y(pointerId);
        var node_0 = this_1;
        parent.w4x_1.q1q(node_0);
        parent = node_0;
      }
       while (inductionVariable <= last);
  };
  protoOf(HitPathTracker).k4y = function (internalPointerEvent, isInBounds) {
    var changed = this.u4x_1.s4y(internalPointerEvent.m4y_1, this.t4x_1, internalPointerEvent, isInBounds);
    if (!changed) {
      this.u4x_1.t4y();
      return false;
    }
    var dispatchHit = this.u4x_1.u4y(internalPointerEvent.m4y_1, this.t4x_1, internalPointerEvent, isInBounds);
    dispatchHit = this.u4x_1.v4y(internalPointerEvent) ? true : dispatchHit;
    return dispatchHit;
  };
  protoOf(HitPathTracker).w4y = function () {
    this.u4x_1.w4y();
  };
  function NodeParent() {
    var tmp = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp.w4x_1 = new MutableVector(tmp$ret$0, 0);
  }
  protoOf(NodeParent).s4y = function (changes, parentCoordinates, internalPointerEvent, isInBounds) {
    var changed = false;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    var this_0 = this.w4x_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.input.pointer.NodeParent.buildCache.<anonymous>' call
        changed = content[i].s4y(changes, parentCoordinates, internalPointerEvent, isInBounds) ? true : changed;
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return changed;
  };
  protoOf(NodeParent).u4y = function (changes, parentCoordinates, internalPointerEvent, isInBounds) {
    var dispatched = false;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    var this_0 = this.w4x_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.input.pointer.NodeParent.dispatchMainEventPass.<anonymous>' call
        dispatched = content[i].u4y(changes, parentCoordinates, internalPointerEvent, isInBounds) ? true : dispatched;
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return dispatched;
  };
  protoOf(NodeParent).v4y = function (internalPointerEvent) {
    var dispatched = false;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    var this_0 = this.w4x_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.input.pointer.NodeParent.dispatchFinalEventPass.<anonymous>' call
        dispatched = content[i].v4y(internalPointerEvent) ? true : dispatched;
        i = i + 1 | 0;
      }
       while (i < size);
    }
    this.x4y(internalPointerEvent);
    this.t4y();
    return dispatched;
  };
  protoOf(NodeParent).w4y = function () {
    var index = 0;
    while (index < this.w4x_1.p1q_1) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
      var this_0 = this.w4x_1;
      var index_0 = index;
      var tmp = this_0.n1q_1[index_0];
      var child = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
      if (!child.y4x_1.b4j_1) {
        this.w4x_1.m1(index);
        child.y4y();
      } else {
        index = index + 1 | 0;
        child.w4y();
      }
    }
  };
  protoOf(NodeParent).x4y = function (internalPointerEvent) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    var inductionVariable = this.w4x_1.p1q_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var tmp = this.w4x_1.n1q_1[i];
        var child = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (child.z4x_1.u()) {
          this.w4x_1.m1(i);
        }
      }
       while (0 <= inductionVariable);
  };
  protoOf(NodeParent).t4y = function () {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    var this_0 = this.w4x_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.input.pointer.NodeParent.cleanUpHover.<anonymous>' call
        content[i].t4y();
        i = i + 1 | 0;
      }
       while (i < size);
    }
  };
  function hasPositionChanged($this, oldEvent, newEvent) {
    if (oldEvent == null ? true : !(oldEvent.z4y_1.m() === newEvent.z4y_1.m())) {
      return true;
    }
    var inductionVariable = 0;
    var last = newEvent.z4y_1.m();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var old = oldEvent.z4y_1.n(i);
        var current = newEvent.z4y_1.n(i);
        if (!equals(old.h4z_1, current.h4z_1)) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  }
  function clearCache($this) {
    $this.c4y_1.h1();
    $this.d4y_1 = null;
  }
  function Node_0(modifierNode) {
    NodeParent.call(this);
    this.y4x_1 = modifierNode;
    this.z4x_1 = new PointerIdArray();
    this.a4y_1 = true;
    this.b4y_1 = false;
    this.c4y_1 = new LongSparseArray(2);
    this.d4y_1 = null;
    this.e4y_1 = null;
    var tmp = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp.f4y_1 = new MutableVector(tmp$ret$0, 0);
  }
  protoOf(Node_0).u4y = function (changes, parentCoordinates, internalPointerEvent, isInBounds) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchIfNeeded' call
      if (this.c4y_1.u()) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      if (!this.y4x_1.b4j_1) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchMainEventPass.<anonymous>' call
      var event = ensureNotNull(this.e4y_1);
      var size = ensureNotNull(this.d4y_1).d2y();
      // Inline function 'androidx.compose.ui.node.dispatchForKind' call
      var this_0 = this.y4x_1;
      // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
      var kind = _NodeKind___init__impl__ojsprp(16);
      var stack = null;
      var node = this_0;
      $l$loop: while (!(node == null)) {
        if (!(node == null) ? isInterface(node, PointerInputModifierNode) : false) {
          // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchMainEventPass.<anonymous>.<anonymous>' call
          node.s4z(event, PointerEventPass_Initial_getInstance(), size);
        } else {
          var tmp;
          // Inline function 'androidx.compose.ui.Node.isKind' call
          if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
            tmp = node instanceof DelegatingNode;
          } else {
            tmp = false;
          }
          if (tmp) {
            var count = 0;
            // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
            var node_0 = node.b4m_1;
            while (!(node_0 == null)) {
              // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
              var next = node_0;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
                count = count + 1 | 0;
                if (count === 1) {
                  node = next;
                } else {
                  var tmp1_elvis_lhs = stack;
                  var tmp_0;
                  if (tmp1_elvis_lhs == null) {
                    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                    // Inline function 'kotlin.arrayOfNulls' call
                    var tmp$ret$4 = fillArrayVal(Array(16), null);
                    tmp_0 = new MutableVector(tmp$ret$4, 0);
                  } else {
                    tmp_0 = tmp1_elvis_lhs;
                  }
                  stack = tmp_0;
                  var theNode = node;
                  if (!(theNode == null)) {
                    var tmp2_safe_receiver = stack;
                    if (tmp2_safe_receiver == null)
                      null;
                    else
                      tmp2_safe_receiver.q1q(theNode);
                    node = null;
                  }
                  var tmp3_safe_receiver = stack;
                  if (tmp3_safe_receiver == null)
                    null;
                  else
                    tmp3_safe_receiver.q1q(next);
                }
              }
              node_0 = node_0.u4i_1;
            }
            if (count === 1) {
              continue $l$loop;
            }
          }
        }
        node = pop$accessor$hxafa1(stack);
      }
      if (this.y4x_1.b4j_1) {
        // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
        var this_1 = this.w4x_1;
        // Inline function 'kotlin.contracts.contract' call
        var size_0 = this_1.p1q_1;
        if (size_0 > 0) {
          var i = 0;
          var tmp_1 = this_1.n1q_1;
          var content = isArray(tmp_1) ? tmp_1 : THROW_CCE();
          do {
            // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchMainEventPass.<anonymous>.<anonymous>' call
            content[i].u4y(this.c4y_1, ensureNotNull(this.d4y_1), internalPointerEvent, isInBounds);
            i = i + 1 | 0;
          }
           while (i < size_0);
        }
      }
      if (this.y4x_1.b4j_1) {
        // Inline function 'androidx.compose.ui.node.dispatchForKind' call
        var this_2 = this.y4x_1;
        // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
        var kind_0 = _NodeKind___init__impl__ojsprp(16);
        var stack_0 = null;
        var node_1 = this_2;
        $l$loop_0: while (!(node_1 == null)) {
          if (!(node_1 == null) ? isInterface(node_1, PointerInputModifierNode) : false) {
            // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchMainEventPass.<anonymous>.<anonymous>' call
            node_1.s4z(event, PointerEventPass_Main_getInstance(), size);
          } else {
            var tmp_2;
            // Inline function 'androidx.compose.ui.Node.isKind' call
            if (!((node_1.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_0)) === 0)) {
              tmp_2 = node_1 instanceof DelegatingNode;
            } else {
              tmp_2 = false;
            }
            if (tmp_2) {
              var count_0 = 0;
              // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
              var node_2 = node_1.b4m_1;
              while (!(node_2 == null)) {
                // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                var next_0 = node_2;
                // Inline function 'androidx.compose.ui.Node.isKind' call
                if (!((next_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_0)) === 0)) {
                  count_0 = count_0 + 1 | 0;
                  if (count_0 === 1) {
                    node_1 = next_0;
                  } else {
                    var tmp1_elvis_lhs_0 = stack_0;
                    var tmp_3;
                    if (tmp1_elvis_lhs_0 == null) {
                      // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                      // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                      // Inline function 'kotlin.arrayOfNulls' call
                      var tmp$ret$10 = fillArrayVal(Array(16), null);
                      tmp_3 = new MutableVector(tmp$ret$10, 0);
                    } else {
                      tmp_3 = tmp1_elvis_lhs_0;
                    }
                    stack_0 = tmp_3;
                    var theNode_0 = node_1;
                    if (!(theNode_0 == null)) {
                      var tmp2_safe_receiver_0 = stack_0;
                      if (tmp2_safe_receiver_0 == null)
                        null;
                      else
                        tmp2_safe_receiver_0.q1q(theNode_0);
                      node_1 = null;
                    }
                    var tmp3_safe_receiver_0 = stack_0;
                    if (tmp3_safe_receiver_0 == null)
                      null;
                    else
                      tmp3_safe_receiver_0.q1q(next_0);
                  }
                }
                node_2 = node_2.u4i_1;
              }
              if (count_0 === 1) {
                continue $l$loop_0;
              }
            }
          }
          node_1 = pop$accessor$hxafa1(stack_0);
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(Node_0).v4y = function (internalPointerEvent) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchIfNeeded' call
      if (this.c4y_1.u()) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      if (!this.y4x_1.b4j_1) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchFinalEventPass.<anonymous>' call
      var event = ensureNotNull(this.e4y_1);
      var size = ensureNotNull(this.d4y_1).d2y();
      // Inline function 'androidx.compose.ui.node.dispatchForKind' call
      var this_0 = this.y4x_1;
      // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
      var kind = _NodeKind___init__impl__ojsprp(16);
      var stack = null;
      var node = this_0;
      $l$loop: while (!(node == null)) {
        if (!(node == null) ? isInterface(node, PointerInputModifierNode) : false) {
          // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchFinalEventPass.<anonymous>.<anonymous>' call
          node.s4z(event, PointerEventPass_Final_getInstance(), size);
        } else {
          var tmp;
          // Inline function 'androidx.compose.ui.Node.isKind' call
          if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
            tmp = node instanceof DelegatingNode;
          } else {
            tmp = false;
          }
          if (tmp) {
            var count = 0;
            // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
            var node_0 = node.b4m_1;
            while (!(node_0 == null)) {
              // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
              var next = node_0;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
                count = count + 1 | 0;
                if (count === 1) {
                  node = next;
                } else {
                  var tmp1_elvis_lhs = stack;
                  var tmp_0;
                  if (tmp1_elvis_lhs == null) {
                    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                    // Inline function 'kotlin.arrayOfNulls' call
                    var tmp$ret$4 = fillArrayVal(Array(16), null);
                    tmp_0 = new MutableVector(tmp$ret$4, 0);
                  } else {
                    tmp_0 = tmp1_elvis_lhs;
                  }
                  stack = tmp_0;
                  var theNode = node;
                  if (!(theNode == null)) {
                    var tmp2_safe_receiver = stack;
                    if (tmp2_safe_receiver == null)
                      null;
                    else
                      tmp2_safe_receiver.q1q(theNode);
                    node = null;
                  }
                  var tmp3_safe_receiver = stack;
                  if (tmp3_safe_receiver == null)
                    null;
                  else
                    tmp3_safe_receiver.q1q(next);
                }
              }
              node_0 = node_0.u4i_1;
            }
            if (count === 1) {
              continue $l$loop;
            }
          }
        }
        node = pop$accessor$hxafa1(stack);
      }
      if (this.y4x_1.b4j_1) {
        // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
        var this_1 = this.w4x_1;
        // Inline function 'kotlin.contracts.contract' call
        var size_0 = this_1.p1q_1;
        if (size_0 > 0) {
          var i = 0;
          var tmp_1 = this_1.n1q_1;
          var content = isArray(tmp_1) ? tmp_1 : THROW_CCE();
          do {
            // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchFinalEventPass.<anonymous>.<anonymous>' call
            content[i].v4y(internalPointerEvent);
            i = i + 1 | 0;
          }
           while (i < size_0);
        }
      }
      tmp$ret$0 = true;
    }
    var result = tmp$ret$0;
    this.x4y(internalPointerEvent);
    clearCache(this);
    return result;
  };
  protoOf(Node_0).s4y = function (changes, parentCoordinates, internalPointerEvent, isInBounds) {
    var childChanged = protoOf(NodeParent).s4y.call(this, changes, parentCoordinates, internalPointerEvent, isInBounds);
    if (!this.y4x_1.b4j_1)
      return true;
    // Inline function 'androidx.compose.ui.node.dispatchForKind' call
    var this_0 = this.y4x_1;
    // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
    var kind = _NodeKind___init__impl__ojsprp(16);
    var stack = null;
    var node = this_0;
    $l$loop: while (!(node == null)) {
      if (!(node == null) ? isInterface(node, PointerInputModifierNode) : false) {
        // Inline function 'androidx.compose.ui.input.pointer.Node.buildCache.<anonymous>' call
        var it = node;
        this.d4y_1 = get_layoutCoordinates(it);
      } else {
        var tmp;
        // Inline function 'androidx.compose.ui.Node.isKind' call
        if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
          tmp = node instanceof DelegatingNode;
        } else {
          tmp = false;
        }
        if (tmp) {
          var count = 0;
          // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
          var node_0 = node.b4m_1;
          while (!(node_0 == null)) {
            // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
            var next = node_0;
            // Inline function 'androidx.compose.ui.Node.isKind' call
            if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
              count = count + 1 | 0;
              if (count === 1) {
                node = next;
              } else {
                var tmp1_elvis_lhs = stack;
                var tmp_0;
                if (tmp1_elvis_lhs == null) {
                  // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                  // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                  // Inline function 'kotlin.arrayOfNulls' call
                  var tmp$ret$3 = fillArrayVal(Array(16), null);
                  tmp_0 = new MutableVector(tmp$ret$3, 0);
                } else {
                  tmp_0 = tmp1_elvis_lhs;
                }
                stack = tmp_0;
                var theNode = node;
                if (!(theNode == null)) {
                  var tmp2_safe_receiver = stack;
                  if (tmp2_safe_receiver == null)
                    null;
                  else
                    tmp2_safe_receiver.q1q(theNode);
                  node = null;
                }
                var tmp3_safe_receiver = stack;
                if (tmp3_safe_receiver == null)
                  null;
                else
                  tmp3_safe_receiver.q1q(next);
              }
            }
            node_0 = node_0.u4i_1;
          }
          if (count === 1) {
            continue $l$loop;
          }
        }
      }
      node = pop$accessor$hxafa1(stack);
    }
    var inductionVariable = 0;
    var last = changes.ko();
    if (inductionVariable < last)
      do {
        var j = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var keyValue = changes.lo(j);
        var change = changes.mo(j);
        if (this.z4x_1.em(keyValue)) {
          var historical = ArrayList_init_$Create$_0(change.t4z().m());
          // Inline function 'androidx.compose.ui.util.fastForEach' call
          var this_1 = change.t4z();
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable_0 = 0;
          var last_0 = this_1.m() - 1 | 0;
          if (inductionVariable_0 <= last_0)
            do {
              var index = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              var item = this_1.n(index);
              // Inline function 'androidx.compose.ui.input.pointer.Node.buildCache.<anonymous>' call
              historical.a1(HistoricalChange_init_$Create$(item.u4z_1, ensureNotNull(this.d4y_1).x4z(parentCoordinates, item.v4z_1), item.w4z_1));
            }
             while (inductionVariable_0 <= last_0);
          var tmp1_previousPosition = ensureNotNull(this.d4y_1).x4z(parentCoordinates, change.l4z_1);
          var tmp2_currentPosition = ensureNotNull(this.d4y_1).x4z(parentCoordinates, change.h4z_1);
          this.c4y_1.jo(keyValue, change.y4z(VOID, VOID, tmp2_currentPosition, VOID, VOID, tmp1_previousPosition, VOID, VOID, historical));
        }
      }
       while (inductionVariable < last);
    if (this.c4y_1.u()) {
      this.z4x_1.h1();
      this.w4x_1.h1();
      return true;
    }
    // Inline function 'androidx.compose.ui.input.pointer.util.PointerIdArray.lastIndex' call
    var inductionVariable_1 = this.z4x_1.h4y_1 - 1 | 0;
    if (0 <= inductionVariable_1)
      do {
        var i = inductionVariable_1;
        inductionVariable_1 = inductionVariable_1 + -1 | 0;
        var pointerId = this.z4x_1.z4z(i);
        if (!changes.oo(_PointerId___get_value__impl__odqw2d(pointerId))) {
          this.z4x_1.m1(i);
        }
      }
       while (0 <= inductionVariable_1);
    var changesList = ArrayList_init_$Create$_0(this.c4y_1.ko());
    var inductionVariable_2 = 0;
    var last_1 = this.c4y_1.ko();
    if (inductionVariable_2 < last_1)
      do {
        var i_0 = inductionVariable_2;
        inductionVariable_2 = inductionVariable_2 + 1 | 0;
        changesList.a1(this.c4y_1.mo(i_0));
      }
       while (inductionVariable_2 < last_1);
    var event = PointerEvent_init_$Create$(changesList, internalPointerEvent);
    var tmp$ret$8;
    $l$block: {
      // Inline function 'androidx.compose.ui.util.fastFirstOrNull' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.util.fastForEach' call
      var this_2 = event.z4y_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable_3 = 0;
      var last_2 = this_2.m() - 1 | 0;
      if (inductionVariable_3 <= last_2)
        do {
          var index_0 = inductionVariable_3;
          inductionVariable_3 = inductionVariable_3 + 1 | 0;
          var item_0 = this_2.n(index_0);
          // Inline function 'androidx.compose.ui.util.fastFirstOrNull.<anonymous>' call
          // Inline function 'androidx.compose.ui.input.pointer.Node.buildCache.<anonymous>' call
          if (internalPointerEvent.a50(item_0.f4z_1)) {
            tmp$ret$8 = item_0;
            break $l$block;
          }
        }
         while (inductionVariable_3 <= last_2);
      tmp$ret$8 = null;
    }
    var enterExitChange = tmp$ret$8;
    if (!(enterExitChange == null)) {
      if (!isInBounds) {
        this.a4y_1 = false;
      } else if (!this.a4y_1 ? enterExitChange.i4z_1 ? true : enterExitChange.m4z_1 : false) {
        var size = ensureNotNull(this.d4y_1).d2y();
        this.a4y_1 = !isOutOfBounds(enterExitChange, size);
      }
      if ((event.e4z_1 === Companion_getInstance_20().e50_1 ? true : event.e4z_1 === Companion_getInstance_20().f50_1) ? true : event.e4z_1 === Companion_getInstance_20().g50_1) {
        event.e4z_1 = (!this.b4y_1 ? this.a4y_1 : false) ? Companion_getInstance_20().f50_1 : (this.b4y_1 ? !this.a4y_1 : false) ? Companion_getInstance_20().g50_1 : Companion_getInstance_20().e50_1;
      }
      if (event.e4z_1 === Companion_getInstance_20().f50_1)
        this.b4y_1 = true;
      if (event.e4z_1 === Companion_getInstance_20().g50_1)
        this.b4y_1 = false;
    }
    var changed = (childChanged ? true : !(event.e4z_1 === Companion_getInstance_20().e50_1)) ? true : hasPositionChanged(this, this.e4y_1, event);
    this.e4y_1 = event;
    return changed;
  };
  protoOf(Node_0).y4y = function () {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    var this_0 = this.w4x_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchCancel.<anonymous>' call
        content[i].y4y();
        i = i + 1 | 0;
      }
       while (i < size);
    }
    // Inline function 'androidx.compose.ui.node.dispatchForKind' call
    var this_1 = this.y4x_1;
    // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
    var kind = _NodeKind___init__impl__ojsprp(16);
    var stack = null;
    var node = this_1;
    $l$loop: while (!(node == null)) {
      if (!(node == null) ? isInterface(node, PointerInputModifierNode) : false) {
        // Inline function 'androidx.compose.ui.input.pointer.Node.dispatchCancel.<anonymous>' call
        node.i50();
      } else {
        var tmp_0;
        // Inline function 'androidx.compose.ui.Node.isKind' call
        if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
          tmp_0 = node instanceof DelegatingNode;
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          var count = 0;
          // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
          var node_0 = node.b4m_1;
          while (!(node_0 == null)) {
            // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
            var next = node_0;
            // Inline function 'androidx.compose.ui.Node.isKind' call
            if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
              count = count + 1 | 0;
              if (count === 1) {
                node = next;
              } else {
                var tmp1_elvis_lhs = stack;
                var tmp_1;
                if (tmp1_elvis_lhs == null) {
                  // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                  // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                  // Inline function 'kotlin.arrayOfNulls' call
                  var tmp$ret$3 = fillArrayVal(Array(16), null);
                  tmp_1 = new MutableVector(tmp$ret$3, 0);
                } else {
                  tmp_1 = tmp1_elvis_lhs;
                }
                stack = tmp_1;
                var theNode = node;
                if (!(theNode == null)) {
                  var tmp2_safe_receiver = stack;
                  if (tmp2_safe_receiver == null)
                    null;
                  else
                    tmp2_safe_receiver.q1q(theNode);
                  node = null;
                }
                var tmp3_safe_receiver = stack;
                if (tmp3_safe_receiver == null)
                  null;
                else
                  tmp3_safe_receiver.q1q(next);
              }
            }
            node_0 = node_0.u4i_1;
          }
          if (count === 1) {
            continue $l$loop;
          }
        }
      }
      node = pop$accessor$hxafa1(stack);
    }
  };
  protoOf(Node_0).g4y = function () {
    this.a4y_1 = true;
  };
  protoOf(Node_0).x4y = function (internalPointerEvent) {
    protoOf(NodeParent).x4y.call(this, internalPointerEvent);
    var tmp0_elvis_lhs = this.e4y_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_instance;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var event = tmp;
    // Inline function 'androidx.compose.ui.util.fastForEach' call
    var this_0 = event.z4y_1;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = this_0.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = this_0.n(index);
        // Inline function 'androidx.compose.ui.input.pointer.Node.cleanUpHits.<anonymous>' call
        var remove = !item.i4z_1 ? !internalPointerEvent.a50(item.f4z_1) ? true : !this.a4y_1 : false;
        if (remove) {
          this.z4x_1.j50(item.f4z_1);
        }
      }
       while (inductionVariable <= last);
  };
  protoOf(Node_0).t4y = function () {
    protoOf(NodeParent).t4y.call(this);
    this.a4y_1 = false;
  };
  protoOf(Node_0).toString = function () {
    return 'Node(pointerInputFilter=' + this.y4x_1 + ', children=' + this.w4x_1 + ', ' + ('pointerIds=' + this.z4x_1 + ')');
  };
  function PointerInputEventData(id, uptime, positionOnScreen, position, down, pressure, type, issuesEnterExit, historical, scrollDelta, originalEventPosition) {
    issuesEnterExit = issuesEnterExit === VOID ? false : issuesEnterExit;
    var tmp;
    if (historical === VOID) {
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp = ArrayList_init_$Create$();
    } else {
      tmp = historical;
    }
    historical = tmp;
    scrollDelta = scrollDelta === VOID ? Companion_getInstance_2().v2v_1 : scrollDelta;
    originalEventPosition = originalEventPosition === VOID ? Companion_getInstance_2().v2v_1 : originalEventPosition;
    this.k50_1 = id;
    this.l50_1 = uptime;
    this.m50_1 = positionOnScreen;
    this.n50_1 = position;
    this.o50_1 = down;
    this.p50_1 = pressure;
    this.q50_1 = type;
    this.r50_1 = issuesEnterExit;
    this.s50_1 = historical;
    this.t50_1 = scrollDelta;
    this.u50_1 = originalEventPosition;
  }
  protoOf(PointerInputEventData).toString = function () {
    return 'PointerInputEventData(id=' + new PointerId(this.k50_1) + ', uptime=' + this.l50_1.toString() + ', positionOnScreen=' + new Offset(this.m50_1) + ', position=' + new Offset(this.n50_1) + ', down=' + this.o50_1 + ', pressure=' + this.p50_1 + ', type=' + new PointerType(this.q50_1) + ', issuesEnterExit=' + this.r50_1 + ', historical=' + this.s50_1 + ', scrollDelta=' + new Offset(this.t50_1) + ', originalEventPosition=' + new Offset(this.u50_1) + ')';
  };
  protoOf(PointerInputEventData).hashCode = function () {
    var result = PointerId__hashCode_impl_vobdra(this.k50_1);
    result = imul(result, 31) + this.l50_1.hashCode() | 0;
    result = imul(result, 31) + Offset__hashCode_impl_hbql41(this.m50_1) | 0;
    result = imul(result, 31) + Offset__hashCode_impl_hbql41(this.n50_1) | 0;
    result = imul(result, 31) + getBooleanHashCode(this.o50_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.p50_1) | 0;
    result = imul(result, 31) + PointerType__hashCode_impl_d0afh7(this.q50_1) | 0;
    result = imul(result, 31) + getBooleanHashCode(this.r50_1) | 0;
    result = imul(result, 31) + hashCode(this.s50_1) | 0;
    result = imul(result, 31) + Offset__hashCode_impl_hbql41(this.t50_1) | 0;
    result = imul(result, 31) + Offset__hashCode_impl_hbql41(this.u50_1) | 0;
    return result;
  };
  protoOf(PointerInputEventData).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PointerInputEventData))
      return false;
    var tmp0_other_with_cast = other instanceof PointerInputEventData ? other : THROW_CCE();
    if (!equals(this.k50_1, tmp0_other_with_cast.k50_1))
      return false;
    if (!this.l50_1.equals(tmp0_other_with_cast.l50_1))
      return false;
    if (!equals(this.m50_1, tmp0_other_with_cast.m50_1))
      return false;
    if (!equals(this.n50_1, tmp0_other_with_cast.n50_1))
      return false;
    if (!(this.o50_1 === tmp0_other_with_cast.o50_1))
      return false;
    if (!equals(this.p50_1, tmp0_other_with_cast.p50_1))
      return false;
    if (!(this.q50_1 === tmp0_other_with_cast.q50_1))
      return false;
    if (!(this.r50_1 === tmp0_other_with_cast.r50_1))
      return false;
    if (!equals(this.s50_1, tmp0_other_with_cast.s50_1))
      return false;
    if (!equals(this.t50_1, tmp0_other_with_cast.t50_1))
      return false;
    if (!equals(this.u50_1, tmp0_other_with_cast.u50_1))
      return false;
    return true;
  };
  function PointerInputChange_init_$Init$(id, uptimeMillis, position, pressed, pressure, previousUptimeMillis, previousPosition, previousPressed, isInitiallyConsumed, type, historical, scrollDelta, originalEventPosition, $this) {
    PointerInputChange.call($this, id, uptimeMillis, position, pressed, pressure, previousUptimeMillis, previousPosition, previousPressed, isInitiallyConsumed, type, scrollDelta);
    $this.p4z_1 = historical;
    $this.q4z_1 = originalEventPosition;
    return $this;
  }
  function PointerInputChange_init_$Create$(id, uptimeMillis, position, pressed, pressure, previousUptimeMillis, previousPosition, previousPressed, isInitiallyConsumed, type, historical, scrollDelta, originalEventPosition) {
    return PointerInputChange_init_$Init$(id, uptimeMillis, position, pressed, pressure, previousUptimeMillis, previousPosition, previousPressed, isInitiallyConsumed, type, historical, scrollDelta, originalEventPosition, objectCreate(protoOf(PointerInputChange)));
  }
  function PointerInputChange(id, uptimeMillis, position, pressed, pressure, previousUptimeMillis, previousPosition, previousPressed, isInitiallyConsumed, type, scrollDelta) {
    type = type === VOID ? Companion_getInstance_21().w50_1 : type;
    scrollDelta = scrollDelta === VOID ? Companion_getInstance_2().v2v_1 : scrollDelta;
    this.f4z_1 = id;
    this.g4z_1 = uptimeMillis;
    this.h4z_1 = position;
    this.i4z_1 = pressed;
    this.j4z_1 = pressure;
    this.k4z_1 = previousUptimeMillis;
    this.l4z_1 = previousPosition;
    this.m4z_1 = previousPressed;
    this.n4z_1 = type;
    this.o4z_1 = scrollDelta;
    this.p4z_1 = null;
    this.q4z_1 = Companion_getInstance_2().v2v_1;
    this.r4z_1 = new ConsumedData(isInitiallyConsumed, isInitiallyConsumed);
  }
  protoOf(PointerInputChange).t4z = function () {
    var tmp0_elvis_lhs = this.p4z_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.collections.listOf' call
      tmp = emptyList();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(PointerInputChange).a51 = function () {
    return this.r4z_1.c51_1 ? true : this.r4z_1.b51_1;
  };
  protoOf(PointerInputChange).d51 = function () {
    this.r4z_1.c51_1 = true;
    this.r4z_1.b51_1 = true;
  };
  protoOf(PointerInputChange).e51 = function (id, currentTime, currentPosition, currentPressed, previousTime, previousPosition, previousPressed, type, historical, scrollDelta) {
    return this.f51(id, currentTime, currentPosition, VOID, currentPressed, this.j4z_1, previousTime, previousPosition, previousPressed, type, historical, scrollDelta);
  };
  protoOf(PointerInputChange).y4z = function (id, currentTime, currentPosition, currentPressed, previousTime, previousPosition, previousPressed, type, historical, scrollDelta, $super) {
    id = id === VOID ? this.f4z_1 : id;
    currentTime = currentTime === VOID ? this.g4z_1 : currentTime;
    currentPosition = currentPosition === VOID ? this.h4z_1 : currentPosition;
    currentPressed = currentPressed === VOID ? this.i4z_1 : currentPressed;
    previousTime = previousTime === VOID ? this.k4z_1 : previousTime;
    previousPosition = previousPosition === VOID ? this.l4z_1 : previousPosition;
    previousPressed = previousPressed === VOID ? this.m4z_1 : previousPressed;
    type = type === VOID ? this.n4z_1 : type;
    scrollDelta = scrollDelta === VOID ? this.o4z_1 : scrollDelta;
    return $super === VOID ? this.e51(id, currentTime, currentPosition, currentPressed, previousTime, previousPosition, previousPressed, type, historical, scrollDelta) : $super.e51.call(this, new PointerId(id), currentTime, new Offset(currentPosition), currentPressed, previousTime, new Offset(previousPosition), previousPressed, new PointerType(type), historical, new Offset(scrollDelta));
  };
  protoOf(PointerInputChange).g51 = function (id, currentTime, currentPosition, originalEventPosition, currentPressed, pressure, previousTime, previousPosition, previousPressed, type, historical, scrollDelta) {
    // Inline function 'kotlin.also' call
    var this_0 = PointerInputChange_init_$Create$(id, currentTime, currentPosition, currentPressed, pressure, previousTime, previousPosition, previousPressed, false, type, historical, scrollDelta, originalEventPosition);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.input.pointer.PointerInputChange.copy.<anonymous>' call
    this_0.r4z_1 = this.r4z_1;
    return this_0;
  };
  protoOf(PointerInputChange).f51 = function (id, currentTime, currentPosition, originalEventPosition, currentPressed, pressure, previousTime, previousPosition, previousPressed, type, historical, scrollDelta, $super) {
    id = id === VOID ? this.f4z_1 : id;
    currentTime = currentTime === VOID ? this.g4z_1 : currentTime;
    currentPosition = currentPosition === VOID ? this.h4z_1 : currentPosition;
    originalEventPosition = originalEventPosition === VOID ? this.q4z_1 : originalEventPosition;
    currentPressed = currentPressed === VOID ? this.i4z_1 : currentPressed;
    pressure = pressure === VOID ? this.j4z_1 : pressure;
    previousTime = previousTime === VOID ? this.k4z_1 : previousTime;
    previousPosition = previousPosition === VOID ? this.l4z_1 : previousPosition;
    previousPressed = previousPressed === VOID ? this.m4z_1 : previousPressed;
    type = type === VOID ? this.n4z_1 : type;
    historical = historical === VOID ? this.t4z() : historical;
    scrollDelta = scrollDelta === VOID ? this.o4z_1 : scrollDelta;
    return $super === VOID ? this.g51(id, currentTime, currentPosition, originalEventPosition, currentPressed, pressure, previousTime, previousPosition, previousPressed, type, historical, scrollDelta) : $super.g51.call(this, new PointerId(id), currentTime, new Offset(currentPosition), new Offset(originalEventPosition), currentPressed, pressure, previousTime, new Offset(previousPosition), previousPressed, new PointerType(type), historical, new Offset(scrollDelta));
  };
  protoOf(PointerInputChange).toString = function () {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.input.pointer.PointerInputChange.toString.<anonymous>' call
    this_0.x5('PointerInputChange(id=' + new PointerId(this.f4z_1) + ', ');
    this_0.x5('uptimeMillis=' + this.g4z_1.toString() + ', ');
    this_0.x5('position=' + new Offset(this.h4z_1) + ', ');
    this_0.x5('pressed=' + this.i4z_1 + ', ');
    this_0.x5('pressure=' + this.j4z_1 + ', ');
    this_0.x5('previousUptimeMillis=' + this.k4z_1.toString() + ', ');
    this_0.x5('previousPosition=' + new Offset(this.l4z_1) + ', ');
    this_0.x5('previousPressed=' + this.m4z_1 + ', ');
    this_0.x5('isConsumed=' + this.a51() + ', ');
    this_0.x5('type=' + new PointerType(this.n4z_1) + ', ');
    this_0.x5('historical=' + this.t4z() + ',');
    this_0.x5('scrollDelta=' + new Offset(this.o4z_1) + ')');
    return this_0.toString();
  };
  function PointerInputModifier() {
  }
  var PointerEventPass_Initial_instance;
  var PointerEventPass_Main_instance;
  var PointerEventPass_Final_instance;
  var PointerEventPass_entriesInitialized;
  function PointerEventPass_initEntries() {
    if (PointerEventPass_entriesInitialized)
      return Unit_instance;
    PointerEventPass_entriesInitialized = true;
    PointerEventPass_Initial_instance = new PointerEventPass('Initial', 0);
    PointerEventPass_Main_instance = new PointerEventPass('Main', 1);
    PointerEventPass_Final_instance = new PointerEventPass('Final', 2);
  }
  function PointerEventPass(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function _PointerButtons___init__impl__wq04zh(packedValue) {
    return packedValue;
  }
  function _PointerButtons___get_packedValue__impl__z09y3b($this) {
    return $this;
  }
  function PointerButtons__toString_impl_sncyql($this) {
    return 'PointerButtons(packedValue=' + $this + ')';
  }
  function PointerButtons__hashCode_impl_6w71xq($this) {
    return $this;
  }
  function PointerButtons__equals_impl_817jpy($this, other) {
    if (!(other instanceof PointerButtons))
      return false;
    if (!($this === (other instanceof PointerButtons ? other.i51_1 : THROW_CCE())))
      return false;
    return true;
  }
  function PointerButtons(packedValue) {
    this.i51_1 = packedValue;
  }
  protoOf(PointerButtons).toString = function () {
    return PointerButtons__toString_impl_sncyql(this.i51_1);
  };
  protoOf(PointerButtons).hashCode = function () {
    return PointerButtons__hashCode_impl_6w71xq(this.i51_1);
  };
  protoOf(PointerButtons).equals = function (other) {
    return PointerButtons__equals_impl_817jpy(this.i51_1, other);
  };
  function _PointerKeyboardModifiers___init__impl__bj99nt(packedValue) {
    return packedValue;
  }
  function _PointerKeyboardModifiers___get_packedValue__impl__7vcep7($this) {
    return $this;
  }
  function PointerKeyboardModifiers__toString_impl_rpr9l5($this) {
    return 'PointerKeyboardModifiers(packedValue=' + $this + ')';
  }
  function PointerKeyboardModifiers__hashCode_impl_5ylcsa($this) {
    return $this;
  }
  function PointerKeyboardModifiers__equals_impl_ekziza($this, other) {
    if (!(other instanceof PointerKeyboardModifiers))
      return false;
    if (!($this === (other instanceof PointerKeyboardModifiers ? other.j51_1 : THROW_CCE())))
      return false;
    return true;
  }
  function PointerKeyboardModifiers(packedValue) {
    this.j51_1 = packedValue;
  }
  protoOf(PointerKeyboardModifiers).toString = function () {
    return PointerKeyboardModifiers__toString_impl_rpr9l5(this.j51_1);
  };
  protoOf(PointerKeyboardModifiers).hashCode = function () {
    return PointerKeyboardModifiers__hashCode_impl_5ylcsa(this.j51_1);
  };
  protoOf(PointerKeyboardModifiers).equals = function (other) {
    return PointerKeyboardModifiers__equals_impl_ekziza(this.j51_1, other);
  };
  function _PointerEventType___init__impl__k0lsty(value) {
    return value;
  }
  function Companion_6() {
    Companion_instance_10 = this;
    this.b50_1 = _PointerEventType___init__impl__k0lsty(0);
    this.c50_1 = _PointerEventType___init__impl__k0lsty(1);
    this.d50_1 = _PointerEventType___init__impl__k0lsty(2);
    this.e50_1 = _PointerEventType___init__impl__k0lsty(3);
    this.f50_1 = _PointerEventType___init__impl__k0lsty(4);
    this.g50_1 = _PointerEventType___init__impl__k0lsty(5);
    this.h50_1 = _PointerEventType___init__impl__k0lsty(6);
  }
  var Companion_instance_10;
  function Companion_getInstance_20() {
    if (Companion_instance_10 == null)
      new Companion_6();
    return Companion_instance_10;
  }
  function PointerEventType__toString_impl_o7j1va($this) {
    return $this === Companion_getInstance_20().c50_1 ? 'Press' : $this === Companion_getInstance_20().d50_1 ? 'Release' : $this === Companion_getInstance_20().e50_1 ? 'Move' : $this === Companion_getInstance_20().f50_1 ? 'Enter' : $this === Companion_getInstance_20().g50_1 ? 'Exit' : $this === Companion_getInstance_20().h50_1 ? 'Scroll' : 'Unknown';
  }
  function PointerEventType__hashCode_impl_p2f3az($this) {
    return $this;
  }
  function PointerEventType__equals_impl_w1bf55($this, other) {
    if (!(other instanceof PointerEventType))
      return false;
    if (!($this === (other instanceof PointerEventType ? other.k51_1 : THROW_CCE())))
      return false;
    return true;
  }
  function PointerEventType(value) {
    Companion_getInstance_20();
    this.k51_1 = value;
  }
  protoOf(PointerEventType).toString = function () {
    return PointerEventType__toString_impl_o7j1va(this.k51_1);
  };
  protoOf(PointerEventType).hashCode = function () {
    return PointerEventType__hashCode_impl_p2f3az(this.k51_1);
  };
  protoOf(PointerEventType).equals = function (other) {
    return PointerEventType__equals_impl_w1bf55(this.k51_1, other);
  };
  function changedToUpIgnoreConsumed(_this__u8e3s4) {
    return _this__u8e3s4.m4z_1 ? !_this__u8e3s4.i4z_1 : false;
  }
  function changedToDownIgnoreConsumed(_this__u8e3s4) {
    return !_this__u8e3s4.m4z_1 ? _this__u8e3s4.i4z_1 : false;
  }
  function _PointerType___init__impl__8zawpu(value) {
    return value;
  }
  function _get_value__a43j40($this) {
    return $this;
  }
  function PointerType__toString_impl_yrgca2($this) {
    switch (_get_value__a43j40($this)) {
      case 1:
        return 'Touch';
      case 2:
        return 'Mouse';
      case 3:
        return 'Stylus';
      case 4:
        return 'Eraser';
      default:
        return 'Unknown';
    }
  }
  function Companion_7() {
    Companion_instance_11 = this;
    this.v50_1 = _PointerType___init__impl__8zawpu(0);
    this.w50_1 = _PointerType___init__impl__8zawpu(1);
    this.x50_1 = _PointerType___init__impl__8zawpu(2);
    this.y50_1 = _PointerType___init__impl__8zawpu(3);
    this.z50_1 = _PointerType___init__impl__8zawpu(4);
  }
  var Companion_instance_11;
  function Companion_getInstance_21() {
    if (Companion_instance_11 == null)
      new Companion_7();
    return Companion_instance_11;
  }
  function PointerType__hashCode_impl_d0afh7($this) {
    return $this;
  }
  function PointerType__equals_impl_dkjp55($this, other) {
    if (!(other instanceof PointerType))
      return false;
    if (!($this === (other instanceof PointerType ? other.l51_1 : THROW_CCE())))
      return false;
    return true;
  }
  function PointerType(value) {
    Companion_getInstance_21();
    this.l51_1 = value;
  }
  protoOf(PointerType).toString = function () {
    return PointerType__toString_impl_yrgca2(this.l51_1);
  };
  protoOf(PointerType).hashCode = function () {
    return PointerType__hashCode_impl_d0afh7(this.l51_1);
  };
  protoOf(PointerType).equals = function (other) {
    return PointerType__equals_impl_dkjp55(this.l51_1, other);
  };
  function _PointerId___init__impl__w2urwh(value) {
    return value;
  }
  function _PointerId___get_value__impl__odqw2d($this) {
    return $this;
  }
  function PointerId__toString_impl_9x5gyf($this) {
    return 'PointerId(value=' + $this.toString() + ')';
  }
  function PointerId__hashCode_impl_vobdra($this) {
    return $this.hashCode();
  }
  function PointerId__equals_impl_gbfrzq($this, other) {
    if (!(other instanceof PointerId))
      return false;
    var tmp0_other_with_cast = other instanceof PointerId ? other.m51_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function PointerId(value) {
    this.m51_1 = value;
  }
  protoOf(PointerId).toString = function () {
    return PointerId__toString_impl_9x5gyf(this.m51_1);
  };
  protoOf(PointerId).hashCode = function () {
    return PointerId__hashCode_impl_vobdra(this.m51_1);
  };
  protoOf(PointerId).equals = function (other) {
    return PointerId__equals_impl_gbfrzq(this.m51_1, other);
  };
  function HistoricalChange_init_$Init$(uptimeMillis, position, originalEventPosition, $this) {
    HistoricalChange.call($this, uptimeMillis, position);
    $this.w4z_1 = originalEventPosition;
    return $this;
  }
  function HistoricalChange_init_$Create$(uptimeMillis, position, originalEventPosition) {
    return HistoricalChange_init_$Init$(uptimeMillis, position, originalEventPosition, objectCreate(protoOf(HistoricalChange)));
  }
  function HistoricalChange(uptimeMillis, position) {
    this.u4z_1 = uptimeMillis;
    this.v4z_1 = position;
    this.w4z_1 = Companion_getInstance_2().v2v_1;
  }
  protoOf(HistoricalChange).toString = function () {
    return 'HistoricalChange(uptimeMillis=' + this.u4z_1.toString() + ', ' + ('position=' + new Offset(this.v4z_1) + ')');
  };
  function ConsumedData(positionChange, downChange) {
    positionChange = positionChange === VOID ? false : positionChange;
    downChange = downChange === VOID ? false : downChange;
    this.b51_1 = positionChange;
    this.c51_1 = downChange;
  }
  function positionChangedIgnoreConsumed(_this__u8e3s4) {
    return !equals(positionChangeInternal(_this__u8e3s4, true), Companion_getInstance_2().v2v_1);
  }
  function positionChangeInternal(_this__u8e3s4, ignoreConsumed) {
    ignoreConsumed = ignoreConsumed === VOID ? false : ignoreConsumed;
    var previousPosition = _this__u8e3s4.l4z_1;
    var currentPosition = _this__u8e3s4.h4z_1;
    var offset = Offset__minus_impl_hoj2c0(currentPosition, previousPosition);
    return (!ignoreConsumed ? _this__u8e3s4.a51() : false) ? Companion_getInstance_2().v2v_1 : offset;
  }
  function isOutOfBounds(_this__u8e3s4, size) {
    var position = _this__u8e3s4.h4z_1;
    var x = _Offset___get_x__impl__xvi35n(position);
    var y = _Offset___get_y__impl__8bzhra(position);
    var width = _IntSize___get_width__impl__d9yl4o(size);
    var height = _IntSize___get_height__impl__prv63b(size);
    return ((x < 0.0 ? true : x > width) ? true : y < 0.0) ? true : y > height;
  }
  function changedToUp(_this__u8e3s4) {
    return (!_this__u8e3s4.a51() ? _this__u8e3s4.m4z_1 : false) ? !_this__u8e3s4.i4z_1 : false;
  }
  function positionChange(_this__u8e3s4) {
    return positionChangeInternal(_this__u8e3s4, false);
  }
  function isOutOfBounds_0(_this__u8e3s4, size, extendedTouchPadding) {
    if (!(_this__u8e3s4.n4z_1 === Companion_getInstance_21().w50_1)) {
      return isOutOfBounds(_this__u8e3s4, size);
    }
    var position = _this__u8e3s4.h4z_1;
    var x = _Offset___get_x__impl__xvi35n(position);
    var y = _Offset___get_y__impl__8bzhra(position);
    var minX = -_Size___get_width__impl__58y75t(extendedTouchPadding);
    var maxX = _IntSize___get_width__impl__d9yl4o(size) + _Size___get_width__impl__58y75t(extendedTouchPadding);
    var minY = -_Size___get_height__impl__a04p02(extendedTouchPadding);
    var maxY = _IntSize___get_height__impl__prv63b(size) + _Size___get_height__impl__a04p02(extendedTouchPadding);
    return ((x < minX ? true : x > maxX) ? true : y < minY) ? true : y > maxY;
  }
  function PointerEventPass_Initial_getInstance() {
    PointerEventPass_initEntries();
    return PointerEventPass_Initial_instance;
  }
  function PointerEventPass_Main_getInstance() {
    PointerEventPass_initEntries();
    return PointerEventPass_Main_instance;
  }
  function PointerEventPass_Final_getInstance() {
    PointerEventPass_initEntries();
    return PointerEventPass_Final_instance;
  }
  function Companion_8() {
    Companion_instance_12 = this;
    this.n51_1 = get_pointerIconDefault();
    this.o51_1 = get_pointerIconCrosshair();
    this.p51_1 = get_pointerIconText();
    this.q51_1 = get_pointerIconHand();
  }
  var Companion_instance_12;
  function Companion_getInstance_22() {
    if (Companion_instance_12 == null)
      new Companion_8();
    return Companion_instance_12;
  }
  function pointerHoverIcon(_this__u8e3s4, icon, overrideDescendants) {
    overrideDescendants = overrideDescendants === VOID ? false : overrideDescendants;
    return _this__u8e3s4.j4i(new PointerHoverIconModifierElement(icon, overrideDescendants));
  }
  function PointerHoverIconModifierElement(icon, overrideDescendants) {
    overrideDescendants = overrideDescendants === VOID ? false : overrideDescendants;
    ModifierNodeElement.call(this);
    this.s51_1 = icon;
    this.t51_1 = overrideDescendants;
  }
  protoOf(PointerHoverIconModifierElement).i29 = function () {
    return new PointerHoverIconModifierNode(this.s51_1, this.t51_1);
  };
  protoOf(PointerHoverIconModifierElement).u51 = function (node) {
    node.m52(this.s51_1);
    node.n52(this.t51_1);
  };
  protoOf(PointerHoverIconModifierElement).r4o = function (node) {
    return this.u51(node instanceof PointerHoverIconModifierNode ? node : THROW_CCE());
  };
  protoOf(PointerHoverIconModifierElement).toString = function () {
    return 'PointerHoverIconModifierElement(icon=' + this.s51_1 + ', overrideDescendants=' + this.t51_1 + ')';
  };
  protoOf(PointerHoverIconModifierElement).hashCode = function () {
    var result = hashCode(this.s51_1);
    result = imul(result, 31) + getBooleanHashCode(this.t51_1) | 0;
    return result;
  };
  protoOf(PointerHoverIconModifierElement).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PointerHoverIconModifierElement))
      return false;
    var tmp0_other_with_cast = other instanceof PointerHoverIconModifierElement ? other : THROW_CCE();
    if (!equals(this.s51_1, tmp0_other_with_cast.s51_1))
      return false;
    if (!(this.t51_1 === tmp0_other_with_cast.t51_1))
      return false;
    return true;
  };
  function _get_pointerIconService__tbg4j0($this) {
    return currentValueOf($this, get_LocalPointerIconService());
  }
  function displayIcon($this) {
    var tmp0_safe_receiver = findOverridingAncestorNode($this);
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j52_1;
    var iconToUse = tmp1_elvis_lhs == null ? $this.j52_1 : tmp1_elvis_lhs;
    var tmp2_safe_receiver = _get_pointerIconService__tbg4j0($this);
    if (tmp2_safe_receiver == null)
      null;
    else {
      tmp2_safe_receiver.o52(iconToUse);
    }
  }
  function displayDefaultIcon($this) {
    var tmp0_safe_receiver = _get_pointerIconService__tbg4j0($this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.o52(null);
    }
  }
  function displayIconIfDescendantsDoNotHavePriority($this) {
    var hasIconRightsOverDescendants = {_v: true};
    if (!$this.k52_1) {
      traverseDescendants($this, PointerHoverIconModifierNode$displayIconIfDescendantsDoNotHavePriority$lambda(hasIconRightsOverDescendants));
    }
    if (hasIconRightsOverDescendants._v) {
      displayIcon($this);
    }
  }
  function findDescendantNodeWithCursorInBounds($this) {
    var descendantNodeWithCursorInBounds = {_v: null};
    traverseDescendants($this, PointerHoverIconModifierNode$findDescendantNodeWithCursorInBounds$lambda(descendantNodeWithCursorInBounds));
    return descendantNodeWithCursorInBounds._v;
  }
  function displayIconFromCurrentNodeOrDescendantsWithCursorInBounds($this) {
    if (!$this.l52_1)
      return Unit_instance;
    var pointerHoverIconModifierNode = $this;
    if (!$this.k52_1) {
      var tmp0_safe_receiver = findDescendantNodeWithCursorInBounds($this);
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        pointerHoverIconModifierNode = tmp0_safe_receiver;
      }
    }
    displayIcon(pointerHoverIconModifierNode);
  }
  function findOverridingAncestorNode($this) {
    var pointerHoverIconModifierNode = {_v: null};
    traverseAncestors($this, PointerHoverIconModifierNode$findOverridingAncestorNode$lambda(pointerHoverIconModifierNode));
    return pointerHoverIconModifierNode._v;
  }
  function displayIconFromAncestorNodeWithCursorInBoundsOrDefaultIcon($this) {
    var pointerHoverIconModifierNode = {_v: null};
    traverseAncestors($this, PointerHoverIconModifierNode$displayIconFromAncestorNodeWithCursorInBoundsOrDefaultIcon$lambda(pointerHoverIconModifierNode));
    var tmp0_safe_receiver = pointerHoverIconModifierNode._v;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      displayIcon(tmp0_safe_receiver);
      tmp = Unit_instance;
    }
    if (tmp == null) {
      displayDefaultIcon($this);
    }
  }
  function PointerHoverIconModifierNode$displayIconIfDescendantsDoNotHavePriority$lambda($hasIconRightsOverDescendants) {
    return function (it) {
      var tmp;
      if (it.l52_1) {
        $hasIconRightsOverDescendants._v = false;
        tmp = TraverseDescendantsAction_CancelTraversal_getInstance();
      } else {
        tmp = TraverseDescendantsAction_ContinueTraversal_getInstance();
      }
      var continueTraversal = tmp;
      return continueTraversal;
    };
  }
  function PointerHoverIconModifierNode$findDescendantNodeWithCursorInBounds$lambda($descendantNodeWithCursorInBounds) {
    return function (it) {
      var actionForSubtreeOfCurrentNode = TraverseDescendantsAction_ContinueTraversal_getInstance();
      var tmp;
      if (it.l52_1) {
        $descendantNodeWithCursorInBounds._v = it;
        var tmp_0;
        if (it.k52_1) {
          actionForSubtreeOfCurrentNode = TraverseDescendantsAction_SkipSubtreeAndContinueTraversal_getInstance();
          tmp_0 = Unit_instance;
        }
        tmp = tmp_0;
      }
      return actionForSubtreeOfCurrentNode;
    };
  }
  function PointerHoverIconModifierNode$findOverridingAncestorNode$lambda($pointerHoverIconModifierNode) {
    return function (it) {
      var tmp;
      if (it.k52_1 ? it.l52_1 : false) {
        $pointerHoverIconModifierNode._v = it;
        tmp = Unit_instance;
      }
      return true;
    };
  }
  function PointerHoverIconModifierNode$displayIconFromAncestorNodeWithCursorInBoundsOrDefaultIcon$lambda($pointerHoverIconModifierNode) {
    return function (it) {
      var tmp;
      if ($pointerHoverIconModifierNode._v == null ? it.l52_1 : false) {
        $pointerHoverIconModifierNode._v = it;
        tmp = Unit_instance;
      } else if ((!($pointerHoverIconModifierNode._v == null) ? it.k52_1 : false) ? it.l52_1 : false) {
        $pointerHoverIconModifierNode._v = it;
        tmp = Unit_instance;
      }
      return true;
    };
  }
  function PointerHoverIconModifierNode(icon, overrideDescendants) {
    overrideDescendants = overrideDescendants === VOID ? false : overrideDescendants;
    Node.call(this);
    this.i52_1 = 'androidx.compose.ui.input.pointer.PointerHoverIcon';
    this.j52_1 = icon;
    this.k52_1 = overrideDescendants;
    this.l52_1 = false;
  }
  protoOf(PointerHoverIconModifierNode).p52 = function () {
    return this.i52_1;
  };
  protoOf(PointerHoverIconModifierNode).m52 = function (value) {
    if (!equals(this.j52_1, value)) {
      this.j52_1 = value;
      if (this.l52_1) {
        displayIconIfDescendantsDoNotHavePriority(this);
      }
    }
  };
  protoOf(PointerHoverIconModifierNode).n52 = function (value) {
    if (!(this.k52_1 === value)) {
      this.k52_1 = value;
      if (this.k52_1) {
        if (this.l52_1) {
          displayIcon(this);
        }
      } else {
        if (this.l52_1) {
          displayIconFromCurrentNodeOrDescendantsWithCursorInBounds(this);
        }
      }
    }
  };
  protoOf(PointerHoverIconModifierNode).s4z = function (pointerEvent, pass, bounds) {
    if (pass.equals(PointerEventPass_Main_getInstance())) {
      if (pointerEvent.e4z_1 === Companion_getInstance_20().f50_1) {
        this.l52_1 = true;
        displayIconIfDescendantsDoNotHavePriority(this);
      } else if (pointerEvent.e4z_1 === Companion_getInstance_20().g50_1) {
        this.l52_1 = false;
        displayIconFromAncestorNodeWithCursorInBoundsOrDefaultIcon(this);
      }
    }
  };
  protoOf(PointerHoverIconModifierNode).i50 = function () {
  };
  protoOf(PointerHoverIconModifierNode).k4j = function () {
    this.l52_1 = false;
    displayIconFromAncestorNodeWithCursorInBoundsOrDefaultIcon(this);
    protoOf(Node).k4j.call(this);
  };
  function PointerInputEventProcessor(root) {
    this.u52_1 = root;
    this.v52_1 = new HitPathTracker(this.u52_1.z52());
    this.w52_1 = new PointerInputChangeEventProducer();
    this.x52_1 = new HitTestResult();
    this.y52_1 = false;
  }
  protoOf(PointerInputEventProcessor).a53 = function (pointerEvent, positionCalculator, isInBounds) {
    if (this.y52_1) {
      return ProcessResult(false, false);
    }
    try {
      this.y52_1 = true;
      var internalPointerEvent = this.w52_1.c53(pointerEvent, positionCalculator);
      var isHover = true;
      var inductionVariable = 0;
      var last = internalPointerEvent.m4y_1.ko();
      if (inductionVariable < last)
        $l$loop: do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var pointerInputChange = internalPointerEvent.m4y_1.mo(i);
          if (pointerInputChange.i4z_1 ? true : pointerInputChange.m4z_1) {
            isHover = false;
            break $l$loop;
          }
        }
         while (inductionVariable < last);
      var inductionVariable_0 = 0;
      var last_0 = internalPointerEvent.m4y_1.ko();
      if (inductionVariable_0 < last_0)
        do {
          var i_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var pointerInputChange_0 = internalPointerEvent.m4y_1.mo(i_0);
          if (isHover ? true : changedToDownIgnoreConsumed(pointerInputChange_0)) {
            var isTouchEvent = pointerInputChange_0.n4z_1 === Companion_getInstance_21().w50_1;
            this.u52_1.d53(pointerInputChange_0.h4z_1, this.x52_1, isTouchEvent);
            // Inline function 'kotlin.collections.isNotEmpty' call
            if (!this.x52_1.u()) {
              this.v52_1.v4x(pointerInputChange_0.f4z_1, this.x52_1);
              this.x52_1.h1();
            }
          }
        }
         while (inductionVariable_0 < last_0);
      this.v52_1.w4y();
      var dispatchedToSomething = this.v52_1.k4y(internalPointerEvent, isInBounds);
      var tmp;
      if (internalPointerEvent.r4y_1) {
        tmp = false;
      } else {
        var result = false;
        var inductionVariable_1 = 0;
        var last_1 = internalPointerEvent.m4y_1.ko();
        if (inductionVariable_1 < last_1)
          $l$loop_0: do {
            var i_1 = inductionVariable_1;
            inductionVariable_1 = inductionVariable_1 + 1 | 0;
            var event = internalPointerEvent.m4y_1.mo(i_1);
            if (positionChangedIgnoreConsumed(event) ? event.a51() : false) {
              result = true;
              break $l$loop_0;
            }
          }
           while (inductionVariable_1 < last_1);
        tmp = result;
      }
      var anyMovementConsumed = tmp;
      return ProcessResult(dispatchedToSomething, anyMovementConsumed);
    }finally {
      this.y52_1 = false;
    }
  };
  function _ProcessResult___init__impl__8o937x(value) {
    return value;
  }
  function PointerInputData(uptime, positionOnScreen, down, type) {
    this.i53_1 = uptime;
    this.j53_1 = positionOnScreen;
    this.k53_1 = down;
    this.l53_1 = type;
  }
  function PointerInputChangeEventProducer() {
    this.b53_1 = new LongSparseArray();
  }
  protoOf(PointerInputChangeEventProducer).c53 = function (pointerInputEvent, positionCalculator) {
    var changes = new LongSparseArray(pointerInputEvent.o53_1.m());
    // Inline function 'androidx.compose.ui.util.fastForEach' call
    var this_0 = pointerInputEvent.o53_1;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = this_0.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = this_0.n(index);
        // Inline function 'androidx.compose.ui.input.pointer.PointerInputChangeEventProducer.produce.<anonymous>' call
        var previousTime;
        var previousPosition;
        var previousDown;
        var previousData = this.b53_1.ho(_PointerId___get_value__impl__odqw2d(item.k50_1));
        if (previousData == null) {
          previousTime = item.l50_1;
          previousPosition = item.n50_1;
          previousDown = false;
        } else {
          previousTime = previousData.i53_1;
          previousDown = previousData.k53_1;
          previousPosition = positionCalculator.t53(previousData.j53_1);
        }
        changes.jo(_PointerId___get_value__impl__odqw2d(item.k50_1), PointerInputChange_init_$Create$(item.k50_1, item.l50_1, item.n50_1, item.o50_1, item.p50_1, previousTime, previousPosition, previousDown, false, item.q50_1, item.s50_1, item.t50_1, item.u50_1));
        if (item.o50_1) {
          this.b53_1.jo(_PointerId___get_value__impl__odqw2d(item.k50_1), new PointerInputData(item.l50_1, item.m50_1, item.o50_1, item.q50_1));
        } else {
          this.b53_1.io(_PointerId___get_value__impl__odqw2d(item.k50_1));
        }
      }
       while (inductionVariable <= last);
    return InternalPointerEvent_init_$Create$(changes, pointerInputEvent);
  };
  function ProcessResult(dispatchedToAPointerInputModifier, anyMovementConsumed) {
    var val1 = dispatchedToAPointerInputModifier ? 1 : 0;
    var val2 = anyMovementConsumed ? 2 : 0;
    return _ProcessResult___init__impl__8o937x(val1 | val2);
  }
  function get_EmptyPointerEvent() {
    _init_properties_SuspendingPointerInputFilter_kt__r2lt1n();
    return EmptyPointerEvent;
  }
  var EmptyPointerEvent;
  function SuspendPointerInputElement(key1, key2, keys, pointerInputHandler) {
    key1 = key1 === VOID ? null : key1;
    key2 = key2 === VOID ? null : key2;
    keys = keys === VOID ? null : keys;
    ModifierNodeElement.call(this);
    this.v53_1 = key1;
    this.w53_1 = key2;
    this.x53_1 = keys;
    this.y53_1 = pointerInputHandler;
  }
  protoOf(SuspendPointerInputElement).i29 = function () {
    return new SuspendingPointerInputModifierNodeImpl(this.y53_1);
  };
  protoOf(SuspendPointerInputElement).z53 = function (node) {
    node.w54(this.y53_1);
  };
  protoOf(SuspendPointerInputElement).r4o = function (node) {
    return this.z53(node instanceof SuspendingPointerInputModifierNodeImpl ? node : THROW_CCE());
  };
  protoOf(SuspendPointerInputElement).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SuspendPointerInputElement))
      return false;
    if (!equals(this.v53_1, other.v53_1))
      return false;
    if (!equals(this.w53_1, other.w53_1))
      return false;
    if (!(this.x53_1 == null)) {
      if (other.x53_1 == null)
        return false;
      if (!contentEquals(this.x53_1, other.x53_1))
        return false;
    } else if (!(other.x53_1 == null))
      return false;
    return true;
  };
  protoOf(SuspendPointerInputElement).hashCode = function () {
    var tmp0_safe_receiver = this.v53_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    var result = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp = imul(31, result);
    var tmp2_safe_receiver = this.w53_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : hashCode(tmp2_safe_receiver);
    result = tmp + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp4_safe_receiver = this.x53_1;
    var tmp5_elvis_lhs = tmp4_safe_receiver == null ? null : contentHashCode(tmp4_safe_receiver);
    result = tmp_0 + (tmp5_elvis_lhs == null ? 0 : tmp5_elvis_lhs) | 0;
    return result;
  };
  function SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda($timeMillis, this$0, resultContinuation) {
    this.f55_1 = $timeMillis;
    this.g55_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda).j20 = function ($this$launch, $completion) {
    var tmp = this.k20($this$launch, $completion);
    tmp.cc_1 = Unit_instance;
    tmp.dc_1 = null;
    return tmp.mc();
  };
  protoOf(SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda).yc = function (p1, $completion) {
    return this.j20((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda).mc = function () {
    var suspendResult = this.cc_1;
    $sm: do
      try {
        var tmp = this.ac_1;
        switch (tmp) {
          case 0:
            this.bc_1 = 3;
            this.ac_1 = 1;
            var this_0 = this.f55_1;
            suspendResult = delay(this_0.fb(toLong(1)), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.ac_1 = 2;
            suspendResult = delay(new Long(1, 0), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var tmp0_safe_receiver = this.g55_1.k55_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              var exception = new PointerEventTimeoutCancellationException(this.f55_1);
              tmp0_safe_receiver.t6(_Result___init__impl__xyqfz8(createFailure(exception)));
            }

            return Unit_instance;
          case 3:
            throw this.dc_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.bc_1 === 3) {
          throw e;
        } else {
          this.ac_1 = this.bc_1;
          this.dc_1 = e;
        }
      }
     while (true);
  };
  protoOf(SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda).k20 = function ($this$launch, completion) {
    var i = new SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda(this.f55_1, this.g55_1, completion);
    i.h55_1 = $this$launch;
    return i;
  };
  function SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda_0($timeMillis, this$0, resultContinuation) {
    var i = new SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda($timeMillis, this$0, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.j20($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function $withTimeoutCOROUTINE$5(_this__u8e3s4, timeMillis, block, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.w55_1 = _this__u8e3s4;
    this.x55_1 = timeMillis;
    this.y55_1 = block;
  }
  protoOf($withTimeoutCOROUTINE$5).mc = function () {
    var suspendResult = this.cc_1;
    $sm: do
      try {
        var tmp = this.ac_1;
        switch (tmp) {
          case 0:
            this.bc_1 = 7;
            if (this.x55_1.x9(new Long(0, 0)) <= 0) {
              var tmp0_safe_receiver = this.w55_1.k55_1;
              if (tmp0_safe_receiver == null)
                null;
              else {
                var exception = new PointerEventTimeoutCancellationException(this.x55_1);
                tmp0_safe_receiver.t6(_Result___init__impl__xyqfz8(createFailure(exception)));
              }
            }

            var tmp_0 = this;
            var tmp_1 = this.w55_1.n55_1.d4j();
            tmp_0.z55_1 = launch(tmp_1, VOID, VOID, SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine$withTimeout$slambda_0(this.x55_1, this.w55_1, null));
            this.ac_1 = 1;
            continue $sm;
          case 1:
            this.ac_1 = 2;
            continue $sm;
          case 2:
            this.bc_1 = 6;
            this.ac_1 = 3;
            suspendResult = this.y55_1(this.w55_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.a56_1 = suspendResult;
            this.bc_1 = 7;
            this.ac_1 = 4;
            var tmp_2 = this;
            continue $sm;
          case 4:
            var tmp_3 = this.a56_1;
            this.bc_1 = 7;
            this.z55_1.dq(CancelTimeoutCancellationException_getInstance());
            return tmp_3;
          case 5:
            this.bc_1 = 7;
            this.z55_1.dq(CancelTimeoutCancellationException_getInstance());
            return Unit_instance;
          case 6:
            this.bc_1 = 7;
            var t = this.dc_1;
            this.z55_1.dq(CancelTimeoutCancellationException_getInstance());
            throw t;
          case 7:
            throw this.dc_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.bc_1 === 7) {
          throw e;
        } else {
          this.ac_1 = this.bc_1;
          this.dc_1 = e;
        }
      }
     while (true);
  };
  function dispatchPointerEvent($this, pointerEvent, pass) {
    // Inline function 'androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.forEachCurrentPointerHandler' call
    // Inline function 'androidx.compose.ui.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.r54_1;
    // Inline function 'androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.forEachCurrentPointerHandler.<anonymous>' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector.addAll' call
    var this_0 = $this.s54_1;
    var elements = $this.q54_1;
    this_0.z2g(this_0.p1q_1, elements);
    try {
      switch (pass.t9_1) {
        case 0:
        case 2:
          // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call

          var this_1 = $this.s54_1;
          // Inline function 'kotlin.contracts.contract' call

          var size = this_1.p1q_1;
          if (size > 0) {
            var i = 0;
            var tmp = this_1.n1q_1;
            var content = isArray(tmp) ? tmp : THROW_CCE();
            do {
              // Inline function 'androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.dispatchPointerEvent.<anonymous>' call
              content[i].b56(pointerEvent, pass);
              i = i + 1 | 0;
            }
             while (i < size);
          }

          break;
        case 1:
          // Inline function 'androidx.compose.runtime.collection.MutableVector.forEachReversed' call

          var this_2 = $this.s54_1;
          // Inline function 'kotlin.contracts.contract' call

          var size_0 = this_2.p1q_1;
          if (size_0 > 0) {
            var i_0 = size_0 - 1 | 0;
            var tmp_0 = this_2.n1q_1;
            var content_0 = isArray(tmp_0) ? tmp_0 : THROW_CCE();
            do {
              // Inline function 'androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.dispatchPointerEvent.<anonymous>' call
              content_0[i_0].b56(pointerEvent, pass);
              i_0 = i_0 - 1 | 0;
            }
             while (i_0 >= 0);
          }

          break;
      }
    }finally {
      $this.s54_1.h1();
    }
  }
  function PointerEventHandlerCoroutine($outer, completion) {
    this.n55_1 = $outer;
    this.i55_1 = completion;
    this.j55_1 = this.n55_1;
    this.k55_1 = null;
    this.l55_1 = PointerEventPass_Main_getInstance();
    this.m55_1 = EmptyCoroutineContext_getInstance();
  }
  protoOf(PointerEventHandlerCoroutine).g2x = function () {
    return this.j55_1.g2x();
  };
  protoOf(PointerEventHandlerCoroutine).q2x = function () {
    return this.j55_1.q2x();
  };
  protoOf(PointerEventHandlerCoroutine).m2x = function (_this__u8e3s4) {
    return this.j55_1.m2x(_this__u8e3s4);
  };
  protoOf(PointerEventHandlerCoroutine).h2x = function (_this__u8e3s4) {
    return this.j55_1.h2x(_this__u8e3s4);
  };
  protoOf(PointerEventHandlerCoroutine).i2x = function (_this__u8e3s4) {
    return this.j55_1.i2x(_this__u8e3s4);
  };
  protoOf(PointerEventHandlerCoroutine).n2x = function (_this__u8e3s4) {
    return this.j55_1.n2x(_this__u8e3s4);
  };
  protoOf(PointerEventHandlerCoroutine).c56 = function () {
    return this.n55_1.p54_1;
  };
  protoOf(PointerEventHandlerCoroutine).d2y = function () {
    return this.n55_1.u54_1;
  };
  protoOf(PointerEventHandlerCoroutine).d56 = function () {
    return this.n55_1.d56();
  };
  protoOf(PointerEventHandlerCoroutine).e56 = function () {
    return this.n55_1.e56();
  };
  protoOf(PointerEventHandlerCoroutine).b56 = function (event, pass) {
    if (pass.equals(this.l55_1)) {
      var tmp0_safe_receiver = this.k55_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.run' call
        // Inline function 'kotlin.contracts.contract' call
        this.k55_1 = null;
        // Inline function 'kotlin.coroutines.resume' call
        // Inline function 'kotlin.Companion.success' call
        var tmp$ret$0 = _Result___init__impl__xyqfz8(event);
        tmp0_safe_receiver.t6(tmp$ret$0);
      }
    }
  };
  protoOf(PointerEventHandlerCoroutine).f56 = function (cause) {
    var tmp0_safe_receiver = this.k55_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver.es(cause);
    this.k55_1 = null;
  };
  protoOf(PointerEventHandlerCoroutine).s6 = function () {
    return this.m55_1;
  };
  protoOf(PointerEventHandlerCoroutine).ni = function (result) {
    // Inline function 'androidx.compose.ui.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.n55_1.r54_1;
    this.n55_1.q54_1.u2g(this);
    this.i55_1.t6(result);
  };
  protoOf(PointerEventHandlerCoroutine).t6 = function (result) {
    return this.ni(result);
  };
  protoOf(PointerEventHandlerCoroutine).g56 = function (pass, $completion) {
    // Inline function 'kotlinx.coroutines.suspendCancellableCoroutine.<anonymous>' call
    var cancellable = new CancellableContinuationImpl(intercepted($completion), get_MODE_CANCELLABLE());
    cancellable.zt();
    // Inline function 'androidx.compose.ui.input.pointer.PointerEventHandlerCoroutine.awaitPointerEvent.<anonymous>' call
    this.l55_1 = pass;
    this.k55_1 = cancellable;
    return cancellable.yq();
  };
  protoOf(PointerEventHandlerCoroutine).i56 = function (timeMillis, block, $completion) {
    var tmp = new $withTimeoutCOROUTINE$5(this, timeMillis, block, $completion);
    tmp.cc_1 = Unit_instance;
    tmp.dc_1 = null;
    return tmp.mc();
  };
  function SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda(this$0, resultContinuation) {
    this.r56_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda).j20 = function ($this$launch, $completion) {
    var tmp = this.k20($this$launch, $completion);
    tmp.cc_1 = Unit_instance;
    tmp.dc_1 = null;
    return tmp.mc();
  };
  protoOf(SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda).yc = function (p1, $completion) {
    return this.j20((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda).mc = function () {
    var suspendResult = this.cc_1;
    $sm: do
      try {
        var tmp = this.ac_1;
        switch (tmp) {
          case 0:
            this.bc_1 = 2;
            this.ac_1 = 1;
            suspendResult = this.r56_1.n54_1(this.r56_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_instance;
          case 2:
            throw this.dc_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.bc_1 === 2) {
          throw e;
        } else {
          this.ac_1 = this.bc_1;
          this.dc_1 = e;
        }
      }
     while (true);
  };
  protoOf(SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda).k20 = function ($this$launch, completion) {
    var i = new SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda(this.r56_1, completion);
    i.s56_1 = $this$launch;
    return i;
  };
  function SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda_0(this$0, resultContinuation) {
    var i = new SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda(this$0, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.j20($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function SuspendingPointerInputModifierNodeImpl$awaitPointerEventScope$lambda($handlerCoroutine) {
    return function (it) {
      $handlerCoroutine.f56(it);
      return Unit_instance;
    };
  }
  function SuspendingPointerInputModifierNodeImpl(pointerInputHandler) {
    Node.call(this);
    this.n54_1 = pointerInputHandler;
    this.o54_1 = null;
    this.p54_1 = get_EmptyPointerEvent();
    var tmp = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp.q54_1 = new MutableVector(tmp$ret$0, 0);
    this.r54_1 = createSynchronizedObject();
    var tmp_0 = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$3 = fillArrayVal(Array(16), null);
    tmp_0.s54_1 = new MutableVector(tmp$ret$3, 0);
    this.t54_1 = null;
    this.u54_1 = Companion_getInstance_3().g2y_1;
    this.v54_1 = false;
  }
  protoOf(SuspendingPointerInputModifierNodeImpl).w54 = function (value) {
    this.t56();
    this.n54_1 = value;
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).g2x = function () {
    return requireLayoutNode(this).w4k_1.g2x();
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).q2x = function () {
    return requireLayoutNode(this).w4k_1.q2x();
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).d56 = function () {
    return requireLayoutNode(this).y4k_1;
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).d2y = function () {
    return this.u54_1;
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).e56 = function () {
    var minimumTouchTargetSize = this.n2x(this.d56().u56());
    var size = this.d2y();
    // Inline function 'kotlin.math.max' call
    var b = _Size___get_width__impl__58y75t(minimumTouchTargetSize) - _IntSize___get_width__impl__d9yl4o(size);
    var horizontal = Math.max(0.0, b) / 2.0;
    // Inline function 'kotlin.math.max' call
    var b_0 = _Size___get_height__impl__a04p02(minimumTouchTargetSize) - _IntSize___get_height__impl__prv63b(size);
    var vertical = Math.max(0.0, b_0) / 2.0;
    return Size(horizontal, vertical);
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).k4j = function () {
    this.t56();
    protoOf(Node).k4j.call(this);
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).s52 = function () {
    this.t56();
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).t52 = function () {
    this.t56();
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).t56 = function () {
    var localJob = this.o54_1;
    if (!(localJob == null)) {
      localJob.dq(new PointerInputResetException());
      this.o54_1 = null;
    }
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).s4z = function (pointerEvent, pass, bounds) {
    this.u54_1 = bounds;
    if (pass.equals(PointerEventPass_Initial_getInstance())) {
      this.p54_1 = pointerEvent;
    }
    if (this.o54_1 == null) {
      var tmp = this;
      var tmp_0 = this.d4j();
      var tmp_1 = CoroutineStart_UNDISPATCHED_getInstance();
      tmp.o54_1 = launch(tmp_0, VOID, tmp_1, SuspendingPointerInputModifierNodeImpl$onPointerEvent$slambda_0(this, null));
    }
    dispatchPointerEvent(this, pointerEvent, pass);
    var tmp_2 = this;
    // Inline function 'kotlin.takeIf' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp_3;
    // Inline function 'androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.onPointerEvent.<anonymous>' call
    var tmp$ret$1;
    $l$block: {
      // Inline function 'androidx.compose.ui.util.fastAll' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.util.fastForEach' call
      var this_0 = pointerEvent.z4y_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.n(index);
          // Inline function 'androidx.compose.ui.util.fastAll.<anonymous>' call
          // Inline function 'androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.onPointerEvent.<anonymous>.<anonymous>' call
          if (!changedToUpIgnoreConsumed(item)) {
            tmp$ret$1 = false;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = true;
    }
    if (!tmp$ret$1) {
      tmp_3 = pointerEvent;
    } else {
      tmp_3 = null;
    }
    tmp_2.t54_1 = tmp_3;
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).i50 = function () {
    var tmp0_elvis_lhs = this.t54_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_instance;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var lastEvent = tmp;
    var tmp$ret$1;
    $l$block: {
      // Inline function 'androidx.compose.ui.util.fastAll' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.util.fastForEach' call
      var this_0 = lastEvent.z4y_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.n(index);
          // Inline function 'androidx.compose.ui.util.fastAll.<anonymous>' call
          // Inline function 'androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.onCancelPointerInput.<anonymous>' call
          if (!!item.i4z_1) {
            tmp$ret$1 = false;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = true;
    }
    if (tmp$ret$1) {
      return Unit_instance;
    }
    // Inline function 'androidx.compose.ui.util.fastMapNotNull' call
    var this_1 = lastEvent.z4y_1;
    // Inline function 'kotlin.contracts.contract' call
    var target = ArrayList_init_$Create$_0(this_1.m());
    // Inline function 'androidx.compose.ui.util.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    var last_0 = this_1.m() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var item_0 = this_1.n(index_0);
        // Inline function 'androidx.compose.ui.util.fastMapNotNull.<anonymous>' call
        // Inline function 'androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.onCancelPointerInput.<anonymous>' call
        var tmp0_id = item_0.f4z_1;
        var tmp1_position = item_0.h4z_1;
        var tmp2_uptimeMillis = item_0.g4z_1;
        var tmp3_pressure = item_0.j4z_1;
        var tmp4_previousPosition = item_0.h4z_1;
        var tmp5_previousUptimeMillis = item_0.g4z_1;
        var tmp6_previousPressed = item_0.i4z_1;
        var tmp7_isInitiallyConsumed = item_0.i4z_1;
        var tmp0_safe_receiver = new PointerInputChange(tmp0_id, tmp2_uptimeMillis, tmp1_position, false, tmp3_pressure, tmp5_previousUptimeMillis, tmp4_previousPosition, tmp6_previousPressed, tmp7_isInitiallyConsumed);
        if (tmp0_safe_receiver == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          target.a1(tmp0_safe_receiver);
        }
      }
       while (inductionVariable_0 <= last_0);
    var newChanges = target;
    if (newChanges.u())
      return Unit_instance;
    var cancelEvent = PointerEvent_init_$Create$_0(newChanges);
    this.p54_1 = cancelEvent;
    dispatchPointerEvent(this, cancelEvent, PointerEventPass_Initial_getInstance());
    dispatchPointerEvent(this, cancelEvent, PointerEventPass_Main_getInstance());
    dispatchPointerEvent(this, cancelEvent, PointerEventPass_Final_getInstance());
    this.t54_1 = null;
  };
  protoOf(SuspendingPointerInputModifierNodeImpl).v56 = function (block, $completion) {
    // Inline function 'kotlinx.coroutines.suspendCancellableCoroutine.<anonymous>' call
    var cancellable = new CancellableContinuationImpl(intercepted($completion), get_MODE_CANCELLABLE());
    cancellable.zt();
    // Inline function 'androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.awaitPointerEventScope.<anonymous>' call
    var handlerCoroutine = new PointerEventHandlerCoroutine(this, cancellable);
    // Inline function 'androidx.compose.ui.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.r54_1;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    this.q54_1.q1q(handlerCoroutine);
    // Inline function 'kotlin.coroutines.resume' call
    var this_0 = createCoroutine(block, handlerCoroutine, handlerCoroutine);
    // Inline function 'kotlin.Companion.success' call
    var tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_instance);
    this_0.t6(tmp$ret$0);
    cancellable.gs(SuspendingPointerInputModifierNodeImpl$awaitPointerEventScope$lambda(handlerCoroutine));
    return cancellable.yq();
  };
  function PointerInputScope() {
  }
  function PointerInputResetException() {
    PlatformOptimizedCancellationException.call(this, 'Pointer input was reset');
    captureStack(this, PointerInputResetException);
  }
  function AwaitPointerEventScope() {
  }
  function CancelTimeoutCancellationException() {
    CancelTimeoutCancellationException_instance = this;
    PlatformOptimizedCancellationException.call(this);
    captureStack(this, CancelTimeoutCancellationException);
  }
  var CancelTimeoutCancellationException_instance;
  function CancelTimeoutCancellationException_getInstance() {
    if (CancelTimeoutCancellationException_instance == null)
      new CancelTimeoutCancellationException();
    return CancelTimeoutCancellationException_instance;
  }
  function pointerInput(_this__u8e3s4, key1, block) {
    _init_properties_SuspendingPointerInputFilter_kt__r2lt1n();
    return _this__u8e3s4.j4i(new SuspendPointerInputElement(key1, VOID, VOID, block));
  }
  var properties_initialized_SuspendingPointerInputFilter_kt_pwugul;
  function _init_properties_SuspendingPointerInputFilter_kt__r2lt1n() {
    if (!properties_initialized_SuspendingPointerInputFilter_kt_pwugul) {
      properties_initialized_SuspendingPointerInputFilter_kt_pwugul = true;
      EmptyPointerEvent = PointerEvent_init_$Create$_0(emptyList());
    }
  }
  function PointerIdArray() {
    this.h4y_1 = 0;
    this.i4y_1 = longArray(2);
  }
  protoOf(PointerIdArray).z4z = function (index) {
    return _PointerId___init__impl__w2urwh(this.i4y_1[index]);
  };
  protoOf(PointerIdArray).j50 = function (pointerId) {
    return this.mm(_PointerId___get_value__impl__odqw2d(pointerId));
  };
  protoOf(PointerIdArray).mm = function (pointerIdValue) {
    var inductionVariable = 0;
    var last = this.h4y_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (pointerIdValue.equals(_PointerId___get_value__impl__odqw2d(this.z4z(i)))) {
          this.m1(i);
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(PointerIdArray).m1 = function (index) {
    if (index < this.h4y_1) {
      var inductionVariable = index;
      var last = this.h4y_1 - 1 | 0;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this.i4y_1[i] = this.i4y_1[i + 1 | 0];
        }
         while (inductionVariable < last);
      this.h4y_1 = this.h4y_1 - 1 | 0;
      return true;
    }
    return false;
  };
  protoOf(PointerIdArray).u = function () {
    return this.h4y_1 === 0;
  };
  protoOf(PointerIdArray).w56 = function (value) {
    if (!this.em(value)) {
      this.x56(this.h4y_1, value);
      return true;
    }
    return false;
  };
  protoOf(PointerIdArray).j4y = function (pointerId) {
    return this.w56(_PointerId___get_value__impl__odqw2d(pointerId));
  };
  protoOf(PointerIdArray).x56 = function (index, value) {
    if (index >= this.i4y_1.length) {
      var tmp = this;
      var tmp_0 = this.i4y_1;
      // Inline function 'kotlin.comparisons.maxOf' call
      var a = index + 1 | 0;
      var b = imul(this.i4y_1.length, 2);
      var tmp$ret$0 = Math.max(a, b);
      tmp.i4y_1 = copyOf(tmp_0, tmp$ret$0);
    }
    this.i4y_1[index] = value;
    if (index >= this.h4y_1)
      this.h4y_1 = index + 1 | 0;
  };
  protoOf(PointerIdArray).h1 = function () {
    this.h4y_1 = 0;
  };
  protoOf(PointerIdArray).em = function (pointerIdValue) {
    var inductionVariable = 0;
    var last = this.h4y_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (this.i4y_1[i].equals(pointerIdValue))
          return true;
      }
       while (inductionVariable < last);
    return false;
  };
  function RotaryInputModifierNode() {
  }
  function get_FirstBaseline() {
    _init_properties_AlignmentLine_kt__jh8eit();
    return FirstBaseline;
  }
  var FirstBaseline;
  function get_LastBaseline() {
    _init_properties_AlignmentLine_kt__jh8eit();
    return LastBaseline;
  }
  var LastBaseline;
  function HorizontalAlignmentLine(merger) {
    AlignmentLine.call(this, merger);
  }
  function Companion_9() {
    this.y56_1 = -2147483648;
  }
  var Companion_instance_13;
  function Companion_getInstance_23() {
    return Companion_instance_13;
  }
  function AlignmentLine(merger) {
    this.z56_1 = merger;
  }
  function merge(_this__u8e3s4, position1, position2) {
    _init_properties_AlignmentLine_kt__jh8eit();
    return _this__u8e3s4.z56_1(position1, position2);
  }
  function VerticalAlignmentLine() {
  }
  function min$ref() {
    var l = function (p0, p1) {
      return min(p0, p1);
    };
    l.callableName = 'min';
    return l;
  }
  function max$ref() {
    var l = function (p0, p1) {
      return max(p0, p1);
    };
    l.callableName = 'max';
    return l;
  }
  var properties_initialized_AlignmentLine_kt_1wfwg7;
  function _init_properties_AlignmentLine_kt__jh8eit() {
    if (!properties_initialized_AlignmentLine_kt_1wfwg7) {
      properties_initialized_AlignmentLine_kt_1wfwg7 = true;
      FirstBaseline = new HorizontalAlignmentLine(min$ref());
      LastBaseline = new HorizontalAlignmentLine(max$ref());
    }
  }
  function get_ModifierLocalBeyondBoundsLayout() {
    _init_properties_BeyondBoundsLayout_kt__6nr19u();
    return ModifierLocalBeyondBoundsLayout;
  }
  var ModifierLocalBeyondBoundsLayout;
  function _LayoutDirection___init__impl__nziunw(value) {
    return value;
  }
  function Companion_10() {
    Companion_instance_14 = this;
    this.u4m_1 = _LayoutDirection___init__impl__nziunw(1);
    this.v4m_1 = _LayoutDirection___init__impl__nziunw(2);
    this.w4m_1 = _LayoutDirection___init__impl__nziunw(3);
    this.x4m_1 = _LayoutDirection___init__impl__nziunw(4);
    this.y4m_1 = _LayoutDirection___init__impl__nziunw(5);
    this.z4m_1 = _LayoutDirection___init__impl__nziunw(6);
  }
  var Companion_instance_14;
  function Companion_getInstance_24() {
    if (Companion_instance_14 == null)
      new Companion_10();
    return Companion_instance_14;
  }
  function ModifierLocalBeyondBoundsLayout$lambda() {
    _init_properties_BeyondBoundsLayout_kt__6nr19u();
    return null;
  }
  var properties_initialized_BeyondBoundsLayout_kt_ydfa9c;
  function _init_properties_BeyondBoundsLayout_kt__6nr19u() {
    if (!properties_initialized_BeyondBoundsLayout_kt_ydfa9c) {
      properties_initialized_BeyondBoundsLayout_kt_ydfa9c = true;
      ModifierLocalBeyondBoundsLayout = modifierLocalOf(ModifierLocalBeyondBoundsLayout$lambda);
    }
  }
  function IntermediateMeasurablePlaceable($outer, wrappedMeasurable) {
    this.h57_1 = $outer;
    Placeable.call(this);
    this.f57_1 = wrappedMeasurable;
    this.g57_1 = null;
  }
  protoOf(IntermediateMeasurablePlaceable).t4u = function (constraints) {
    var tmp = this;
    var tmp_0;
    if (this.h57_1.x57_1) {
      // Inline function 'kotlin.also' call
      var this_0 = this.f57_1.t4u(constraints);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.layout.IntermediateMeasurablePlaceable.measure.<anonymous>' call
      this.a58(constraints);
      this.d58(IntSize(this_0.u4u_1, this_0.v4u_1));
      tmp_0 = this_0;
    } else {
      // Inline function 'kotlin.also' call
      var tmp_1 = this.f57_1;
      var tmp_2 = this.h57_1.y57_1;
      var this_1 = tmp_1.t4u(ensureNotNull(tmp_2 == null ? null : new Constraints(tmp_2)).d2x_1);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.layout.IntermediateMeasurablePlaceable.measure.<anonymous>' call
      var tmp_3 = this.h57_1.y57_1;
      this.a58(ensureNotNull(tmp_3 == null ? null : new Constraints(tmp_3)).d2x_1);
      var tmp_4;
      if (this.h57_1.x57_1) {
        tmp_4 = IntSize(this_1.u4u_1, this_1.v4u_1);
      } else {
        tmp_4 = this.h57_1.w57_1.b58_1;
      }
      this.d58(tmp_4);
      tmp_0 = this_1;
    }
    tmp.g57_1 = tmp_0;
    return this;
  };
  protoOf(IntermediateMeasurablePlaceable).e58 = function (position, zIndex, layerBlock) {
    var offset = this.h57_1.x57_1 ? position : Companion_getInstance_4().w2x_1;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.layout.IntermediateMeasurablePlaceable.placeAt.<anonymous>' call
    var $this$with = ensureNotNull(this.h57_1.p4i_1.w4i_1).m58_1;
    var tmp;
    if (layerBlock == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.layout.IntermediateMeasurablePlaceable.placeAt.<anonymous>.<anonymous>' call
      var tmp0_safe_receiver = this.g57_1;
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        $this$with.n58(tmp0_safe_receiver, offset, zIndex, layerBlock);
        tmp_0 = Unit_instance;
      }
      tmp = tmp_0;
    }
    var tmp2_elvis_lhs = tmp;
    var tmp_1;
    if (tmp2_elvis_lhs == null) {
      var tmp1_safe_receiver = this.g57_1;
      var tmp_2;
      if (tmp1_safe_receiver == null) {
        tmp_2 = null;
      } else {
        $this$with.o58(tmp1_safe_receiver, offset, zIndex);
        tmp_2 = Unit_instance;
      }
      tmp_1 = tmp_2;
    } else {
      tmp_1 = tmp2_elvis_lhs;
    }
  };
  function IntermediateLayoutModifierNode() {
  }
  protoOf(IntermediateLayoutModifierNode).p58 = function (_this__u8e3s4, measurable, constraints, lookaheadSize, lookaheadConstraints) {
    this.w57_1.b58_1 = lookaheadSize;
    this.y57_1 = lookaheadConstraints;
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.apply' call
    var tmp0_elvis_lhs = this.z57_1;
    var this_0 = tmp0_elvis_lhs == null ? new IntermediateMeasurablePlaceable(this, measurable) : tmp0_elvis_lhs;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.layout.IntermediateLayoutModifierNode.intermediateMeasure.<anonymous>' call
    this.z57_1 = this_0;
    this_0.f57_1 = measurable;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.layout.IntermediateLayoutModifierNode.intermediateMeasure.<anonymous>' call
    return this.v57_1(this.w57_1, this_0, new Constraints(constraints));
  };
  function findRootCoordinates(_this__u8e3s4) {
    var root = _this__u8e3s4;
    var parent = root.q58();
    while (!(parent == null)) {
      root = parent;
      parent = root.q58();
    }
    var tmp0_elvis_lhs = root instanceof NodeCoordinator ? root : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return root;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var rootCoordinator = tmp;
    var parentCoordinator = rootCoordinator.x4q_1;
    while (!(parentCoordinator == null)) {
      rootCoordinator = parentCoordinator;
      parentCoordinator = parentCoordinator.x4q_1;
    }
    return rootCoordinator;
  }
  function LayoutModifier() {
  }
  function LookaheadLayoutCoordinates(lookaheadDelegate) {
    this.r58_1 = lookaheadDelegate;
  }
  protoOf(LookaheadLayoutCoordinates).s58 = function () {
    return this.r58_1.b59_1;
  };
  protoOf(LookaheadLayoutCoordinates).d2y = function () {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.layout.LookaheadLayoutCoordinates.<get-size>.<anonymous>' call
    var it = this.r58_1;
    return IntSize(it.u4u_1, it.v4u_1);
  };
  protoOf(LookaheadLayoutCoordinates).q58 = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.r4r()) {
      // Inline function 'androidx.compose.ui.layout.LookaheadLayoutCoordinates.<get-parentLayoutCoordinates>.<anonymous>' call
      Companion_getInstance_30();
      var message = 'LayoutCoordinate operations are only valid when isAttached is true';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var tmp0_safe_receiver = this.s58().o4r().h59().x4q_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.layout.LookaheadLayoutCoordinates.<get-parentLayoutCoordinates>.<anonymous>' call
      var tmp0_safe_receiver_0 = tmp0_safe_receiver.i59();
      tmp = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.z52();
    }
    return tmp;
  };
  protoOf(LookaheadLayoutCoordinates).r4r = function () {
    return this.s58().r4r();
  };
  protoOf(LookaheadLayoutCoordinates).x4z = function (sourceCoordinates, relativeToSource) {
    if (sourceCoordinates instanceof LookaheadLayoutCoordinates) {
      var source = sourceCoordinates.r58_1;
      source.b59_1.j59();
      var commonAncestor = this.s58().k59(source.b59_1);
      var tmp0_safe_receiver = commonAncestor.i59();
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.layout.LookaheadLayoutCoordinates.localPositionOf.<anonymous>' call
        // Inline function 'androidx.compose.ui.unit.toOffset' call
        // Inline function 'androidx.compose.ui.unit.IntOffset.minus' call
        // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
        var this_0 = source.l59(tmp0_safe_receiver);
        // Inline function 'androidx.compose.ui.unit.round' call
        // Inline function 'kotlin.math.roundToInt' call
        var this_1 = _Offset___get_x__impl__xvi35n(relativeToSource);
        var tmp_0 = roundToInt(this_1);
        // Inline function 'kotlin.math.roundToInt' call
        var this_2 = _Offset___get_y__impl__8bzhra(relativeToSource);
        var tmp$ret$1 = roundToInt(this_2);
        var other = IntOffset(tmp_0, tmp$ret$1);
        var this_3 = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_0) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(this_0) + _IntOffset___get_y__impl__2avpwj(other) | 0);
        var other_0 = this.r58_1.l59(tmp0_safe_receiver);
        var this_4 = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_3) - _IntOffset___get_x__impl__qiqr5o(other_0) | 0, _IntOffset___get_y__impl__2avpwj(this_3) - _IntOffset___get_y__impl__2avpwj(other_0) | 0);
        tmp = Offset_0(_IntOffset___get_x__impl__qiqr5o(this_4), _IntOffset___get_y__impl__2avpwj(this_4));
      }
      var tmp1_elvis_lhs = tmp;
      var tmp_1;
      var tmp_2 = tmp1_elvis_lhs;
      if ((tmp_2 == null ? null : new Offset(tmp_2)) == null) {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.layout.LookaheadLayoutCoordinates.localPositionOf.<anonymous>' call
        var sourceRoot = get_rootLookaheadDelegate(source);
        // Inline function 'androidx.compose.ui.unit.IntOffset.minus' call
        // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
        // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
        var this_5 = source.l59(sourceRoot);
        var other_1 = sourceRoot.m59();
        var this_6 = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_5) + _IntOffset___get_x__impl__qiqr5o(other_1) | 0, _IntOffset___get_y__impl__2avpwj(this_5) + _IntOffset___get_y__impl__2avpwj(other_1) | 0);
        // Inline function 'androidx.compose.ui.unit.round' call
        // Inline function 'kotlin.math.roundToInt' call
        var this_7 = _Offset___get_x__impl__xvi35n(relativeToSource);
        var tmp_3 = roundToInt(this_7);
        // Inline function 'kotlin.math.roundToInt' call
        var this_8 = _Offset___get_y__impl__8bzhra(relativeToSource);
        var tmp$ret$10 = roundToInt(this_8);
        var other_2 = IntOffset(tmp_3, tmp$ret$10);
        var this_9 = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_6) + _IntOffset___get_x__impl__qiqr5o(other_2) | 0, _IntOffset___get_y__impl__2avpwj(this_6) + _IntOffset___get_y__impl__2avpwj(other_2) | 0);
        // Inline function 'kotlin.with' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.layout.LookaheadLayoutCoordinates.localPositionOf.<anonymous>.<anonymous>' call
        var $this$with = this.r58_1;
        // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
        var this_10 = $this$with.l59(get_rootLookaheadDelegate($this$with));
        var other_3 = get_rootLookaheadDelegate($this$with).m59();
        var other_4 = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_10) + _IntOffset___get_x__impl__qiqr5o(other_3) | 0, _IntOffset___get_y__impl__2avpwj(this_10) + _IntOffset___get_y__impl__2avpwj(other_3) | 0);
        var relativePosition = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_9) - _IntOffset___get_x__impl__qiqr5o(other_4) | 0, _IntOffset___get_y__impl__2avpwj(this_9) - _IntOffset___get_y__impl__2avpwj(other_4) | 0);
        var tmp_4 = ensureNotNull(get_rootLookaheadDelegate(this.r58_1).b59_1.x4q_1);
        var tmp_5 = ensureNotNull(sourceRoot.b59_1.x4q_1);
        // Inline function 'androidx.compose.ui.unit.toOffset' call
        var tmp$ret$17 = Offset_0(_IntOffset___get_x__impl__qiqr5o(relativePosition), _IntOffset___get_y__impl__2avpwj(relativePosition));
        tmp_1 = tmp_4.x4z(tmp_5, tmp$ret$17);
      } else {
        tmp_1 = tmp1_elvis_lhs;
      }
      return tmp_1;
    } else {
      var rootDelegate = get_rootLookaheadDelegate(this.r58_1);
      return Offset__plus_impl_c78cg0(this.x4z(rootDelegate.e59_1, relativeToSource), rootDelegate.b59_1.z52().x4z(sourceCoordinates, Companion_getInstance_2().v2v_1));
    }
  };
  protoOf(LookaheadLayoutCoordinates).q4r = function (sourceCoordinates, clipBounds) {
    return this.s58().q4r(sourceCoordinates, clipBounds);
  };
  function get_rootLookaheadDelegate(_this__u8e3s4) {
    var root = _this__u8e3s4.o4r();
    $l$loop: while (true) {
      var tmp0_safe_receiver = root.pp();
      if (!!((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.h4k_1) == null)) {
        break $l$loop;
      }
      var tmp1_safe_receiver = root.pp();
      var lookaheadRoot = ensureNotNull(tmp1_safe_receiver == null ? null : tmp1_safe_receiver.h4k_1);
      if (lookaheadRoot.g4k_1) {
        root = ensureNotNull(root.pp());
      } else {
        root = ensureNotNull(ensureNotNull(root.pp()).h4k_1);
      }
    }
    return ensureNotNull(root.h59().i59());
  }
  function MeasureScope$layout$1($width, $height, $alignmentLines, this$0, $placementBlock) {
    this.q59_1 = $width;
    this.r59_1 = this$0;
    this.s59_1 = $placementBlock;
    this.n59_1 = $width;
    this.o59_1 = $height;
    this.p59_1 = $alignmentLines;
  }
  protoOf(MeasureScope$layout$1).e2w = function () {
    return this.n59_1;
  };
  protoOf(MeasureScope$layout$1).f2w = function () {
    return this.o59_1;
  };
  protoOf(MeasureScope$layout$1).t59 = function () {
    return this.p59_1;
  };
  protoOf(MeasureScope$layout$1).u59 = function () {
    var tmp = this.r59_1;
    if (tmp instanceof LookaheadCapablePlaceable) {
      this.s59_1(this.r59_1.m58_1);
    } else {
      this.s59_1(new SimplePlacementScope(this.q59_1, this.r59_1.x4o()));
    }
  };
  function MeasureScope() {
  }
  function SimplePlacementScope(parentWidth, parentLayoutDirection) {
    PlacementScope.call(this);
    this.w59_1 = parentWidth;
    this.x59_1 = parentLayoutDirection;
  }
  protoOf(SimplePlacementScope).y59 = function () {
    return this.w59_1;
  };
  protoOf(SimplePlacementScope).z59 = function () {
    return this.x59_1;
  };
  function OnGloballyPositionedModifier() {
  }
  function OnPlacedModifier() {
  }
  function OnRemeasuredModifier() {
  }
  function ParentDataModifier() {
  }
  function get_DefaultLayerBlock() {
    _init_properties_Placeable_kt__czryj5();
    return DefaultLayerBlock;
  }
  var DefaultLayerBlock;
  function get_DefaultConstraints() {
    _init_properties_Placeable_kt__czryj5();
    return DefaultConstraints;
  }
  var DefaultConstraints;
  function onMeasuredSizeChanged($this) {
    $this.u4u_1 = coerceIn(_IntSize___get_width__impl__d9yl4o($this.w4u_1), _Constraints___get_minWidth__impl__hi9lfi($this.x4u_1), _Constraints___get_maxWidth__impl__uuyqc($this.x4u_1));
    $this.v4u_1 = coerceIn(_IntSize___get_height__impl__prv63b($this.w4u_1), _Constraints___get_minHeight__impl__ev4bgx($this.x4u_1), _Constraints___get_maxHeight__impl__dt3e8z($this.x4u_1));
    $this.y4u_1 = IntOffset(($this.u4u_1 - _IntSize___get_width__impl__d9yl4o($this.w4u_1) | 0) / 2 | 0, ($this.v4u_1 - _IntSize___get_height__impl__prv63b($this.w4u_1) | 0) / 2 | 0);
  }
  function PlacementScope() {
  }
  protoOf(PlacementScope).a5a = function (_this__u8e3s4, x, y, zIndex) {
    var position = IntOffset(x, y);
    var tmp;
    if (this.z59().equals(LayoutDirection_Ltr_getInstance()) ? true : this.y59() === 0) {
      // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
      var other = _this__u8e3s4.y4u_1;
      var tmp$ret$0 = IntOffset(_IntOffset___get_x__impl__qiqr5o(position) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(position) + _IntOffset___get_y__impl__2avpwj(other) | 0);
      _this__u8e3s4.e58(tmp$ret$0, zIndex, null);
      tmp = Unit_instance;
    } else {
      // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
      var this_0 = IntOffset((this.y59() - _this__u8e3s4.u4u_1 | 0) - _IntOffset___get_x__impl__qiqr5o(position) | 0, _IntOffset___get_y__impl__2avpwj(position));
      var other_0 = _this__u8e3s4.y4u_1;
      var tmp$ret$1 = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_0) + _IntOffset___get_x__impl__qiqr5o(other_0) | 0, _IntOffset___get_y__impl__2avpwj(this_0) + _IntOffset___get_y__impl__2avpwj(other_0) | 0);
      _this__u8e3s4.e58(tmp$ret$1, zIndex, null);
      tmp = Unit_instance;
    }
    return tmp;
  };
  protoOf(PlacementScope).b5a = function (_this__u8e3s4, x, y, zIndex, $super) {
    zIndex = zIndex === VOID ? 0.0 : zIndex;
    var tmp;
    if ($super === VOID) {
      this.a5a(_this__u8e3s4, x, y, zIndex);
      tmp = Unit_instance;
    } else {
      tmp = $super.a5a.call(this, _this__u8e3s4, x, y, zIndex);
    }
    return tmp;
  };
  protoOf(PlacementScope).c5a = function (_this__u8e3s4, x, y, zIndex) {
    // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
    var this_0 = IntOffset(x, y);
    var other = _this__u8e3s4.y4u_1;
    var tmp$ret$0 = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_0) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(this_0) + _IntOffset___get_y__impl__2avpwj(other) | 0);
    _this__u8e3s4.e58(tmp$ret$0, zIndex, null);
    return Unit_instance;
  };
  protoOf(PlacementScope).d5a = function (_this__u8e3s4, x, y, zIndex, $super) {
    zIndex = zIndex === VOID ? 0.0 : zIndex;
    var tmp;
    if ($super === VOID) {
      this.c5a(_this__u8e3s4, x, y, zIndex);
      tmp = Unit_instance;
    } else {
      tmp = $super.c5a.call(this, _this__u8e3s4, x, y, zIndex);
    }
    return tmp;
  };
  protoOf(PlacementScope).o58 = function (_this__u8e3s4, position, zIndex) {
    // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
    var other = _this__u8e3s4.y4u_1;
    var tmp$ret$0 = IntOffset(_IntOffset___get_x__impl__qiqr5o(position) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(position) + _IntOffset___get_y__impl__2avpwj(other) | 0);
    _this__u8e3s4.e58(tmp$ret$0, zIndex, null);
    return Unit_instance;
  };
  protoOf(PlacementScope).e5a = function (_this__u8e3s4, position, zIndex, $super) {
    zIndex = zIndex === VOID ? 0.0 : zIndex;
    var tmp;
    if ($super === VOID) {
      this.o58(_this__u8e3s4, position, zIndex);
      tmp = Unit_instance;
    } else {
      tmp = $super.o58.call(this, _this__u8e3s4, new IntOffset_0(position), zIndex);
    }
    return tmp;
  };
  protoOf(PlacementScope).f5a = function (_this__u8e3s4, x, y, zIndex, layerBlock) {
    var position = IntOffset(x, y);
    var tmp;
    if (this.z59().equals(LayoutDirection_Ltr_getInstance()) ? true : this.y59() === 0) {
      // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
      var other = _this__u8e3s4.y4u_1;
      var tmp$ret$0 = IntOffset(_IntOffset___get_x__impl__qiqr5o(position) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(position) + _IntOffset___get_y__impl__2avpwj(other) | 0);
      _this__u8e3s4.e58(tmp$ret$0, zIndex, layerBlock);
      tmp = Unit_instance;
    } else {
      // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
      var this_0 = IntOffset((this.y59() - _this__u8e3s4.u4u_1 | 0) - _IntOffset___get_x__impl__qiqr5o(position) | 0, _IntOffset___get_y__impl__2avpwj(position));
      var other_0 = _this__u8e3s4.y4u_1;
      var tmp$ret$1 = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_0) + _IntOffset___get_x__impl__qiqr5o(other_0) | 0, _IntOffset___get_y__impl__2avpwj(this_0) + _IntOffset___get_y__impl__2avpwj(other_0) | 0);
      _this__u8e3s4.e58(tmp$ret$1, zIndex, layerBlock);
      tmp = Unit_instance;
    }
    return tmp;
  };
  protoOf(PlacementScope).g5a = function (_this__u8e3s4, x, y, zIndex, layerBlock, $super) {
    zIndex = zIndex === VOID ? 0.0 : zIndex;
    layerBlock = layerBlock === VOID ? get_DefaultLayerBlock() : layerBlock;
    var tmp;
    if ($super === VOID) {
      this.f5a(_this__u8e3s4, x, y, zIndex, layerBlock);
      tmp = Unit_instance;
    } else {
      tmp = $super.f5a.call(this, _this__u8e3s4, x, y, zIndex, layerBlock);
    }
    return tmp;
  };
  protoOf(PlacementScope).h5a = function (_this__u8e3s4, x, y, zIndex, layerBlock) {
    // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
    var this_0 = IntOffset(x, y);
    var other = _this__u8e3s4.y4u_1;
    var tmp$ret$0 = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_0) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(this_0) + _IntOffset___get_y__impl__2avpwj(other) | 0);
    _this__u8e3s4.e58(tmp$ret$0, zIndex, layerBlock);
    return Unit_instance;
  };
  protoOf(PlacementScope).q4u = function (_this__u8e3s4, x, y, zIndex, layerBlock, $super) {
    zIndex = zIndex === VOID ? 0.0 : zIndex;
    layerBlock = layerBlock === VOID ? get_DefaultLayerBlock() : layerBlock;
    var tmp;
    if ($super === VOID) {
      this.h5a(_this__u8e3s4, x, y, zIndex, layerBlock);
      tmp = Unit_instance;
    } else {
      tmp = $super.h5a.call(this, _this__u8e3s4, x, y, zIndex, layerBlock);
    }
    return tmp;
  };
  protoOf(PlacementScope).n58 = function (_this__u8e3s4, position, zIndex, layerBlock) {
    // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
    var other = _this__u8e3s4.y4u_1;
    var tmp$ret$0 = IntOffset(_IntOffset___get_x__impl__qiqr5o(position) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(position) + _IntOffset___get_y__impl__2avpwj(other) | 0);
    _this__u8e3s4.e58(tmp$ret$0, zIndex, layerBlock);
    return Unit_instance;
  };
  function Placeable() {
    this.u4u_1 = 0;
    this.v4u_1 = 0;
    this.w4u_1 = IntSize(0, 0);
    this.x4u_1 = get_DefaultConstraints();
    this.y4u_1 = Companion_getInstance_4().w2x_1;
  }
  protoOf(Placeable).m5a = function () {
    return _IntSize___get_width__impl__d9yl4o(this.w4u_1);
  };
  protoOf(Placeable).n5a = function () {
    return _IntSize___get_height__impl__prv63b(this.w4u_1);
  };
  protoOf(Placeable).d58 = function (value) {
    if (!equals(this.w4u_1, value)) {
      this.w4u_1 = value;
      onMeasuredSizeChanged(this);
    }
  };
  protoOf(Placeable).a58 = function (value) {
    if (!equals(this.x4u_1, value)) {
      this.x4u_1 = value;
      onMeasuredSizeChanged(this);
    }
  };
  function PlacementScope_0(lookaheadCapablePlaceable) {
    _init_properties_Placeable_kt__czryj5();
    return new LookaheadCapablePlacementScope(lookaheadCapablePlaceable);
  }
  function PlacementScope_1(owner) {
    _init_properties_Placeable_kt__czryj5();
    return new OuterPlacementScope(owner);
  }
  function LookaheadCapablePlacementScope(within) {
    PlacementScope.call(this);
    this.o5a_1 = within;
  }
  protoOf(LookaheadCapablePlacementScope).y59 = function () {
    return this.o5a_1.m5a();
  };
  protoOf(LookaheadCapablePlacementScope).z59 = function () {
    return this.o5a_1.x4o();
  };
  function OuterPlacementScope(owner) {
    PlacementScope.call(this);
    this.p5a_1 = owner;
  }
  protoOf(OuterPlacementScope).y59 = function () {
    return this.p5a_1.q5a().e2w();
  };
  protoOf(OuterPlacementScope).z59 = function () {
    return this.p5a_1.x4o();
  };
  function DefaultLayerBlock$lambda($this$null) {
    _init_properties_Placeable_kt__czryj5();
    return Unit_instance;
  }
  var properties_initialized_Placeable_kt_ibfqof;
  function _init_properties_Placeable_kt__czryj5() {
    if (!properties_initialized_Placeable_kt_ibfqof) {
      properties_initialized_Placeable_kt_ibfqof = true;
      DefaultLayerBlock = DefaultLayerBlock$lambda;
      DefaultConstraints = Constraints_0();
    }
  }
  function RemeasurementModifier() {
  }
  function RootMeasurePolicy$measure$lambda($this$layout) {
    return Unit_instance;
  }
  function RootMeasurePolicy$measure$lambda_0($placeable) {
    return function ($this$layout) {
      $this$layout.g5a($placeable, 0, 0);
      return Unit_instance;
    };
  }
  function RootMeasurePolicy$measure$lambda_1($placeables) {
    return function ($this$layout) {
      var this_0 = $placeables;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.m() - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.n(index);
          // Inline function 'androidx.compose.ui.layout.RootMeasurePolicy.measure.<anonymous>.<anonymous>' call
          $this$layout.g5a(item, 0, 0);
        }
         while (inductionVariable <= last);
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function RootMeasurePolicy() {
    RootMeasurePolicy_instance = this;
    NoIntrinsicsMeasurePolicy.call(this, 'Undefined intrinsics block and it is required');
  }
  protoOf(RootMeasurePolicy).t5a = function (_this__u8e3s4, measurables, constraints) {
    var tmp;
    if (measurables.u()) {
      var tmp_0 = _Constraints___get_minWidth__impl__hi9lfi(constraints);
      var tmp_1 = _Constraints___get_minHeight__impl__ev4bgx(constraints);
      tmp = _this__u8e3s4.z4u(tmp_0, tmp_1, VOID, RootMeasurePolicy$measure$lambda);
    } else if (measurables.m() === 1) {
      var placeable = measurables.n(0).t4u(constraints);
      var tmp_2 = _Constraints___get_maxWidth__impl__uuyqc(constraints);
      var tmp_3 = _Constraints___get_maxHeight__impl__dt3e8z(constraints);
      tmp = _this__u8e3s4.z4u(tmp_2, tmp_3, VOID, RootMeasurePolicy$measure$lambda_0(placeable));
    } else {
      // Inline function 'androidx.compose.ui.util.fastMap' call
      // Inline function 'kotlin.contracts.contract' call
      var target = ArrayList_init_$Create$_0(measurables.m());
      // Inline function 'androidx.compose.ui.util.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = measurables.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = measurables.n(index);
          // Inline function 'androidx.compose.ui.util.fastMap.<anonymous>' call
          // Inline function 'kotlin.collections.plusAssign' call
          // Inline function 'androidx.compose.ui.layout.RootMeasurePolicy.measure.<anonymous>' call
          var element = item.t4u(constraints);
          target.a1(element);
        }
         while (inductionVariable <= last);
      var placeables = target;
      var tmp_4 = _Constraints___get_maxWidth__impl__uuyqc(constraints);
      var tmp_5 = _Constraints___get_maxHeight__impl__dt3e8z(constraints);
      tmp = _this__u8e3s4.z4u(tmp_4, tmp_5, VOID, RootMeasurePolicy$measure$lambda_1(placeables));
    }
    return tmp;
  };
  var RootMeasurePolicy_instance;
  function RootMeasurePolicy_getInstance() {
    if (RootMeasurePolicy_instance == null)
      new RootMeasurePolicy();
    return RootMeasurePolicy_instance;
  }
  function get_ReusedSlotId() {
    _init_properties_SubcomposeLayout_kt__9jde4k();
    return ReusedSlotId;
  }
  var ReusedSlotId;
  function markActiveNodesAsReused($this, deactivate) {
    $this.i5b_1 = 0;
    $this.d5b_1.h1();
    var childCount = $this.u5a_1.k5b().m();
    if (!($this.h5b_1 === childCount)) {
      $this.h5b_1 = childCount;
      $l$block_0: {
        // Inline function 'androidx.compose.runtime.snapshots.Companion.withoutReadObservation' call
        // Inline function 'kotlin.contracts.contract' call
        var snapshot = Companion_instance_0.a2m();
        try {
          $l$block: {
            // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
            var previous = snapshot.y22();
            try {
              var inductionVariable = 0;
              var tmp;
              if (inductionVariable < childCount) {
                do {
                  var i = inductionVariable;
                  inductionVariable = inductionVariable + 1 | 0;
                  var node = $this.u5a_1.k5b().n(i);
                  var nodeState = $this.z5a_1.x2(node);
                  if (!(nodeState == null) ? nodeState.s5b() : false) {
                    resetLayoutState(node, $this);
                    if (deactivate) {
                      var tmp1_safe_receiver = nodeState.n5b_1;
                      if (tmp1_safe_receiver == null)
                        null;
                      else {
                        tmp1_safe_receiver.l1s();
                      }
                      nodeState.q5b_1 = mutableStateOf(false);
                    } else {
                      nodeState.r5b(false);
                    }
                    nodeState.l5b_1 = get_ReusedSlotId();
                  }
                }
                 while (inductionVariable < childCount);
                tmp = Unit_instance;
              }
              break $l$block;
            }finally {
              snapshot.z22(previous);
            }
          }
          break $l$block_0;
        }finally {
          snapshot.ss();
        }
      }
      $this.a5b_1.h1();
    }
    $this.t5b();
  }
  function disposeCurrentNodes($this) {
    // Inline function 'androidx.compose.ui.node.LayoutNode.ignoreRemeasureRequests' call
    var this_0 = $this.u5a_1;
    this_0.q4k_1 = true;
    // Inline function 'androidx.compose.ui.layout.LayoutNodeSubcompositionsState.disposeCurrentNodes.<anonymous>' call
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = $this.z5a_1.l2().o();
    while (tmp0_iterator.d1()) {
      var element = tmp0_iterator.f1();
      // Inline function 'androidx.compose.ui.layout.LayoutNodeSubcompositionsState.disposeCurrentNodes.<anonymous>.<anonymous>' call
      var tmp0_safe_receiver = element.n5b_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.ss();
      }
    }
    $this.u5a_1.u5b();
    this_0.q4k_1 = false;
    $this.z5a_1.h1();
    $this.a5b_1.h1();
    $this.i5b_1 = 0;
    $this.h5b_1 = 0;
    $this.d5b_1.h1();
    $this.t5b();
  }
  function resetLayoutState(_this__u8e3s4, $this) {
    _this__u8e3s4.a5d().f5c_1 = UsageByParent_NotUsed_getInstance();
    var tmp0_safe_receiver = _this__u8e3s4.b5d();
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      tmp0_safe_receiver.k5d_1 = UsageByParent_NotUsed_getInstance();
    }
  }
  function ReusedSlotId$1() {
  }
  protoOf(ReusedSlotId$1).toString = function () {
    return 'ReusedSlotId';
  };
  var properties_initialized_SubcomposeLayout_kt_mr187y;
  function _init_properties_SubcomposeLayout_kt__9jde4k() {
    if (!properties_initialized_SubcomposeLayout_kt_mr187y) {
      properties_initialized_SubcomposeLayout_kt_mr187y = true;
      ReusedSlotId = new ReusedSlotId$1();
    }
  }
  function ProvidableModifierLocal(defaultFactory) {
    ModifierLocal.call(this, defaultFactory);
  }
  function modifierLocalOf(defaultFactory) {
    return new ProvidableModifierLocal(defaultFactory);
  }
  function ModifierLocal(defaultFactory) {
    this.b5e_1 = defaultFactory;
  }
  function ModifierLocalConsumer() {
  }
  function invalidateConsumersOfNodeForKey($this, node, key, set) {
    // Inline function 'androidx.compose.ui.node.visitSubtreeIf' call
    // Inline function 'androidx.compose.ui.node.Nodes.Locals' call
    var type = _NodeKind___init__impl__ojsprp(32);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!node.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitSubtreeIf.<anonymous>' call
      var message = 'visitSubtreeIf called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$2 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$2, 0);
    var child = node.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, node.c4j());
    } else {
      branches.q1q(child);
    }
    outer: while (branches.pn()) {
      var branch = branches.m1(branches.p1q_1 - 1 | 0);
      if (!((branch.s4i_1 & mask) === 0)) {
        var node_0 = branch;
        while (!(node_0 == null)) {
          if (!((node_0.r4i_1 & mask) === 0)) {
            var tmp$ret$6;
            $l$block: {
              // Inline function 'androidx.compose.ui.node.visitSubtreeIf.<anonymous>' call
              // Inline function 'androidx.compose.ui.node.dispatchForKind' call
              var stack = null;
              var node_1 = node_0;
              $l$loop: while (!(node_1 == null)) {
                if (!(node_1 == null) ? isInterface(node_1, ModifierLocalModifierNode) : false) {
                  // Inline function 'androidx.compose.ui.node.visitSubtreeIf.<anonymous>.<anonymous>' call
                  // Inline function 'androidx.compose.ui.modifier.ModifierLocalManager.invalidateConsumersOfNodeForKey.<anonymous>' call
                  var it = node_1;
                  var tmp;
                  if (it instanceof BackwardsCompatNode) {
                    var tmp_0 = it.q5e_1;
                    tmp = isInterface(tmp_0, ModifierLocalConsumer);
                  } else {
                    tmp = false;
                  }
                  if (tmp) {
                    if (it.t5e_1.s(key)) {
                      set.a1(it);
                    }
                  }
                  if (!!it.m4q().v5e(key)) {
                    tmp$ret$6 = false;
                    break $l$block;
                  }
                } else {
                  var tmp_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((node_1.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    tmp_1 = node_1 instanceof DelegatingNode;
                  } else {
                    tmp_1 = false;
                  }
                  if (tmp_1) {
                    var count = 0;
                    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                    var node_2 = node_1.b4m_1;
                    while (!(node_2 == null)) {
                      // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                      var next = node_2;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                        count = count + 1 | 0;
                        if (count === 1) {
                          node_1 = next;
                        } else {
                          var tmp1_elvis_lhs = stack;
                          var tmp_2;
                          if (tmp1_elvis_lhs == null) {
                            // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                            // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                            // Inline function 'kotlin.arrayOfNulls' call
                            var tmp$ret$9 = fillArrayVal(Array(16), null);
                            tmp_2 = new MutableVector(tmp$ret$9, 0);
                          } else {
                            tmp_2 = tmp1_elvis_lhs;
                          }
                          stack = tmp_2;
                          var theNode = node_1;
                          if (!(theNode == null)) {
                            var tmp2_safe_receiver = stack;
                            if (tmp2_safe_receiver == null)
                              null;
                            else
                              tmp2_safe_receiver.q1q(theNode);
                            node_1 = null;
                          }
                          var tmp3_safe_receiver = stack;
                          if (tmp3_safe_receiver == null)
                            null;
                          else
                            tmp3_safe_receiver.q1q(next);
                        }
                      }
                      node_2 = node_2.u4i_1;
                    }
                    if (count === 1) {
                      continue $l$loop;
                    }
                  }
                }
                node_1 = pop$accessor$hxafa1(stack);
              }
              tmp$ret$6 = true;
            }
            var diveDeeper = tmp$ret$6;
            if (!diveDeeper)
              continue outer;
          }
          node_0 = node_0.u4i_1;
        }
      }
      addLayoutNodeChildren$accessor$hxafa1(branches, branch);
    }
  }
  function ModifierLocalManager$invalidate$lambda(this$0) {
    return function () {
      this$0.c5f();
      return Unit_instance;
    };
  }
  function ModifierLocalManager(owner) {
    this.w5e_1 = owner;
    var tmp = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp.x5e_1 = new MutableVector(tmp$ret$0, 0);
    var tmp_0 = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$3 = fillArrayVal(Array(16), null);
    tmp_0.y5e_1 = new MutableVector(tmp$ret$3, 0);
    var tmp_1 = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$6 = fillArrayVal(Array(16), null);
    tmp_1.z5e_1 = new MutableVector(tmp$ret$6, 0);
    var tmp_2 = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$9 = fillArrayVal(Array(16), null);
    tmp_2.a5f_1 = new MutableVector(tmp$ret$9, 0);
    this.b5f_1 = false;
  }
  protoOf(ModifierLocalManager).n1y = function () {
    if (!this.b5f_1) {
      this.b5f_1 = true;
      this.w5e_1.n4j(ModifierLocalManager$invalidate$lambda(this));
    }
  };
  protoOf(ModifierLocalManager).c5f = function () {
    this.b5f_1 = false;
    // Inline function 'kotlin.collections.hashSetOf' call
    var toUpdate = HashSet_init_$Create$();
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEachIndexed' call
    var this_0 = this.z5e_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.modifier.ModifierLocalManager.triggerUpdates.<anonymous>' call
        var i_0 = i;
        var layout = content[i];
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var tmp_0 = this.a5f_1.n1q_1[i_0];
        var key = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
        if (layout.d4l_1.y4j_1.b4j_1) {
          invalidateConsumersOfNodeForKey(this, layout.d4l_1.y4j_1, key, toUpdate);
        }
        i = i + 1 | 0;
      }
       while (i < size);
    }
    this.z5e_1.h1();
    this.a5f_1.h1();
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEachIndexed' call
    var this_1 = this.x5e_1;
    // Inline function 'kotlin.contracts.contract' call
    var size_0 = this_1.p1q_1;
    if (size_0 > 0) {
      var i_1 = 0;
      var tmp_1 = this_1.n1q_1;
      var content_0 = isArray(tmp_1) ? tmp_1 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.modifier.ModifierLocalManager.triggerUpdates.<anonymous>' call
        var i_2 = i_1;
        var node = content_0[i_1];
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var tmp_2 = this.y5e_1.n1q_1[i_2];
        var key_0 = (tmp_2 == null ? true : !(tmp_2 == null)) ? tmp_2 : THROW_CCE();
        if (node.b4j_1) {
          invalidateConsumersOfNodeForKey(this, node, key_0, toUpdate);
        }
        i_1 = i_1 + 1 | 0;
      }
       while (i_1 < size_0);
    }
    this.x5e_1.h1();
    this.y5e_1.h1();
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = toUpdate.o();
    while (tmp0_iterator.d1()) {
      var element = tmp0_iterator.f1();
      // Inline function 'androidx.compose.ui.modifier.ModifierLocalManager.triggerUpdates.<anonymous>' call
      element.d5f();
    }
  };
  protoOf(ModifierLocalManager).e5f = function (node, key) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    this.x5e_1.q1q(node);
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    this.y5e_1.q1q(key);
    this.n1y();
  };
  protoOf(ModifierLocalManager).f5f = function (node, key) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    this.x5e_1.q1q(node);
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    this.y5e_1.q1q(key);
    this.n1y();
  };
  protoOf(ModifierLocalManager).g5f = function (node, key) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    var this_0 = this.z5e_1;
    var element = requireLayoutNode(node);
    this_0.q1q(element);
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    this.a5f_1.q1q(key);
    this.n1y();
  };
  function ModifierLocalModifierNode() {
  }
  function ModifierLocalMap() {
  }
  function EmptyMap() {
    EmptyMap_instance = this;
    ModifierLocalMap.call(this);
  }
  protoOf(EmptyMap).h5f = function (key) {
    throw IllegalStateException_init_$Create$(toString(''));
  };
  protoOf(EmptyMap).v5e = function (key) {
    return false;
  };
  var EmptyMap_instance;
  function EmptyMap_getInstance() {
    if (EmptyMap_instance == null)
      new EmptyMap();
    return EmptyMap_instance;
  }
  function BackwardsCompatLocalMap(element) {
    ModifierLocalMap.call(this);
    this.i5f_1 = element;
  }
  protoOf(BackwardsCompatLocalMap).h5f = function (key) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(key === this.i5f_1.p2())) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var tmp = this.i5f_1.q2();
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(BackwardsCompatLocalMap).v5e = function (key) {
    return key === this.i5f_1.p2();
  };
  function modifierLocalMapOf() {
    return EmptyMap_getInstance();
  }
  function ModifierLocalProvider() {
  }
  function get_DetachedModifierLocalReadScope() {
    _init_properties_BackwardsCompatNode_kt__rwcpvm();
    return DetachedModifierLocalReadScope;
  }
  var DetachedModifierLocalReadScope;
  function get_onDrawCacheReadsChanged() {
    _init_properties_BackwardsCompatNode_kt__rwcpvm();
    return onDrawCacheReadsChanged;
  }
  var onDrawCacheReadsChanged;
  function get_updateModifierLocalConsumer() {
    _init_properties_BackwardsCompatNode_kt__rwcpvm();
    return updateModifierLocalConsumer;
  }
  var updateModifierLocalConsumer;
  function unInitializeModifier($this) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!$this.b4j_1) {
      // Inline function 'androidx.compose.ui.node.BackwardsCompatNode.unInitializeModifier.<anonymous>' call
      var message = 'unInitializeModifier called on unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var element = $this.q5e_1;
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.Locals' call
    var kind = _NodeKind___init__impl__ojsprp(32);
    if (!(($this.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
      if (isInterface(element, ModifierLocalProvider)) {
        requireOwner($this).j5f().g5f($this, element.p2());
      }
      if (isInterface(element, ModifierLocalConsumer)) {
        element.c5e(get_DetachedModifierLocalReadScope());
      }
    }
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
    var kind_0 = _NodeKind___init__impl__ojsprp(8);
    if (!(($this.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_0)) === 0)) {
      requireOwner($this).k5f();
    }
    if (isInterface(element, FocusRequesterModifier)) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.minusAssign' call
      element.f4q().c4p_1.u2g($this);
    }
  }
  function initializeModifier($this, duringAttach) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!$this.b4j_1) {
      // Inline function 'androidx.compose.ui.node.BackwardsCompatNode.initializeModifier.<anonymous>' call
      var message = 'initializeModifier called on unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var element = $this.q5e_1;
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.Locals' call
    var kind = _NodeKind___init__impl__ojsprp(32);
    if (!(($this.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
      if (isInterface(element, ModifierLocalConsumer)) {
        $this.j1t(BackwardsCompatNode$initializeModifier$lambda($this));
      }
      if (isInterface(element, ModifierLocalProvider)) {
        updateModifierLocalProvider($this, element);
      }
    }
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
    var kind_0 = _NodeKind___init__impl__ojsprp(4);
    if (!(($this.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_0)) === 0)) {
      if (isInterface(element, DrawCacheModifier)) {
        $this.r5e_1 = true;
      }
      if (!duringAttach) {
        invalidateLayer($this);
      }
    }
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
    var kind_1 = _NodeKind___init__impl__ojsprp(2);
    if (!(($this.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_1)) === 0)) {
      var isChainUpdate_0 = isChainUpdate($this);
      if (isChainUpdate_0) {
        var coordinator = ensureNotNull($this.w4i_1);
        if (!(coordinator instanceof LayoutModifierNodeCoordinator))
          THROW_CCE();
        coordinator.m5g_1 = $this;
        coordinator.p5g();
      }
      if (!duringAttach) {
        invalidateLayer($this);
        requireLayoutNode($this).q5g();
      }
    }
    if (isInterface(element, RemeasurementModifier)) {
      element.r5a(requireLayoutNode($this));
    }
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.LayoutAware' call
    var kind_2 = _NodeKind___init__impl__ojsprp(128);
    if (!(($this.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_2)) === 0)) {
      if (isInterface(element, OnRemeasuredModifier)) {
        var isChainUpdate_1 = isChainUpdate($this);
        if (isChainUpdate_1) {
          requireLayoutNode($this).q5g();
        }
      }
      if (isInterface(element, OnPlacedModifier)) {
        $this.u5e_1 = null;
        var isChainUpdate_2 = isChainUpdate($this);
        if (isChainUpdate_2) {
          var tmp = requireOwner($this);
          tmp.r5g(new BackwardsCompatNode$initializeModifier$3($this));
        }
      }
    }
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.GlobalPositionAware' call
    var kind_3 = _NodeKind___init__impl__ojsprp(256);
    if (!(($this.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_3)) === 0)) {
      if (isInterface(element, OnGloballyPositionedModifier)) {
        var isChainUpdate_3 = isChainUpdate($this);
        if (isChainUpdate_3) {
          requireLayoutNode($this).q5g();
        }
      }
    }
    if (isInterface(element, FocusRequesterModifier)) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
      element.f4q().c4p_1.q1q($this);
    }
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
    var kind_4 = _NodeKind___init__impl__ojsprp(16);
    if (!(($this.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_4)) === 0)) {
      if (isInterface(element, PointerInputModifier)) {
        element.h51().s5g_1 = $this.w4i_1;
      }
    }
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
    var kind_5 = _NodeKind___init__impl__ojsprp(8);
    if (!(($this.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_5)) === 0)) {
      requireOwner($this).k5f();
    }
  }
  function updateDrawCache($this) {
    var element = $this.q5e_1;
    if (isInterface(element, DrawCacheModifier)) {
      var tmp = requireOwner($this).u5g();
      var tmp_0 = get_onDrawCacheReadsChanged();
      tmp.d5h($this, tmp_0, BackwardsCompatNode$updateDrawCache$lambda(element, $this));
    }
    $this.r5e_1 = false;
  }
  function updateModifierLocalProvider($this, element) {
    var providedValues = $this.s5e_1;
    if (!(providedValues == null) ? providedValues.v5e(element.p2()) : false) {
      providedValues.i5f_1 = element;
      requireOwner($this).j5f().e5f($this, element.p2());
    } else {
      $this.s5e_1 = new BackwardsCompatLocalMap(element);
      var isChainUpdate_0 = isChainUpdate($this);
      if (isChainUpdate_0) {
        requireOwner($this).j5f().f5f($this, element.p2());
      }
    }
  }
  function BackwardsCompatNode$initializeModifier$lambda(this$0) {
    return function () {
      this$0.d5f();
      return Unit_instance;
    };
  }
  function BackwardsCompatNode$initializeModifier$3(this$0) {
    this.e5h_1 = this$0;
  }
  protoOf(BackwardsCompatNode$initializeModifier$3).f5h = function () {
    if (this.e5h_1.u5e_1 == null) {
      // Inline function 'androidx.compose.ui.node.Nodes.LayoutAware' call
      var tmp$ret$0 = _NodeKind___init__impl__ojsprp(128);
      this.e5h_1.j5a(requireCoordinator(this.e5h_1, tmp$ret$0));
    }
  };
  function BackwardsCompatNode$updateDrawCache$lambda($element, this$0) {
    return function () {
      $element.s4j(this$0);
      return Unit_instance;
    };
  }
  function BackwardsCompatNode$updateModifierLocalConsumer$lambda(this$0) {
    return function () {
      var tmp = this$0.q5e_1;
      (isInterface(tmp, ModifierLocalConsumer) ? tmp : THROW_CCE()).c5e(this$0);
      return Unit_instance;
    };
  }
  function BackwardsCompatNode(element) {
    Node.call(this);
    this.r4i_1 = calculateNodeKindSetFrom(element);
    this.q5e_1 = element;
    this.r5e_1 = true;
    this.s5e_1 = null;
    var tmp = this;
    // Inline function 'kotlin.collections.hashSetOf' call
    tmp.t5e_1 = HashSet_init_$Create$();
    this.u5e_1 = null;
  }
  protoOf(BackwardsCompatNode).g5h = function (value) {
    if (this.b4j_1) {
      unInitializeModifier(this);
    }
    this.q5e_1 = value;
    this.r4i_1 = calculateNodeKindSetFrom(value);
    if (this.b4j_1) {
      initializeModifier(this, false);
    }
  };
  protoOf(BackwardsCompatNode).i4j = function () {
    initializeModifier(this, true);
  };
  protoOf(BackwardsCompatNode).k4j = function () {
    unInitializeModifier(this);
  };
  protoOf(BackwardsCompatNode).h5h = function () {
    this.r5e_1 = true;
    invalidateDraw(this);
  };
  protoOf(BackwardsCompatNode).i5h = function () {
    this.r5e_1 = true;
    invalidateDraw(this);
  };
  protoOf(BackwardsCompatNode).m4q = function () {
    var tmp0_elvis_lhs = this.s5e_1;
    return tmp0_elvis_lhs == null ? modifierLocalMapOf() : tmp0_elvis_lhs;
  };
  protoOf(BackwardsCompatNode).d5f = function () {
    if (this.b4j_1) {
      this.t5e_1.h1();
      var tmp = requireOwner(this).u5g();
      var tmp_0 = get_updateModifierLocalConsumer();
      tmp.d5h(this, tmp_0, BackwardsCompatNode$updateModifierLocalConsumer$lambda(this));
    }
  };
  protoOf(BackwardsCompatNode).j5h = function () {
    return this.b4j_1;
  };
  protoOf(BackwardsCompatNode).s4u = function (_this__u8e3s4, measurable, constraints) {
    // Inline function 'kotlin.with' call
    var tmp = this.q5e_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.BackwardsCompatNode.measure.<anonymous>' call
    return (isInterface(tmp, LayoutModifier) ? tmp : THROW_CCE()).s4u(_this__u8e3s4, measurable, constraints);
  };
  protoOf(BackwardsCompatNode).t4j = function (_this__u8e3s4) {
    var element = this.q5e_1;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = isInterface(element, DrawModifier) ? element : THROW_CCE();
    var tmp;
    if (this.r5e_1) {
      tmp = isInterface(element, DrawCacheModifier);
    } else {
      tmp = false;
    }
    if (tmp) {
      updateDrawCache(this);
    }
    $this$with.t4j(_this__u8e3s4);
  };
  protoOf(BackwardsCompatNode).k5h = function (_this__u8e3s4) {
    var tmp = this.q5e_1;
    var config = (isInterface(tmp, SemanticsModifier) ? tmp : THROW_CCE()).l5h();
    var toMergeInto = _this__u8e3s4 instanceof SemanticsConfiguration ? _this__u8e3s4 : THROW_CCE();
    toMergeInto.p5h(config);
  };
  protoOf(BackwardsCompatNode).s4z = function (pointerEvent, pass, bounds) {
    // Inline function 'kotlin.with' call
    var tmp = this.q5e_1;
    // Inline function 'kotlin.contracts.contract' call
    (isInterface(tmp, PointerInputModifier) ? tmp : THROW_CCE()).h51().s4z(pointerEvent, pass, bounds);
  };
  protoOf(BackwardsCompatNode).i50 = function () {
    // Inline function 'kotlin.with' call
    var tmp = this.q5e_1;
    // Inline function 'kotlin.contracts.contract' call
    (isInterface(tmp, PointerInputModifier) ? tmp : THROW_CCE()).h51().q5h();
  };
  protoOf(BackwardsCompatNode).r52 = function () {
    // Inline function 'kotlin.with' call
    var tmp = this.q5e_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.BackwardsCompatNode.sharePointerInputWithSiblings.<anonymous>' call
    return (isInterface(tmp, PointerInputModifier) ? tmp : THROW_CCE()).h51().r5h();
  };
  protoOf(BackwardsCompatNode).q52 = function () {
    // Inline function 'kotlin.with' call
    var tmp = this.q5e_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.BackwardsCompatNode.interceptOutOfBoundsChildEvents.<anonymous>' call
    return (isInterface(tmp, PointerInputModifier) ? tmp : THROW_CCE()).h51().s5h();
  };
  protoOf(BackwardsCompatNode).l5a = function (_this__u8e3s4, parentData) {
    // Inline function 'kotlin.with' call
    var tmp = this.q5e_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.BackwardsCompatNode.modifyParentData.<anonymous>' call
    return (isInterface(tmp, ParentDataModifier) ? tmp : THROW_CCE()).l5a(_this__u8e3s4, parentData);
  };
  protoOf(BackwardsCompatNode).i5a = function (coordinates) {
    var tmp = this.q5e_1;
    (isInterface(tmp, OnGloballyPositionedModifier) ? tmp : THROW_CCE()).i5a(coordinates);
  };
  protoOf(BackwardsCompatNode).k5a = function (size) {
    var element = this.q5e_1;
    if (isInterface(element, OnRemeasuredModifier)) {
      element.k5a(size);
    }
  };
  protoOf(BackwardsCompatNode).j5a = function (coordinates) {
    this.u5e_1 = coordinates;
    var element = this.q5e_1;
    if (isInterface(element, OnPlacedModifier)) {
      element.j5a(coordinates);
    }
  };
  protoOf(BackwardsCompatNode).k4n = function (focusState) {
    var focusEventModifier = this.q5e_1;
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!isInterface(focusEventModifier, FocusEventModifier)) {
      // Inline function 'androidx.compose.ui.node.BackwardsCompatNode.onFocusEvent.<anonymous>' call
      var message = 'onFocusEvent called on wrong node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    focusEventModifier.k4n(focusState);
  };
  protoOf(BackwardsCompatNode).d4q = function (focusProperties) {
    var focusOrderModifier = this.q5e_1;
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!isInterface(focusOrderModifier, FocusOrderModifier)) {
      // Inline function 'androidx.compose.ui.node.BackwardsCompatNode.applyFocusProperties.<anonymous>' call
      var message = 'applyFocusProperties called on wrong node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    focusOrderModifier.w4n(new FocusOrder(focusProperties));
  };
  protoOf(BackwardsCompatNode).toString = function () {
    return toString(this.q5e_1);
  };
  function isChainUpdate(_this__u8e3s4) {
    _init_properties_BackwardsCompatNode_kt__rwcpvm();
    var tmp = requireLayoutNode(_this__u8e3s4).d4l_1.x4j_1;
    var tailNode = tmp instanceof TailModifierNode ? tmp : THROW_CCE();
    return tailNode.i5i_1;
  }
  function DetachedModifierLocalReadScope$1() {
  }
  function onDrawCacheReadsChanged$lambda(it) {
    _init_properties_BackwardsCompatNode_kt__rwcpvm();
    it.i5h();
    return Unit_instance;
  }
  function updateModifierLocalConsumer$lambda(it) {
    _init_properties_BackwardsCompatNode_kt__rwcpvm();
    it.d5f();
    return Unit_instance;
  }
  var properties_initialized_BackwardsCompatNode_kt_vhlzc4;
  function _init_properties_BackwardsCompatNode_kt__rwcpvm() {
    if (!properties_initialized_BackwardsCompatNode_kt_vhlzc4) {
      properties_initialized_BackwardsCompatNode_kt_vhlzc4 = true;
      DetachedModifierLocalReadScope = new DetachedModifierLocalReadScope$1();
      onDrawCacheReadsChanged = onDrawCacheReadsChanged$lambda;
      updateModifierLocalConsumer = updateModifierLocalConsumer$lambda;
    }
  }
  function ComposeUiNode$Companion$VirtualConstructor$lambda() {
    return new LayoutNode(true);
  }
  function ComposeUiNode$Companion$SetModifier$lambda($this$null, it) {
    $this$null.j5i(it);
    return Unit_instance;
  }
  function ComposeUiNode$Companion$SetDensity$lambda($this$null, it) {
    $this$null.k5i(it);
    return Unit_instance;
  }
  function ComposeUiNode$Companion$SetResolvedCompositionLocals$lambda($this$null, it) {
    $this$null.l5i(it);
    return Unit_instance;
  }
  function ComposeUiNode$Companion$SetMeasurePolicy$lambda($this$null, it) {
    $this$null.m5i(it);
    return Unit_instance;
  }
  function ComposeUiNode$Companion$SetLayoutDirection$lambda($this$null, it) {
    $this$null.n5i(it);
    return Unit_instance;
  }
  function ComposeUiNode$Companion$SetViewConfiguration$lambda($this$null, it) {
    $this$null.o5i(it);
    return Unit_instance;
  }
  function ComposeUiNode$Companion$SetCompositeKeyHash$lambda($this$null, it) {
    $this$null.p5i(it);
    return Unit_instance;
  }
  function Companion_11() {
    Companion_instance_15 = this;
    this.q5i_1 = Companion_getInstance_29().b5j_1;
    var tmp = this;
    tmp.r5i_1 = ComposeUiNode$Companion$VirtualConstructor$lambda;
    var tmp_0 = this;
    tmp_0.s5i_1 = ComposeUiNode$Companion$SetModifier$lambda;
    var tmp_1 = this;
    tmp_1.t5i_1 = ComposeUiNode$Companion$SetDensity$lambda;
    var tmp_2 = this;
    tmp_2.u5i_1 = ComposeUiNode$Companion$SetResolvedCompositionLocals$lambda;
    var tmp_3 = this;
    tmp_3.v5i_1 = ComposeUiNode$Companion$SetMeasurePolicy$lambda;
    var tmp_4 = this;
    tmp_4.w5i_1 = ComposeUiNode$Companion$SetLayoutDirection$lambda;
    var tmp_5 = this;
    tmp_5.x5i_1 = ComposeUiNode$Companion$SetViewConfiguration$lambda;
    var tmp_6 = this;
    tmp_6.y5i_1 = ComposeUiNode$Companion$SetCompositeKeyHash$lambda;
  }
  var Companion_instance_15;
  function Companion_getInstance_25() {
    if (Companion_instance_15 == null)
      new Companion_11();
    return Companion_instance_15;
  }
  function CompositionLocalConsumerModifierNode() {
  }
  function currentValueOf(_this__u8e3s4, local) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.currentValueOf.<anonymous>' call
      var message = 'Cannot read CompositionLocal because the Modifier node is not currently attached.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return requireLayoutNode(_this__u8e3s4).z4k_1.u2l(local);
  }
  function requireOwner(_this__u8e3s4) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      var value = requireLayoutNode(_this__u8e3s4).n4k_1;
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'androidx.compose.ui.node.requireOwner.<anonymous>' call
        var message = 'This node does not have an owner.';
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    return tmp$ret$1;
  }
  function requireLayoutNode(_this__u8e3s4) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      var value = _this__u8e3s4.c4j().w4i_1;
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'androidx.compose.ui.node.requireLayoutNode.<anonymous>' call
        var message = 'Cannot obtain node coordinator. Is the Modifier.Node attached?';
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    return tmp$ret$1.o4r();
  }
  function requireCoordinator(_this__u8e3s4, kind) {
    var coordinator = ensureNotNull(_this__u8e3s4.c4j().w4i_1);
    return !(coordinator.e5j() === _this__u8e3s4) ? coordinator : get_includeSelfInTraversal(kind) ? ensureNotNull(coordinator.w4q_1) : coordinator;
  }
  function pop(_this__u8e3s4) {
    return (_this__u8e3s4 == null ? true : _this__u8e3s4.u()) ? null : _this__u8e3s4.m1(_this__u8e3s4.p1q_1 - 1 | 0);
  }
  function get_isDelegationRoot(_this__u8e3s4) {
    return _this__u8e3s4.c4j() === _this__u8e3s4;
  }
  function asLayoutModifierNode(_this__u8e3s4) {
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
    var kind = _NodeKind___init__impl__ojsprp(2);
    if (!!((_this__u8e3s4.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0))
      return null;
    if (isInterface(_this__u8e3s4, LayoutModifierNode))
      return _this__u8e3s4;
    if (_this__u8e3s4 instanceof DelegatingNode) {
      var node = _this__u8e3s4.b4m_1;
      while (!(node == null)) {
        if (!(node == null) ? isInterface(node, LayoutModifierNode) : false)
          return node;
        var tmp;
        var tmp_0;
        if (node instanceof DelegatingNode) {
          // Inline function 'androidx.compose.ui.Node.isKind' call
          var this_0 = node;
          // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
          var kind_0 = _NodeKind___init__impl__ojsprp(2);
          tmp_0 = !((this_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_0)) === 0);
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp = node.b4m_1;
        } else {
          tmp = node.u4i_1;
        }
        node = tmp;
      }
    }
    return null;
  }
  function has(_this__u8e3s4, type) {
    return !((_this__u8e3s4.c4j().s4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0);
  }
  function addLayoutNodeChildren(_this__u8e3s4, node) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEachReversed' call
    var this_0 = requireLayoutNode(node).f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.addLayoutNodeChildren.<anonymous>' call
        var it = content[i];
        _this__u8e3s4.q1q(it.d4l_1.y4j_1);
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
  }
  function pop$accessor$hxafa1(_this__u8e3s4) {
    return pop(_this__u8e3s4);
  }
  function addLayoutNodeChildren$accessor$hxafa1(_this__u8e3s4, node) {
    return addLayoutNodeChildren(_this__u8e3s4, node);
  }
  function validateDelegateKindSet($this, delegateKindSet, delegateNode) {
    var current = $this.r4i_1;
    var tmp;
    // Inline function 'androidx.compose.ui.node.contains' call
    // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
    var value = _NodeKind___init__impl__ojsprp(2);
    if (!((delegateKindSet & _NodeKind___get_mask__impl__1uopb6(value)) === 0)) {
      // Inline function 'androidx.compose.ui.node.contains' call
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var value_0 = _NodeKind___init__impl__ojsprp(2);
      tmp = !((current & _NodeKind___get_mask__impl__1uopb6(value_0)) === 0);
    } else {
      tmp = false;
    }
    if (tmp) {
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!isInterface($this, LayoutModifierNode)) {
        // Inline function 'androidx.compose.ui.node.DelegatingNode.validateDelegateKindSet.<anonymous>' call
        var message = 'Delegating to multiple LayoutModifierNodes without the delegating node implementing LayoutModifierNode itself is not allowed.' + ('\nDelegating Node: ' + $this) + ('\nDelegate Node: ' + delegateNode);
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
  }
  function updateNodeKindSet($this, newKindSet, recalculateOwner) {
    var before = $this.r4i_1;
    $this.r4i_1 = newKindSet;
    if (!(before === newKindSet)) {
      var agg = newKindSet;
      if (get_isDelegationRoot($this)) {
        $this.s4i_1 = agg;
      }
      if ($this.b4j_1) {
        var owner = $this.p4i_1;
        var it = $this;
        $l$loop: while (!(it == null)) {
          agg = it.r4i_1 | agg;
          it.r4i_1 = agg;
          if (it === owner)
            break $l$loop;
          it = it.t4i_1;
        }
        if (recalculateOwner ? it === owner : false) {
          agg = calculateNodeKindSetFromIncludingDelegates(owner);
          owner.r4i_1 = agg;
        }
        var tmp = agg;
        var tmp0_safe_receiver = it;
        var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u4i_1;
        var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.s4i_1;
        agg = tmp | (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs);
        while (!(it == null)) {
          agg = it.r4i_1 | agg;
          it.s4i_1 = agg;
          it = it.t4i_1;
        }
      }
    }
  }
  function DelegatingNode() {
    Node.call(this);
    this.a4m_1 = calculateNodeKindSetFrom_0(this);
    this.b4m_1 = null;
  }
  protoOf(DelegatingNode).f4j = function (coordinator) {
    protoOf(Node).f4j.call(this, coordinator);
    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
    var node = this.b4m_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.DelegatingNode.updateCoordinator.<anonymous>' call
      node.f4j(coordinator);
      node = node.u4i_1;
    }
  };
  protoOf(DelegatingNode).g5j = function (delegatableNode) {
    var delegateNode = delegatableNode.c4j();
    var isAlreadyDelegated = !(delegateNode === delegatableNode);
    if (isAlreadyDelegated) {
      var tmp0_safe_receiver = delegatableNode instanceof Node ? delegatableNode : null;
      var delegator = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t4i_1;
      var isDelegatedToThisNode = delegateNode === this.p4i_1 ? equals(delegator, this) : false;
      if (isDelegatedToThisNode) {
        return delegatableNode;
      } else {
        // Inline function 'kotlin.error' call
        var message = 'Cannot delegate to an already delegated node';
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!delegateNode.b4j_1) {
      // Inline function 'androidx.compose.ui.node.DelegatingNode.delegate.<anonymous>' call
      var message_0 = 'Cannot delegate to an already attached node';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    delegateNode.o4j(this.p4i_1);
    var beforeKindSet = this.r4i_1;
    var delegatedKindSet = calculateNodeKindSetFromIncludingDelegates(delegateNode);
    delegateNode.r4i_1 = delegatedKindSet;
    validateDelegateKindSet(this, delegatedKindSet, delegateNode);
    delegateNode.u4i_1 = this.b4m_1;
    this.b4m_1 = delegateNode;
    delegateNode.t4i_1 = this;
    updateNodeKindSet(this, this.r4i_1 | delegatedKindSet, false);
    if (this.b4j_1) {
      var tmp;
      // Inline function 'androidx.compose.ui.node.contains' call
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var value = _NodeKind___init__impl__ojsprp(2);
      if (!((delegatedKindSet & _NodeKind___get_mask__impl__1uopb6(value)) === 0)) {
        // Inline function 'androidx.compose.ui.node.contains' call
        // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
        var value_0 = _NodeKind___init__impl__ojsprp(2);
        tmp = !!((beforeKindSet & _NodeKind___get_mask__impl__1uopb6(value_0)) === 0);
      } else {
        tmp = false;
      }
      if (tmp) {
        var chain = requireLayoutNode(this).d4l_1;
        this.p4i_1.f4j(null);
        chain.h5j();
      } else {
        this.f4j(this.w4i_1);
      }
      delegateNode.g4j();
      delegateNode.h4j();
      autoInvalidateInsertedNode(delegateNode);
    }
    return delegatableNode;
  };
  protoOf(DelegatingNode).g4j = function () {
    protoOf(Node).g4j.call(this);
    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
    var node = this.b4m_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.DelegatingNode.markAsAttached.<anonymous>' call
      var it = node;
      it.f4j(this.w4i_1);
      if (!it.b4j_1) {
        it.g4j();
      }
      node = node.u4i_1;
    }
  };
  protoOf(DelegatingNode).h4j = function () {
    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
    var node = this.b4m_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.DelegatingNode.runAttachLifecycle.<anonymous>' call
      node.h4j();
      node = node.u4i_1;
    }
    protoOf(Node).h4j.call(this);
  };
  protoOf(DelegatingNode).j4j = function () {
    protoOf(Node).j4j.call(this);
    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
    var node = this.b4m_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.DelegatingNode.runDetachLifecycle.<anonymous>' call
      node.j4j();
      node = node.u4i_1;
    }
  };
  protoOf(DelegatingNode).l4j = function () {
    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
    var node = this.b4m_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.DelegatingNode.markAsDetached.<anonymous>' call
      node.l4j();
      node = node.u4i_1;
    }
    protoOf(Node).l4j.call(this);
  };
  protoOf(DelegatingNode).a26 = function () {
    protoOf(Node).a26.call(this);
    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
    var node = this.b4m_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.DelegatingNode.reset.<anonymous>' call
      node.a26();
      node = node.u4i_1;
    }
  };
  function DepthSortedSetsForDifferentPasses(extraAssertions) {
    this.i5j_1 = new DepthSortedSet(extraAssertions);
    this.j5j_1 = new DepthSortedSet(extraAssertions);
  }
  protoOf(DepthSortedSetsForDifferentPasses).k5j = function (node, affectsLookahead) {
    var constainsInLookahead = this.i5j_1.p5j(node);
    var tmp;
    if (affectsLookahead) {
      tmp = constainsInLookahead;
    } else {
      tmp = constainsInLookahead ? true : this.j5j_1.p5j(node);
    }
    return tmp;
  };
  protoOf(DepthSortedSetsForDifferentPasses).p5j = function (node) {
    return this.i5j_1.p5j(node) ? true : this.j5j_1.p5j(node);
  };
  protoOf(DepthSortedSetsForDifferentPasses).q5j = function (node, affectsLookahead) {
    if (affectsLookahead) {
      this.i5j_1.r5j(node);
    } else {
      if (!this.i5j_1.p5j(node)) {
        this.j5j_1.r5j(node);
      }
    }
  };
  protoOf(DepthSortedSetsForDifferentPasses).s5j = function (node) {
    var containsInLookahead = this.i5j_1.s5j(node);
    return this.j5j_1.s5j(node) ? true : containsInLookahead;
  };
  protoOf(DepthSortedSetsForDifferentPasses).u = function () {
    return this.j5j_1.u() ? this.i5j_1.u() : false;
  };
  protoOf(DepthSortedSetsForDifferentPasses).t5j = function (affectsLookahead) {
    return affectsLookahead ? this.i5j_1.u() : this.j5j_1.u();
  };
  protoOf(DepthSortedSetsForDifferentPasses).pn = function () {
    return !this.u();
  };
  function _get_mapOfOriginalDepth__e418jw($this) {
    // Inline function 'kotlin.getValue' call
    var this_0 = $this.m5j_1;
    mapOfOriginalDepth$factory();
    return this_0.q2();
  }
  function DepthSortedSet$mapOfOriginalDepth$delegate$lambda() {
    // Inline function 'kotlin.collections.mutableMapOf' call
    return LinkedHashMap_init_$Create$();
  }
  function DepthSortedSet$DepthComparator$1() {
  }
  protoOf(DepthSortedSet$DepthComparator$1).u5j = function (l1, l2) {
    var depthDiff = compareTo(l1.p4k_1, l2.p4k_1);
    if (!(depthDiff === 0)) {
      return depthDiff;
    }
    return compareTo(hashCode(l1), hashCode(l2));
  };
  protoOf(DepthSortedSet$DepthComparator$1).compare = function (a, b) {
    var tmp = a instanceof LayoutNode ? a : THROW_CCE();
    return this.u5j(tmp, b instanceof LayoutNode ? b : THROW_CCE());
  };
  function DepthSortedSet(extraAssertions) {
    this.l5j_1 = extraAssertions;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_NONE_getInstance();
    tmp.m5j_1 = lazy(tmp_0, DepthSortedSet$mapOfOriginalDepth$delegate$lambda);
    var tmp_1 = this;
    tmp_1.n5j_1 = new DepthSortedSet$DepthComparator$1();
    this.o5j_1 = new SortedSet(this.n5j_1);
  }
  protoOf(DepthSortedSet).p5j = function (node) {
    var contains = this.o5j_1.s(node);
    if (this.l5j_1) {
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(contains === _get_mapOfOriginalDepth__e418jw(this).u2(node))) {
        // Inline function 'androidx.compose.ui.node.DepthSortedSet.contains.<anonymous>' call
        var message = 'inconsistency in TreeSet';
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
    return contains;
  };
  protoOf(DepthSortedSet).r5j = function (node) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!node.r4r()) {
      // Inline function 'androidx.compose.ui.node.DepthSortedSet.add.<anonymous>' call
      var message = 'DepthSortedSet.add called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    if (this.l5j_1) {
      var usedDepth = _get_mapOfOriginalDepth__e418jw(this).x2(node);
      if (usedDepth == null) {
        // Inline function 'kotlin.collections.set' call
        var this_0 = _get_mapOfOriginalDepth__e418jw(this);
        var value = node.p4k_1;
        this_0.n2(node, value);
      } else {
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!(usedDepth === node.p4k_1)) {
          // Inline function 'androidx.compose.ui.node.DepthSortedSet.add.<anonymous>' call
          var message_0 = 'invalid node depth';
          throw IllegalStateException_init_$Create$(toString(message_0));
        }
      }
    }
    this.o5j_1.a1(node);
  };
  protoOf(DepthSortedSet).s5j = function (node) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!node.r4r()) {
      // Inline function 'androidx.compose.ui.node.DepthSortedSet.remove.<anonymous>' call
      var message = 'DepthSortedSet.remove called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var contains = this.o5j_1.b1(node);
    if (this.l5j_1) {
      var usedDepth = _get_mapOfOriginalDepth__e418jw(this).r2(node);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(usedDepth == (contains ? node.p4k_1 : null))) {
        // Inline function 'androidx.compose.ui.node.DepthSortedSet.remove.<anonymous>' call
        var message_0 = 'invalid node depth';
        throw IllegalStateException_init_$Create$(toString(message_0));
      }
    }
    return contains;
  };
  protoOf(DepthSortedSet).w1n = function () {
    var node = this.o5j_1.x5j();
    this.s5j(node);
    return node;
  };
  protoOf(DepthSortedSet).u = function () {
    return this.o5j_1.u();
  };
  protoOf(DepthSortedSet).toString = function () {
    return toString(this.o5j_1);
  };
  function mapOfOriginalDepth$factory() {
    return getPropertyCallableRef('mapOfOriginalDepth', 1, KProperty1, function (receiver) {
      return _get_mapOfOriginalDepth__e418jw(receiver);
    }, null);
  }
  function DrawModifierNode() {
  }
  function invalidateDraw(_this__u8e3s4) {
    if (_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.Nodes.Any' call
      var tmp$ret$0 = _NodeKind___init__impl__ojsprp(1);
      requireCoordinator(_this__u8e3s4, tmp$ret$0).y5j();
    }
  }
  function GlobalPositionAwareModifierNode() {
  }
  function resizeToHitDepth($this) {
    var inductionVariable = $this.g53_1 + 1 | 0;
    var last = get_lastIndex($this);
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        $this.e53_1[i] = null;
      }
       while (!(i === last));
    $this.h53_1 = $this.g53_1 + 1 | 0;
  }
  function findBestHitDistance($this) {
    var bestDistance = DistanceAndInLayer(Infinity, false);
    var inductionVariable = $this.g53_1 + 1 | 0;
    var last = get_lastIndex($this);
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var distance = _DistanceAndInLayer___init__impl__sszsvd($this.f53_1[i]);
        bestDistance = DistanceAndInLayer__compareTo_impl_1mihtj(distance, bestDistance) < 0 ? distance : bestDistance;
        if (_DistanceAndInLayer___get_distance__impl__2h0wz1(bestDistance) < 0.0 ? _DistanceAndInLayer___get_isInLayer__impl__pqw90a(bestDistance) : false) {
          return bestDistance;
        }
      }
       while (!(i === last));
    return bestDistance;
  }
  function ensureContainerSize($this) {
    if ($this.g53_1 >= $this.e53_1.length) {
      var newSize = $this.e53_1.length + 16 | 0;
      $this.e53_1 = copyOf_0($this.e53_1, newSize);
      $this.f53_1 = copyOf($this.f53_1, newSize);
    }
  }
  function HitTestResultIterator($outer, index, minIndex, maxIndex) {
    index = index === VOID ? 0 : index;
    minIndex = minIndex === VOID ? 0 : minIndex;
    maxIndex = maxIndex === VOID ? $outer.h53_1 : maxIndex;
    this.c5k_1 = $outer;
    this.z5j_1 = index;
    this.a5k_1 = minIndex;
    this.b5k_1 = maxIndex;
  }
  protoOf(HitTestResultIterator).d1 = function () {
    return this.z5j_1 < this.b5k_1;
  };
  protoOf(HitTestResultIterator).s1 = function () {
    return this.z5j_1 > this.a5k_1;
  };
  protoOf(HitTestResultIterator).f1 = function () {
    var tmp = this.c5k_1.e53_1;
    var tmp1 = this.z5j_1;
    this.z5j_1 = tmp1 + 1 | 0;
    var tmp_0 = tmp[tmp1];
    return tmp_0 instanceof Node ? tmp_0 : THROW_CCE();
  };
  protoOf(HitTestResultIterator).t1 = function () {
    var tmp = this.c5k_1.e53_1;
    this.z5j_1 = this.z5j_1 - 1 | 0;
    var tmp_0 = tmp[this.z5j_1];
    return tmp_0 instanceof Node ? tmp_0 : THROW_CCE();
  };
  function SubList($outer, minIndex, maxIndex) {
    this.f5k_1 = $outer;
    this.d5k_1 = minIndex;
    this.e5k_1 = maxIndex;
  }
  protoOf(SubList).m = function () {
    return this.e5k_1 - this.d5k_1 | 0;
  };
  protoOf(SubList).g5k = function (element) {
    return !(this.h5k(element) === -1);
  };
  protoOf(SubList).s = function (element) {
    if (!(element instanceof Node))
      return false;
    return this.g5k(element instanceof Node ? element : THROW_CCE());
  };
  protoOf(SubList).i5k = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.o();
    while (tmp0_iterator.d1()) {
      var element = tmp0_iterator.f1();
      // Inline function 'androidx.compose.ui.node.SubList.containsAll.<anonymous>' call
      if (!this.g5k(element)) {
        return false;
      }
    }
    return true;
  };
  protoOf(SubList).t = function (elements) {
    return this.i5k(elements);
  };
  protoOf(SubList).n = function (index) {
    var tmp = this.f5k_1.e53_1[index + this.d5k_1 | 0];
    return tmp instanceof Node ? tmp : THROW_CCE();
  };
  protoOf(SubList).h5k = function (element) {
    var inductionVariable = this.d5k_1;
    var last = this.e5k_1;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(this.f5k_1.e53_1[i], element)) {
          return i - this.d5k_1 | 0;
        }
      }
       while (!(i === last));
    return -1;
  };
  protoOf(SubList).p = function (element) {
    if (!(element instanceof Node))
      return -1;
    return this.h5k(element instanceof Node ? element : THROW_CCE());
  };
  protoOf(SubList).u = function () {
    return this.m() === 0;
  };
  protoOf(SubList).o = function () {
    return new HitTestResultIterator(this.f5k_1, this.d5k_1, this.d5k_1, this.e5k_1);
  };
  protoOf(SubList).q = function (index) {
    return new HitTestResultIterator(this.f5k_1, this.d5k_1 + index | 0, this.d5k_1, this.e5k_1);
  };
  protoOf(SubList).r = function (fromIndex, toIndex) {
    return new SubList(this.f5k_1, this.d5k_1 + fromIndex | 0, this.d5k_1 + toIndex | 0);
  };
  function HitTestResult() {
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp.e53_1 = fillArrayVal(Array(16), null);
    this.f53_1 = longArray(16);
    this.g53_1 = -1;
    this.h53_1 = 0;
  }
  protoOf(HitTestResult).m = function () {
    return this.h53_1;
  };
  protoOf(HitTestResult).j5k = function () {
    var distance = findBestHitDistance(this);
    return _DistanceAndInLayer___get_distance__impl__2h0wz1(distance) < 0.0 ? _DistanceAndInLayer___get_isInLayer__impl__pqw90a(distance) : false;
  };
  protoOf(HitTestResult).k5k = function () {
    this.g53_1 = this.h53_1 - 1 | 0;
  };
  protoOf(HitTestResult).l5k = function (distanceFromEdge, isInLayer) {
    if (this.g53_1 === get_lastIndex(this)) {
      return true;
    }
    var distanceAndInLayer = DistanceAndInLayer(distanceFromEdge, isInLayer);
    var bestDistance = findBestHitDistance(this);
    return DistanceAndInLayer__compareTo_impl_1mihtj(bestDistance, distanceAndInLayer) > 0;
  };
  protoOf(HitTestResult).m5k = function (node, isInLayer, childHitTest) {
    this.n5k(node, -1.0, isInLayer, childHitTest);
  };
  protoOf(HitTestResult).n5k = function (node, distanceFromEdge, isInLayer, childHitTest) {
    var startDepth = this.g53_1;
    this.g53_1 = this.g53_1 + 1 | 0;
    ensureContainerSize(this);
    this.e53_1[this.g53_1] = node;
    this.f53_1[this.g53_1] = _DistanceAndInLayer___get_packedValue__impl__653fzx(DistanceAndInLayer(distanceFromEdge, isInLayer));
    resizeToHitDepth(this);
    childHitTest();
    this.g53_1 = startDepth;
  };
  protoOf(HitTestResult).o5k = function (node, distanceFromEdge, isInLayer, childHitTest) {
    if (this.g53_1 === get_lastIndex(this)) {
      this.n5k(node, distanceFromEdge, isInLayer, childHitTest);
      if ((this.g53_1 + 1 | 0) === get_lastIndex(this)) {
        resizeToHitDepth(this);
      }
      return Unit_instance;
    }
    var previousDistance = findBestHitDistance(this);
    var previousHitDepth = this.g53_1;
    this.g53_1 = get_lastIndex(this);
    this.n5k(node, distanceFromEdge, isInLayer, childHitTest);
    if ((this.g53_1 + 1 | 0) < get_lastIndex(this) ? DistanceAndInLayer__compareTo_impl_1mihtj(previousDistance, findBestHitDistance(this)) > 0 : false) {
      var fromIndex = this.g53_1 + 1 | 0;
      var toIndex = previousHitDepth + 1 | 0;
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = this.e53_1;
      var destination = this.e53_1;
      var endIndex = this.h53_1;
      arrayCopy(this_0, destination, toIndex, fromIndex, endIndex);
      // Inline function 'kotlin.collections.copyInto' call
      var this_1 = this.f53_1;
      var destination_0 = this.f53_1;
      var endIndex_0 = this.h53_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = this_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, destination_0, toIndex, fromIndex, endIndex_0);
      this.g53_1 = ((previousHitDepth + this.h53_1 | 0) - this.g53_1 | 0) - 1 | 0;
    }
    resizeToHitDepth(this);
    this.g53_1 = previousHitDepth;
  };
  protoOf(HitTestResult).g5k = function (element) {
    return !(this.h5k(element) === -1);
  };
  protoOf(HitTestResult).s = function (element) {
    if (!(element instanceof Node))
      return false;
    return this.g5k(element instanceof Node ? element : THROW_CCE());
  };
  protoOf(HitTestResult).i5k = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.o();
    while (tmp0_iterator.d1()) {
      var element = tmp0_iterator.f1();
      // Inline function 'androidx.compose.ui.node.HitTestResult.containsAll.<anonymous>' call
      if (!this.g5k(element)) {
        return false;
      }
    }
    return true;
  };
  protoOf(HitTestResult).t = function (elements) {
    return this.i5k(elements);
  };
  protoOf(HitTestResult).n = function (index) {
    var tmp = this.e53_1[index];
    return tmp instanceof Node ? tmp : THROW_CCE();
  };
  protoOf(HitTestResult).h5k = function (element) {
    var inductionVariable = 0;
    var last = get_lastIndex(this);
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(this.e53_1[i], element)) {
          return i;
        }
      }
       while (!(i === last));
    return -1;
  };
  protoOf(HitTestResult).p = function (element) {
    if (!(element instanceof Node))
      return -1;
    return this.h5k(element instanceof Node ? element : THROW_CCE());
  };
  protoOf(HitTestResult).u = function () {
    return this.h53_1 === 0;
  };
  protoOf(HitTestResult).o = function () {
    return new HitTestResultIterator(this);
  };
  protoOf(HitTestResult).q = function (index) {
    return new HitTestResultIterator(this, index);
  };
  protoOf(HitTestResult).r = function (fromIndex, toIndex) {
    return new SubList(this, fromIndex, toIndex);
  };
  protoOf(HitTestResult).h1 = function () {
    this.g53_1 = -1;
    resizeToHitDepth(this);
  };
  function _DistanceAndInLayer___init__impl__sszsvd(packedValue) {
    return packedValue;
  }
  function _DistanceAndInLayer___get_packedValue__impl__653fzx($this) {
    return $this;
  }
  function _DistanceAndInLayer___get_distance__impl__2h0wz1($this) {
    // Inline function 'androidx.compose.ui.util.unpackFloat1' call
    // Inline function 'kotlin.fromBits' call
    var bits = _DistanceAndInLayer___get_packedValue__impl__653fzx($this).mb(32).fa();
    return floatFromBits(bits);
  }
  function _DistanceAndInLayer___get_isInLayer__impl__pqw90a($this) {
    // Inline function 'androidx.compose.ui.util.unpackInt2' call
    return !(_DistanceAndInLayer___get_packedValue__impl__653fzx($this).ob(new Long(-1, 0)).fa() === 0);
  }
  function DistanceAndInLayer__compareTo_impl_1mihtj($this, other) {
    var thisIsInLayer = _DistanceAndInLayer___get_isInLayer__impl__pqw90a($this);
    var otherIsInLayer = _DistanceAndInLayer___get_isInLayer__impl__pqw90a(other);
    if (!(thisIsInLayer === otherIsInLayer)) {
      return thisIsInLayer ? -1 : 1;
    }
    var distanceDiff = _DistanceAndInLayer___get_distance__impl__2h0wz1($this) - _DistanceAndInLayer___get_distance__impl__2h0wz1(other);
    // Inline function 'kotlin.math.sign' call
    var tmp$ret$0 = sign(distanceDiff);
    return numberToInt(tmp$ret$0);
  }
  function DistanceAndInLayer(distance, isInLayer) {
    var v1 = toLong(toBits(distance));
    var v2 = isInLayer ? new Long(1, 0) : new Long(0, 0);
    return _DistanceAndInLayer___init__impl__sszsvd(v1.lb(32).pb(v2.ob(new Long(-1, 0))));
  }
  function TailModifierNode() {
    Node.call(this);
    this.s4i_1 = 0;
    this.i5i_1 = false;
  }
  protoOf(TailModifierNode).toString = function () {
    return '<tail>';
  };
  protoOf(TailModifierNode).i4j = function () {
    this.i5i_1 = true;
  };
  protoOf(TailModifierNode).k4j = function () {
    this.i5i_1 = false;
  };
  function LookaheadDelegateImpl($outer) {
    this.d5l_1 = $outer;
    LookaheadDelegate.call(this, $outer);
  }
  protoOf(LookaheadDelegateImpl).t4u = function (constraints) {
    // Inline function 'androidx.compose.ui.node.LookaheadDelegate.performingMeasure' call
    this.a58(constraints);
    // Inline function 'androidx.compose.ui.node.LookaheadDelegateImpl.measure.<anonymous>' call
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = this.o4r().f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LookaheadDelegateImpl.measure.<anonymous>.<anonymous>' call
        var it = content[i];
        ensureNotNull(it.b5d()).k5d_1 = UsageByParent_NotUsed_getInstance();
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.LookaheadDelegateImpl.measure.<anonymous>.<anonymous>' call
    var measureResult = this.o4r().u4k_1.t5a(this, this.o4r().e5l(), constraints);
    _set__measureResult__ah39tn(this, measureResult);
    return this;
  };
  protoOf(LookaheadDelegateImpl).f5l = function (alignmentLine) {
    // Inline function 'kotlin.also' call
    var tmp0_elvis_lhs = this.g5l().h5l().x2(alignmentLine);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      tmp = -2147483648;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var this_0 = tmp;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.LookaheadDelegateImpl.calculateAlignmentLine.<anonymous>' call
    // Inline function 'kotlin.collections.set' call
    this.g59_1.n2(alignmentLine, this_0);
    return this_0;
  };
  protoOf(LookaheadDelegateImpl).u59 = function () {
    ensureNotNull(this.o4r().b5d()).i5l();
  };
  function Companion_12() {
    Companion_instance_16 = this;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var this_0 = Paint();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.Companion.innerBoundsPaint.<anonymous>' call
    this_0.d3t(Companion_getInstance_1().b3l_1);
    this_0.f35(1.0);
    this_0.p3s(Companion_getInstance_5().m3n_1);
    tmp.t5l_1 = this_0;
  }
  var Companion_instance_16;
  function Companion_getInstance_26() {
    if (Companion_instance_16 == null)
      new Companion_12();
    return Companion_instance_16;
  }
  function InnerNodeCoordinator(layoutNode) {
    Companion_getInstance_26();
    NodeCoordinator.call(this, layoutNode);
    this.v5m_1 = new TailModifierNode();
    this.v5m_1.f4j(this);
    this.w5m_1 = !(layoutNode.h4k_1 == null) ? new LookaheadDelegateImpl(this) : null;
  }
  protoOf(InnerNodeCoordinator).e5j = function () {
    return this.v5m_1;
  };
  protoOf(InnerNodeCoordinator).i59 = function () {
    return this.w5m_1;
  };
  protoOf(InnerNodeCoordinator).x5m = function () {
    if (this.w5m_1 == null) {
      this.w5m_1 = new LookaheadDelegateImpl(this);
    }
  };
  protoOf(InnerNodeCoordinator).t4u = function (constraints) {
    // Inline function 'androidx.compose.ui.node.NodeCoordinator.performingMeasure' call
    this.a58(constraints);
    // Inline function 'androidx.compose.ui.node.InnerNodeCoordinator.measure.<anonymous>' call
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = this.o4r().f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.InnerNodeCoordinator.measure.<anonymous>.<anonymous>' call
        content[i].a5d().f5c_1 = UsageByParent_NotUsed_getInstance();
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.InnerNodeCoordinator.measure.<anonymous>.<anonymous>' call
    var tmp$ret$2 = this.o4r().u4k_1.t5a(this, this.o4r().y5m(), constraints);
    this.z5m(tmp$ret$2);
    this.a5n();
    return this;
  };
  protoOf(InnerNodeCoordinator).e58 = function (position, zIndex, layerBlock) {
    protoOf(NodeCoordinator).e58.call(this, position, zIndex, layerBlock);
    if (this.k58_1)
      return Unit_instance;
    this.b5n();
    this.o4r().a5d().i5l();
  };
  protoOf(InnerNodeCoordinator).f5l = function (alignmentLine) {
    var tmp0_safe_receiver = this.w5m_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f5l(alignmentLine);
    var tmp2_elvis_lhs = tmp1_elvis_lhs == null ? this.g5l().h5l().x2(alignmentLine) : tmp1_elvis_lhs;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      tmp = -2147483648;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    return tmp;
  };
  protoOf(InnerNodeCoordinator).c5n = function (canvas) {
    var owner = requireOwner_0(this.o4r());
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    var this_0 = this.o4r().d5n();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.InnerNodeCoordinator.performDraw.<anonymous>' call
        var child = content[i];
        if (child.s4r()) {
          child.e5n(canvas);
        }
        i = i + 1 | 0;
      }
       while (i < size);
    }
    if (owner.g5n()) {
      this.f5n(canvas, Companion_getInstance_26().t5l_1);
    }
  };
  protoOf(InnerNodeCoordinator).h5n = function (hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer) {
    var inLayer = isInLayer;
    var hitTestChildren = false;
    if (hitTestSource.l5n(this.o4r())) {
      if (this.k5n(pointerPosition)) {
        hitTestChildren = true;
      } else if (isTouchEvent ? isFinite(this.j5n(pointerPosition, this.i5n())) : false) {
        inLayer = false;
        hitTestChildren = true;
      }
    }
    if (hitTestChildren) {
      // Inline function 'androidx.compose.ui.node.HitTestResult.siblingHits' call
      var depth = hitTestResult.g53_1;
      // Inline function 'androidx.compose.ui.node.InnerNodeCoordinator.hitTestChild.<anonymous>' call
      $l$block: {
        // Inline function 'androidx.compose.runtime.collection.MutableVector.reversedAny' call
        var this_0 = this.o4r().d5n();
        // Inline function 'kotlin.contracts.contract' call
        var size = this_0.p1q_1;
        if (size > 0) {
          var i = size - 1 | 0;
          var tmp = this_0.n1q_1;
          var content = isArray(tmp) ? tmp : THROW_CCE();
          do {
            // Inline function 'androidx.compose.ui.node.InnerNodeCoordinator.hitTestChild.<anonymous>.<anonymous>' call
            var child = content[i];
            var tmp_0;
            if (child.s4r()) {
              hitTestSource.m5n(child, pointerPosition, hitTestResult, isTouchEvent, inLayer);
              var wasHit = hitTestResult.j5k();
              var continueHitTest;
              if (!wasHit) {
                continueHitTest = true;
              } else if (child.h59().n5n()) {
                hitTestResult.k5k();
                continueHitTest = true;
              } else {
                continueHitTest = false;
              }
              tmp_0 = !continueHitTest;
            } else {
              tmp_0 = false;
            }
            if (tmp_0) {
              break $l$block;
            }
            i = i - 1 | 0;
          }
           while (i >= 0);
        }
      }
      hitTestResult.g53_1 = depth;
    }
  };
  function _set_measurePolicyState__heh75i($this, _set____db54di) {
    var this_0 = $this.c5o_1;
    measurePolicyState$factory();
    this_0.d1a(_set____db54di);
    return Unit_instance;
  }
  function _get_measurePolicyState__gje3yu($this) {
    // Inline function 'androidx.compose.runtime.getValue' call
    var this_0 = $this.c5o_1;
    measurePolicyState$factory_0();
    return this_0.q2();
  }
  function Companion_13() {
    this.d5o_1 = 'Intrinsic size is queried but there is no measure policy in place.';
  }
  var Companion_instance_17;
  function Companion_getInstance_27() {
    return Companion_instance_17;
  }
  function IntrinsicsPolicy(layoutNode) {
    this.b5o_1 = layoutNode;
    this.c5o_1 = mutableStateOf(null);
  }
  protoOf(IntrinsicsPolicy).e5o = function (measurePolicy) {
    _set_measurePolicyState__heh75i(this, measurePolicy);
  };
  function measurePolicyState$factory() {
    return getPropertyCallableRef('measurePolicyState', 1, KMutableProperty1, function (receiver) {
      return _get_measurePolicyState__gje3yu(receiver);
    }, function (receiver, value) {
      return _set_measurePolicyState__heh75i(receiver, value);
    });
  }
  function measurePolicyState$factory_0() {
    return getPropertyCallableRef('measurePolicyState', 1, KMutableProperty1, function (receiver) {
      return _get_measurePolicyState__gje3yu(receiver);
    }, function (receiver, value) {
      return _set_measurePolicyState__heh75i(receiver, value);
    });
  }
  function LayoutAwareModifierNode() {
  }
  function LayoutModifierNode() {
  }
  function invalidateLayer(_this__u8e3s4) {
    // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(2);
    return requireCoordinator(_this__u8e3s4, tmp$ret$0).y5j();
  }
  function invalidateMeasurement(_this__u8e3s4) {
    return requireLayoutNode(_this__u8e3s4).q5g();
  }
  function LookaheadDelegateForLayoutModifierNode($outer) {
    this.t5o_1 = $outer;
    LookaheadDelegate.call(this, $outer);
  }
  protoOf(LookaheadDelegateForLayoutModifierNode).t4u = function (constraints) {
    // Inline function 'androidx.compose.ui.node.LookaheadDelegate.performingMeasure' call
    this.a58(constraints);
    // Inline function 'androidx.compose.ui.node.LookaheadDelegateForLayoutModifierNode.measure.<anonymous>' call
    this.t5o_1.n5g_1 = constraints;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.LookaheadDelegateForLayoutModifierNode.measure.<anonymous>.<anonymous>' call
    var tmp$ret$2 = this.t5o_1.m5g_1.s4u(this, ensureNotNull(this.t5o_1.u5o().i59()), constraints);
    _set__measureResult__ah39tn(this, tmp$ret$2);
    return this;
  };
  protoOf(LookaheadDelegateForLayoutModifierNode).f5l = function (alignmentLine) {
    // Inline function 'kotlin.also' call
    var this_0 = calculateAlignmentAndPlaceChildAsNeeded(this, alignmentLine);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.LookaheadDelegateForLayoutModifierNode.calculateAlignmentLine.<anonymous>' call
    // Inline function 'kotlin.collections.set' call
    this.g59_1.n2(alignmentLine, this_0);
    return this_0;
  };
  function Companion_14() {
    Companion_instance_18 = this;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var this_0 = Paint();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.Companion.modifierBoundsPaint.<anonymous>' call
    this_0.d3t(Companion_getInstance_1().d3l_1);
    this_0.f35(1.0);
    this_0.p3s(Companion_getInstance_5().m3n_1);
    tmp.v5o_1 = this_0;
  }
  var Companion_instance_18;
  function Companion_getInstance_28() {
    if (Companion_instance_18 == null)
      new Companion_14();
    return Companion_instance_18;
  }
  function LayoutModifierNodeCoordinator(layoutNode, measureNode) {
    Companion_getInstance_28();
    NodeCoordinator.call(this, layoutNode);
    this.m5g_1 = measureNode;
    this.n5g_1 = null;
    this.o5g_1 = !(layoutNode.h4k_1 == null) ? new LookaheadDelegateForLayoutModifierNode(this) : null;
  }
  protoOf(LayoutModifierNodeCoordinator).e5j = function () {
    return this.m5g_1.c4j();
  };
  protoOf(LayoutModifierNodeCoordinator).u5o = function () {
    return ensureNotNull(this.w4q_1);
  };
  protoOf(LayoutModifierNodeCoordinator).i59 = function () {
    return this.o5g_1;
  };
  protoOf(LayoutModifierNodeCoordinator).x5m = function () {
    if (this.o5g_1 == null) {
      this.o5g_1 = new LookaheadDelegateForLayoutModifierNode(this);
    }
  };
  protoOf(LayoutModifierNodeCoordinator).t4u = function (constraints) {
    // Inline function 'androidx.compose.ui.node.NodeCoordinator.performingMeasure' call
    this.a58(constraints);
    // Inline function 'androidx.compose.ui.node.LayoutModifierNodeCoordinator.measure.<anonymous>' call
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.LayoutModifierNodeCoordinator.measure.<anonymous>.<anonymous>' call
    var $this$with = this.m5g_1;
    var tmp;
    if ($this$with instanceof IntermediateLayoutModifierNode) {
      var tmp_0 = this.u5o();
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.node.LayoutModifierNodeCoordinator.measure.<anonymous>.<anonymous>.<anonymous>' call
      var it = ensureNotNull(this.o5g_1).m5l();
      var tmp_1 = IntSize(it.e2w(), it.f2w());
      var tmp_2 = this.n5g_1;
      tmp = $this$with.p58(this, tmp_0, constraints, tmp_1, ensureNotNull(tmp_2 == null ? null : new Constraints(tmp_2)).d2x_1);
    } else {
      tmp = $this$with.s4u(this, this.u5o(), constraints);
    }
    this.z5m(tmp);
    this.a5n();
    return this;
  };
  protoOf(LayoutModifierNodeCoordinator).e58 = function (position, zIndex, layerBlock) {
    protoOf(NodeCoordinator).e58.call(this, position, zIndex, layerBlock);
    if (this.k58_1)
      return Unit_instance;
    this.b5n();
    this.m5l().u59();
  };
  protoOf(LayoutModifierNodeCoordinator).f5l = function (alignmentLine) {
    var tmp0_safe_receiver = this.o5g_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n5l(alignmentLine);
    return tmp1_elvis_lhs == null ? calculateAlignmentAndPlaceChildAsNeeded(this, alignmentLine) : tmp1_elvis_lhs;
  };
  protoOf(LayoutModifierNodeCoordinator).c5n = function (canvas) {
    this.u5o().e5n(canvas);
    if (requireOwner_0(this.o4r()).g5n()) {
      this.f5n(canvas, Companion_getInstance_28().v5o_1);
    }
  };
  function calculateAlignmentAndPlaceChildAsNeeded(_this__u8e3s4, alignmentLine) {
    var child = _this__u8e3s4.j5l();
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(child == null)) {
      // Inline function 'androidx.compose.ui.node.calculateAlignmentAndPlaceChildAsNeeded.<anonymous>' call
      var message = 'Child of ' + _this__u8e3s4 + ' cannot be null when calculating alignment line';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    if (_this__u8e3s4.m5l().t59().u2(alignmentLine)) {
      var tmp0_elvis_lhs = _this__u8e3s4.m5l().t59().x2(alignmentLine);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        tmp = -2147483648;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      return tmp;
    }
    var positionInWrapped = child.r5l(alignmentLine);
    if (positionInWrapped === -2147483648) {
      return -2147483648;
    }
    child.k58_1 = true;
    _this__u8e3s4.l58_1 = true;
    _this__u8e3s4.o5l();
    child.k58_1 = false;
    _this__u8e3s4.l58_1 = false;
    var tmp_0;
    if (alignmentLine instanceof HorizontalAlignmentLine) {
      tmp_0 = positionInWrapped + _IntOffset___get_y__impl__2avpwj(child.m59()) | 0;
    } else {
      tmp_0 = positionInWrapped + _IntOffset___get_x__impl__qiqr5o(child.m59()) | 0;
    }
    return tmp_0;
  }
  function get_DefaultDensity() {
    _init_properties_LayoutNode_kt__2d4f1o();
    return DefaultDensity;
  }
  var DefaultDensity;
  function sam$kotlin_Comparator$0(function_0) {
    this.w5o_1 = function_0;
  }
  protoOf(sam$kotlin_Comparator$0).j9 = function (a, b) {
    return this.w5o_1(a, b);
  };
  protoOf(sam$kotlin_Comparator$0).compare = function (a, b) {
    return this.j9(a, b);
  };
  function LayoutNode$Companion$ErrorMeasurePolicy$1() {
    NoIntrinsicsMeasurePolicy.call(this, 'Undefined intrinsics block and it is required');
  }
  protoOf(LayoutNode$Companion$ErrorMeasurePolicy$1).t5a = function (_this__u8e3s4, measurables, constraints) {
    var message = 'Undefined measure and it is required';
    throw IllegalStateException_init_$Create$(toString(message));
  };
  function LayoutNode$Companion$Constructor$lambda() {
    return new LayoutNode();
  }
  function LayoutNode$Companion$DummyViewConfiguration$1() {
  }
  protoOf(LayoutNode$Companion$DummyViewConfiguration$1).y5o = function () {
    return new Long(400, 0);
  };
  protoOf(LayoutNode$Companion$DummyViewConfiguration$1).z5o = function () {
    return new Long(300, 0);
  };
  protoOf(LayoutNode$Companion$DummyViewConfiguration$1).a5p = function () {
    return 16.0;
  };
  protoOf(LayoutNode$Companion$DummyViewConfiguration$1).u56 = function () {
    return Companion_getInstance_6().o2x_1;
  };
  function LayoutNode$Companion$ZComparator$lambda(node1, node2) {
    var tmp;
    if (_get_zIndex__hypqqb(node1) === _get_zIndex__hypqqb(node2)) {
      tmp = compareTo(node1.u4r(), node2.u4r());
    } else {
      tmp = compareTo(_get_zIndex__hypqqb(node1), _get_zIndex__hypqqb(node2));
    }
    return tmp;
  }
  var LayoutState_Measuring_instance;
  var LayoutState_LookaheadMeasuring_instance;
  var LayoutState_LayingOut_instance;
  var LayoutState_LookaheadLayingOut_instance;
  var LayoutState_Idle_instance;
  var LayoutState_entriesInitialized;
  function LayoutState_initEntries() {
    if (LayoutState_entriesInitialized)
      return Unit_instance;
    LayoutState_entriesInitialized = true;
    LayoutState_Measuring_instance = new LayoutState('Measuring', 0);
    LayoutState_LookaheadMeasuring_instance = new LayoutState('LookaheadMeasuring', 1);
    LayoutState_LayingOut_instance = new LayoutState('LayingOut', 2);
    LayoutState_LookaheadLayingOut_instance = new LayoutState('LookaheadLayingOut', 3);
    LayoutState_Idle_instance = new LayoutState('Idle', 4);
  }
  var UsageByParent_InMeasureBlock_instance;
  var UsageByParent_InLayoutBlock_instance;
  var UsageByParent_NotUsed_instance;
  var UsageByParent_entriesInitialized;
  function UsageByParent_initEntries() {
    if (UsageByParent_entriesInitialized)
      return Unit_instance;
    UsageByParent_entriesInitialized = true;
    UsageByParent_InMeasureBlock_instance = new UsageByParent('InMeasureBlock', 0);
    UsageByParent_InLayoutBlock_instance = new UsageByParent('InLayoutBlock', 1);
    UsageByParent_NotUsed_instance = new UsageByParent('NotUsed', 2);
  }
  function _set_lookaheadRoot__8dq8u9($this, newRoot) {
    if (!equals(newRoot, $this.h4k_1)) {
      $this.h4k_1 = newRoot;
      if (!(newRoot == null)) {
        $this.e4l_1.x5m();
        // Inline function 'androidx.compose.ui.node.LayoutNode.forEachCoordinatorIncludingInner' call
        var delegate = $this.h59();
        var final = $this.t5p().w4q_1;
        while (!equals(delegate, final) ? !(delegate == null) : false) {
          // Inline function 'androidx.compose.ui.node.LayoutNode.<set-lookaheadRoot>.<anonymous>' call
          delegate.x5m();
          delegate = delegate.w4q_1;
        }
      }
      $this.q5g();
    }
  }
  function recreateUnfoldedChildrenIfDirty($this) {
    if ($this.l4k_1) {
      $this.l4k_1 = false;
      var tmp0_elvis_lhs = $this.k4k_1;
      var tmp;
      if (tmp0_elvis_lhs == null) {
        // Inline function 'kotlin.also' call
        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
        // Inline function 'kotlin.arrayOfNulls' call
        var tmp$ret$0 = fillArrayVal(Array(16), null);
        var this_0 = new MutableVector(tmp$ret$0, 0);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.node.LayoutNode.recreateUnfoldedChildrenIfDirty.<anonymous>' call
        $this.k4k_1 = this_0;
        tmp = this_0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var unfoldedChildren = tmp;
      unfoldedChildren.h1();
      // Inline function 'androidx.compose.ui.node.MutableVectorWithMutationTracking.forEach' call
      var this_1 = $this.j4k_1.u5p_1;
      // Inline function 'kotlin.contracts.contract' call
      var size = this_1.p1q_1;
      var tmp_0;
      if (size > 0) {
        var i = 0;
        var tmp_1 = this_1.n1q_1;
        var content = isArray(tmp_1) ? tmp_1 : THROW_CCE();
        do {
          // Inline function 'androidx.compose.ui.node.LayoutNode.recreateUnfoldedChildrenIfDirty.<anonymous>' call
          var it = content[i];
          if (it.d4k_1) {
            // Inline function 'androidx.compose.runtime.collection.MutableVector.addAll' call
            var elements = it.f5j();
            unfoldedChildren.z2g(unfoldedChildren.p1q_1, elements);
          } else {
            unfoldedChildren.q1q(it);
          }
          i = i + 1 | 0;
        }
         while (i < size);
        tmp_0 = Unit_instance;
      }
      $this.e4l_1.w5p();
    }
  }
  function invalidateUnfoldedVirtualChildren($this) {
    if ($this.i4k_1 > 0) {
      $this.l4k_1 = true;
    }
    if ($this.d4k_1) {
      var tmp0_safe_receiver = $this.m4k_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        invalidateUnfoldedVirtualChildren(tmp0_safe_receiver);
      }
    }
  }
  function onChildRemoved($this, child) {
    if (child.e4l_1.o5p_1 > 0) {
      var tmp0_this = $this.e4l_1;
      var tmp1 = tmp0_this.o5p_1;
      tmp0_this.x5p(tmp1 - 1 | 0);
    }
    if (!($this.n4k_1 == null)) {
      child.y5p();
    }
    child.m4k_1 = null;
    child.h59().x4q_1 = null;
    if (child.d4k_1) {
      $this.i4k_1 = $this.i4k_1 - 1 | 0;
      // Inline function 'androidx.compose.ui.node.MutableVectorWithMutationTracking.forEach' call
      var this_0 = child.j4k_1.u5p_1;
      // Inline function 'kotlin.contracts.contract' call
      var size = this_0.p1q_1;
      var tmp;
      if (size > 0) {
        var i = 0;
        var tmp_0 = this_0.n1q_1;
        var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
        do {
          // Inline function 'androidx.compose.ui.node.LayoutNode.onChildRemoved.<anonymous>' call
          content[i].h59().x4q_1 = null;
          i = i + 1 | 0;
        }
         while (i < size);
        tmp = Unit_instance;
      }
    }
    invalidateUnfoldedVirtualChildren($this);
    $this.z5p();
  }
  function debugTreeToString($this, depth) {
    var tree = StringBuilder_init_$Create$();
    var inductionVariable = 0;
    if (inductionVariable < depth)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        tree.x5('  ');
      }
       while (inductionVariable < depth);
    tree.x5('|-');
    tree.x5($this.toString());
    tree.y5(_Char___init__impl__6a9atx(10));
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i_0 = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LayoutNode.debugTreeToString.<anonymous>' call
        var child = content[i_0];
        tree.x5(debugTreeToString(child, depth + 1 | 0));
        i_0 = i_0 + 1 | 0;
      }
       while (i_0 < size);
      tmp = Unit_instance;
    }
    var treeString = tree.toString();
    if (depth === 0) {
      // Inline function 'kotlin.text.substring' call
      var this_1 = treeString;
      var endIndex = treeString.length - 1 | 0;
      // Inline function 'kotlin.js.asDynamic' call
      treeString = this_1.substring(0, endIndex);
    }
    return treeString;
  }
  function debugTreeToString$default($this, depth, $super) {
    depth = depth === VOID ? 0 : depth;
    return debugTreeToString($this, depth);
  }
  function NoIntrinsicsMeasurePolicy(error) {
    this.a5q_1 = error;
  }
  function onDensityOrLayoutDirectionChanged($this) {
    $this.q5g();
    var tmp0_safe_receiver = $this.pp();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.y5j();
    }
    $this.b5q();
  }
  function _get_zIndex__hypqqb($this) {
    return $this.a5d().t5c_1;
  }
  function _get_innerLayerCoordinator__8cmw9o($this) {
    if ($this.h4l_1) {
      var coordinator = $this.t5p();
      var final = $this.h59().x4q_1;
      $this.g4l_1 = null;
      $l$loop: while (!equals(coordinator, final)) {
        var tmp0_safe_receiver = coordinator;
        if (!((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n4r_1) == null)) {
          $this.g4l_1 = coordinator;
          break $l$loop;
        }
        var tmp1_safe_receiver = coordinator;
        coordinator = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4q_1;
      }
    }
    var layerCoordinator = $this.g4l_1;
    if (!(layerCoordinator == null)) {
      $l$block: {
        // Inline function 'kotlin.checkNotNull' call
        // Inline function 'kotlin.contracts.contract' call
        if (layerCoordinator.n4r_1 == null) {
          // Inline function 'androidx.compose.ui.node.LayoutNode.<get-innerLayerCoordinator>.<anonymous>' call
          var message = 'layer was not set';
          throw IllegalStateException_init_$Create$(toString(message));
        } else {
          break $l$block;
        }
      }
    }
    return layerCoordinator;
  }
  function resetModifierState($this) {
    $this.d4l_1.c5q();
  }
  function invalidateFocusOnAttach($this) {
    // Inline function 'androidx.compose.ui.node.or' call
    // Inline function 'androidx.compose.ui.node.NodeKind.or' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var this_0 = _NodeKind___init__impl__ojsprp(1024);
    // Inline function 'androidx.compose.ui.node.Nodes.FocusProperties' call
    var other = _NodeKind___init__impl__ojsprp(2048);
    var this_1 = _NodeKind___get_mask__impl__1uopb6(this_0) | _NodeKind___get_mask__impl__1uopb6(other);
    // Inline function 'androidx.compose.ui.node.Nodes.FocusEvent' call
    var other_0 = _NodeKind___init__impl__ojsprp(4096);
    var tmp$ret$4 = this_1 | _NodeKind___get_mask__impl__1uopb6(other_0);
    if ($this.d4l_1.d5q(tmp$ret$4)) {
      // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
      var node = $this.d4l_1.y4j_1;
      while (!(node == null)) {
        // Inline function 'androidx.compose.ui.node.LayoutNode.invalidateFocusOnAttach.<anonymous>' call
        var it = node;
        // Inline function 'androidx.compose.ui.Node.isKind' call
        // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
        var kind = _NodeKind___init__impl__ojsprp(1024);
        var tmp = !((it.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0);
        // Inline function 'androidx.compose.ui.Node.isKind' call
        // Inline function 'androidx.compose.ui.node.Nodes.FocusProperties' call
        var kind_0 = _NodeKind___init__impl__ojsprp(2048);
        var tmp_0 = !!(tmp | !((it.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_0)) === 0));
        // Inline function 'androidx.compose.ui.Node.isKind' call
        // Inline function 'androidx.compose.ui.node.Nodes.FocusEvent' call
        var kind_1 = _NodeKind___init__impl__ojsprp(4096);
        if (!!(tmp_0 | !((it.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_1)) === 0))) {
          autoInvalidateInsertedNode(it);
        }
        node = node.u4i_1;
      }
    }
  }
  function invalidateFocusOnDetach($this) {
    // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead' call
    var this_0 = $this.d4l_1;
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    $l$block: {
      // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead' call
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      if ((_get_aggregateChildKindSet__bx3g2o(this_0) & mask) === 0) {
        break $l$block;
      }
      // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead' call
      var node = this_0.x4j_1;
      while (!(node == null)) {
        // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead.<anonymous>' call
        var it = node;
        if (!((it.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = it;
          $l$loop: while (!(node_0 == null)) {
            if (node_0 instanceof FocusTargetNode) {
              // Inline function 'androidx.compose.ui.node.LayoutNode.invalidateFocusOnDetach.<anonymous>' call
              var it_0 = node_0;
              if (it_0.n4n().i4o()) {
                requireOwner_0($this).l4n().b4p(true, false);
                it_0.k4q();
              }
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$4 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$4, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
        }
        node = node.t4i_1;
      }
    }
  }
  function clearSubtreePlacementIntrinsicsUsage($this) {
    $this.b4l_1 = $this.a4l_1;
    $this.a4l_1 = UsageByParent_NotUsed_getInstance();
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LayoutNode.clearSubtreePlacementIntrinsicsUsage.<anonymous>' call
        var it = content[i];
        if (it.a4l_1.equals(UsageByParent_InLayoutBlock_getInstance())) {
          clearSubtreePlacementIntrinsicsUsage(it);
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function Companion_15() {
    Companion_instance_19 = this;
    var tmp = this;
    tmp.z5i_1 = new LayoutNode$Companion$ErrorMeasurePolicy$1();
    this.a5j_1 = 2147483647;
    var tmp_0 = this;
    tmp_0.b5j_1 = LayoutNode$Companion$Constructor$lambda;
    var tmp_1 = this;
    tmp_1.c5j_1 = new LayoutNode$Companion$DummyViewConfiguration$1();
    var tmp_2 = this;
    var tmp_3 = LayoutNode$Companion$ZComparator$lambda;
    tmp_2.d5j_1 = new sam$kotlin_Comparator$0(tmp_3);
  }
  var Companion_instance_19;
  function Companion_getInstance_29() {
    if (Companion_instance_19 == null)
      new Companion_15();
    return Companion_instance_19;
  }
  function LayoutState(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function UsageByParent(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function LayoutNode$_foldedChildren$lambda(this$0) {
    return function () {
      this$0.e4l_1.w5p();
      return Unit_instance;
    };
  }
  function LayoutNode$_get_collapsedSemantics_$lambda_7fsfby(this$0, $config) {
    return function () {
      var this_0 = this$0.d4l_1;
      // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
      var type = _NodeKind___init__impl__ojsprp(8);
      $l$block: {
        // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead' call
        var mask = _NodeKind___get_mask__impl__1uopb6(type);
        if ((_get_aggregateChildKindSet__bx3g2o(this_0) & mask) === 0) {
          break $l$block;
        }
        // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead' call
        var node = this_0.x4j_1;
        while (!(node == null)) {
          // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead.<anonymous>' call
          var it = node;
          if (!((it.r4i_1 & mask) === 0)) {
            // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead.<anonymous>' call
            // Inline function 'androidx.compose.ui.node.dispatchForKind' call
            var stack = null;
            var node_0 = it;
            $l$loop: while (!(node_0 == null)) {
              if (!(node_0 == null) ? isInterface(node_0, SemanticsModifierNode) : false) {
                // Inline function 'androidx.compose.ui.node.LayoutNode.<get-collapsedSemantics>.<anonymous>.<anonymous>' call
                var it_0 = node_0;
                if (it_0.t5h()) {
                  $config._v = new SemanticsConfiguration();
                  $config._v.o5h_1 = true;
                }
                if (it_0.u5h()) {
                  $config._v.n5h_1 = true;
                }
                // Inline function 'kotlin.with' call
                // Inline function 'kotlin.contracts.contract' call
                var $this$with = $config._v;
                // Inline function 'kotlin.with' call
                // Inline function 'kotlin.contracts.contract' call
                it_0.k5h($this$with);
              } else {
                var tmp;
                // Inline function 'androidx.compose.ui.Node.isKind' call
                if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                  tmp = node_0 instanceof DelegatingNode;
                } else {
                  tmp = false;
                }
                if (tmp) {
                  var count = 0;
                  // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                  var node_1 = node_0.b4m_1;
                  while (!(node_1 == null)) {
                    // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                    var next = node_1;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      count = count + 1 | 0;
                      if (count === 1) {
                        node_0 = next;
                      } else {
                        var tmp1_elvis_lhs = stack;
                        var tmp_0;
                        if (tmp1_elvis_lhs == null) {
                          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                          // Inline function 'kotlin.arrayOfNulls' call
                          var tmp$ret$6 = fillArrayVal(Array(16), null);
                          tmp_0 = new MutableVector(tmp$ret$6, 0);
                        } else {
                          tmp_0 = tmp1_elvis_lhs;
                        }
                        stack = tmp_0;
                        var theNode = node_0;
                        if (!(theNode == null)) {
                          var tmp2_safe_receiver = stack;
                          if (tmp2_safe_receiver == null)
                            null;
                          else
                            tmp2_safe_receiver.q1q(theNode);
                          node_0 = null;
                        }
                        var tmp3_safe_receiver = stack;
                        if (tmp3_safe_receiver == null)
                          null;
                        else
                          tmp3_safe_receiver.q1q(next);
                      }
                    }
                    node_1 = node_1.u4i_1;
                  }
                  if (count === 1) {
                    continue $l$loop;
                  }
                }
              }
              node_0 = pop$accessor$hxafa1(stack);
            }
          }
          node = node.t4i_1;
        }
      }
      return Unit_instance;
    };
  }
  function LayoutState_Measuring_getInstance() {
    LayoutState_initEntries();
    return LayoutState_Measuring_instance;
  }
  function LayoutState_LookaheadMeasuring_getInstance() {
    LayoutState_initEntries();
    return LayoutState_LookaheadMeasuring_instance;
  }
  function LayoutState_LayingOut_getInstance() {
    LayoutState_initEntries();
    return LayoutState_LayingOut_instance;
  }
  function LayoutState_LookaheadLayingOut_getInstance() {
    LayoutState_initEntries();
    return LayoutState_LookaheadLayingOut_instance;
  }
  function LayoutState_Idle_getInstance() {
    LayoutState_initEntries();
    return LayoutState_Idle_instance;
  }
  function UsageByParent_InMeasureBlock_getInstance() {
    UsageByParent_initEntries();
    return UsageByParent_InMeasureBlock_instance;
  }
  function UsageByParent_InLayoutBlock_getInstance() {
    UsageByParent_initEntries();
    return UsageByParent_InLayoutBlock_instance;
  }
  function UsageByParent_NotUsed_getInstance() {
    UsageByParent_initEntries();
    return UsageByParent_NotUsed_instance;
  }
  function LayoutNode(isVirtual, semanticsId) {
    Companion_getInstance_29();
    isVirtual = isVirtual === VOID ? false : isVirtual;
    semanticsId = semanticsId === VOID ? generateSemanticsId() : semanticsId;
    this.d4k_1 = isVirtual;
    this.e4k_1 = semanticsId;
    this.f4k_1 = 0;
    this.g4k_1 = false;
    this.h4k_1 = null;
    this.i4k_1 = 0;
    var tmp = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    var tmp_0 = new MutableVector(tmp$ret$0, 0);
    tmp.j4k_1 = new MutableVectorWithMutationTracking(tmp_0, LayoutNode$_foldedChildren$lambda(this));
    this.k4k_1 = null;
    this.l4k_1 = false;
    this.m4k_1 = null;
    this.n4k_1 = null;
    this.o4k_1 = null;
    this.p4k_1 = 0;
    this.q4k_1 = false;
    this.r4k_1 = null;
    var tmp_1 = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$3 = fillArrayVal(Array(16), null);
    tmp_1.s4k_1 = new MutableVector(tmp$ret$3, 0);
    this.t4k_1 = true;
    this.u4k_1 = Companion_getInstance_29().z5i_1;
    this.v4k_1 = new IntrinsicsPolicy(this);
    this.w4k_1 = get_DefaultDensity();
    this.x4k_1 = LayoutDirection_Ltr_getInstance();
    this.y4k_1 = Companion_getInstance_29().c5j_1;
    this.z4k_1 = Companion_getInstance_7().g1z_1;
    this.a4l_1 = UsageByParent_NotUsed_getInstance();
    this.b4l_1 = UsageByParent_NotUsed_getInstance();
    this.c4l_1 = false;
    this.d4l_1 = new NodeChain(this);
    this.e4l_1 = new LayoutNodeLayoutDelegate(this);
    this.f4l_1 = null;
    this.g4l_1 = null;
    this.h4l_1 = true;
    this.i4l_1 = Companion_instance_3;
    this.j4l_1 = null;
    this.k4l_1 = null;
    this.l4l_1 = false;
    this.m4l_1 = false;
  }
  protoOf(LayoutNode).p5i = function (_set____db54di) {
    this.f4k_1 = _set____db54di;
  };
  protoOf(LayoutNode).e5q = function () {
    var tmp0_safe_receiver = this.b5d();
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.s5d_1;
  };
  protoOf(LayoutNode).k5b = function () {
    return this.j4k_1.f5q();
  };
  protoOf(LayoutNode).y5m = function () {
    return this.a5d().g5q();
  };
  protoOf(LayoutNode).e5l = function () {
    return ensureNotNull(this.b5d()).g5q();
  };
  protoOf(LayoutNode).f5j = function () {
    this.h5q();
    var tmp;
    if (this.i4k_1 === 0) {
      tmp = this.j4k_1.u5p_1;
    } else {
      tmp = ensureNotNull(this.k4k_1);
    }
    return tmp;
  };
  protoOf(LayoutNode).h5q = function () {
    if (this.i4k_1 > 0) {
      recreateUnfoldedChildrenIfDirty(this);
    }
  };
  protoOf(LayoutNode).dv = function () {
    return this.f5j().a2h();
  };
  protoOf(LayoutNode).pp = function () {
    var parent = this.m4k_1;
    $l$loop: while (true) {
      var tmp0_safe_receiver = parent;
      if (!((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4k_1) === true)) {
        break $l$loop;
      }
      parent = parent.m4k_1;
    }
    return parent;
  };
  protoOf(LayoutNode).r4r = function () {
    return !(this.n4k_1 == null);
  };
  protoOf(LayoutNode).i5q = function () {
    return this.e4l_1.d5p_1;
  };
  protoOf(LayoutNode).b5d = function () {
    return this.e4l_1.q5p_1;
  };
  protoOf(LayoutNode).a5d = function () {
    return this.e4l_1.p5p_1;
  };
  protoOf(LayoutNode).j5q = function (index, instance) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(instance.m4k_1 == null)) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.insertAt.<anonymous>' call
      var tmp = 'Cannot insert ' + instance + ' because it already has a parent.' + ' This tree: ' + debugTreeToString$default(this) + ' Other tree: ';
      var tmp0_safe_receiver = instance.m4k_1;
      var message = tmp + (tmp0_safe_receiver == null ? null : debugTreeToString$default(tmp0_safe_receiver));
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(instance.n4k_1 == null)) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.insertAt.<anonymous>' call
      var message_0 = 'Cannot insert ' + instance + ' because it already has an owner.' + ' This tree: ' + debugTreeToString$default(this) + ' Other tree: ' + debugTreeToString$default(instance);
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    if (false) {
      println('' + instance + ' added to ' + this + ' at index ' + index);
    }
    instance.m4k_1 = this;
    this.j4k_1.r2g(index, instance);
    this.z5p();
    if (instance.d4k_1) {
      this.i4k_1 = this.i4k_1 + 1 | 0;
    }
    invalidateUnfoldedVirtualChildren(this);
    var owner = this.n4k_1;
    if (!(owner == null)) {
      instance.k5q(owner);
    }
    if (instance.e4l_1.o5p_1 > 0) {
      var tmp2_this = this.e4l_1;
      var tmp3 = tmp2_this.o5p_1;
      tmp2_this.x5p(tmp3 + 1 | 0);
    }
  };
  protoOf(LayoutNode).z5p = function () {
    if (this.d4k_1) {
      var tmp0_safe_receiver = this.pp();
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.z5p();
      }
    } else {
      this.t4k_1 = true;
    }
  };
  protoOf(LayoutNode).l5q = function (index, count) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(count >= 0)) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.removeAt.<anonymous>' call
      var message = 'count (' + count + ') must be greater than 0';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var inductionVariable = (index + count | 0) - 1 | 0;
    if (index <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var child = this.j4k_1.m1(i);
        onChildRemoved(this, child);
        if (false) {
          println('' + child + ' removed from ' + this + ' at index ' + i);
        }
      }
       while (!(i === index));
  };
  protoOf(LayoutNode).u5b = function () {
    var inductionVariable = this.j4k_1.m() - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        onChildRemoved(this, this.j4k_1.n(i));
      }
       while (0 <= inductionVariable);
    this.j4k_1.h1();
    if (false) {
      println('Removed all children from ' + this);
    }
  };
  protoOf(LayoutNode).v1f = function (from, to, count) {
    if (from === to) {
      return Unit_instance;
    }
    var inductionVariable = 0;
    if (inductionVariable < count)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var fromIndex = from > to ? from + i | 0 : from;
        var toIndex = from > to ? to + i | 0 : (to + count | 0) - 2 | 0;
        var child = this.j4k_1.m1(fromIndex);
        if (false) {
          println('' + child + ' moved in ' + this + ' from index ' + fromIndex + ' to ' + toIndex);
        }
        this.j4k_1.r2g(toIndex, child);
      }
       while (inductionVariable < count);
    this.z5p();
    invalidateUnfoldedVirtualChildren(this);
    this.q5g();
  };
  protoOf(LayoutNode).m5q = function () {
    this.r4k_1 = null;
    requireOwner_0(this).k5f();
  };
  protoOf(LayoutNode).n5q = function () {
    var tmp;
    // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(8);
    if (!this.d4l_1.o5q(tmp$ret$0)) {
      tmp = true;
    } else {
      tmp = !(this.r4k_1 == null);
    }
    if (tmp) {
      return this.r4k_1;
    }
    var config = {_v: new SemanticsConfiguration()};
    var tmp_0 = requireOwner_0(this).u5g();
    tmp_0.p5q(this, LayoutNode$_get_collapsedSemantics_$lambda_7fsfby(this, config));
    this.r4k_1 = config._v;
    return config._v;
  };
  protoOf(LayoutNode).k5q = function (owner) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.n4k_1 == null)) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.attach.<anonymous>' call
      var message = 'Cannot attach ' + this + ' as it already is attached.  Tree: ' + debugTreeToString$default(this);
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    var tmp;
    if (this.m4k_1 == null) {
      tmp = true;
    } else {
      var tmp0_safe_receiver = this.m4k_1;
      tmp = equals(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n4k_1, owner);
    }
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.attach.<anonymous>' call
      var tmp1_safe_receiver = this.pp();
      var tmp_0 = 'Attaching to a different owner(' + owner + ") than the parent's owner(" + (tmp1_safe_receiver == null ? null : tmp1_safe_receiver.n4k_1) + ').' + ' This tree: ' + debugTreeToString$default(this) + ' Parent tree: ';
      var tmp0_safe_receiver_0 = this.m4k_1;
      var message_0 = tmp_0 + (tmp0_safe_receiver_0 == null ? null : debugTreeToString$default(tmp0_safe_receiver_0));
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    var parent = this.pp();
    if (parent == null) {
      this.a5d().m5c_1 = true;
      var tmp1_safe_receiver_0 = this.b5d();
      if (tmp1_safe_receiver_0 == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp1_safe_receiver_0.s5d_1 = true;
      }
    }
    var tmp_1 = this.h59();
    tmp_1.x4q_1 = parent == null ? null : parent.t5p();
    this.n4k_1 = owner;
    var tmp_2 = this;
    var tmp4_elvis_lhs = parent == null ? null : parent.p4k_1;
    tmp_2.p4k_1 = (tmp4_elvis_lhs == null ? -1 : tmp4_elvis_lhs) + 1 | 0;
    // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
    var tmp$ret$3 = _NodeKind___init__impl__ojsprp(8);
    if (this.d4l_1.o5q(tmp$ret$3)) {
      this.m5q();
    }
    owner.q5q(this);
    if (this.g4k_1) {
      _set_lookaheadRoot__8dq8u9(this, this);
    } else {
      var tmp5_safe_receiver = this.m4k_1;
      var tmp6_elvis_lhs = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.h4k_1;
      _set_lookaheadRoot__8dq8u9(this, tmp6_elvis_lhs == null ? this.h4k_1 : tmp6_elvis_lhs);
    }
    if (!this.m4l_1) {
      this.d4l_1.g4j();
    }
    // Inline function 'androidx.compose.ui.node.MutableVectorWithMutationTracking.forEach' call
    var this_0 = this.j4k_1.u5p_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp_3;
    if (size > 0) {
      var i = 0;
      var tmp_4 = this_0.n1q_1;
      var content = isArray(tmp_4) ? tmp_4 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LayoutNode.attach.<anonymous>' call
        content[i].k5q(owner);
        i = i + 1 | 0;
      }
       while (i < size);
      tmp_3 = Unit_instance;
    }
    if (!this.m4l_1) {
      this.d4l_1.h4j();
    }
    this.q5g();
    if (parent == null)
      null;
    else {
      parent.q5g();
    }
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachCoordinatorIncludingInner' call
    var delegate = this.h59();
    var final = this.t5p().w4q_1;
    while (!equals(delegate, final) ? !(delegate == null) : false) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.attach.<anonymous>' call
      delegate.w5n();
      delegate = delegate.w4q_1;
    }
    var tmp8_safe_receiver = this.j4l_1;
    if (tmp8_safe_receiver == null)
      null;
    else
      tmp8_safe_receiver(owner);
    this.e4l_1.r5q();
    if (!this.m4l_1) {
      invalidateFocusOnAttach(this);
    }
  };
  protoOf(LayoutNode).y5p = function () {
    var owner = this.n4k_1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (owner == null) {
        // Inline function 'androidx.compose.ui.node.LayoutNode.detach.<anonymous>' call
        var tmp0_safe_receiver = this.pp();
        var message = 'Cannot detach node that is already detached!  Tree: ' + (tmp0_safe_receiver == null ? null : debugTreeToString$default(tmp0_safe_receiver));
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        break $l$block;
      }
    }
    invalidateFocusOnDetach(this);
    var parent = this.pp();
    if (!(parent == null)) {
      parent.y5j();
      parent.q5g();
      this.a5d().f5c_1 = UsageByParent_NotUsed_getInstance();
      var tmp0_safe_receiver_0 = this.b5d();
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_safe_receiver_0.k5d_1 = UsageByParent_NotUsed_getInstance();
      }
    }
    this.e4l_1.s5q();
    var tmp1_safe_receiver = this.k4l_1;
    if (tmp1_safe_receiver == null)
      null;
    else
      tmp1_safe_receiver(owner);
    // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
    var tmp$ret$3 = _NodeKind___init__impl__ojsprp(8);
    if (this.d4l_1.o5q(tmp$ret$3)) {
      this.m5q();
    }
    this.d4l_1.j4j();
    // Inline function 'androidx.compose.ui.node.LayoutNode.ignoreRemeasureRequests' call
    this.q4k_1 = true;
    // Inline function 'androidx.compose.ui.node.LayoutNode.detach.<anonymous>' call
    // Inline function 'androidx.compose.ui.node.MutableVectorWithMutationTracking.forEach' call
    var this_0 = this.j4k_1.u5p_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LayoutNode.detach.<anonymous>.<anonymous>' call
        content[i].y5p();
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
    this.q4k_1 = false;
    this.d4l_1.l4j();
    owner.t5q(this);
    this.n4k_1 = null;
    _set_lookaheadRoot__8dq8u9(this, null);
    this.p4k_1 = 0;
    this.a5d().u5q();
    var tmp2_safe_receiver = this.b5d();
    if (tmp2_safe_receiver == null)
      null;
    else {
      tmp2_safe_receiver.u5q();
    }
  };
  protoOf(LayoutNode).d5n = function () {
    if (this.t4k_1) {
      this.s4k_1.h1();
      // Inline function 'androidx.compose.runtime.collection.MutableVector.addAll' call
      var this_0 = this.s4k_1;
      var elements = this.f5j();
      this_0.z2g(this_0.p1q_1, elements);
      this.s4k_1.c2h(Companion_getInstance_29().d5j_1);
      this.t4k_1 = false;
    }
    return this.s4k_1;
  };
  protoOf(LayoutNode).j5h = function () {
    return this.r4r();
  };
  protoOf(LayoutNode).toString = function () {
    return simpleIdentityToString(this, null) + ' children: ' + this.dv().m() + ' ' + ('measurePolicy: ' + this.u4k_1);
  };
  protoOf(LayoutNode).m5i = function (value) {
    if (!equals(this.u4k_1, value)) {
      this.u4k_1 = value;
      this.v4k_1.e5o(this.u4k_1);
      this.q5g();
    }
  };
  protoOf(LayoutNode).k5i = function (value) {
    if (!equals(this.w4k_1, value)) {
      this.w4k_1 = value;
      onDensityOrLayoutDirectionChanged(this);
      // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
      var this_0 = this.d4l_1;
      // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
      var type = _NodeKind___init__impl__ojsprp(16);
      $l$block_0: {
        // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
        var mask = _NodeKind___get_mask__impl__1uopb6(type);
        if ((_get_aggregateChildKindSet__bx3g2o(this_0) & mask) === 0) {
          break $l$block_0;
        }
        // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
        var node = this_0.y4j_1;
        while (!(node == null)) {
          // Inline function 'androidx.compose.ui.node.NodeChain.headToTail.<anonymous>' call
          var it = node;
          if (!((it.r4i_1 & mask) === 0)) {
            // Inline function 'androidx.compose.ui.node.NodeChain.headToTail.<anonymous>' call
            // Inline function 'androidx.compose.ui.node.dispatchForKind' call
            var stack = null;
            var node_0 = it;
            $l$loop: while (!(node_0 == null)) {
              if (!(node_0 == null) ? isInterface(node_0, PointerInputModifierNode) : false) {
                // Inline function 'androidx.compose.ui.node.LayoutNode.<set-density>.<anonymous>' call
                node_0.s52();
              } else {
                var tmp;
                // Inline function 'androidx.compose.ui.Node.isKind' call
                if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                  tmp = node_0 instanceof DelegatingNode;
                } else {
                  tmp = false;
                }
                if (tmp) {
                  var count = 0;
                  // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                  var node_1 = node_0.b4m_1;
                  while (!(node_1 == null)) {
                    // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                    var next = node_1;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      count = count + 1 | 0;
                      if (count === 1) {
                        node_0 = next;
                      } else {
                        var tmp1_elvis_lhs = stack;
                        var tmp_0;
                        if (tmp1_elvis_lhs == null) {
                          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                          // Inline function 'kotlin.arrayOfNulls' call
                          var tmp$ret$4 = fillArrayVal(Array(16), null);
                          tmp_0 = new MutableVector(tmp$ret$4, 0);
                        } else {
                          tmp_0 = tmp1_elvis_lhs;
                        }
                        stack = tmp_0;
                        var theNode = node_0;
                        if (!(theNode == null)) {
                          var tmp2_safe_receiver = stack;
                          if (tmp2_safe_receiver == null)
                            null;
                          else
                            tmp2_safe_receiver.q1q(theNode);
                          node_0 = null;
                        }
                        var tmp3_safe_receiver = stack;
                        if (tmp3_safe_receiver == null)
                          null;
                        else
                          tmp3_safe_receiver.q1q(next);
                      }
                    }
                    node_1 = node_1.u4i_1;
                  }
                  if (count === 1) {
                    continue $l$loop;
                  }
                }
              }
              node_0 = pop$accessor$hxafa1(stack);
            }
          }
          if ((it.s4i_1 & mask) === 0) {
            break $l$block_0;
          }
          node = node.u4i_1;
        }
      }
    }
  };
  protoOf(LayoutNode).n5i = function (value) {
    if (!this.x4k_1.equals(value)) {
      this.x4k_1 = value;
      onDensityOrLayoutDirectionChanged(this);
    }
  };
  protoOf(LayoutNode).o5i = function (value) {
    if (!equals(this.y4k_1, value)) {
      this.y4k_1 = value;
      // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
      var this_0 = this.d4l_1;
      // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
      var type = _NodeKind___init__impl__ojsprp(16);
      $l$block_0: {
        // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
        var mask = _NodeKind___get_mask__impl__1uopb6(type);
        if ((_get_aggregateChildKindSet__bx3g2o(this_0) & mask) === 0) {
          break $l$block_0;
        }
        // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
        var node = this_0.y4j_1;
        while (!(node == null)) {
          // Inline function 'androidx.compose.ui.node.NodeChain.headToTail.<anonymous>' call
          var it = node;
          if (!((it.r4i_1 & mask) === 0)) {
            // Inline function 'androidx.compose.ui.node.NodeChain.headToTail.<anonymous>' call
            // Inline function 'androidx.compose.ui.node.dispatchForKind' call
            var stack = null;
            var node_0 = it;
            $l$loop: while (!(node_0 == null)) {
              if (!(node_0 == null) ? isInterface(node_0, PointerInputModifierNode) : false) {
                // Inline function 'androidx.compose.ui.node.LayoutNode.<set-viewConfiguration>.<anonymous>' call
                node_0.t52();
              } else {
                var tmp;
                // Inline function 'androidx.compose.ui.Node.isKind' call
                if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                  tmp = node_0 instanceof DelegatingNode;
                } else {
                  tmp = false;
                }
                if (tmp) {
                  var count = 0;
                  // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                  var node_1 = node_0.b4m_1;
                  while (!(node_1 == null)) {
                    // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                    var next = node_1;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      count = count + 1 | 0;
                      if (count === 1) {
                        node_0 = next;
                      } else {
                        var tmp1_elvis_lhs = stack;
                        var tmp_0;
                        if (tmp1_elvis_lhs == null) {
                          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                          // Inline function 'kotlin.arrayOfNulls' call
                          var tmp$ret$4 = fillArrayVal(Array(16), null);
                          tmp_0 = new MutableVector(tmp$ret$4, 0);
                        } else {
                          tmp_0 = tmp1_elvis_lhs;
                        }
                        stack = tmp_0;
                        var theNode = node_0;
                        if (!(theNode == null)) {
                          var tmp2_safe_receiver = stack;
                          if (tmp2_safe_receiver == null)
                            null;
                          else
                            tmp2_safe_receiver.q1q(theNode);
                          node_0 = null;
                        }
                        var tmp3_safe_receiver = stack;
                        if (tmp3_safe_receiver == null)
                          null;
                        else
                          tmp3_safe_receiver.q1q(next);
                      }
                    }
                    node_1 = node_1.u4i_1;
                  }
                  if (count === 1) {
                    continue $l$loop;
                  }
                }
              }
              node_0 = pop$accessor$hxafa1(stack);
            }
          }
          if ((it.s4i_1 & mask) === 0) {
            break $l$block_0;
          }
          node = node.u4i_1;
        }
      }
    }
  };
  protoOf(LayoutNode).l5i = function (value) {
    this.z4k_1 = value;
    this.k5i(value.u2l(get_LocalDensity()));
    this.n5i(value.u2l(get_LocalLayoutDirection()));
    this.o5i(value.u2l(get_LocalViewConfiguration()));
    // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
    var this_0 = this.d4l_1;
    // Inline function 'androidx.compose.ui.node.Nodes.CompositionLocalConsumer' call
    var type = _NodeKind___init__impl__ojsprp(32768);
    $l$block_0: {
      // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      if ((_get_aggregateChildKindSet__bx3g2o(this_0) & mask) === 0) {
        break $l$block_0;
      }
      // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
      var node = this_0.y4j_1;
      while (!(node == null)) {
        // Inline function 'androidx.compose.ui.node.NodeChain.headToTail.<anonymous>' call
        var it = node;
        if (!((it.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.NodeChain.headToTail.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = it;
          $l$loop: while (!(node_0 == null)) {
            if (!(node_0 == null) ? isInterface(node_0, CompositionLocalConsumerModifierNode) : false) {
              // Inline function 'androidx.compose.ui.node.LayoutNode.<set-compositionLocalMap>.<anonymous>' call
              var delegatedNode = node_0.c4j();
              if (delegatedNode.b4j_1) {
                autoInvalidateUpdatedNode(delegatedNode);
              } else {
                delegatedNode.y4i_1 = true;
              }
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$4 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$4, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
        }
        if ((it.s4i_1 & mask) === 0) {
          break $l$block_0;
        }
        node = node.u4i_1;
      }
    }
  };
  protoOf(LayoutNode).e2w = function () {
    return this.e4l_1.e2w();
  };
  protoOf(LayoutNode).v5q = function () {
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.LayoutNode.<get-alignmentLinesRequired>.<anonymous>' call
    var $this$run = this.e4l_1;
    var tmp;
    if ($this$run.g5l().t59().g5r()) {
      tmp = true;
    } else {
      var tmp0_safe_receiver = $this$run.w5q();
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t59();
      tmp = (tmp1_safe_receiver == null ? null : tmp1_safe_receiver.g5r()) === true;
    }
    return tmp;
  };
  protoOf(LayoutNode).h5r = function () {
    return requireOwner_0(this).i5r();
  };
  protoOf(LayoutNode).s4r = function () {
    return this.a5d().m5c_1;
  };
  protoOf(LayoutNode).j5r = function () {
    return this.a5d().n5c_1;
  };
  protoOf(LayoutNode).u4r = function () {
    return this.a5d().c5c_1;
  };
  protoOf(LayoutNode).k5r = function () {
    return this.a5d().f5c_1;
  };
  protoOf(LayoutNode).l5r = function () {
    var tmp0_safe_receiver = this.b5d();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.k5d_1;
    return tmp1_elvis_lhs == null ? UsageByParent_NotUsed_getInstance() : tmp1_elvis_lhs;
  };
  protoOf(LayoutNode).t5p = function () {
    return this.d4l_1.v4j_1;
  };
  protoOf(LayoutNode).h59 = function () {
    return this.d4l_1.w4j_1;
  };
  protoOf(LayoutNode).y5j = function () {
    var innerLayerCoordinator = _get_innerLayerCoordinator__8cmw9o(this);
    if (!(innerLayerCoordinator == null)) {
      innerLayerCoordinator.y5j();
    } else {
      var parent = this.pp();
      if (parent == null)
        null;
      else {
        parent.y5j();
      }
    }
  };
  protoOf(LayoutNode).j5i = function (value) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(!this.d4k_1 ? true : this.i4l_1 === Companion_instance_3)) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.<set-modifier>.<anonymous>' call
      var message = 'Modifiers are not supported on virtual LayoutNodes';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.m4l_1) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.<set-modifier>.<anonymous>' call
      var message_0 = 'modifier is updated when deactivated';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    this.i4l_1 = value;
    this.d4l_1.m5r(value);
    this.e4l_1.r5q();
    // Inline function 'androidx.compose.ui.node.Nodes.IntermediateMeasure' call
    var tmp$ret$2 = _NodeKind___init__impl__ojsprp(512);
    if (this.d4l_1.o5q(tmp$ret$2)) {
      if (this.h4k_1 == null) {
        _set_lookaheadRoot__8dq8u9(this, this);
      }
    }
  };
  protoOf(LayoutNode).n5r = function () {
    this.e4l_1.n5r();
  };
  protoOf(LayoutNode).z52 = function () {
    return this.t5p();
  };
  protoOf(LayoutNode).o5r = function (x, y) {
    if (this.a4l_1.equals(UsageByParent_NotUsed_getInstance())) {
      clearSubtreePlacementIntrinsicsUsage(this);
    }
    // Inline function 'kotlin.with' call
    var tmp0_safe_receiver = this.pp();
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t5p();
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.m58_1;
    // Inline function 'kotlin.contracts.contract' call
    (tmp2_elvis_lhs == null ? requireOwner_0(this).p5r() : tmp2_elvis_lhs).b5a(this.a5d(), x, y);
  };
  protoOf(LayoutNode).o5l = function () {
    if (this.a4l_1.equals(UsageByParent_NotUsed_getInstance())) {
      clearSubtreePlacementIntrinsicsUsage(this);
    }
    this.a5d().o5l();
  };
  protoOf(LayoutNode).q5r = function () {
    if (this.a4l_1.equals(UsageByParent_NotUsed_getInstance())) {
      clearSubtreePlacementIntrinsicsUsage(this);
    }
    ensureNotNull(this.b5d()).o5l();
  };
  protoOf(LayoutNode).e5n = function (canvas) {
    return this.h59().e5n(canvas);
  };
  protoOf(LayoutNode).r5r = function (pointerPosition, hitTestResult, isTouchEvent, isInLayer) {
    var positionInWrapped = this.h59().v5n(pointerPosition);
    this.h59().t5n(Companion_getInstance_30().z5r_1, positionInWrapped, hitTestResult, isTouchEvent, isInLayer);
  };
  protoOf(LayoutNode).d53 = function (pointerPosition, hitTestResult, isTouchEvent, isInLayer, $super) {
    isTouchEvent = isTouchEvent === VOID ? false : isTouchEvent;
    isInLayer = isInLayer === VOID ? true : isInLayer;
    var tmp;
    if ($super === VOID) {
      this.r5r(pointerPosition, hitTestResult, isTouchEvent, isInLayer);
      tmp = Unit_instance;
    } else {
      tmp = $super.r5r.call(this, new Offset(pointerPosition), hitTestResult, isTouchEvent, isInLayer);
    }
    return tmp;
  };
  protoOf(LayoutNode).b5s = function (pointerPosition, hitSemanticsEntities, isTouchEvent, isInLayer) {
    var positionInWrapped = this.h59().v5n(pointerPosition);
    this.h59().t5n(Companion_getInstance_30().a5s_1, positionInWrapped, hitSemanticsEntities, true, isInLayer);
  };
  protoOf(LayoutNode).c5s = function (it) {
    if (it.i5q().t9_1 === 4) {
      if (it.k5s()) {
        it.j5s(true);
      } else {
        if (it.e5s()) {
          it.d5s(true);
        }
        if (it.i5s()) {
          it.h5s(true);
        } else if (it.g5s()) {
          it.f5s(true);
        }
      }
    } else
      throw IllegalStateException_init_$Create$('Unexpected state ' + it.i5q());
  };
  protoOf(LayoutNode).l5s = function (forceRequest, scheduleMeasureAndLayout) {
    if (!this.q4k_1 ? !this.d4k_1 : false) {
      var tmp0_elvis_lhs = this.n4k_1;
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return Unit_instance;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var owner = tmp;
      owner.m5s(this, VOID, forceRequest, scheduleMeasureAndLayout);
      this.a5d().n5s(forceRequest);
    }
  };
  protoOf(LayoutNode).h5s = function (forceRequest, scheduleMeasureAndLayout, $super) {
    forceRequest = forceRequest === VOID ? false : forceRequest;
    scheduleMeasureAndLayout = scheduleMeasureAndLayout === VOID ? true : scheduleMeasureAndLayout;
    var tmp;
    if ($super === VOID) {
      this.l5s(forceRequest, scheduleMeasureAndLayout);
      tmp = Unit_instance;
    } else {
      tmp = $super.l5s.call(this, forceRequest, scheduleMeasureAndLayout);
    }
    return tmp;
  };
  protoOf(LayoutNode).o5s = function (forceRequest, scheduleMeasureAndLayout) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.h4k_1 == null)) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.requestLookaheadRemeasure.<anonymous>' call
      var message = 'Lookahead measure cannot be requested on a node that is not a part of theLookaheadScope';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var tmp0_elvis_lhs = this.n4k_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_instance;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var owner = tmp;
    if (!this.q4k_1 ? !this.d4k_1 : false) {
      owner.p5s(this, true, forceRequest, scheduleMeasureAndLayout);
      ensureNotNull(this.b5d()).n5s(forceRequest);
    }
  };
  protoOf(LayoutNode).j5s = function (forceRequest, scheduleMeasureAndLayout, $super) {
    forceRequest = forceRequest === VOID ? false : forceRequest;
    scheduleMeasureAndLayout = scheduleMeasureAndLayout === VOID ? true : scheduleMeasureAndLayout;
    var tmp;
    if ($super === VOID) {
      this.o5s(forceRequest, scheduleMeasureAndLayout);
      tmp = Unit_instance;
    } else {
      tmp = $super.o5s.call(this, forceRequest, scheduleMeasureAndLayout);
    }
    return tmp;
  };
  protoOf(LayoutNode).q5g = function () {
    if (!(this.h4k_1 == null)) {
      this.j5s();
    } else {
      this.h5s();
    }
  };
  protoOf(LayoutNode).f5s = function (forceRequest) {
    if (!this.d4k_1) {
      var tmp0_safe_receiver = this.n4k_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.q5s(this, VOID, forceRequest);
      }
    }
  };
  protoOf(LayoutNode).r5s = function (forceRequest, $super) {
    forceRequest = forceRequest === VOID ? false : forceRequest;
    var tmp;
    if ($super === VOID) {
      this.f5s(forceRequest);
      tmp = Unit_instance;
    } else {
      tmp = $super.f5s.call(this, forceRequest);
    }
    return tmp;
  };
  protoOf(LayoutNode).d5s = function (forceRequest) {
    if (!this.d4k_1) {
      var tmp0_safe_receiver = this.n4k_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.s5s(this, true, forceRequest);
      }
    }
  };
  protoOf(LayoutNode).t5s = function (forceRequest, $super) {
    forceRequest = forceRequest === VOID ? false : forceRequest;
    var tmp;
    if ($super === VOID) {
      this.d5s(forceRequest);
      tmp = Unit_instance;
    } else {
      tmp = $super.d5s.call(this, forceRequest);
    }
    return tmp;
  };
  protoOf(LayoutNode).u5s = function () {
    if (((!this.i5q().equals(LayoutState_Idle_getInstance()) ? true : this.g5s()) ? true : this.i5s()) ? true : this.m4l_1) {
      return Unit_instance;
    }
    if (!this.s4r()) {
      return Unit_instance;
    }
    // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
    var this_0 = this.d4l_1;
    // Inline function 'androidx.compose.ui.node.Nodes.GlobalPositionAware' call
    var type = _NodeKind___init__impl__ojsprp(256);
    $l$block_0: {
      // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      if ((_get_aggregateChildKindSet__bx3g2o(this_0) & mask) === 0) {
        break $l$block_0;
      }
      // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
      var node = this_0.y4j_1;
      while (!(node == null)) {
        // Inline function 'androidx.compose.ui.node.NodeChain.headToTail.<anonymous>' call
        var it = node;
        if (!((it.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.NodeChain.headToTail.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = it;
          $l$loop: while (!(node_0 == null)) {
            if (!(node_0 == null) ? isInterface(node_0, GlobalPositionAwareModifierNode) : false) {
              // Inline function 'androidx.compose.ui.node.LayoutNode.dispatchOnPositionedCallbacks.<anonymous>' call
              var it_0 = node_0;
              // Inline function 'androidx.compose.ui.node.Nodes.GlobalPositionAware' call
              var tmp$ret$2 = _NodeKind___init__impl__ojsprp(256);
              it_0.i5a(requireCoordinator(it_0, tmp$ret$2));
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$5 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$5, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
        }
        if ((it.s4i_1 & mask) === 0) {
          break $l$block_0;
        }
        node = node.u4i_1;
      }
    }
  };
  protoOf(LayoutNode).b5q = function () {
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachCoordinator' call
    var coordinator = this.h59();
    var inner = this.t5p();
    while (!(coordinator === inner)) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.invalidateLayers.<anonymous>' call
      var tmp0_safe_receiver = (coordinator instanceof LayoutModifierNodeCoordinator ? coordinator : THROW_CCE()).n4r_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.n1y();
      }
      coordinator = coordinator.w4q_1;
    }
    var tmp0_safe_receiver_0 = this.t5p().n4r_1;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      tmp0_safe_receiver_0.n1y();
    }
  };
  protoOf(LayoutNode).v5s = function (constraints) {
    var tmp;
    var tmp_0;
    var tmp_1 = constraints;
    if (!((tmp_1 == null ? null : new Constraints(tmp_1)) == null)) {
      tmp_0 = !(this.h4k_1 == null);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = ensureNotNull(this.b5d()).w5s(constraints);
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(LayoutNode).x5s = function (constraints, $super) {
    constraints = constraints === VOID ? this.e4l_1.y5s() : constraints;
    var tmp;
    if ($super === VOID) {
      tmp = this.v5s(constraints);
    } else {
      var tmp_0 = $super.v5s;
      var tmp_1 = constraints;
      tmp = tmp_0.call(this, tmp_1 == null ? null : new Constraints(tmp_1));
    }
    return tmp;
  };
  protoOf(LayoutNode).z5s = function (constraints) {
    var tmp;
    var tmp_0 = constraints;
    if (!((tmp_0 == null ? null : new Constraints(tmp_0)) == null)) {
      if (this.a4l_1.equals(UsageByParent_NotUsed_getInstance())) {
        this.a5t();
      }
      tmp = this.a5d().w5s(constraints);
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(LayoutNode).b5t = function (constraints, $super) {
    constraints = constraints === VOID ? this.e4l_1.c5t() : constraints;
    var tmp;
    if ($super === VOID) {
      tmp = this.z5s(constraints);
    } else {
      var tmp_0 = $super.z5s;
      var tmp_1 = constraints;
      tmp = tmp_0.call(this, tmp_1 == null ? null : new Constraints(tmp_1));
    }
    return tmp;
  };
  protoOf(LayoutNode).i5s = function () {
    return this.e4l_1.e5p_1;
  };
  protoOf(LayoutNode).g5s = function () {
    return this.e4l_1.f5p_1;
  };
  protoOf(LayoutNode).k5s = function () {
    return this.e4l_1.h5p_1;
  };
  protoOf(LayoutNode).e5s = function () {
    return this.e4l_1.i5p_1;
  };
  protoOf(LayoutNode).d5t = function () {
    return this.e4l_1.d5t();
  };
  protoOf(LayoutNode).e5t = function () {
    return this.e4l_1.e5t();
  };
  protoOf(LayoutNode).f5t = function () {
    return this.e4l_1.f5t();
  };
  protoOf(LayoutNode).g5t = function () {
    return this.e4l_1.g5t();
  };
  protoOf(LayoutNode).f5h = function () {
    // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes' call
    var this_0 = this.t5p();
    // Inline function 'androidx.compose.ui.node.Nodes.LayoutAware' call
    var type = _NodeKind___init__impl__ojsprp(128);
    $l$block_0: {
      // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes' call
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      var includeTail = get_includeSelfInTraversal(type);
      var tmp;
      if (includeTail) {
        tmp = this_0.e5j();
      } else {
        var tmp0_elvis_lhs = this_0.e5j().t4i_1;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          break $l$block_0;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp = tmp_0;
      }
      var stopNode = tmp;
      var node = headNode(this_0, includeTail);
      $l$loop_0: while (!(node == null)) {
        if ((node.s4i_1 & mask) === 0) {
          break $l$block_0;
        }
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop: while (!(node_0 == null)) {
            if (!(node_0 == null) ? isInterface(node_0, LayoutAwareModifierNode) : false) {
              // Inline function 'androidx.compose.ui.node.LayoutNode.onLayoutComplete.<anonymous>' call
              node_0.j5a(this.t5p());
            } else {
              var tmp_1;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp_1 = node_0 instanceof DelegatingNode;
              } else {
                tmp_1 = false;
              }
              if (tmp_1) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_2;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$4 = fillArrayVal(Array(16), null);
                        tmp_2 = new MutableVector(tmp$ret$4, 0);
                      } else {
                        tmp_2 = tmp1_elvis_lhs;
                      }
                      stack = tmp_2;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
        }
        if (node === stopNode)
          break $l$loop_0;
        node = node.u4i_1;
      }
    }
  };
  protoOf(LayoutNode).a5t = function () {
    this.b4l_1 = this.a4l_1;
    this.a4l_1 = UsageByParent_NotUsed_getInstance();
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = this.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LayoutNode.clearSubtreeIntrinsicsUsage.<anonymous>' call
        var it = content[i];
        if (!it.a4l_1.equals(UsageByParent_NotUsed_getInstance())) {
          it.a5t();
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  };
  protoOf(LayoutNode).h5t = function () {
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = this.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LayoutNode.resetSubtreeIntrinsicsUsage.<anonymous>' call
        var it = content[i];
        it.a4l_1 = it.b4l_1;
        if (!it.a4l_1.equals(UsageByParent_NotUsed_getInstance())) {
          it.h5t();
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  };
  protoOf(LayoutNode).r1g = function () {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.r4r()) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.onReuse.<anonymous>' call
      var message = 'onReuse is only expected on attached node';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var tmp0_safe_receiver = this.o4k_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.r1g();
    }
    var tmp1_safe_receiver = this.f4l_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      tmp1_safe_receiver.r1g();
    }
    if (this.m4l_1) {
      this.m4l_1 = false;
      this.m5q();
    } else {
      resetModifierState(this);
    }
    this.e4k_1 = generateSemanticsId();
    this.d4l_1.g4j();
    this.d4l_1.h4j();
    this.c5s(this);
  };
  protoOf(LayoutNode).s1g = function () {
    var tmp0_safe_receiver = this.o4k_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.s1g();
    }
    var tmp1_safe_receiver = this.f4l_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      tmp1_safe_receiver.s1g();
    }
    this.m4l_1 = true;
    resetModifierState(this);
    if (this.r4r()) {
      this.m5q();
    }
  };
  protoOf(LayoutNode).t1g = function () {
    var tmp0_safe_receiver = this.o4k_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.t1g();
    }
    var tmp1_safe_receiver = this.f4l_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      tmp1_safe_receiver.t1g();
    }
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachCoordinatorIncludingInner' call
    var delegate = this.h59();
    var final = this.t5p().w4q_1;
    while (!equals(delegate, final) ? !(delegate == null) : false) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.onRelease.<anonymous>' call
      delegate.t1g();
      delegate = delegate.w4q_1;
    }
  };
  function requireOwner_0(_this__u8e3s4) {
    _init_properties_LayoutNode_kt__2d4f1o();
    var owner = _this__u8e3s4.n4k_1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (owner == null) {
        // Inline function 'androidx.compose.ui.node.requireOwner.<anonymous>' call
        var message = 'LayoutNode should be attached to an owner';
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        break $l$block;
      }
    }
    return owner;
  }
  var properties_initialized_LayoutNode_kt_eynwaa;
  function _init_properties_LayoutNode_kt__2d4f1o() {
    if (!properties_initialized_LayoutNode_kt_eynwaa) {
      properties_initialized_LayoutNode_kt_eynwaa = true;
      DefaultDensity = Density_0(1.0);
    }
  }
  function addAlignmentLine($this, alignmentLine, initialPosition, initialCoordinator) {
    var position = Offset_0(initialPosition, initialPosition);
    var coordinator = initialCoordinator;
    $l$loop: while (true) {
      position = $this.i5t(coordinator, position);
      coordinator = ensureNotNull(coordinator.x4q_1);
      if (equals(coordinator, $this.x5q_1.t5p()))
        break $l$loop;
      // Inline function 'kotlin.collections.contains' call
      // Inline function 'kotlin.collections.containsKey' call
      var this_0 = $this.j5t(coordinator);
      if ((isInterface(this_0, Map) ? this_0 : THROW_CCE()).u2(alignmentLine)) {
        var newPosition = $this.k5t(coordinator, alignmentLine);
        position = Offset_0(newPosition, newPosition);
      }
    }
    var tmp;
    if (alignmentLine instanceof HorizontalAlignmentLine) {
      // Inline function 'kotlin.math.roundToInt' call
      var this_1 = _Offset___get_y__impl__8bzhra(position);
      tmp = roundToInt(this_1);
    } else {
      // Inline function 'kotlin.math.roundToInt' call
      var this_2 = _Offset___get_x__impl__xvi35n(position);
      tmp = roundToInt(this_2);
    }
    var positionInContainer = tmp;
    // Inline function 'kotlin.collections.set' call
    var this_3 = $this.f5r_1;
    var tmp_0;
    // Inline function 'kotlin.collections.contains' call
    // Inline function 'kotlin.collections.containsKey' call
    var this_4 = $this.f5r_1;
    if ((isInterface(this_4, Map) ? this_4 : THROW_CCE()).u2(alignmentLine)) {
      tmp_0 = merge(alignmentLine, getValue($this.f5r_1, alignmentLine), positionInContainer);
    } else {
      tmp_0 = positionInContainer;
    }
    var value = tmp_0;
    this_3.n2(alignmentLine, value);
  }
  function AlignmentLines$recalculate$lambda(this$0) {
    return function (childOwner) {
      var tmp;
      if (!childOwner.s4r()) {
        return Unit_instance;
      }
      var tmp_0;
      if (childOwner.t59().y5q_1) {
        childOwner.l5t();
        tmp_0 = Unit_instance;
      }
      // Inline function 'kotlin.collections.iterator' call
      var tmp0_iterator = childOwner.t59().f5r_1.m2().o();
      while (tmp0_iterator.d1()) {
        var element = tmp0_iterator.f1();
        // Inline function 'androidx.compose.ui.node.AlignmentLines.recalculate.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.component1' call
        var childLine = element.p2();
        // Inline function 'kotlin.collections.component2' call
        var linePosition = element.q2();
        addAlignmentLine(this$0, childLine, linePosition, childOwner.t5p());
      }
      var coordinator = ensureNotNull(childOwner.t5p().x4q_1);
      while (!equals(coordinator, this$0.x5q_1.t5p())) {
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator_0 = this$0.j5t(coordinator).k2().o();
        while (tmp0_iterator_0.d1()) {
          var element_0 = tmp0_iterator_0.f1();
          // Inline function 'androidx.compose.ui.node.AlignmentLines.recalculate.<anonymous>.<anonymous>' call
          addAlignmentLine(this$0, element_0, this$0.k5t(coordinator, element_0), coordinator);
        }
        coordinator = ensureNotNull(coordinator.x4q_1);
      }
      return Unit_instance;
    };
  }
  function AlignmentLines(alignmentLinesOwner) {
    this.x5q_1 = alignmentLinesOwner;
    this.y5q_1 = true;
    this.z5q_1 = false;
    this.a5r_1 = false;
    this.b5r_1 = false;
    this.c5r_1 = false;
    this.d5r_1 = false;
    this.e5r_1 = null;
    var tmp = this;
    // Inline function 'kotlin.collections.hashMapOf' call
    tmp.f5r_1 = HashMap_init_$Create$();
  }
  protoOf(AlignmentLines).m5t = function () {
    return ((this.z5q_1 ? true : this.b5r_1) ? true : this.c5r_1) ? true : this.d5r_1;
  };
  protoOf(AlignmentLines).g5r = function () {
    this.n5t();
    return !(this.e5r_1 == null);
  };
  protoOf(AlignmentLines).n5t = function () {
    var tmp = this;
    var tmp_0;
    if (this.m5t()) {
      tmp_0 = this.x5q_1;
    } else {
      var tmp0_elvis_lhs = this.x5q_1.o5t();
      var tmp_1;
      if (tmp0_elvis_lhs == null) {
        return Unit_instance;
      } else {
        tmp_1 = tmp0_elvis_lhs;
      }
      var parent = tmp_1;
      var parentQueryOwner = parent.t59().e5r_1;
      var tmp_2;
      if (!(parentQueryOwner == null) ? parentQueryOwner.t59().m5t() : false) {
        tmp_2 = parentQueryOwner;
      } else {
        var owner = this.e5r_1;
        if (owner == null ? true : owner.t59().m5t())
          return Unit_instance;
        var tmp1_safe_receiver = owner.o5t();
        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.t59();
        if (tmp2_safe_receiver == null)
          null;
        else {
          tmp2_safe_receiver.n5t();
        }
        var tmp3_safe_receiver = owner.o5t();
        var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.t59();
        tmp_2 = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.e5r_1;
      }
      tmp_0 = tmp_2;
    }
    tmp.e5r_1 = tmp_0;
  };
  protoOf(AlignmentLines).p5t = function () {
    return this.f5r_1;
  };
  protoOf(AlignmentLines).q5t = function () {
    this.f5r_1.h1();
    this.x5q_1.r5t(AlignmentLines$recalculate$lambda(this));
    // Inline function 'kotlin.collections.plusAssign' call
    var this_0 = this.f5r_1;
    var map = this.j5t(this.x5q_1.t5p());
    this_0.o2(map);
    this.y5q_1 = false;
  };
  protoOf(AlignmentLines).a26 = function () {
    this.y5q_1 = true;
    this.z5q_1 = false;
    this.b5r_1 = false;
    this.a5r_1 = false;
    this.c5r_1 = false;
    this.d5r_1 = false;
    this.e5r_1 = null;
  };
  protoOf(AlignmentLines).s5t = function () {
    this.y5q_1 = true;
    var tmp0_elvis_lhs = this.x5q_1.o5t();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_instance;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var parent = tmp;
    if (this.z5q_1) {
      parent.u5t();
    } else if (this.b5r_1 ? true : this.a5r_1) {
      parent.t5t();
    }
    if (this.c5r_1) {
      this.x5q_1.u5t();
    }
    if (this.d5r_1) {
      this.x5q_1.t5t();
    }
    parent.t59().s5t();
  };
  function LayoutNodeAlignmentLines(alignmentLinesOwner) {
    AlignmentLines.call(this, alignmentLinesOwner);
  }
  protoOf(LayoutNodeAlignmentLines).j5t = function (_this__u8e3s4) {
    return _this__u8e3s4.m5l().t59();
  };
  protoOf(LayoutNodeAlignmentLines).k5t = function (_this__u8e3s4, alignmentLine) {
    return _this__u8e3s4.r5l(alignmentLine);
  };
  protoOf(LayoutNodeAlignmentLines).i5t = function (_this__u8e3s4, position) {
    return _this__u8e3s4.u5n(position);
  };
  function LookaheadAlignmentLines(alignmentLinesOwner) {
    AlignmentLines.call(this, alignmentLinesOwner);
  }
  protoOf(LookaheadAlignmentLines).j5t = function (_this__u8e3s4) {
    return ensureNotNull(_this__u8e3s4.i59()).m5l().t59();
  };
  protoOf(LookaheadAlignmentLines).k5t = function (_this__u8e3s4, alignmentLine) {
    return ensureNotNull(_this__u8e3s4.i59()).r5l(alignmentLine);
  };
  protoOf(LookaheadAlignmentLines).i5t = function (_this__u8e3s4, position) {
    // Inline function 'androidx.compose.ui.unit.toOffset' call
    var this_0 = ensureNotNull(_this__u8e3s4.i59()).m59();
    var tmp$ret$0 = Offset_0(_IntOffset___get_x__impl__qiqr5o(this_0), _IntOffset___get_y__impl__2avpwj(this_0));
    return Offset__plus_impl_c78cg0(tmp$ret$0, position);
  };
  function LayoutNodeDrawScope(canvasDrawScope) {
    canvasDrawScope = canvasDrawScope === VOID ? new CanvasDrawScope() : canvasDrawScope;
    this.n5u_1 = canvasDrawScope;
    this.o5u_1 = null;
  }
  protoOf(LayoutNodeDrawScope).g2x = function () {
    return this.n5u_1.g2x();
  };
  protoOf(LayoutNodeDrawScope).z3t = function () {
    return this.n5u_1.m3s_1;
  };
  protoOf(LayoutNodeDrawScope).q2x = function () {
    return this.n5u_1.q2x();
  };
  protoOf(LayoutNodeDrawScope).x3t = function () {
    return this.n5u_1.x3t();
  };
  protoOf(LayoutNodeDrawScope).a3u = function (path, color, alpha, style, colorFilter, blendMode) {
    this.n5u_1.a3u(path, color, alpha, style, colorFilter, blendMode);
  };
  protoOf(LayoutNodeDrawScope).m2x = function (_this__u8e3s4) {
    return this.n5u_1.m2x(_this__u8e3s4);
  };
  protoOf(LayoutNodeDrawScope).h2x = function (_this__u8e3s4) {
    return this.n5u_1.h2x(_this__u8e3s4);
  };
  protoOf(LayoutNodeDrawScope).i2x = function (_this__u8e3s4) {
    return this.n5u_1.i2x(_this__u8e3s4);
  };
  protoOf(LayoutNodeDrawScope).n2x = function (_this__u8e3s4) {
    return this.n5u_1.n2x(_this__u8e3s4);
  };
  protoOf(LayoutNodeDrawScope).p5u = function () {
    // Inline function 'androidx.compose.ui.graphics.drawscope.drawIntoCanvas' call
    var canvas = this.z3t().t37();
    var drawNode = ensureNotNull(this.o5u_1);
    var nextDrawNode_0 = nextDrawNode(drawNode);
    var tmp;
    if (!(nextDrawNode_0 == null)) {
      // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
      var kind = _NodeKind___init__impl__ojsprp(4);
      var stack = null;
      var node = nextDrawNode_0;
      $l$loop: while (!(node == null)) {
        if (!(node == null) ? isInterface(node, DrawModifierNode) : false) {
          // Inline function 'androidx.compose.ui.node.LayoutNodeDrawScope.drawContent.<anonymous>.<anonymous>' call
          var it = node;
          this.q5u(it, canvas);
        } else {
          var tmp_0;
          // Inline function 'androidx.compose.ui.Node.isKind' call
          if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
            tmp_0 = node instanceof DelegatingNode;
          } else {
            tmp_0 = false;
          }
          if (tmp_0) {
            var count = 0;
            // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
            var node_0 = node.b4m_1;
            while (!(node_0 == null)) {
              // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
              var next = node_0;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
                count = count + 1 | 0;
                if (count === 1) {
                  node = next;
                } else {
                  var tmp1_elvis_lhs = stack;
                  var tmp_1;
                  if (tmp1_elvis_lhs == null) {
                    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                    // Inline function 'kotlin.arrayOfNulls' call
                    var tmp$ret$3 = fillArrayVal(Array(16), null);
                    tmp_1 = new MutableVector(tmp$ret$3, 0);
                  } else {
                    tmp_1 = tmp1_elvis_lhs;
                  }
                  stack = tmp_1;
                  var theNode = node;
                  if (!(theNode == null)) {
                    var tmp2_safe_receiver = stack;
                    if (tmp2_safe_receiver == null)
                      null;
                    else
                      tmp2_safe_receiver.q1q(theNode);
                    node = null;
                  }
                  var tmp3_safe_receiver = stack;
                  if (tmp3_safe_receiver == null)
                    null;
                  else
                    tmp3_safe_receiver.q1q(next);
                }
              }
              node_0 = node_0.u4i_1;
            }
            if (count === 1) {
              continue $l$loop;
            }
          }
        }
        node = pop$accessor$hxafa1(stack);
      }
      tmp = Unit_instance;
    } else {
      // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
      var tmp$ret$6 = _NodeKind___init__impl__ojsprp(4);
      var coordinator = requireCoordinator(drawNode, tmp$ret$6);
      var nextCoordinator = coordinator.e5j() === drawNode.c4j() ? ensureNotNull(coordinator.w4q_1) : coordinator;
      nextCoordinator.c5n(canvas);
      tmp = Unit_instance;
    }
  };
  protoOf(LayoutNodeDrawScope).q5u = function (_this__u8e3s4, canvas) {
    // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(4);
    var coordinator = requireCoordinator(_this__u8e3s4, tmp$ret$0);
    var size = toSize_0(coordinator.d2y());
    var drawScope = coordinator.o4r().h5r();
    drawScope.r5u(canvas, size, coordinator, _this__u8e3s4);
  };
  protoOf(LayoutNodeDrawScope).s5u = function (canvas, size, coordinator, drawNode) {
    // Inline function 'androidx.compose.ui.node.dispatchForKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
    var kind = _NodeKind___init__impl__ojsprp(4);
    var stack = null;
    var node = drawNode;
    $l$loop: while (!(node == null)) {
      if (!(node == null) ? isInterface(node, DrawModifierNode) : false) {
        // Inline function 'androidx.compose.ui.node.LayoutNodeDrawScope.draw.<anonymous>' call
        var it = node;
        this.r5u(canvas, size, coordinator, it);
      } else {
        var tmp;
        // Inline function 'androidx.compose.ui.Node.isKind' call
        if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
          tmp = node instanceof DelegatingNode;
        } else {
          tmp = false;
        }
        if (tmp) {
          var count = 0;
          // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
          var node_0 = node.b4m_1;
          while (!(node_0 == null)) {
            // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
            var next = node_0;
            // Inline function 'androidx.compose.ui.Node.isKind' call
            if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
              count = count + 1 | 0;
              if (count === 1) {
                node = next;
              } else {
                var tmp1_elvis_lhs = stack;
                var tmp_0;
                if (tmp1_elvis_lhs == null) {
                  // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                  // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                  // Inline function 'kotlin.arrayOfNulls' call
                  var tmp$ret$3 = fillArrayVal(Array(16), null);
                  tmp_0 = new MutableVector(tmp$ret$3, 0);
                } else {
                  tmp_0 = tmp1_elvis_lhs;
                }
                stack = tmp_0;
                var theNode = node;
                if (!(theNode == null)) {
                  var tmp2_safe_receiver = stack;
                  if (tmp2_safe_receiver == null)
                    null;
                  else
                    tmp2_safe_receiver.q1q(theNode);
                  node = null;
                }
                var tmp3_safe_receiver = stack;
                if (tmp3_safe_receiver == null)
                  null;
                else
                  tmp3_safe_receiver.q1q(next);
              }
            }
            node_0 = node_0.u4i_1;
          }
          if (count === 1) {
            continue $l$loop;
          }
        }
      }
      node = pop$accessor$hxafa1(stack);
    }
  };
  protoOf(LayoutNodeDrawScope).r5u = function (canvas, size, coordinator, drawNode) {
    var previousDrawNode = this.o5u_1;
    this.o5u_1 = drawNode;
    // Inline function 'androidx.compose.ui.graphics.drawscope.CanvasDrawScope.draw' call
    var this_0 = this.n5u_1;
    var layoutDirection = coordinator.x4o();
    var tmp0_container = this_0.l3s_1;
    var prevDensity = tmp0_container.se();
    var prevLayoutDirection = tmp0_container.te();
    var prevCanvas = tmp0_container.s3t();
    var prevSize = tmp0_container.t3t();
    // Inline function 'kotlin.apply' call
    var this_1 = this_0.l3s_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.graphics.drawscope.CanvasDrawScope.draw.<anonymous>' call
    this_1.o3t_1 = coordinator;
    this_1.p3t_1 = layoutDirection;
    this_1.q3t_1 = canvas;
    this_1.r3t_1 = size;
    canvas.x3i();
    // Inline function 'androidx.compose.ui.node.LayoutNodeDrawScope.drawDirect.<anonymous>' call
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    drawNode.t4j(this);
    canvas.y3i();
    // Inline function 'kotlin.apply' call
    var this_2 = this_0.l3s_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.graphics.drawscope.CanvasDrawScope.draw.<anonymous>' call
    this_2.o3t_1 = prevDensity;
    this_2.p3t_1 = prevLayoutDirection;
    this_2.q3t_1 = prevCanvas;
    this_2.r3t_1 = prevSize;
    this.o5u_1 = previousDrawNode;
  };
  function nextDrawNode(_this__u8e3s4) {
    // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(4);
    var drawMask = _NodeKind___get_mask__impl__1uopb6(tmp$ret$0);
    // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
    var tmp$ret$1 = _NodeKind___init__impl__ojsprp(2);
    var measureMask = _NodeKind___get_mask__impl__1uopb6(tmp$ret$1);
    var tmp0_elvis_lhs = _this__u8e3s4.c4j().u4i_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var child = tmp;
    if ((child.s4i_1 & drawMask) === 0)
      return null;
    var next = child;
    while (!(next == null)) {
      if (!((next.r4i_1 & measureMask) === 0))
        return null;
      if (!((next.r4i_1 & drawMask) === 0)) {
        return next;
      }
      next = next.u4i_1;
    }
    return null;
  }
  function checkChildrenPlaceOrderForUpdates($this) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = $this.z5c_1.b5p_1;
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this$with.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.checkChildrenPlaceOrderForUpdates.<anonymous>.<anonymous>' call
        var child = content[i];
        if (!(child.a5d().b5c_1 === child.u4r())) {
          $this$with.z5p();
          $this$with.y5j();
          var tmp_1 = child.u4r();
          Companion_getInstance_29();
          if (tmp_1 === 2147483647) {
            markSubtreeAsNotPlaced(child.a5d());
          }
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function markSubtreeAsNotPlaced($this) {
    if ($this.m5c_1) {
      $this.m5c_1 = false;
      // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.forEachChildDelegate' call
      // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
      var this_0 = $this.z5c_1.b5p_1.f5j();
      // Inline function 'kotlin.contracts.contract' call
      var size = this_0.p1q_1;
      var tmp;
      if (size > 0) {
        var i = 0;
        var tmp_0 = this_0.n1q_1;
        var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
        do {
          // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.forEachChildDelegate.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.markSubtreeAsNotPlaced.<anonymous>' call
          var it = content[i].a5d();
          markSubtreeAsNotPlaced(it);
          i = i + 1 | 0;
        }
         while (i < size);
        tmp = Unit_instance;
      }
    }
  }
  function markNodeAndSubtreeAsPlaced($this) {
    var wasPlaced = $this.m5c_1;
    $this.m5c_1 = true;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = $this.z5c_1.b5p_1;
    if (!wasPlaced) {
      if ($this$with.i5s()) {
        $this$with.h5s(true);
      } else if ($this$with.k5s()) {
        $this$with.j5s(true);
      }
    }
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachCoordinatorIncludingInner' call
    var delegate = $this$with.h59();
    var final = $this$with.t5p().w4q_1;
    while (!equals(delegate, final) ? !(delegate == null) : false) {
      // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.markNodeAndSubtreeAsPlaced.<anonymous>.<anonymous>' call
      var it = delegate;
      if (it.m4r_1) {
        it.y5j();
      }
      delegate = delegate.w4q_1;
    }
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this$with.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.markNodeAndSubtreeAsPlaced.<anonymous>.<anonymous>' call
        var it_0 = content[i];
        var tmp_1 = it_0.u4r();
        Companion_getInstance_29();
        if (!(tmp_1 === 2147483647)) {
          markNodeAndSubtreeAsPlaced(it_0.a5d());
          $this$with.c5s(it_0);
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function clearPlaceOrder($this) {
    $this.z5c_1.l5p_1 = 0;
    // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.forEachChildDelegate' call
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this.z5c_1.b5p_1.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.forEachChildDelegate.<anonymous>' call
        // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.clearPlaceOrder.<anonymous>' call
        var child = content[i].a5d();
        child.b5c_1 = child.c5c_1;
        var tmp_1 = child;
        Companion_getInstance_29();
        tmp_1.c5c_1 = 2147483647;
        child.n5c_1 = false;
        if (child.f5c_1.equals(UsageByParent_InLayoutBlock_getInstance())) {
          child.f5c_1 = UsageByParent_NotUsed_getInstance();
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function trackMeasurementByParent($this, node) {
    var parent = node.pp();
    if (!(parent == null)) {
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!($this.f5c_1.equals(UsageByParent_NotUsed_getInstance()) ? true : node.c4l_1)) {
        // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.trackMeasurementByParent.<anonymous>' call
        var message = 'measure() may not be called multiple times on the same Measurable. If you want to get the content size of the Measurable before calculating the final constraints, please use methods like minIntrinsicWidth()/maxIntrinsicWidth() and minIntrinsicHeight()/maxIntrinsicHeight()';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var tmp = $this;
      var tmp_0;
      switch (parent.i5q().t9_1) {
        case 0:
          tmp_0 = UsageByParent_InMeasureBlock_getInstance();
          break;
        case 2:
          tmp_0 = UsageByParent_InLayoutBlock_getInstance();
          break;
        default:
          throw IllegalStateException_init_$Create$("Measurable could be only measured from the parent's measure or layout" + (' block. Parents state is ' + parent.i5q()));
      }
      tmp.f5c_1 = tmp_0;
    } else {
      $this.f5c_1 = UsageByParent_NotUsed_getInstance();
    }
  }
  function placeOuterCoordinator($this, position, zIndex, layerBlock) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!$this.z5c_1.b5p_1.m4l_1) {
      // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.placeOuterCoordinator.<anonymous>' call
      var message = 'place is called on a deactivated node';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    $this.z5c_1.d5p_1 = LayoutState_LayingOut_getInstance();
    $this.h5c_1 = position;
    $this.j5c_1 = zIndex;
    $this.i5c_1 = layerBlock;
    $this.e5c_1 = true;
    $this.u5c_1 = false;
    var owner = requireOwner_0($this.z5c_1.b5p_1);
    if (!$this.z5c_1.f5p_1 ? $this.m5c_1 : false) {
      $this.z5c_1.h59().r5n(position, zIndex, layerBlock);
      $this.i5l();
    } else {
      $this.o5c_1.d5r_1 = false;
      $this.z5c_1.t5u(false);
      $this.v5c_1 = layerBlock;
      $this.w5c_1 = position;
      $this.x5c_1 = zIndex;
      owner.u5g().u5u($this.z5c_1.b5p_1, false, $this.y5c_1);
      $this.v5c_1 = null;
    }
    $this.z5c_1.d5p_1 = LayoutState_Idle_getInstance();
  }
  function onBeforeLayoutChildren($this) {
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this.z5c_1.b5p_1.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.onBeforeLayoutChildren.<anonymous>' call
        var it = content[i];
        if (it.i5s() ? it.k5r().equals(UsageByParent_InMeasureBlock_getInstance()) : false) {
          if (it.b5t()) {
            $this.z5c_1.b5p_1.h5s();
          }
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function LayoutNodeLayoutDelegate$MeasurePassDelegate$layoutChildrenBlock$lambda$lambda(it) {
    it.t59().a5r_1 = false;
    return Unit_instance;
  }
  function LayoutNodeLayoutDelegate$MeasurePassDelegate$layoutChildrenBlock$lambda$lambda_0(it) {
    it.t59().b5r_1 = it.t59().a5r_1;
    return Unit_instance;
  }
  function LayoutNodeLayoutDelegate$MeasurePassDelegate$layoutChildrenBlock$lambda(this$0) {
    return function () {
      clearPlaceOrder(this$0);
      this$0.r5t(LayoutNodeLayoutDelegate$MeasurePassDelegate$layoutChildrenBlock$lambda$lambda);
      this$0.t5p().m5l().u59();
      checkChildrenPlaceOrderForUpdates(this$0);
      this$0.r5t(LayoutNodeLayoutDelegate$MeasurePassDelegate$layoutChildrenBlock$lambda$lambda_0);
      return Unit_instance;
    };
  }
  function LayoutNodeLayoutDelegate$MeasurePassDelegate$placeOuterCoordinatorBlock$lambda(this$0, this$1) {
    return function () {
      var tmp0_safe_receiver = this$0.h59().x4q_1;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.m58_1;
      var scope = tmp1_elvis_lhs == null ? requireOwner_0(this$0.b5p_1).p5r() : tmp1_elvis_lhs;
      // Inline function 'kotlin.with' call
      // Inline function 'kotlin.contracts.contract' call
      var layerBlock = this$1.v5c_1;
      var tmp;
      if (layerBlock == null) {
        scope.o58(this$0.h59(), this$1.w5c_1, this$1.x5c_1);
        tmp = Unit_instance;
      } else {
        scope.n58(this$0.h59(), this$1.w5c_1, this$1.x5c_1, layerBlock);
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function LayoutNodeLayoutDelegate$MeasurePassDelegate$remeasure$lambda(it) {
    it.t59().z5q_1 = false;
    return Unit_instance;
  }
  function checkChildrenPlaceOrderForUpdates_0($this) {
    // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.forEachChildDelegate' call
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this.a5e_1.b5p_1.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.forEachChildDelegate.<anonymous>' call
        var it = content[i];
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.checkChildrenPlaceOrderForUpdates.<anonymous>' call
        var child = ensureNotNull(it.e4l_1.q5p_1);
        if (!(child.i5d_1 === child.j5d_1)) {
          var tmp_1 = child.j5d_1;
          Companion_getInstance_29();
          if (tmp_1 === 2147483647) {
            markSubtreeAsNotPlaced_0(child);
          }
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function markSubtreeAsNotPlaced_0($this) {
    if ($this.s5d_1) {
      $this.s5d_1 = false;
      // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.forEachChildDelegate' call
      // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
      var this_0 = $this.a5e_1.b5p_1.f5j();
      // Inline function 'kotlin.contracts.contract' call
      var size = this_0.p1q_1;
      var tmp;
      if (size > 0) {
        var i = 0;
        var tmp_0 = this_0.n1q_1;
        var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
        do {
          // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.forEachChildDelegate.<anonymous>' call
          var it = content[i];
          // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.markSubtreeAsNotPlaced.<anonymous>' call
          var it_0 = ensureNotNull(it.e4l_1.q5p_1);
          markSubtreeAsNotPlaced_0(it_0);
          i = i + 1 | 0;
        }
         while (i < size);
        tmp = Unit_instance;
      }
    }
  }
  function trackLookaheadMeasurementByParent($this, node) {
    var parent = node.pp();
    if (!(parent == null)) {
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!($this.k5d_1.equals(UsageByParent_NotUsed_getInstance()) ? true : node.c4l_1)) {
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.trackLookaheadMeasurementByParent.<anonymous>' call
        var message = 'measure() may not be called multiple times on the same Measurable. If you want to get the content size of the Measurable before calculating the final constraints, please use methods like minIntrinsicWidth()/maxIntrinsicWidth() and minIntrinsicHeight()/maxIntrinsicHeight()';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var tmp = $this;
      var tmp_0;
      switch (parent.i5q().t9_1) {
        case 1:
        case 0:
          tmp_0 = UsageByParent_InMeasureBlock_getInstance();
          break;
        case 2:
        case 3:
          tmp_0 = UsageByParent_InLayoutBlock_getInstance();
          break;
        default:
          throw IllegalStateException_init_$Create$("Measurable could be only measured from the parent's measure or layout" + (' block. Parents state is ' + parent.i5q()));
      }
      tmp.k5d_1 = tmp_0;
    } else {
      $this.k5d_1 = UsageByParent_NotUsed_getInstance();
    }
  }
  function clearPlaceOrder_0($this) {
    $this.a5e_1.k5p_1 = 0;
    // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.forEachChildDelegate' call
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this.a5e_1.b5p_1.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.forEachChildDelegate.<anonymous>' call
        var it = content[i];
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.clearPlaceOrder.<anonymous>' call
        var child = ensureNotNull(it.e4l_1.q5p_1);
        child.i5d_1 = child.j5d_1;
        var tmp_1 = child;
        Companion_getInstance_29();
        tmp_1.j5d_1 = 2147483647;
        if (child.k5d_1.equals(UsageByParent_InLayoutBlock_getInstance())) {
          child.k5d_1 = UsageByParent_NotUsed_getInstance();
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function markNodeAndSubtreeAsPlaced_0($this) {
    var wasPlaced = $this.s5d_1;
    $this.s5d_1 = true;
    if (!wasPlaced) {
      if ($this.a5e_1.h5p_1) {
        $this.a5e_1.b5p_1.j5s(true);
      }
    }
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this.a5e_1.b5p_1.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.markNodeAndSubtreeAsPlaced.<anonymous>' call
        var it = content[i];
        var tmp_1 = it.u4r();
        Companion_getInstance_29();
        if (!(tmp_1 === 2147483647)) {
          markNodeAndSubtreeAsPlaced_0(ensureNotNull(it.b5d()));
          it.c5s(it);
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function onBeforeLayoutChildren_0($this) {
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = $this.a5e_1.b5p_1.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.onBeforeLayoutChildren.<anonymous>' call
        var it = content[i];
        if (it.k5s() ? it.l5r().equals(UsageByParent_InMeasureBlock_getInstance()) : false) {
          var tmp_1 = ensureNotNull(it.e4l_1.q5p_1);
          var tmp_2 = it.e4l_1.y5s();
          if (tmp_1.w5s(ensureNotNull(tmp_2 == null ? null : new Constraints(tmp_2)).d2x_1)) {
            $this.a5e_1.b5p_1.j5s();
          }
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function LayoutNodeLayoutDelegate$LookaheadPassDelegate$layoutChildren$lambda$lambda(child) {
    child.t59().a5r_1 = false;
    return Unit_instance;
  }
  function LayoutNodeLayoutDelegate$LookaheadPassDelegate$layoutChildren$lambda$lambda_0(child) {
    child.t59().b5r_1 = child.t59().a5r_1;
    return Unit_instance;
  }
  function LayoutNodeLayoutDelegate$LookaheadPassDelegate$layoutChildren$lambda(this$0, this$1, $lookaheadDelegate) {
    return function () {
      clearPlaceOrder_0(this$0);
      this$0.r5t(LayoutNodeLayoutDelegate$LookaheadPassDelegate$layoutChildren$lambda$lambda);
      var tmp0_safe_receiver = this$0.t5p().i59();
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.l58_1;
      if (tmp1_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var this_0 = this$1.b5p_1.dv();
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = 0;
        var last = this_0.m() - 1 | 0;
        var tmp;
        if (inductionVariable <= last) {
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var item = this_0.n(index);
            // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.layoutChildren.<anonymous>.<anonymous>.<anonymous>' call
            var tmp0_safe_receiver_0 = item.h59().i59();
            if (tmp0_safe_receiver_0 != null)
              tmp0_safe_receiver_0.l58_1 = tmp1_safe_receiver;
          }
           while (inductionVariable <= last);
          tmp = Unit_instance;
        }
      }
      $lookaheadDelegate.m5l().u59();
      var tmp2_safe_receiver = this$0.t5p().i59();
      if ((tmp2_safe_receiver == null ? null : tmp2_safe_receiver.l58_1) == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var this_1 = this$1.b5p_1.dv();
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable_0 = 0;
        var last_0 = this_1.m() - 1 | 0;
        var tmp_0;
        if (inductionVariable_0 <= last_0) {
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var item_0 = this_1.n(index_0);
            // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.layoutChildren.<anonymous>.<anonymous>.<anonymous>' call
            var tmp0_safe_receiver_1 = item_0.h59().i59();
            if (tmp0_safe_receiver_1 != null)
              tmp0_safe_receiver_1.l58_1 = false;
          }
           while (inductionVariable_0 <= last_0);
          tmp_0 = Unit_instance;
        }
      }
      checkChildrenPlaceOrderForUpdates_0(this$0);
      this$0.r5t(LayoutNodeLayoutDelegate$LookaheadPassDelegate$layoutChildren$lambda$lambda_0);
      return Unit_instance;
    };
  }
  function LayoutNodeLayoutDelegate$LookaheadPassDelegate$remeasure$lambda(it) {
    it.t59().z5q_1 = false;
    return Unit_instance;
  }
  function LayoutNodeLayoutDelegate$LookaheadPassDelegate$placeAt$lambda(this$0, $owner, $position) {
    return function () {
      var tmp;
      if (isOutMostLookaheadRoot(this$0.b5p_1)) {
        var tmp0_safe_receiver = this$0.h59().x4q_1;
        tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.m58_1;
      } else {
        var tmp1_safe_receiver = this$0.h59().x4q_1;
        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.i59();
        tmp = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.m58_1;
      }
      var tmp3_elvis_lhs = tmp;
      var scope = tmp3_elvis_lhs == null ? $owner.p5r() : tmp3_elvis_lhs;
      // Inline function 'kotlin.with' call
      // Inline function 'kotlin.contracts.contract' call
      scope.e5a(ensureNotNull(this$0.h59().i59()), $position);
      return Unit_instance;
    };
  }
  function MeasurePassDelegate($outer) {
    this.z5c_1 = $outer;
    Placeable.call(this);
    this.a5c_1 = false;
    var tmp = this;
    Companion_getInstance_29();
    tmp.b5c_1 = 2147483647;
    var tmp_0 = this;
    Companion_getInstance_29();
    tmp_0.c5c_1 = 2147483647;
    this.d5c_1 = false;
    this.e5c_1 = false;
    this.f5c_1 = UsageByParent_NotUsed_getInstance();
    this.g5c_1 = false;
    this.h5c_1 = Companion_getInstance_4().w2x_1;
    this.i5c_1 = null;
    this.j5c_1 = 0.0;
    this.k5c_1 = true;
    this.l5c_1 = null;
    this.m5c_1 = false;
    this.n5c_1 = false;
    this.o5c_1 = new LayoutNodeAlignmentLines(this);
    var tmp_1 = this;
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp_1.p5c_1 = new MutableVector(tmp$ret$0, 0);
    this.q5c_1 = true;
    this.r5c_1 = false;
    var tmp_2 = this;
    tmp_2.s5c_1 = LayoutNodeLayoutDelegate$MeasurePassDelegate$layoutChildrenBlock$lambda(this);
    this.t5c_1 = 0.0;
    this.u5c_1 = false;
    this.v5c_1 = null;
    this.w5c_1 = Companion_getInstance_4().w2x_1;
    this.x5c_1 = 0.0;
    var tmp_3 = this;
    tmp_3.y5c_1 = LayoutNodeLayoutDelegate$MeasurePassDelegate$placeOuterCoordinatorBlock$lambda(this.z5c_1, this);
  }
  protoOf(MeasurePassDelegate).c5t = function () {
    var tmp;
    if (this.d5c_1) {
      tmp = this.x4u_1;
    } else {
      tmp = null;
    }
    return tmp;
  };
  protoOf(MeasurePassDelegate).s4r = function () {
    return this.m5c_1;
  };
  protoOf(MeasurePassDelegate).t5p = function () {
    return this.z5c_1.b5p_1.t5p();
  };
  protoOf(MeasurePassDelegate).t59 = function () {
    return this.o5c_1;
  };
  protoOf(MeasurePassDelegate).g5q = function () {
    this.z5c_1.b5p_1.h5q();
    if (!this.q5c_1)
      return this.p5c_1.a2h();
    // Inline function 'androidx.compose.ui.node.updateChildMeasurables' call
    var this_0 = this.z5c_1.b5p_1;
    var destination = this.p5c_1;
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChildIndexed' call
    var this_1 = this_0.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_1.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_1.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.updateChildMeasurables.<anonymous>' call
        var i_0 = i;
        var layoutNode = content[i];
        if (destination.p1q_1 <= i_0) {
          // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.<get-childDelegates>.<anonymous>' call
          var tmp$ret$0 = layoutNode.e4l_1.p5p_1;
          destination.q1q(tmp$ret$0);
        } else {
          // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.<get-childDelegates>.<anonymous>' call
          var tmp$ret$1 = layoutNode.e4l_1.p5p_1;
          destination.v2g(i_0, tmp$ret$1);
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
    destination.b2(this_0.dv().m(), destination.p1q_1);
    this.q5c_1 = false;
    return this.p5c_1.a2h();
  };
  protoOf(MeasurePassDelegate).l5t = function () {
    this.r5c_1 = true;
    this.o5c_1.n5t();
    if (this.z5c_1.f5p_1) {
      onBeforeLayoutChildren(this);
    }
    if (this.z5c_1.g5p_1 ? true : (!this.g5c_1 ? !this.t5p().l58_1 : false) ? this.z5c_1.f5p_1 : false) {
      this.z5c_1.f5p_1 = false;
      var oldLayoutState = this.z5c_1.d5p_1;
      this.z5c_1.d5p_1 = LayoutState_LayingOut_getInstance();
      this.z5c_1.v5u(false);
      // Inline function 'kotlin.with' call
      // Inline function 'kotlin.contracts.contract' call
      var $this$with = this.z5c_1.b5p_1;
      var owner = requireOwner_0($this$with);
      owner.u5g().w5u($this$with, false, this.s5c_1);
      this.z5c_1.d5p_1 = oldLayoutState;
      if (this.t5p().l58_1 ? this.z5c_1.m5p_1 : false) {
        this.t5t();
      }
      this.z5c_1.g5p_1 = false;
    }
    if (this.o5c_1.a5r_1) {
      this.o5c_1.b5r_1 = true;
    }
    if (this.o5c_1.y5q_1 ? this.o5c_1.g5r() : false) {
      this.o5c_1.q5t();
    }
    this.r5c_1 = false;
  };
  protoOf(MeasurePassDelegate).i5l = function () {
    this.u5c_1 = true;
    var parent = this.z5c_1.b5p_1.pp();
    var newZIndex = this.t5p().h4r_1;
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachCoordinator' call
    var this_0 = this.z5c_1.b5p_1;
    var coordinator = this_0.h59();
    var inner = this_0.t5p();
    while (!(coordinator === inner)) {
      // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.onNodePlaced.<anonymous>' call
      newZIndex = newZIndex + (coordinator instanceof LayoutModifierNodeCoordinator ? coordinator : THROW_CCE()).h4r_1;
      coordinator = coordinator.w4q_1;
    }
    if (!(newZIndex === this.t5c_1)) {
      this.t5c_1 = newZIndex;
      if (parent == null)
        null;
      else {
        parent.z5p();
      }
      if (parent == null)
        null;
      else {
        parent.y5j();
      }
    }
    if (!this.m5c_1) {
      if (parent == null)
        null;
      else {
        parent.y5j();
      }
      markNodeAndSubtreeAsPlaced(this);
      if (this.a5c_1) {
        if (parent == null)
          null;
        else {
          parent.r5s();
        }
      }
    }
    if (!(parent == null)) {
      if (!this.a5c_1 ? parent.i5q().equals(LayoutState_LayingOut_getInstance()) : false) {
        // Inline function 'kotlin.check' call
        var tmp = this.c5c_1;
        Companion_getInstance_29();
        // Inline function 'kotlin.contracts.contract' call
        if (!(tmp === 2147483647)) {
          // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.onNodePlaced.<anonymous>' call
          var message = 'Place was called on a node which was placed already';
          throw IllegalStateException_init_$Create$(toString(message));
        }
        this.c5c_1 = parent.e4l_1.l5p_1;
        var tmp4_this = parent.e4l_1;
        tmp4_this.l5p_1 = tmp4_this.l5p_1 + 1 | 0;
      }
    } else {
      this.c5c_1 = 0;
    }
    this.l5t();
  };
  protoOf(MeasurePassDelegate).t4u = function (constraints) {
    if (this.z5c_1.b5p_1.a4l_1.equals(UsageByParent_NotUsed_getInstance())) {
      this.z5c_1.b5p_1.a5t();
    }
    if (isOutMostLookaheadRoot(this.z5c_1.b5p_1)) {
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.measure.<anonymous>' call
      var $this$run = ensureNotNull(this.z5c_1.q5p_1);
      $this$run.k5d_1 = UsageByParent_NotUsed_getInstance();
      $this$run.t4u(constraints);
    }
    trackMeasurementByParent(this, this.z5c_1.b5p_1);
    this.w5s(constraints);
    return this;
  };
  protoOf(MeasurePassDelegate).w5s = function (constraints) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.z5c_1.b5p_1.m4l_1) {
      // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.remeasure.<anonymous>' call
      var message = 'measure is called on a deactivated node';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var owner = requireOwner_0(this.z5c_1.b5p_1);
    var parent = this.z5c_1.b5p_1.pp();
    this.z5c_1.b5p_1.c4l_1 = this.z5c_1.b5p_1.c4l_1 ? true : !(parent == null) ? parent.c4l_1 : false;
    if (this.z5c_1.b5p_1.i5s() ? true : !equals(this.x4u_1, constraints)) {
      this.o5c_1.c5r_1 = false;
      this.r5t(LayoutNodeLayoutDelegate$MeasurePassDelegate$remeasure$lambda);
      this.d5c_1 = true;
      var outerPreviousMeasuredSize = this.z5c_1.h59().d2y();
      this.a58(constraints);
      performMeasure(this.z5c_1, constraints);
      var sizeChanged = (!equals(this.z5c_1.h59().d2y(), outerPreviousMeasuredSize) ? true : !(this.z5c_1.h59().u4u_1 === this.u4u_1)) ? true : !(this.z5c_1.h59().v4u_1 === this.v4u_1);
      this.d58(IntSize(this.z5c_1.h59().u4u_1, this.z5c_1.h59().v4u_1));
      return sizeChanged;
    } else {
      owner.x5u(this.z5c_1.b5p_1);
      this.z5c_1.b5p_1.h5t();
    }
    return false;
  };
  protoOf(MeasurePassDelegate).e58 = function (position, zIndex, layerBlock) {
    this.n5c_1 = true;
    if (!equals(position, this.h5c_1)) {
      if (this.z5c_1.n5p_1 ? true : this.z5c_1.m5p_1) {
        this.z5c_1.f5p_1 = true;
      }
      this.y5u();
    }
    if (isOutMostLookaheadRoot(this.z5c_1.b5p_1)) {
      var tmp0_safe_receiver = this.z5c_1.h59().x4q_1;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.m58_1;
      var scope = tmp1_elvis_lhs == null ? requireOwner_0(this.z5c_1.b5p_1).p5r() : tmp1_elvis_lhs;
      // Inline function 'kotlin.with' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var it = ensureNotNull(this.z5c_1.q5p_1);
      var tmp0_safe_receiver_0 = this.z5c_1.b5p_1.pp();
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        // Inline function 'kotlin.run' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_safe_receiver_0.e4l_1.k5p_1 = 0;
      }
      var tmp = it;
      Companion_getInstance_29();
      tmp.j5d_1 = 2147483647;
      scope.d5a(it, _IntOffset___get_x__impl__qiqr5o(position), _IntOffset___get_y__impl__2avpwj(position));
    }
    // Inline function 'kotlin.require' call
    var tmp2_safe_receiver = this.z5c_1.q5p_1;
    // Inline function 'kotlin.contracts.contract' call
    if (!!((tmp2_safe_receiver == null ? null : tmp2_safe_receiver.m5d_1) === false)) {
      // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.placeAt.<anonymous>' call
      var message = 'Error: Placement happened before lookahead.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    placeOuterCoordinator(this, position, zIndex, layerBlock);
  };
  protoOf(MeasurePassDelegate).o5l = function () {
    try {
      this.a5c_1 = true;
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.e5c_1) {
        // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.replace.<anonymous>' call
        var message = 'replace called on unplaced item';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var wasPlacedBefore = this.m5c_1;
      placeOuterCoordinator(this, this.h5c_1, this.j5c_1, this.i5c_1);
      if (wasPlacedBefore ? !this.u5c_1 : false) {
        var tmp0_safe_receiver = this.z5c_1.b5p_1.pp();
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.r5s();
        }
      }
    }finally {
      this.a5c_1 = false;
    }
  };
  protoOf(MeasurePassDelegate).n5r = function () {
    this.k5c_1 = true;
  };
  protoOf(MeasurePassDelegate).z5u = function () {
    if (this.l5c_1 == null ? this.z5c_1.h59().q5l() == null : false)
      return false;
    if (!this.k5c_1)
      return false;
    this.k5c_1 = false;
    this.l5c_1 = this.z5c_1.h59().q5l();
    return true;
  };
  protoOf(MeasurePassDelegate).h5l = function () {
    if (!this.g5c_1) {
      if (this.z5c_1.d5p_1.equals(LayoutState_Measuring_getInstance())) {
        this.o5c_1.c5r_1 = true;
        if (this.o5c_1.y5q_1) {
          this.z5c_1.d5t();
        }
      } else {
        this.o5c_1.d5r_1 = true;
      }
    }
    this.t5p().l58_1 = true;
    this.l5t();
    this.t5p().l58_1 = false;
    return this.o5c_1.p5t();
  };
  protoOf(MeasurePassDelegate).o5t = function () {
    var tmp0_safe_receiver = this.z5c_1.b5p_1.pp();
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e4l_1;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver.g5l();
  };
  protoOf(MeasurePassDelegate).r5t = function (block) {
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = this.z5c_1.b5p_1.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.forEachChildAlignmentLinesOwner.<anonymous>' call
        block(content[i].e4l_1.g5l());
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  };
  protoOf(MeasurePassDelegate).t5t = function () {
    this.z5c_1.b5p_1.r5s();
  };
  protoOf(MeasurePassDelegate).u5t = function () {
    this.z5c_1.b5p_1.h5s();
  };
  protoOf(MeasurePassDelegate).y5u = function () {
    if (this.z5c_1.o5p_1 > 0) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
      var this_0 = this.z5c_1.b5p_1.f5j();
      // Inline function 'kotlin.contracts.contract' call
      var size = this_0.p1q_1;
      var tmp;
      if (size > 0) {
        var i = 0;
        var tmp_0 = this_0.n1q_1;
        var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
        do {
          // Inline function 'androidx.compose.ui.node.MeasurePassDelegate.notifyChildrenUsingCoordinatesWhilePlacing.<anonymous>' call
          var child = content[i];
          var childLayoutDelegate = child.e4l_1;
          var accessed = childLayoutDelegate.m5p_1 ? true : childLayoutDelegate.n5p_1;
          if (accessed ? !childLayoutDelegate.f5p_1 : false) {
            child.r5s();
          }
          childLayoutDelegate.p5p_1.y5u();
          i = i + 1 | 0;
        }
         while (i < size);
        tmp = Unit_instance;
      }
    }
  };
  protoOf(MeasurePassDelegate).n5s = function (forceRequest) {
    var parent = this.z5c_1.b5p_1.pp();
    var intrinsicsUsageByParent = this.z5c_1.b5p_1.a4l_1;
    if (!(parent == null) ? !intrinsicsUsageByParent.equals(UsageByParent_NotUsed_getInstance()) : false) {
      var intrinsicsUsingParent = parent;
      $l$loop: while (intrinsicsUsingParent.a4l_1.equals(intrinsicsUsageByParent)) {
        var tmp0_elvis_lhs = intrinsicsUsingParent.pp();
        var tmp;
        if (tmp0_elvis_lhs == null) {
          break $l$loop;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        intrinsicsUsingParent = tmp;
      }
      switch (intrinsicsUsageByParent.t9_1) {
        case 0:
          intrinsicsUsingParent.h5s(forceRequest);
          break;
        case 1:
          intrinsicsUsingParent.f5s(forceRequest);
          break;
        default:
          // Inline function 'kotlin.error' call

          var message = "Intrinsics isn't used by the parent";
          throw IllegalStateException_init_$Create$(toString(message));
      }
    }
  };
  protoOf(MeasurePassDelegate).u5q = function () {
    var tmp = this;
    Companion_getInstance_29();
    tmp.c5c_1 = 2147483647;
    var tmp_0 = this;
    Companion_getInstance_29();
    tmp_0.b5c_1 = 2147483647;
    this.m5c_1 = false;
  };
  function LookaheadPassDelegate($outer) {
    this.a5e_1 = $outer;
    Placeable.call(this);
    this.h5d_1 = false;
    var tmp = this;
    Companion_getInstance_29();
    tmp.i5d_1 = 2147483647;
    var tmp_0 = this;
    Companion_getInstance_29();
    tmp_0.j5d_1 = 2147483647;
    this.k5d_1 = UsageByParent_NotUsed_getInstance();
    this.l5d_1 = false;
    this.m5d_1 = false;
    this.n5d_1 = false;
    this.o5d_1 = null;
    this.p5d_1 = Companion_getInstance_4().w2x_1;
    this.q5d_1 = 0.0;
    this.r5d_1 = null;
    this.s5d_1 = false;
    this.t5d_1 = new LookaheadAlignmentLines(this);
    var tmp_1 = this;
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp_1.u5d_1 = new MutableVector(tmp$ret$0, 0);
    this.v5d_1 = true;
    this.w5d_1 = false;
    this.x5d_1 = true;
    this.y5d_1 = this.a5d().l5c_1;
    this.z5d_1 = false;
  }
  protoOf(LookaheadPassDelegate).a5d = function () {
    return this.a5e_1.p5p_1;
  };
  protoOf(LookaheadPassDelegate).c5t = function () {
    return this.o5d_1;
  };
  protoOf(LookaheadPassDelegate).s4r = function () {
    return this.s5d_1;
  };
  protoOf(LookaheadPassDelegate).t5p = function () {
    return this.a5e_1.b5p_1.t5p();
  };
  protoOf(LookaheadPassDelegate).t59 = function () {
    return this.t5d_1;
  };
  protoOf(LookaheadPassDelegate).g5q = function () {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    this.a5e_1.b5p_1.dv();
    var tmp;
    if (!this.v5d_1) {
      return this.u5d_1.a2h();
    }
    // Inline function 'androidx.compose.ui.node.updateChildMeasurables' call
    var this_0 = this.a5e_1.b5p_1;
    var destination = this.u5d_1;
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChildIndexed' call
    var this_1 = this_0.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_1.p1q_1;
    var tmp_0;
    if (size > 0) {
      var i = 0;
      var tmp_1 = this_1.n1q_1;
      var content = isArray(tmp_1) ? tmp_1 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.updateChildMeasurables.<anonymous>' call
        var i_0 = i;
        var layoutNode = content[i];
        if (destination.p1q_1 <= i_0) {
          // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.<get-childDelegates>.<anonymous>' call
          var tmp$ret$1 = ensureNotNull(layoutNode.e4l_1.q5p_1);
          destination.q1q(tmp$ret$1);
        } else {
          // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.<get-childDelegates>.<anonymous>' call
          var tmp$ret$2 = ensureNotNull(layoutNode.e4l_1.q5p_1);
          destination.v2g(i_0, tmp$ret$2);
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp_0 = Unit_instance;
    }
    destination.b2(this_0.dv().m(), destination.p1q_1);
    this.v5d_1 = false;
    return this.u5d_1.a2h();
  };
  protoOf(LookaheadPassDelegate).l5t = function () {
    this.w5d_1 = true;
    this.t5d_1.n5t();
    if (this.a5e_1.i5p_1) {
      onBeforeLayoutChildren_0(this);
    }
    var lookaheadDelegate = ensureNotNull(this.t5p().i59());
    if (this.a5e_1.j5p_1 ? true : (!this.l5d_1 ? !lookaheadDelegate.l58_1 : false) ? this.a5e_1.i5p_1 : false) {
      this.a5e_1.i5p_1 = false;
      var oldLayoutState = this.a5e_1.d5p_1;
      this.a5e_1.d5p_1 = LayoutState_LookaheadLayingOut_getInstance();
      var owner = requireOwner_0(this.a5e_1.b5p_1);
      this.a5e_1.v5u(false);
      var tmp = owner.u5g();
      tmp.a5v(this.a5e_1.b5p_1, VOID, LayoutNodeLayoutDelegate$LookaheadPassDelegate$layoutChildren$lambda(this, this.a5e_1, lookaheadDelegate));
      this.a5e_1.d5p_1 = oldLayoutState;
      if (this.a5e_1.m5p_1 ? lookaheadDelegate.l58_1 : false) {
        this.t5t();
      }
      this.a5e_1.j5p_1 = false;
    }
    if (this.t5d_1.a5r_1) {
      this.t5d_1.b5r_1 = true;
    }
    if (this.t5d_1.y5q_1 ? this.t5d_1.g5r() : false) {
      this.t5d_1.q5t();
    }
    this.w5d_1 = false;
  };
  protoOf(LookaheadPassDelegate).h5l = function () {
    if (!this.l5d_1) {
      if (this.a5e_1.d5p_1.equals(LayoutState_LookaheadMeasuring_getInstance())) {
        this.t5d_1.c5r_1 = true;
        if (this.t5d_1.y5q_1) {
          this.a5e_1.f5t();
        }
      } else {
        this.t5d_1.d5r_1 = true;
      }
    }
    var tmp0_safe_receiver = this.t5p().i59();
    if (tmp0_safe_receiver != null)
      tmp0_safe_receiver.l58_1 = true;
    this.l5t();
    var tmp1_safe_receiver = this.t5p().i59();
    if (tmp1_safe_receiver != null)
      tmp1_safe_receiver.l58_1 = false;
    return this.t5d_1.p5t();
  };
  protoOf(LookaheadPassDelegate).o5t = function () {
    var tmp0_safe_receiver = this.a5e_1.b5p_1.pp();
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e4l_1;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver.w5q();
  };
  protoOf(LookaheadPassDelegate).r5t = function (block) {
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = this.a5e_1.b5p_1.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.forEachChildAlignmentLinesOwner.<anonymous>' call
        var it = content[i];
        block(ensureNotNull(it.e4l_1.w5q()));
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  };
  protoOf(LookaheadPassDelegate).t5t = function () {
    this.a5e_1.b5p_1.t5s();
  };
  protoOf(LookaheadPassDelegate).u5t = function () {
    this.a5e_1.b5p_1.j5s();
  };
  protoOf(LookaheadPassDelegate).y5u = function () {
    if (this.a5e_1.o5p_1 > 0) {
      // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
      var this_0 = this.a5e_1.b5p_1.f5j();
      // Inline function 'kotlin.contracts.contract' call
      var size = this_0.p1q_1;
      var tmp;
      if (size > 0) {
        var i = 0;
        var tmp_0 = this_0.n1q_1;
        var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
        do {
          // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.notifyChildrenUsingCoordinatesWhilePlacing.<anonymous>' call
          var child = content[i];
          var childLayoutDelegate = child.e4l_1;
          var accessed = childLayoutDelegate.m5p_1 ? true : childLayoutDelegate.n5p_1;
          if (accessed ? !childLayoutDelegate.f5p_1 : false) {
            child.t5s();
          }
          var tmp0_safe_receiver = childLayoutDelegate.q5p_1;
          if (tmp0_safe_receiver == null)
            null;
          else {
            tmp0_safe_receiver.y5u();
          }
          i = i + 1 | 0;
        }
         while (i < size);
        tmp = Unit_instance;
      }
    }
  };
  protoOf(LookaheadPassDelegate).t4u = function (constraints) {
    var tmp;
    var tmp0_safe_receiver = this.a5e_1.b5p_1.pp();
    if (equals(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.i5q(), LayoutState_LookaheadMeasuring_getInstance())) {
      tmp = true;
    } else {
      var tmp1_safe_receiver = this.a5e_1.b5p_1.pp();
      tmp = equals(tmp1_safe_receiver == null ? null : tmp1_safe_receiver.i5q(), LayoutState_LookaheadLayingOut_getInstance());
    }
    if (tmp) {
      this.a5e_1.c5p_1 = false;
    }
    trackLookaheadMeasurementByParent(this, this.a5e_1.b5p_1);
    if (this.a5e_1.b5p_1.a4l_1.equals(UsageByParent_NotUsed_getInstance())) {
      this.a5e_1.b5p_1.a5t();
    }
    this.w5s(constraints);
    return this;
  };
  protoOf(LookaheadPassDelegate).w5s = function (constraints) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.a5e_1.b5p_1.m4l_1) {
      // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.remeasure.<anonymous>' call
      var message = 'measure is called on a deactivated node';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var parent = this.a5e_1.b5p_1.pp();
    this.a5e_1.b5p_1.c4l_1 = this.a5e_1.b5p_1.c4l_1 ? true : !(parent == null) ? parent.c4l_1 : false;
    var tmp;
    if (this.a5e_1.b5p_1.k5s()) {
      tmp = true;
    } else {
      var tmp_0 = this.o5d_1;
      tmp = !equals(tmp_0 == null ? null : new Constraints(tmp_0), new Constraints(constraints));
    }
    if (tmp) {
      this.o5d_1 = constraints;
      this.a58(constraints);
      this.t5d_1.c5r_1 = false;
      this.r5t(LayoutNodeLayoutDelegate$LookaheadPassDelegate$remeasure$lambda);
      var lastLookaheadSize = this.n5d_1 ? this.w4u_1 : IntSize(IntCompanionObject_instance.MIN_VALUE, IntCompanionObject_instance.MIN_VALUE);
      this.n5d_1 = true;
      var lookaheadDelegate = this.a5e_1.h59().i59();
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!!(lookaheadDelegate == null)) {
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.remeasure.<anonymous>' call
        var message_0 = 'Lookahead result from lookaheadRemeasure cannot be null';
        throw IllegalStateException_init_$Create$(toString(message_0));
      }
      performLookaheadMeasure(this.a5e_1, constraints);
      this.d58(IntSize(lookaheadDelegate.u4u_1, lookaheadDelegate.v4u_1));
      var sizeChanged = !(_IntSize___get_width__impl__d9yl4o(lastLookaheadSize) === lookaheadDelegate.u4u_1) ? true : !(_IntSize___get_height__impl__prv63b(lastLookaheadSize) === lookaheadDelegate.v4u_1);
      return sizeChanged;
    } else {
      var tmp0_safe_receiver = this.a5e_1.b5p_1.n4k_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.b5v(this.a5e_1.b5p_1, true);
      }
      this.a5e_1.b5p_1.h5t();
    }
    return false;
  };
  protoOf(LookaheadPassDelegate).e58 = function (position, zIndex, layerBlock) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.a5e_1.b5p_1.m4l_1) {
      // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.placeAt.<anonymous>' call
      var message = 'place is called on a deactivated node';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    this.a5e_1.d5p_1 = LayoutState_LookaheadLayingOut_getInstance();
    this.m5d_1 = true;
    this.z5d_1 = false;
    if (!equals(position, this.p5d_1)) {
      if (this.a5e_1.n5p_1 ? true : this.a5e_1.m5p_1) {
        this.a5e_1.i5p_1 = true;
      }
      this.y5u();
    }
    var owner = requireOwner_0(this.a5e_1.b5p_1);
    if (!this.a5e_1.i5p_1 ? this.s5d_1 : false) {
      ensureNotNull(this.a5e_1.h59().i59()).p5l(position);
      this.i5l();
    } else {
      this.a5e_1.t5u(false);
      this.t5d_1.d5r_1 = false;
      var tmp = owner.u5g();
      tmp.c5v(this.a5e_1.b5p_1, VOID, LayoutNodeLayoutDelegate$LookaheadPassDelegate$placeAt$lambda(this.a5e_1, owner, position));
    }
    this.p5d_1 = position;
    this.q5d_1 = zIndex;
    this.r5d_1 = layerBlock;
    this.a5e_1.d5p_1 = LayoutState_Idle_getInstance();
  };
  protoOf(LookaheadPassDelegate).n5s = function (forceRequest) {
    var parent = this.a5e_1.b5p_1.pp();
    var intrinsicsUsageByParent = this.a5e_1.b5p_1.a4l_1;
    if (!(parent == null) ? !intrinsicsUsageByParent.equals(UsageByParent_NotUsed_getInstance()) : false) {
      var intrinsicsUsingParent = parent;
      $l$loop: while (intrinsicsUsingParent.a4l_1.equals(intrinsicsUsageByParent)) {
        var tmp0_elvis_lhs = intrinsicsUsingParent.pp();
        var tmp;
        if (tmp0_elvis_lhs == null) {
          break $l$loop;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        intrinsicsUsingParent = tmp;
      }
      switch (intrinsicsUsageByParent.t9_1) {
        case 0:
          if (!(intrinsicsUsingParent.h4k_1 == null)) {
            intrinsicsUsingParent.j5s(forceRequest);
          } else {
            intrinsicsUsingParent.h5s(forceRequest);
          }

          break;
        case 1:
          if (!(intrinsicsUsingParent.h4k_1 == null)) {
            intrinsicsUsingParent.d5s(forceRequest);
          } else {
            intrinsicsUsingParent.f5s(forceRequest);
          }

          break;
        default:
          // Inline function 'kotlin.error' call

          var message = "Intrinsics isn't used by the parent";
          throw IllegalStateException_init_$Create$(toString(message));
      }
    }
  };
  protoOf(LookaheadPassDelegate).n5r = function () {
    this.x5d_1 = true;
  };
  protoOf(LookaheadPassDelegate).z5u = function () {
    if (this.y5d_1 == null ? ensureNotNull(this.a5e_1.h59().i59()).q5l() == null : false) {
      return false;
    }
    if (!this.x5d_1)
      return false;
    this.x5d_1 = false;
    this.y5d_1 = ensureNotNull(this.a5e_1.h59().i59()).q5l();
    return true;
  };
  protoOf(LookaheadPassDelegate).i5l = function () {
    this.z5d_1 = true;
    var parent = this.a5e_1.b5p_1.pp();
    if (!this.s5d_1) {
      markNodeAndSubtreeAsPlaced_0(this);
      if (this.h5d_1) {
        if (parent == null)
          null;
        else {
          parent.t5s();
        }
      }
    }
    if (!(parent == null)) {
      if (!this.h5d_1 ? parent.i5q().equals(LayoutState_LayingOut_getInstance()) ? true : parent.i5q().equals(LayoutState_LookaheadLayingOut_getInstance()) : false) {
        // Inline function 'kotlin.check' call
        var tmp = this.j5d_1;
        Companion_getInstance_29();
        // Inline function 'kotlin.contracts.contract' call
        if (!(tmp === 2147483647)) {
          // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.onNodePlaced.<anonymous>' call
          var message = 'Place was called on a node which was placed already';
          throw IllegalStateException_init_$Create$(toString(message));
        }
        this.j5d_1 = parent.e4l_1.k5p_1;
        var tmp1_this = parent.e4l_1;
        tmp1_this.k5p_1 = tmp1_this.k5p_1 + 1 | 0;
      }
    } else {
      this.j5d_1 = 0;
    }
    this.l5t();
  };
  protoOf(LookaheadPassDelegate).o5l = function () {
    try {
      this.h5d_1 = true;
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.m5d_1) {
        // Inline function 'androidx.compose.ui.node.LookaheadPassDelegate.replace.<anonymous>' call
        var message = 'replace() called on item that was not placed';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      this.z5d_1 = false;
      var wasPlacedBefore = this.s5d_1;
      this.e58(this.p5d_1, 0.0, null);
      if (wasPlacedBefore ? !this.z5d_1 : false) {
        var tmp0_safe_receiver = this.a5e_1.b5p_1.pp();
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.t5s();
        }
      }
    }finally {
      this.h5d_1 = false;
    }
  };
  protoOf(LookaheadPassDelegate).u5q = function () {
    var tmp = this;
    Companion_getInstance_29();
    tmp.j5d_1 = 2147483647;
    var tmp_0 = this;
    Companion_getInstance_29();
    tmp_0.i5d_1 = 2147483647;
    this.s5d_1 = false;
  };
  function performMeasure($this, constraints) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!$this.d5p_1.equals(LayoutState_Idle_getInstance())) {
      // Inline function 'androidx.compose.ui.node.LayoutNodeLayoutDelegate.performMeasure.<anonymous>' call
      var message = 'layout state is not idle before measure starts';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    $this.d5p_1 = LayoutState_Measuring_getInstance();
    $this.e5p_1 = false;
    $this.r5p_1 = constraints;
    requireOwner_0($this.b5p_1).u5g().d5v($this.b5p_1, false, $this.s5p_1);
    if ($this.d5p_1.equals(LayoutState_Measuring_getInstance())) {
      $this.d5t();
      $this.d5p_1 = LayoutState_Idle_getInstance();
    }
  }
  function performLookaheadMeasure($this, constraints) {
    $this.d5p_1 = LayoutState_LookaheadMeasuring_getInstance();
    $this.h5p_1 = false;
    var tmp = requireOwner_0($this.b5p_1).u5g();
    tmp.e5v($this.b5p_1, VOID, LayoutNodeLayoutDelegate$performLookaheadMeasure$lambda($this, constraints));
    $this.f5t();
    if (isOutMostLookaheadRoot($this.b5p_1)) {
      $this.d5t();
    } else {
      $this.e5t();
    }
    $this.d5p_1 = LayoutState_Idle_getInstance();
  }
  function LayoutNodeLayoutDelegate$performMeasureBlock$lambda(this$0) {
    return function () {
      this$0.h59().t4u(this$0.r5p_1);
      return Unit_instance;
    };
  }
  function LayoutNodeLayoutDelegate$performLookaheadMeasure$lambda(this$0, $constraints) {
    return function () {
      ensureNotNull(this$0.h59().i59()).t4u($constraints);
      return Unit_instance;
    };
  }
  function LayoutNodeLayoutDelegate(layoutNode) {
    this.b5p_1 = layoutNode;
    this.c5p_1 = false;
    this.d5p_1 = LayoutState_Idle_getInstance();
    this.e5p_1 = false;
    this.f5p_1 = false;
    this.g5p_1 = false;
    this.h5p_1 = false;
    this.i5p_1 = false;
    this.j5p_1 = false;
    this.k5p_1 = 0;
    this.l5p_1 = 0;
    this.m5p_1 = false;
    this.n5p_1 = false;
    this.o5p_1 = 0;
    this.p5p_1 = new MeasurePassDelegate(this);
    this.q5p_1 = null;
    this.r5p_1 = Constraints_0();
    var tmp = this;
    tmp.s5p_1 = LayoutNodeLayoutDelegate$performMeasureBlock$lambda(this);
  }
  protoOf(LayoutNodeLayoutDelegate).h59 = function () {
    return this.b5p_1.d4l_1.w4j_1;
  };
  protoOf(LayoutNodeLayoutDelegate).c5t = function () {
    return this.p5p_1.c5t();
  };
  protoOf(LayoutNodeLayoutDelegate).y5s = function () {
    var tmp0_safe_receiver = this.q5p_1;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.c5t();
  };
  protoOf(LayoutNodeLayoutDelegate).e2w = function () {
    return this.p5p_1.u4u_1;
  };
  protoOf(LayoutNodeLayoutDelegate).d5t = function () {
    this.f5p_1 = true;
    this.g5p_1 = true;
  };
  protoOf(LayoutNodeLayoutDelegate).e5t = function () {
    this.e5p_1 = true;
  };
  protoOf(LayoutNodeLayoutDelegate).f5t = function () {
    this.i5p_1 = true;
    this.j5p_1 = true;
  };
  protoOf(LayoutNodeLayoutDelegate).g5t = function () {
    this.h5p_1 = true;
  };
  protoOf(LayoutNodeLayoutDelegate).g5l = function () {
    return this.p5p_1;
  };
  protoOf(LayoutNodeLayoutDelegate).w5q = function () {
    return this.q5p_1;
  };
  protoOf(LayoutNodeLayoutDelegate).v5u = function (value) {
    var oldValue = this.m5p_1;
    if (!(oldValue === value)) {
      this.m5p_1 = value;
      if (value ? !this.n5p_1 : false) {
        var tmp1 = this.o5p_1;
        this.x5p(tmp1 + 1 | 0);
      } else if (!value ? !this.n5p_1 : false) {
        var tmp3 = this.o5p_1;
        this.x5p(tmp3 - 1 | 0);
      }
    }
  };
  protoOf(LayoutNodeLayoutDelegate).t5u = function (value) {
    var oldValue = this.n5p_1;
    if (!(oldValue === value)) {
      this.n5p_1 = value;
      if (value ? !this.m5p_1 : false) {
        var tmp1 = this.o5p_1;
        this.x5p(tmp1 + 1 | 0);
      } else if (!value ? !this.m5p_1 : false) {
        var tmp3 = this.o5p_1;
        this.x5p(tmp3 - 1 | 0);
      }
    }
  };
  protoOf(LayoutNodeLayoutDelegate).x5p = function (value) {
    var oldValue = this.o5p_1;
    this.o5p_1 = value;
    if (!(oldValue === 0 === (value === 0))) {
      var tmp0_safe_receiver = this.b5p_1.pp();
      var parentLayoutDelegate = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e4l_1;
      if (!(parentLayoutDelegate == null)) {
        if (value === 0) {
          var tmp2 = parentLayoutDelegate.o5p_1;
          parentLayoutDelegate.x5p(tmp2 - 1 | 0);
        } else {
          var tmp4 = parentLayoutDelegate.o5p_1;
          parentLayoutDelegate.x5p(tmp4 + 1 | 0);
        }
      }
    }
  };
  protoOf(LayoutNodeLayoutDelegate).j59 = function () {
    var state = this.b5p_1.i5q();
    if (state.equals(LayoutState_LayingOut_getInstance()) ? true : state.equals(LayoutState_LookaheadLayingOut_getInstance())) {
      if (this.p5p_1.r5c_1) {
        this.v5u(true);
      } else {
        this.t5u(true);
      }
    }
    if (state.equals(LayoutState_LookaheadLayingOut_getInstance())) {
      var tmp0_safe_receiver = this.q5p_1;
      if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.w5d_1) === true) {
        this.v5u(true);
      } else {
        this.t5u(true);
      }
    }
  };
  protoOf(LayoutNodeLayoutDelegate).x5m = function () {
    if (this.q5p_1 == null) {
      this.q5p_1 = new LookaheadPassDelegate(this);
    }
  };
  protoOf(LayoutNodeLayoutDelegate).r5q = function () {
    if (this.p5p_1.z5u()) {
      var tmp0_safe_receiver = this.b5p_1.pp();
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.h5s();
      }
    }
    var tmp1_safe_receiver = this.q5p_1;
    if ((tmp1_safe_receiver == null ? null : tmp1_safe_receiver.z5u()) === true) {
      if (isOutMostLookaheadRoot(this.b5p_1)) {
        var tmp2_safe_receiver = this.b5p_1.pp();
        if (tmp2_safe_receiver == null)
          null;
        else {
          tmp2_safe_receiver.h5s();
        }
      } else {
        var tmp3_safe_receiver = this.b5p_1.pp();
        if (tmp3_safe_receiver == null)
          null;
        else {
          tmp3_safe_receiver.j5s();
        }
      }
    }
  };
  protoOf(LayoutNodeLayoutDelegate).n5r = function () {
    this.p5p_1.n5r();
    var tmp0_safe_receiver = this.q5p_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.n5r();
    }
  };
  protoOf(LayoutNodeLayoutDelegate).s5q = function () {
    this.p5p_1.o5c_1.a26();
    var tmp0_safe_receiver = this.q5p_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t5d_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      tmp1_safe_receiver.a26();
    }
  };
  protoOf(LayoutNodeLayoutDelegate).w5p = function () {
    this.p5p_1.q5c_1 = true;
    var tmp0_safe_receiver = this.q5p_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      tmp0_safe_receiver.v5d_1 = true;
    }
  };
  function isOutMostLookaheadRoot(_this__u8e3s4) {
    var tmp;
    if (!(_this__u8e3s4.h4k_1 == null)) {
      var tmp_0;
      var tmp0_safe_receiver = _this__u8e3s4.pp();
      if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.h4k_1) == null) {
        tmp_0 = true;
      } else {
        tmp_0 = _this__u8e3s4.e4l_1.c5p_1;
      }
      tmp = tmp_0;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isTreeConsistent($this, node) {
    if (!consistentLayoutState(node, $this)) {
      return false;
    }
    // Inline function 'androidx.compose.ui.util.fastForEach' call
    var this_0 = node.dv();
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = this_0.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = this_0.n(index);
        // Inline function 'androidx.compose.ui.node.LayoutTreeConsistencyChecker.isTreeConsistent.<anonymous>' call
        if (!isTreeConsistent($this, item)) {
          return false;
        }
      }
       while (inductionVariable <= last);
    return true;
  }
  function consistentLayoutState(_this__u8e3s4, $this) {
    var parent = _this__u8e3s4.pp();
    var parentLayoutState = parent == null ? null : parent.i5q();
    var tmp;
    if (_this__u8e3s4.s4r()) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1 = _this__u8e3s4.u4r();
      Companion_getInstance_29();
      if (!(tmp_1 === 2147483647)) {
        tmp_0 = (parent == null ? null : parent.s4r()) === true;
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    if (tmp) {
      var tmp_2;
      if (_this__u8e3s4.i5s()) {
        var tmp$ret$1;
        $l$block: {
          // Inline function 'androidx.compose.ui.util.fastFirstOrNull' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.ui.util.fastForEach' call
          var this_0 = $this.h5v_1;
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable = 0;
          var last = this_0.m() - 1 | 0;
          if (inductionVariable <= last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var item = this_0.n(index);
              // Inline function 'androidx.compose.ui.util.fastFirstOrNull.<anonymous>' call
              // Inline function 'androidx.compose.ui.node.LayoutTreeConsistencyChecker.consistentLayoutState.<anonymous>' call
              if (equals(item.i5v_1, _this__u8e3s4) ? !item.j5v_1 : false) {
                tmp$ret$1 = item;
                break $l$block;
              }
            }
             while (inductionVariable <= last);
          tmp$ret$1 = null;
        }
        tmp_2 = !(tmp$ret$1 == null);
      } else {
        tmp_2 = false;
      }
      if (tmp_2) {
        return true;
      }
      if (_this__u8e3s4.i5s()) {
        var tmp_3;
        var tmp_4;
        var tmp_5;
        if ($this.g5v_1.p5j(_this__u8e3s4) ? true : _this__u8e3s4.i5q().equals(LayoutState_LookaheadMeasuring_getInstance())) {
          tmp_5 = true;
        } else {
          tmp_5 = (parent == null ? null : parent.i5s()) === true;
        }
        if (tmp_5) {
          tmp_4 = true;
        } else {
          tmp_4 = (parent == null ? null : parent.k5s()) === true;
        }
        if (tmp_4) {
          tmp_3 = true;
        } else {
          tmp_3 = equals(parentLayoutState, LayoutState_Measuring_getInstance());
        }
        return tmp_3;
      }
      if (_this__u8e3s4.g5s()) {
        return (((($this.g5v_1.p5j(_this__u8e3s4) ? true : parent == null) ? true : parent.i5s()) ? true : parent.g5s()) ? true : equals(parentLayoutState, LayoutState_Measuring_getInstance())) ? true : equals(parentLayoutState, LayoutState_LayingOut_getInstance());
      }
    }
    if (_this__u8e3s4.e5q() === true) {
      var tmp_6;
      if (_this__u8e3s4.k5s()) {
        var tmp$ret$3;
        $l$block_0: {
          // Inline function 'androidx.compose.ui.util.fastFirstOrNull' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.ui.util.fastForEach' call
          var this_1 = $this.h5v_1;
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable_0 = 0;
          var last_0 = this_1.m() - 1 | 0;
          if (inductionVariable_0 <= last_0)
            do {
              var index_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              var item_0 = this_1.n(index_0);
              // Inline function 'androidx.compose.ui.util.fastFirstOrNull.<anonymous>' call
              // Inline function 'androidx.compose.ui.node.LayoutTreeConsistencyChecker.consistentLayoutState.<anonymous>' call
              if (equals(item_0.i5v_1, _this__u8e3s4) ? item_0.j5v_1 : false) {
                tmp$ret$3 = item_0;
                break $l$block_0;
              }
            }
             while (inductionVariable_0 <= last_0);
          tmp$ret$3 = null;
        }
        tmp_6 = !(tmp$ret$3 == null);
      } else {
        tmp_6 = false;
      }
      if (tmp_6) {
        return true;
      }
      if (_this__u8e3s4.k5s()) {
        var tmp_7;
        var tmp_8;
        var tmp_9;
        if ($this.g5v_1.k5j(_this__u8e3s4, true)) {
          tmp_9 = true;
        } else {
          tmp_9 = (parent == null ? null : parent.k5s()) === true;
        }
        if (tmp_9) {
          tmp_8 = true;
        } else {
          tmp_8 = equals(parentLayoutState, LayoutState_LookaheadMeasuring_getInstance());
        }
        if (tmp_8) {
          tmp_7 = true;
        } else {
          var tmp_10;
          if ((parent == null ? null : parent.i5s()) === true) {
            tmp_10 = equals(_this__u8e3s4.h4k_1, _this__u8e3s4);
          } else {
            tmp_10 = false;
          }
          tmp_7 = tmp_10;
        }
        return tmp_7;
      }
      if (_this__u8e3s4.e5s()) {
        return ((((($this.g5v_1.k5j(_this__u8e3s4, true) ? true : parent == null) ? true : parent.k5s()) ? true : parent.e5s()) ? true : equals(parentLayoutState, LayoutState_LookaheadMeasuring_getInstance())) ? true : equals(parentLayoutState, LayoutState_LookaheadLayingOut_getInstance())) ? true : parent.g5s() ? equals(_this__u8e3s4.h4k_1, _this__u8e3s4) : false;
      }
    }
    return true;
  }
  function nodeToString($this, node) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.LayoutTreeConsistencyChecker.nodeToString.<anonymous>' call
    var $this$with = StringBuilder_init_$Create$();
    $this$with.w5(node);
    $this$with.x5('[' + node.i5q() + ']');
    if (!node.s4r()) {
      $this$with.x5('[!isPlaced]');
    }
    $this$with.x5('[measuredByParent=' + node.k5r() + ']');
    if (!consistentLayoutState(node, $this)) {
      $this$with.x5('[INCONSISTENT]');
    }
    return $this$with.toString();
  }
  function logTree($this) {
    var stringBuilder = StringBuilder_init_$Create$();
    // Inline function 'kotlin.text.appendLine' call
    var value = 'Tree state:';
    // Inline function 'kotlin.text.appendLine' call
    stringBuilder.x5(value).y5(_Char___init__impl__6a9atx(10));
    logTree$printSubTree($this, stringBuilder, $this.f5v_1, 0);
    return stringBuilder.toString();
  }
  function logTree$printSubTree(this$0, stringBuilder, node, depth) {
    var childrenDepth = depth;
    var nodeRepresentation = nodeToString(this$0, node);
    // Inline function 'kotlin.text.isNotEmpty' call
    if (charSequenceLength(nodeRepresentation) > 0) {
      var inductionVariable = 0;
      if (inductionVariable < depth)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          stringBuilder.x5('..');
        }
         while (inductionVariable < depth);
      // Inline function 'kotlin.text.appendLine' call
      // Inline function 'kotlin.text.appendLine' call
      stringBuilder.x5(nodeRepresentation).y5(_Char___init__impl__6a9atx(10));
      childrenDepth = childrenDepth + 1 | 0;
    }
    // Inline function 'androidx.compose.ui.util.fastForEach' call
    var this_0 = node.dv();
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    var last = this_0.m() - 1 | 0;
    if (inductionVariable_0 <= last)
      do {
        var index = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var item = this_0.n(index);
        // Inline function 'androidx.compose.ui.node.LayoutTreeConsistencyChecker.logTree.printSubTree.<anonymous>' call
        logTree$printSubTree(this$0, stringBuilder, item, childrenDepth);
      }
       while (inductionVariable_0 <= last);
  }
  function LayoutTreeConsistencyChecker(root, relayoutNodes, postponedMeasureRequests) {
    this.f5v_1 = root;
    this.g5v_1 = relayoutNodes;
    this.h5v_1 = postponedMeasureRequests;
  }
  protoOf(LayoutTreeConsistencyChecker).l5v = function () {
    var inconsistencyFound = !isTreeConsistent(this, this.f5v_1);
    if (inconsistencyFound) {
      println(logTree(this));
      throw IllegalStateException_init_$Create$('Inconsistency found!');
    }
  };
  function _set__measureResult__ah39tn($this, result) {
    var tmp;
    if (result == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      $this.d58(IntSize(result.e2w(), result.f2w()));
      tmp = Unit_instance;
    }
    if (tmp == null) {
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      $this.d58(Companion_getInstance_3().g2y_1);
    }
    if (!equals($this.f59_1, result) ? !(result == null) : false) {
      var tmp_0;
      var tmp_1;
      // Inline function 'kotlin.collections.isNullOrEmpty' call
      var this_0 = $this.d59_1;
      // Inline function 'kotlin.contracts.contract' call
      if (!(this_0 == null ? true : this_0.u())) {
        tmp_1 = true;
      } else {
        // Inline function 'kotlin.collections.isNotEmpty' call
        tmp_1 = !result.t59().u();
      }
      if (tmp_1) {
        tmp_0 = !equals(result.t59(), $this.d59_1);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        $this.g5l().t59().s5t();
        var tmp2_elvis_lhs = $this.d59_1;
        var tmp_2;
        if (tmp2_elvis_lhs == null) {
          // Inline function 'kotlin.also' call
          // Inline function 'kotlin.collections.mutableMapOf' call
          var this_1 = LinkedHashMap_init_$Create$();
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.ui.node.LookaheadDelegate.<set-_measureResult>.<anonymous>' call
          $this.d59_1 = this_1;
          tmp_2 = this_1;
        } else {
          tmp_2 = tmp2_elvis_lhs;
        }
        var oldLines = tmp_2;
        oldLines.h1();
        oldLines.o2(result.t59());
      }
    }
    $this.f59_1 = result;
  }
  function placeSelf($this, position) {
    if (!equals($this.m59(), position)) {
      $this.l5l(position);
      var tmp0_safe_receiver = $this.o4r().e4l_1.q5p_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.y5u();
      }
      $this.s5l($this.b59_1);
    }
  }
  function LookaheadDelegate(coordinator) {
    LookaheadCapablePlaceable.call(this);
    this.b59_1 = coordinator;
    this.c59_1 = Companion_getInstance_4().w2x_1;
    this.d59_1 = null;
    this.e59_1 = new LookaheadLayoutCoordinates(this);
    this.f59_1 = null;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.g59_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(LookaheadDelegate).j5l = function () {
    var tmp0_safe_receiver = this.b59_1.w4q_1;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.i59();
  };
  protoOf(LookaheadDelegate).k5l = function () {
    return !(this.f59_1 == null);
  };
  protoOf(LookaheadDelegate).l5l = function (_set____db54di) {
    this.c59_1 = _set____db54di;
  };
  protoOf(LookaheadDelegate).m59 = function () {
    return this.c59_1;
  };
  protoOf(LookaheadDelegate).m5l = function () {
    var tmp0_elvis_lhs = this.f59_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var message = 'LookaheadDelegate has not been measured yet when measureResult is requested.';
      throw IllegalStateException_init_$Create$(toString(message));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(LookaheadDelegate).x4o = function () {
    return this.b59_1.x4o();
  };
  protoOf(LookaheadDelegate).g2x = function () {
    return this.b59_1.g2x();
  };
  protoOf(LookaheadDelegate).q2x = function () {
    return this.b59_1.q2x();
  };
  protoOf(LookaheadDelegate).o4r = function () {
    return this.b59_1.o4r();
  };
  protoOf(LookaheadDelegate).z52 = function () {
    return this.e59_1;
  };
  protoOf(LookaheadDelegate).g5l = function () {
    return ensureNotNull(this.b59_1.o4r().e4l_1.w5q());
  };
  protoOf(LookaheadDelegate).n5l = function (alignmentLine) {
    var tmp0_elvis_lhs = this.g59_1.x2(alignmentLine);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      tmp = -2147483648;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(LookaheadDelegate).o5l = function () {
    this.e58(this.m59(), 0.0, null);
  };
  protoOf(LookaheadDelegate).e58 = function (position, zIndex, layerBlock) {
    placeSelf(this, position);
    if (this.k58_1)
      return Unit_instance;
    this.u59();
  };
  protoOf(LookaheadDelegate).p5l = function (position) {
    // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
    var other = this.y4u_1;
    var tmp$ret$0 = IntOffset(_IntOffset___get_x__impl__qiqr5o(position) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(position) + _IntOffset___get_y__impl__2avpwj(other) | 0);
    placeSelf(this, tmp$ret$0);
  };
  protoOf(LookaheadDelegate).u59 = function () {
    this.m5l().u59();
  };
  protoOf(LookaheadDelegate).q5l = function () {
    return this.b59_1.q5l();
  };
  protoOf(LookaheadDelegate).l59 = function (ancestor) {
    var aggregatedOffset = Companion_getInstance_4().w2x_1;
    var lookaheadDelegate = this;
    while (!equals(lookaheadDelegate, ancestor)) {
      // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
      var this_0 = aggregatedOffset;
      var other = lookaheadDelegate.m59();
      aggregatedOffset = IntOffset(_IntOffset___get_x__impl__qiqr5o(this_0) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(this_0) + _IntOffset___get_y__impl__2avpwj(other) | 0);
      lookaheadDelegate = ensureNotNull(ensureNotNull(lookaheadDelegate.b59_1.x4q_1).i59());
    }
    return aggregatedOffset;
  };
  function LookaheadCapablePlaceable$layout$1($width, $height, $alignmentLines, $placementBlock, this$0) {
    this.m5v_1 = $width;
    this.n5v_1 = $height;
    this.o5v_1 = $alignmentLines;
    this.p5v_1 = $placementBlock;
    this.q5v_1 = this$0;
  }
  protoOf(LookaheadCapablePlaceable$layout$1).e2w = function () {
    return this.m5v_1;
  };
  protoOf(LookaheadCapablePlaceable$layout$1).f2w = function () {
    return this.n5v_1;
  };
  protoOf(LookaheadCapablePlaceable$layout$1).t59 = function () {
    return this.o5v_1;
  };
  protoOf(LookaheadCapablePlaceable$layout$1).u59 = function () {
    this.p5v_1(this.q5v_1.m58_1);
  };
  function LookaheadCapablePlaceable() {
    Placeable.call(this);
    this.k58_1 = false;
    this.l58_1 = false;
    this.m58_1 = PlacementScope_0(this);
  }
  protoOf(LookaheadCapablePlaceable).r5l = function (alignmentLine) {
    if (!this.k5l()) {
      return -2147483648;
    }
    var measuredPosition = this.f5l(alignmentLine);
    if (measuredPosition === -2147483648) {
      return -2147483648;
    }
    var tmp;
    if (alignmentLine instanceof VerticalAlignmentLine) {
      tmp = _IntOffset___get_x__impl__qiqr5o(this.y4u_1);
    } else {
      tmp = _IntOffset___get_y__impl__2avpwj(this.y4u_1);
    }
    return measuredPosition + tmp | 0;
  };
  protoOf(LookaheadCapablePlaceable).s5l = function (_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.w4q_1;
    if (!equals(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o4r(), _this__u8e3s4.o4r())) {
      _this__u8e3s4.g5l().t59().s5t();
    } else {
      var tmp1_safe_receiver = _this__u8e3s4.g5l().o5t();
      var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.t59();
      if (tmp2_safe_receiver == null)
        null;
      else {
        tmp2_safe_receiver.s5t();
      }
    }
  };
  protoOf(LookaheadCapablePlaceable).v59 = function (width, height, alignmentLines, placementBlock) {
    // Inline function 'androidx.compose.ui.node.checkMeasuredSize' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!((width & _get_MaxLayoutMask_$accessor$18xfr8u_6p75ka()) === 0 ? (height & _get_MaxLayoutMask_$accessor$18xfr8u_6p75ka()) === 0 : false)) {
      // Inline function 'androidx.compose.ui.node.checkMeasuredSize.<anonymous>' call
      var message = 'Size(' + width + ' x ' + height + ') is out of range. Each dimension must be between 0 and ' + '16777215.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return new LookaheadCapablePlaceable$layout$1(width, height, alignmentLines, placementBlock, this);
  };
  function get_MaxLayoutDimension() {
    return MaxLayoutDimension;
  }
  var MaxLayoutDimension;
  function _get_MaxLayoutMask_$accessor$18xfr8u_6p75ka() {
    return -16777216;
  }
  function doLookaheadRemeasure($this, layoutNode, constraints) {
    if (layoutNode.h4k_1 == null)
      return false;
    var tmp;
    var tmp_0 = constraints;
    if (!((tmp_0 == null ? null : new Constraints(tmp_0)) == null)) {
      tmp = layoutNode.v5s(constraints);
    } else {
      tmp = layoutNode.x5s();
    }
    var lookaheadSizeChanged = tmp;
    var parent = layoutNode.pp();
    if (lookaheadSizeChanged ? !(parent == null) : false) {
      if (parent.h4k_1 == null) {
        $this.c5w(parent);
      } else if (layoutNode.l5r().equals(UsageByParent_InMeasureBlock_getInstance())) {
        $this.b5w(parent);
      } else if (layoutNode.l5r().equals(UsageByParent_InLayoutBlock_getInstance())) {
        $this.a5w(parent);
      }
    }
    return lookaheadSizeChanged;
  }
  function doRemeasure($this, layoutNode, constraints) {
    var tmp;
    var tmp_0 = constraints;
    if (!((tmp_0 == null ? null : new Constraints(tmp_0)) == null)) {
      tmp = layoutNode.z5s(constraints);
    } else {
      tmp = layoutNode.b5t();
    }
    var sizeChanged = tmp;
    var parent = layoutNode.pp();
    if (sizeChanged ? !(parent == null) : false) {
      if (layoutNode.k5r().equals(UsageByParent_InMeasureBlock_getInstance())) {
        $this.c5w(parent);
      } else if (layoutNode.k5r().equals(UsageByParent_InLayoutBlock_getInstance())) {
        $this.d5w(parent);
      }
    }
    return sizeChanged;
  }
  function callOnLayoutCompletedListeners($this) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
    var this_0 = $this.v5v_1;
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    if (size > 0) {
      var i = 0;
      var tmp = this_0.n1q_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.callOnLayoutCompletedListeners.<anonymous>' call
        content[i].f5h();
        i = i + 1 | 0;
      }
       while (i < size);
    }
    $this.v5v_1.h1();
  }
  function remeasureAndRelayoutIfNeeded($this, layoutNode, affectsLookahead, relayoutNeeded) {
    var sizeChanged = false;
    if (layoutNode.m4l_1) {
      return false;
    }
    if (((((layoutNode.s4r() ? true : layoutNode.j5r()) ? true : _get_canAffectParent__dfr95q(layoutNode, $this)) ? true : layoutNode.e5q() === true) ? true : _get_canAffectParentInLookahead__1mzpbx(layoutNode, $this)) ? true : layoutNode.v5q()) {
      var lookaheadSizeChanged = false;
      if (layoutNode.k5s() ? true : layoutNode.i5s()) {
        var tmp;
        if (layoutNode === $this.r5v_1) {
          var tmp_0 = $this.y5v_1;
          tmp = ensureNotNull(tmp_0 == null ? null : new Constraints(tmp_0)).d2x_1;
        } else {
          tmp = null;
        }
        var constraints = tmp;
        if (layoutNode.k5s() ? affectsLookahead : false) {
          lookaheadSizeChanged = doLookaheadRemeasure($this, layoutNode, constraints);
        }
        sizeChanged = doRemeasure($this, layoutNode, constraints);
      }
      if (relayoutNeeded) {
        if (((lookaheadSizeChanged ? true : layoutNode.e5s()) ? layoutNode.e5q() === true : false) ? affectsLookahead : false) {
          layoutNode.q5r();
        }
        if (layoutNode.g5s()) {
          var tmp_1;
          if (layoutNode === $this.r5v_1) {
            tmp_1 = true;
          } else {
            var tmp_2;
            var tmp0_safe_receiver = layoutNode.pp();
            if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.s4r()) === true) {
              tmp_2 = layoutNode.j5r();
            } else {
              tmp_2 = false;
            }
            tmp_1 = tmp_2;
          }
          var isPlacedByPlacedParent = tmp_1;
          if (isPlacedByPlacedParent) {
            if (layoutNode === $this.r5v_1) {
              layoutNode.o5r(0, 0);
            } else {
              layoutNode.o5l();
            }
            $this.u5v_1.g5w(layoutNode);
            var tmp1_safe_receiver = $this.z5v_1;
            if (tmp1_safe_receiver == null)
              null;
            else {
              tmp1_safe_receiver.l5v();
            }
          }
        }
      }
      if ($this.x5v_1.pn()) {
        // Inline function 'androidx.compose.runtime.collection.MutableVector.forEach' call
        var this_0 = $this.x5v_1;
        // Inline function 'kotlin.contracts.contract' call
        var size = this_0.p1q_1;
        if (size > 0) {
          var i = 0;
          var tmp_3 = this_0.n1q_1;
          var content = isArray(tmp_3) ? tmp_3 : THROW_CCE();
          do {
            // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.remeasureAndRelayoutIfNeeded.<anonymous>' call
            var request = content[i];
            if (request.i5v_1.r4r()) {
              if (!request.j5v_1) {
                $this.i5w(request.i5v_1, request.k5v_1);
              } else {
                $this.h5w(request.i5v_1, request.k5v_1);
              }
            }
            i = i + 1 | 0;
          }
           while (i < size);
        }
        $this.x5v_1.h1();
      }
    }
    return sizeChanged;
  }
  function remeasureAndRelayoutIfNeeded$default($this, layoutNode, affectsLookahead, relayoutNeeded, $super) {
    affectsLookahead = affectsLookahead === VOID ? true : affectsLookahead;
    relayoutNeeded = relayoutNeeded === VOID ? true : relayoutNeeded;
    return remeasureAndRelayoutIfNeeded($this, layoutNode, affectsLookahead, relayoutNeeded);
  }
  function onlyRemeasureIfScheduled($this, node, affectsLookahead) {
    if (measurePending(node, $this, affectsLookahead) ? $this.s5v_1.k5j(node, affectsLookahead) : false) {
      remeasureAndRelayoutIfNeeded($this, node, affectsLookahead, false);
    }
  }
  function forceMeasureTheSubtreeInternal($this, layoutNode, affectsLookahead) {
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = layoutNode.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.forceMeasureTheSubtreeInternal.<anonymous>' call
        var child = content[i];
        if ((!affectsLookahead ? _get_measureAffectsParent__gl6c5b(child, $this) : false) ? true : affectsLookahead ? _get_measureAffectsParentLookahead__hclwzr(child, $this) : false) {
          if (isOutMostLookaheadRoot(child) ? !affectsLookahead : false) {
            if (child.k5s() ? $this.s5v_1.k5j(child, true) : false) {
              remeasureAndRelayoutIfNeeded($this, child, true, false);
            } else {
              $this.b5v(child, true);
            }
          }
          onlyRemeasureIfScheduled($this, child, affectsLookahead);
          if (!measurePending(child, $this, affectsLookahead)) {
            forceMeasureTheSubtreeInternal($this, child, affectsLookahead);
          }
        }
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
    onlyRemeasureIfScheduled($this, layoutNode, affectsLookahead);
  }
  function _get_measureAffectsParent__gl6c5b(_this__u8e3s4, $this) {
    return _this__u8e3s4.k5r().equals(UsageByParent_InMeasureBlock_getInstance()) ? true : _this__u8e3s4.e4l_1.g5l().t59().g5r();
  }
  function _get_canAffectParent__dfr95q(_this__u8e3s4, $this) {
    return _this__u8e3s4.i5s() ? _get_measureAffectsParent__gl6c5b(_this__u8e3s4, $this) : false;
  }
  function _get_canAffectParentInLookahead__1mzpbx(_this__u8e3s4, $this) {
    return _this__u8e3s4.k5s() ? _get_measureAffectsParentLookahead__hclwzr(_this__u8e3s4, $this) : false;
  }
  function _get_measureAffectsParentLookahead__hclwzr(_this__u8e3s4, $this) {
    var tmp;
    if (_this__u8e3s4.l5r().equals(UsageByParent_InMeasureBlock_getInstance())) {
      tmp = true;
    } else {
      var tmp0_safe_receiver = _this__u8e3s4.e4l_1.w5q();
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t59();
      tmp = (tmp1_safe_receiver == null ? null : tmp1_safe_receiver.g5r()) === true;
    }
    return tmp;
  }
  function measurePending(_this__u8e3s4, $this, affectsLookahead) {
    return affectsLookahead ? _this__u8e3s4.k5s() : _this__u8e3s4.i5s();
  }
  function PostponedRequest(node, isLookahead, isForced) {
    this.i5v_1 = node;
    this.j5v_1 = isLookahead;
    this.k5v_1 = isForced;
  }
  function MeasureAndLayoutDelegate(root) {
    this.r5v_1 = root;
    this.s5v_1 = new DepthSortedSetsForDifferentPasses(Companion_instance_23.j5w_1);
    this.t5v_1 = false;
    this.u5v_1 = new OnPositionedDispatcher();
    var tmp = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp.v5v_1 = new MutableVector(tmp$ret$0, 0);
    this.w5v_1 = new Long(1, 0);
    var tmp_0 = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$3 = fillArrayVal(Array(16), null);
    tmp_0.x5v_1 = new MutableVector(tmp$ret$3, 0);
    this.y5v_1 = null;
    var tmp_1 = this;
    var tmp_2;
    if (Companion_instance_23.j5w_1) {
      tmp_2 = new LayoutTreeConsistencyChecker(this.r5v_1, this.s5v_1, this.x5v_1.a2h());
    } else {
      tmp_2 = null;
    }
    tmp_1.z5v_1 = tmp_2;
  }
  protoOf(MeasureAndLayoutDelegate).k5w = function (constraints) {
    var tmp = this.y5v_1;
    if (!equals(tmp == null ? null : new Constraints(tmp), new Constraints(constraints))) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!!this.t5v_1) {
        // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.updateRootConstraints.<anonymous>' call
        var message = 'updateRootConstraints called while measuring';
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
      this.y5v_1 = constraints;
      if (!(this.r5v_1.h4k_1 == null)) {
        this.r5v_1.g5t();
      }
      this.r5v_1.e5t();
      this.s5v_1.q5j(this.r5v_1, !(this.r5v_1.h4k_1 == null));
    }
  };
  protoOf(MeasureAndLayoutDelegate).h5w = function (layoutNode, forced) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(layoutNode.h4k_1 == null)) {
      // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.requestLookaheadRemeasure.<anonymous>' call
      var message = 'Error: requestLookaheadRemeasure cannot be called on a node outside LookaheadScope';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var tmp;
    switch (layoutNode.i5q().t9_1) {
      case 1:
        tmp = false;
        break;
      case 0:
      case 3:
      case 2:
        this.x5v_1.q1q(new PostponedRequest(layoutNode, true, forced));
        var tmp1_safe_receiver = this.z5v_1;
        if (tmp1_safe_receiver == null)
          null;
        else {
          tmp1_safe_receiver.l5v();
        }

        tmp = false;
        break;
      case 4:
        var tmp_0;
        if (layoutNode.k5s() ? !forced : false) {
          tmp_0 = false;
        } else {
          layoutNode.g5t();
          layoutNode.e5t();
          var tmp_1;
          if (layoutNode.m4l_1) {
            tmp_1 = false;
          } else {
            var tmp_2;
            if (layoutNode.e5q() === true ? true : _get_canAffectParentInLookahead__1mzpbx(layoutNode, this)) {
              var tmp2_safe_receiver = layoutNode.pp();
              tmp_2 = !((tmp2_safe_receiver == null ? null : tmp2_safe_receiver.k5s()) === true);
            } else {
              tmp_2 = false;
            }
            if (tmp_2) {
              this.s5v_1.q5j(layoutNode, true);
            } else {
              var tmp_3;
              if (layoutNode.s4r() ? true : _get_canAffectParent__dfr95q(layoutNode, this)) {
                var tmp3_safe_receiver = layoutNode.pp();
                tmp_3 = !((tmp3_safe_receiver == null ? null : tmp3_safe_receiver.i5s()) === true);
              } else {
                tmp_3 = false;
              }
              if (tmp_3) {
                this.s5v_1.q5j(layoutNode, false);
              }
            }
            tmp_1 = !this.t5v_1;
          }
          tmp_0 = tmp_1;
        }

        tmp = tmp_0;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(MeasureAndLayoutDelegate).b5w = function (layoutNode, forced, $super) {
    forced = forced === VOID ? false : forced;
    return $super === VOID ? this.h5w(layoutNode, forced) : $super.h5w.call(this, layoutNode, forced);
  };
  protoOf(MeasureAndLayoutDelegate).i5w = function (layoutNode, forced) {
    var tmp;
    switch (layoutNode.i5q().t9_1) {
      case 0:
      case 1:
        tmp = false;
        break;
      case 3:
      case 2:
        this.x5v_1.q1q(new PostponedRequest(layoutNode, false, forced));
        var tmp1_safe_receiver = this.z5v_1;
        if (tmp1_safe_receiver == null)
          null;
        else {
          tmp1_safe_receiver.l5v();
        }

        tmp = false;
        break;
      case 4:
        var tmp_0;
        if (layoutNode.i5s() ? !forced : false) {
          tmp_0 = false;
        } else {
          layoutNode.e5t();
          var tmp_1;
          if (layoutNode.m4l_1) {
            tmp_1 = false;
          } else {
            if (layoutNode.s4r() ? true : _get_canAffectParent__dfr95q(layoutNode, this)) {
              var tmp2_safe_receiver = layoutNode.pp();
              if (!((tmp2_safe_receiver == null ? null : tmp2_safe_receiver.i5s()) === true)) {
                this.s5v_1.q5j(layoutNode, false);
              }
            }
            tmp_1 = !this.t5v_1;
          }
          tmp_0 = tmp_1;
        }

        tmp = tmp_0;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(MeasureAndLayoutDelegate).c5w = function (layoutNode, forced, $super) {
    forced = forced === VOID ? false : forced;
    return $super === VOID ? this.i5w(layoutNode, forced) : $super.i5w.call(this, layoutNode, forced);
  };
  protoOf(MeasureAndLayoutDelegate).l5w = function (layoutNode, forced) {
    var tmp;
    switch (layoutNode.i5q().t9_1) {
      case 1:
      case 3:
        var tmp1_safe_receiver = this.z5v_1;
        if (tmp1_safe_receiver == null)
          null;
        else {
          tmp1_safe_receiver.l5v();
        }

        tmp = false;
        break;
      case 0:
      case 2:
      case 4:
        var tmp_0;
        if ((layoutNode.k5s() ? true : layoutNode.e5s()) ? !forced : false) {
          var tmp2_safe_receiver = this.z5v_1;
          if (tmp2_safe_receiver == null)
            null;
          else {
            tmp2_safe_receiver.l5v();
          }
          tmp_0 = false;
        } else {
          layoutNode.f5t();
          layoutNode.d5t();
          var tmp_1;
          if (layoutNode.m4l_1) {
            tmp_1 = false;
          } else {
            var parent = layoutNode.pp();
            var tmp_2;
            var tmp_3;
            if (layoutNode.e5q() === true) {
              tmp_3 = !((parent == null ? null : parent.k5s()) === true);
            } else {
              tmp_3 = false;
            }
            if (tmp_3) {
              tmp_2 = !((parent == null ? null : parent.e5s()) === true);
            } else {
              tmp_2 = false;
            }
            if (tmp_2) {
              this.s5v_1.q5j(layoutNode, true);
            } else {
              var tmp_4;
              var tmp_5;
              if (layoutNode.s4r()) {
                tmp_5 = !((parent == null ? null : parent.g5s()) === true);
              } else {
                tmp_5 = false;
              }
              if (tmp_5) {
                tmp_4 = !((parent == null ? null : parent.i5s()) === true);
              } else {
                tmp_4 = false;
              }
              if (tmp_4) {
                this.s5v_1.q5j(layoutNode, false);
              }
            }
            tmp_1 = !this.t5v_1;
          }
          tmp_0 = tmp_1;
        }

        tmp = tmp_0;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(MeasureAndLayoutDelegate).a5w = function (layoutNode, forced, $super) {
    forced = forced === VOID ? false : forced;
    return $super === VOID ? this.l5w(layoutNode, forced) : $super.l5w.call(this, layoutNode, forced);
  };
  protoOf(MeasureAndLayoutDelegate).m5w = function (layoutNode, forced) {
    var tmp;
    switch (layoutNode.i5q().t9_1) {
      case 0:
      case 1:
      case 3:
      case 2:
        var tmp1_safe_receiver = this.z5v_1;
        if (tmp1_safe_receiver == null)
          null;
        else {
          tmp1_safe_receiver.l5v();
        }

        tmp = false;
        break;
      case 4:
        var tmp_0;
        if ((!forced ? layoutNode.s4r() === layoutNode.j5r() : false) ? layoutNode.i5s() ? true : layoutNode.g5s() : false) {
          var tmp2_safe_receiver = this.z5v_1;
          if (tmp2_safe_receiver == null)
            null;
          else {
            tmp2_safe_receiver.l5v();
          }
          tmp_0 = false;
        } else {
          layoutNode.d5t();
          var tmp_1;
          if (layoutNode.m4l_1) {
            tmp_1 = false;
          } else {
            if (layoutNode.j5r()) {
              var parent = layoutNode.pp();
              var tmp_2;
              if (!((parent == null ? null : parent.g5s()) === true)) {
                tmp_2 = !((parent == null ? null : parent.i5s()) === true);
              } else {
                tmp_2 = false;
              }
              if (tmp_2) {
                this.s5v_1.q5j(layoutNode, false);
              }
            }
            tmp_1 = !this.t5v_1;
          }
          tmp_0 = tmp_1;
        }

        tmp = tmp_0;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(MeasureAndLayoutDelegate).d5w = function (layoutNode, forced, $super) {
    forced = forced === VOID ? false : forced;
    return $super === VOID ? this.m5w(layoutNode, forced) : $super.m5w.call(this, layoutNode, forced);
  };
  protoOf(MeasureAndLayoutDelegate).n5w = function (layoutNode) {
    this.u5v_1.g5w(layoutNode);
  };
  protoOf(MeasureAndLayoutDelegate).o5w = function (onLayout) {
    var rootNodeResized = {_v: false};
    // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.performMeasureAndLayout' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.r5v_1.r4r()) {
      // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.performMeasureAndLayout.<anonymous>' call
      var message = 'performMeasureAndLayout called with unattached root';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.r5v_1.s4r()) {
      // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.performMeasureAndLayout.<anonymous>' call
      var message_0 = 'performMeasureAndLayout called with unplaced root';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.t5v_1) {
      // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.performMeasureAndLayout.<anonymous>' call
      var message_1 = 'performMeasureAndLayout called during measure layout';
      throw IllegalArgumentException_init_$Create$(toString(message_1));
    }
    var tmp = this.y5v_1;
    if (!((tmp == null ? null : new Constraints(tmp)) == null)) {
      this.t5v_1 = true;
      try {
        // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.measureAndLayout.<anonymous>' call
        if (this.s5v_1.pn()) {
          // Inline function 'androidx.compose.ui.node.DepthSortedSetsForDifferentPasses.popEach' call
          var this_0 = this.s5v_1;
          while (this_0.pn()) {
            // Inline function 'androidx.compose.ui.node.DepthSortedSet.isNotEmpty' call
            var affectsLookahead = !this_0.i5j_1.u();
            var node = affectsLookahead ? this_0.i5j_1.w1n() : this_0.j5j_1.w1n();
            // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.measureAndLayout.<anonymous>.<anonymous>' call
            var sizeChanged = remeasureAndRelayoutIfNeeded$default(this, node, affectsLookahead);
            if (node === this.r5v_1 ? sizeChanged : false) {
              rootNodeResized._v = true;
            }
          }
          if (onLayout == null)
            null;
          else
            onLayout();
        }
      }finally {
        this.t5v_1 = false;
      }
      var tmp0_safe_receiver = this.z5v_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.l5v();
      }
    }
    callOnLayoutCompletedListeners(this);
    return rootNodeResized._v;
  };
  protoOf(MeasureAndLayoutDelegate).r5g = function (listener) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    this.v5v_1.q1q(listener);
  };
  protoOf(MeasureAndLayoutDelegate).b5v = function (layoutNode, affectsLookahead) {
    if (this.s5v_1.t5j(affectsLookahead)) {
      return Unit_instance;
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.t5v_1) {
      // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.forceMeasureTheSubtree.<anonymous>' call
      var message = 'forceMeasureTheSubtree should be executed during the measureAndLayout pass';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!measurePending(layoutNode, this, affectsLookahead)) {
      // Inline function 'androidx.compose.ui.node.MeasureAndLayoutDelegate.forceMeasureTheSubtree.<anonymous>' call
      var message_0 = 'node not yet measured';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    forceMeasureTheSubtreeInternal(this, layoutNode, affectsLookahead);
  };
  protoOf(MeasureAndLayoutDelegate).p5w = function (forceDispatch) {
    if (forceDispatch) {
      this.u5v_1.q5w(this.r5v_1);
    }
    this.u5v_1.r5w();
  };
  protoOf(MeasureAndLayoutDelegate).s5w = function (forceDispatch, $super) {
    forceDispatch = forceDispatch === VOID ? false : forceDispatch;
    var tmp;
    if ($super === VOID) {
      this.p5w(forceDispatch);
      tmp = Unit_instance;
    } else {
      tmp = $super.p5w.call(this, forceDispatch);
    }
    return tmp;
  };
  protoOf(MeasureAndLayoutDelegate).t5w = function (node) {
    this.s5v_1.s5j(node);
  };
  function ModifierNodeElement() {
    this.u5w_1 = null;
  }
  function MutableVectorWithMutationTracking(vector, onVectorMutated) {
    this.u5p_1 = vector;
    this.v5p_1 = onVectorMutated;
  }
  protoOf(MutableVectorWithMutationTracking).m = function () {
    return this.u5p_1.p1q_1;
  };
  protoOf(MutableVectorWithMutationTracking).h1 = function () {
    this.u5p_1.h1();
    this.v5p_1();
  };
  protoOf(MutableVectorWithMutationTracking).r2g = function (index, element) {
    this.u5p_1.r2g(index, element);
    this.v5p_1();
  };
  protoOf(MutableVectorWithMutationTracking).m1 = function (index) {
    // Inline function 'kotlin.also' call
    var this_0 = this.u5p_1.m1(index);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.MutableVectorWithMutationTracking.removeAt.<anonymous>' call
    this.v5p_1();
    return this_0;
  };
  protoOf(MutableVectorWithMutationTracking).f5q = function () {
    return this.u5p_1.a2h();
  };
  protoOf(MutableVectorWithMutationTracking).n = function (index) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
    var tmp = this.u5p_1.n1q_1[index];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  function executeDiff(oldSize, newSize, callback) {
    var diagonals = calculateDiff(oldSize, newSize, callback);
    applyDiff(diagonals, callback);
  }
  function quickSort($this, start, end, elSize) {
    if (start < end) {
      var i = partition($this, start, end, elSize);
      quickSort($this, start, i - elSize | 0, elSize);
      quickSort($this, i + elSize | 0, end, elSize);
    }
  }
  function partition($this, start, end, elSize) {
    var i = start - elSize | 0;
    var j = start;
    while (j < end) {
      if (compareDiagonal($this, j, end)) {
        i = i + elSize | 0;
        swapDiagonal($this, i, j);
      }
      j = j + elSize | 0;
    }
    swapDiagonal($this, i + elSize | 0, end);
    return i + elSize | 0;
  }
  function swapDiagonal($this, i, j) {
    var stack = $this.v5w_1;
    swap(stack, i, j);
    swap(stack, i + 1 | 0, j + 1 | 0);
    swap(stack, i + 2 | 0, j + 2 | 0);
  }
  function compareDiagonal($this, a, b) {
    var stack = $this.v5w_1;
    var a0 = stack[a];
    var b0 = stack[b];
    return a0 < b0 ? true : a0 === b0 ? stack[a + 1 | 0] <= stack[b + 1 | 0] : false;
  }
  function IntStack(initialCapacity) {
    this.v5w_1 = new Int32Array(initialCapacity);
    this.w5w_1 = 0;
  }
  protoOf(IntStack).n = function (index) {
    return this.v5w_1[index];
  };
  protoOf(IntStack).m = function () {
    return this.w5w_1;
  };
  protoOf(IntStack).x5w = function (oldStart, oldEnd, newStart, newEnd) {
    var i = this.w5w_1;
    if ((i + 4 | 0) >= this.v5w_1.length) {
      this.v5w_1 = copyOf_1(this.v5w_1, imul(this.v5w_1.length, 2));
    }
    var stack = this.v5w_1;
    stack[i + 0 | 0] = oldStart;
    stack[i + 1 | 0] = oldEnd;
    stack[i + 2 | 0] = newStart;
    stack[i + 3 | 0] = newEnd;
    this.w5w_1 = i + 4 | 0;
  };
  protoOf(IntStack).y5w = function (x, y, size) {
    var i = this.w5w_1;
    if ((i + 3 | 0) >= this.v5w_1.length) {
      this.v5w_1 = copyOf_1(this.v5w_1, imul(this.v5w_1.length, 2));
    }
    var stack = this.v5w_1;
    stack[i + 0 | 0] = x + size | 0;
    stack[i + 1 | 0] = y + size | 0;
    stack[i + 2 | 0] = size;
    this.w5w_1 = i + 3 | 0;
  };
  protoOf(IntStack).w1n = function () {
    var tmp = this.v5w_1;
    this.w5w_1 = this.w5w_1 - 1 | 0;
    return tmp[this.w5w_1];
  };
  protoOf(IntStack).pn = function () {
    return !(this.w5w_1 === 0);
  };
  protoOf(IntStack).z5w = function () {
    var i = this.w5w_1;
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!((i % 3 | 0) === 0)) {
      // Inline function 'androidx.compose.ui.node.IntStack.sortDiagonals.<anonymous>' call
      var message = 'Array size not a multiple of 3';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    if (i > 3) {
      quickSort(this, 0, i - 3 | 0, 3);
    }
  };
  function calculateDiff(oldSize, newSize, cb) {
    var max = ((oldSize + newSize | 0) + 1 | 0) / 2 | 0;
    var diagonals = new IntStack(imul(max, 3));
    var stack = new IntStack(imul(max, 4));
    stack.x5w(0, oldSize, 0, newSize);
    var forward = _CenteredArray___init__impl__szwv5g(new Int32Array(imul(max, 2) + 1 | 0));
    var backward = _CenteredArray___init__impl__szwv5g(new Int32Array(imul(max, 2) + 1 | 0));
    var snake = _Snake___init__impl__60pk1l(new Int32Array(5));
    while (stack.pn()) {
      var newEnd = stack.w1n();
      var newStart = stack.w1n();
      var oldEnd = stack.w1n();
      var oldStart = stack.w1n();
      var found = midPoint(oldStart, oldEnd, newStart, newEnd, cb, forward, backward, _Snake___get_data__impl__z3h2ly(snake));
      if (found) {
        if (_Snake___get_diagonalSize__impl__g0mwga(snake) > 0) {
          Snake__addDiagonalToStack_impl_z26l6y(snake, diagonals);
        }
        stack.x5w(oldStart, _Snake___get_startX__impl__2ujety(snake), newStart, _Snake___get_startY__impl__pz3289(snake));
        stack.x5w(_Snake___get_endX__impl__v3jh25(snake), oldEnd, _Snake___get_endY__impl__29wzzy(snake), newEnd);
      }
    }
    diagonals.z5w();
    diagonals.y5w(oldSize, newSize, 0);
    return diagonals;
  }
  function applyDiff(diagonals, callback) {
    var posX = 0;
    var posY = 0;
    var i = 0;
    while (i < diagonals.m()) {
      var startX = diagonals.n(i) - diagonals.n(i + 2 | 0) | 0;
      var startY = diagonals.n(i + 1 | 0) - diagonals.n(i + 2 | 0) | 0;
      var len = diagonals.n(i + 2 | 0);
      i = i + 3 | 0;
      while (posX < startX) {
        callback.u1f(posY, posX);
        posX = posX + 1 | 0;
      }
      while (posY < startY) {
        callback.a5x(posY);
        posY = posY + 1 | 0;
      }
      $l$loop: while (true) {
        var tmp2 = len;
        len = tmp2 - 1 | 0;
        if (!(tmp2 > 0)) {
          break $l$loop;
        }
        callback.b5x(posX, posY);
        posX = posX + 1 | 0;
        posY = posY + 1 | 0;
      }
    }
  }
  function swap(_this__u8e3s4, i, j) {
    var tmp = _this__u8e3s4[i];
    _this__u8e3s4[i] = _this__u8e3s4[j];
    _this__u8e3s4[j] = tmp;
  }
  function _CenteredArray___init__impl__szwv5g(data) {
    return data;
  }
  function _get_data__d5abxd($this) {
    return $this;
  }
  function _get_mid__e6ctop($this) {
    return _get_data__d5abxd($this).length / 2 | 0;
  }
  function CenteredArray__get_impl_zhm9j0($this, index) {
    return _get_data__d5abxd($this)[index + _get_mid__e6ctop($this) | 0];
  }
  function CenteredArray__set_impl_q7jods($this, index, value) {
    _get_data__d5abxd($this)[index + _get_mid__e6ctop($this) | 0] = value;
  }
  function _Snake___init__impl__60pk1l(data) {
    return data;
  }
  function _Snake___get_data__impl__z3h2ly($this) {
    return $this;
  }
  function _Snake___get_startX__impl__2ujety($this) {
    return _Snake___get_data__impl__z3h2ly($this)[0];
  }
  function _Snake___get_startY__impl__pz3289($this) {
    return _Snake___get_data__impl__z3h2ly($this)[1];
  }
  function _Snake___get_endX__impl__v3jh25($this) {
    return _Snake___get_data__impl__z3h2ly($this)[2];
  }
  function _Snake___get_endY__impl__29wzzy($this) {
    return _Snake___get_data__impl__z3h2ly($this)[3];
  }
  function _Snake___get_reverse__impl__puue10($this) {
    return !(_Snake___get_data__impl__z3h2ly($this)[4] === 0);
  }
  function _Snake___get_diagonalSize__impl__g0mwga($this) {
    // Inline function 'kotlin.math.min' call
    var a = _Snake___get_endX__impl__v3jh25($this) - _Snake___get_startX__impl__2ujety($this) | 0;
    var b = _Snake___get_endY__impl__29wzzy($this) - _Snake___get_startY__impl__pz3289($this) | 0;
    return Math.min(a, b);
  }
  function _get_hasAdditionOrRemoval__guekso($this) {
    return !((_Snake___get_endY__impl__29wzzy($this) - _Snake___get_startY__impl__pz3289($this) | 0) === (_Snake___get_endX__impl__v3jh25($this) - _Snake___get_startX__impl__2ujety($this) | 0));
  }
  function _get_isAddition__1a40e3($this) {
    return (_Snake___get_endY__impl__29wzzy($this) - _Snake___get_startY__impl__pz3289($this) | 0) > (_Snake___get_endX__impl__v3jh25($this) - _Snake___get_startX__impl__2ujety($this) | 0);
  }
  function Snake__addDiagonalToStack_impl_z26l6y($this, diagonals) {
    if (_get_hasAdditionOrRemoval__guekso($this)) {
      if (_Snake___get_reverse__impl__puue10($this)) {
        diagonals.y5w(_Snake___get_startX__impl__2ujety($this), _Snake___get_startY__impl__pz3289($this), _Snake___get_diagonalSize__impl__g0mwga($this));
      } else {
        if (_get_isAddition__1a40e3($this)) {
          diagonals.y5w(_Snake___get_startX__impl__2ujety($this), _Snake___get_startY__impl__pz3289($this) + 1 | 0, _Snake___get_diagonalSize__impl__g0mwga($this));
        } else {
          diagonals.y5w(_Snake___get_startX__impl__2ujety($this) + 1 | 0, _Snake___get_startY__impl__pz3289($this), _Snake___get_diagonalSize__impl__g0mwga($this));
        }
      }
    } else {
      diagonals.y5w(_Snake___get_startX__impl__2ujety($this), _Snake___get_startY__impl__pz3289($this), _Snake___get_endX__impl__v3jh25($this) - _Snake___get_startX__impl__2ujety($this) | 0);
    }
  }
  function midPoint(oldStart, oldEnd, newStart, newEnd, cb, forward_0, backward_0, snake) {
    var oldSize = oldEnd - oldStart | 0;
    var newSize = newEnd - newStart | 0;
    if (oldSize < 1 ? true : newSize < 1) {
      return false;
    }
    var max = ((oldSize + newSize | 0) + 1 | 0) / 2 | 0;
    CenteredArray__set_impl_q7jods(forward_0, 1, oldStart);
    CenteredArray__set_impl_q7jods(backward_0, 1, oldEnd);
    var inductionVariable = 0;
    if (inductionVariable < max)
      do {
        var d = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var found = forward(oldStart, oldEnd, newStart, newEnd, cb, forward_0, backward_0, d, snake);
        if (found) {
          return true;
        }
        var found2 = backward(oldStart, oldEnd, newStart, newEnd, cb, forward_0, backward_0, d, snake);
        if (found2) {
          return true;
        }
      }
       while (inductionVariable < max);
    return false;
  }
  function forward(oldStart, oldEnd, newStart, newEnd, cb, forward, backward, d, snake) {
    var oldSize = oldEnd - oldStart | 0;
    var newSize = newEnd - newStart | 0;
    var checkForSnake = (abs(oldSize - newSize | 0) % 2 | 0) === 1;
    var delta = oldSize - newSize | 0;
    var k = -d | 0;
    while (k <= d) {
      var startX;
      var startY;
      var x;
      if (k === (-d | 0) ? true : !(k === d) ? CenteredArray__get_impl_zhm9j0(forward, k + 1 | 0) > CenteredArray__get_impl_zhm9j0(forward, k - 1 | 0) : false) {
        startX = CenteredArray__get_impl_zhm9j0(forward, k + 1 | 0);
        x = startX;
      } else {
        startX = CenteredArray__get_impl_zhm9j0(forward, k - 1 | 0);
        x = startX + 1 | 0;
      }
      var y = (newStart + (x - oldStart | 0) | 0) - k | 0;
      startY = (d === 0 ? true : !(x === startX)) ? y : y - 1 | 0;
      while ((x < oldEnd ? y < newEnd : false) ? cb.c5x(x, y) : false) {
        x = x + 1 | 0;
        y = y + 1 | 0;
      }
      CenteredArray__set_impl_q7jods(forward, k, x);
      if (checkForSnake) {
        var backwardsK = delta - k | 0;
        if ((backwardsK >= ((-d | 0) + 1 | 0) ? backwardsK <= (d - 1 | 0) : false) ? CenteredArray__get_impl_zhm9j0(backward, backwardsK) <= x : false) {
          fillSnake(startX, startY, x, y, false, snake);
          return true;
        }
      }
      k = k + 2 | 0;
    }
    return false;
  }
  function backward(oldStart, oldEnd, newStart, newEnd, cb, forward, backward, d, snake) {
    var oldSize = oldEnd - oldStart | 0;
    var newSize = newEnd - newStart | 0;
    var checkForSnake = ((oldSize - newSize | 0) % 2 | 0) === 0;
    var delta = oldSize - newSize | 0;
    var k = -d | 0;
    while (k <= d) {
      var startX;
      var x;
      if (k === (-d | 0) ? true : !(k === d) ? CenteredArray__get_impl_zhm9j0(backward, k + 1 | 0) < CenteredArray__get_impl_zhm9j0(backward, k - 1 | 0) : false) {
        startX = CenteredArray__get_impl_zhm9j0(backward, k + 1 | 0);
        x = startX;
      } else {
        startX = CenteredArray__get_impl_zhm9j0(backward, k - 1 | 0);
        x = startX - 1 | 0;
      }
      var y = newEnd - ((oldEnd - x | 0) - k | 0) | 0;
      var startY = (d === 0 ? true : !(x === startX)) ? y : y + 1 | 0;
      while ((x > oldStart ? y > newStart : false) ? cb.c5x(x - 1 | 0, y - 1 | 0) : false) {
        x = x - 1 | 0;
        y = y - 1 | 0;
      }
      CenteredArray__set_impl_q7jods(backward, k, x);
      if (checkForSnake) {
        var forwardsK = delta - k | 0;
        if ((forwardsK >= (-d | 0) ? forwardsK <= d : false) ? CenteredArray__get_impl_zhm9j0(forward, forwardsK) >= x : false) {
          fillSnake(x, y, startX, startY, true, snake);
          return true;
        }
      }
      k = k + 2 | 0;
    }
    return false;
  }
  function fillSnake(startX, startY, endX, endY, reverse, data) {
    data[0] = startX;
    data[1] = startY;
    data[2] = endX;
    data[3] = endY;
    data[4] = reverse ? 1 : 0;
  }
  function get_SentinelHead() {
    _init_properties_NodeChain_kt__qwn24z();
    return SentinelHead;
  }
  var SentinelHead;
  function _get_aggregateChildKindSet__bx3g2o($this) {
    return $this.y4j_1.s4i_1;
  }
  function padChain($this) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!($this.y4j_1 === get_SentinelHead())) {
      // Inline function 'androidx.compose.ui.node.NodeChain.padChain.<anonymous>' call
      var message = 'padChain called on already padded chain';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var currentHead = $this.y4j_1;
    currentHead.t4i_1 = get_SentinelHead();
    get_SentinelHead().u4i_1 = currentHead;
    return get_SentinelHead();
  }
  function trimChain($this, paddedHead) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(paddedHead === get_SentinelHead())) {
      // Inline function 'androidx.compose.ui.node.NodeChain.trimChain.<anonymous>' call
      var message = 'trimChain called on already trimmed chain';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var tmp0_elvis_lhs = get_SentinelHead().u4i_1;
    var result = tmp0_elvis_lhs == null ? $this.x4j_1 : tmp0_elvis_lhs;
    result.t4i_1 = null;
    get_SentinelHead().u4i_1 = null;
    get_SentinelHead().s4i_1 = -1;
    get_SentinelHead().f4j(null);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(result === get_SentinelHead())) {
      // Inline function 'androidx.compose.ui.node.NodeChain.trimChain.<anonymous>' call
      var message_0 = 'trimChain did not update the head';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    return result;
  }
  function syncAggregateChildKindSet($this) {
    var node = $this.x4j_1.t4i_1;
    var aggregateChildKindSet = 0;
    while (!(node == null) ? !(node === get_SentinelHead()) : false) {
      aggregateChildKindSet = aggregateChildKindSet | node.r4i_1;
      node.s4i_1 = aggregateChildKindSet;
      node = node.t4i_1;
    }
  }
  function getDiffer($this, head, offset, before, after, shouldAttachOnInsert) {
    var current = $this.b4k_1;
    var tmp;
    if (current == null) {
      // Inline function 'kotlin.also' call
      var this_0 = new Differ($this, head, offset, before, after, shouldAttachOnInsert);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.node.NodeChain.getDiffer.<anonymous>' call
      $this.b4k_1 = this_0;
      tmp = this_0;
    } else {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.node.NodeChain.getDiffer.<anonymous>' call
      current.d5x_1 = head;
      current.e5x_1 = offset;
      current.f5x_1 = before;
      current.g5x_1 = after;
      current.h5x_1 = shouldAttachOnInsert;
      tmp = current;
    }
    return tmp;
  }
  function propagateCoordinator($this, start, coordinator) {
    var node = start.t4i_1;
    $l$loop_0: while (!(node == null)) {
      if (node === get_SentinelHead()) {
        var tmp = coordinator;
        var tmp0_safe_receiver = $this.u4j_1.pp();
        tmp.x4q_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t5p();
        $this.w4j_1 = coordinator;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.ui.Node.isKind' call
      var this_0 = node;
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var kind = _NodeKind___init__impl__ojsprp(2);
      if (!((this_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0))
        break $l$loop_0;
      node.f4j(coordinator);
      node = node.t4i_1;
    }
  }
  function Differ($outer, node, offset, before, after, shouldAttachOnInsert) {
    this.i5x_1 = $outer;
    this.d5x_1 = node;
    this.e5x_1 = offset;
    this.f5x_1 = before;
    this.g5x_1 = after;
    this.h5x_1 = shouldAttachOnInsert;
  }
  protoOf(Differ).c5x = function (oldIndex, newIndex) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
    var this_0 = this.f5x_1;
    var index = this.e5x_1 + oldIndex | 0;
    var tmp = this_0.n1q_1[index];
    var tmp_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
    var this_1 = this.g5x_1;
    var index_0 = this.e5x_1 + newIndex | 0;
    var tmp_1 = this_1.n1q_1[index_0];
    var tmp$ret$1 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
    return !(actionForModifiers(tmp_0, tmp$ret$1) === 0);
  };
  protoOf(Differ).a5x = function (newIndex) {
    var index = this.e5x_1 + newIndex | 0;
    var parent = this.d5x_1;
    var tmp = this;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
    var tmp_0 = this.g5x_1.n1q_1[index];
    var tmp$ret$0 = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    tmp.d5x_1 = createAndInsertNodeAsChild(this.i5x_1, tmp$ret$0, parent);
    var tmp0_safe_receiver = this.i5x_1.c4k_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
      var tmp_1 = this.g5x_1.n1q_1[index];
      var tmp$ret$1 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
      tmp0_safe_receiver.j5x(index, index, tmp$ret$1, parent, this.d5x_1);
    }
    if (this.h5x_1) {
      var childCoordinator = ensureNotNull(ensureNotNull(this.d5x_1.u4i_1).w4i_1);
      var layoutmod = asLayoutModifierNode(this.d5x_1);
      if (!(layoutmod == null)) {
        var thisCoordinator = new LayoutModifierNodeCoordinator(this.i5x_1.u4j_1, layoutmod);
        this.d5x_1.f4j(thisCoordinator);
        propagateCoordinator(this.i5x_1, this.d5x_1, thisCoordinator);
        thisCoordinator.x4q_1 = childCoordinator.x4q_1;
        thisCoordinator.w4q_1 = childCoordinator;
        childCoordinator.x4q_1 = thisCoordinator;
      } else {
        this.d5x_1.f4j(childCoordinator);
      }
      this.d5x_1.g4j();
      this.d5x_1.h4j();
      autoInvalidateInsertedNode(this.d5x_1);
    } else {
      this.d5x_1.x4i_1 = true;
    }
  };
  protoOf(Differ).u1f = function (atIndex, oldIndex) {
    var toRemove = ensureNotNull(this.d5x_1.u4i_1);
    var tmp0_safe_receiver = this.i5x_1.c4k_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
      var this_0 = this.f5x_1;
      var index = this.e5x_1 + oldIndex | 0;
      var tmp = this_0.n1q_1[index];
      var tmp$ret$0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
      tmp0_safe_receiver.k5x(oldIndex, tmp$ret$0, toRemove);
    }
    // Inline function 'androidx.compose.ui.Node.isKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
    var kind = _NodeKind___init__impl__ojsprp(2);
    if (!((toRemove.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
      var removedCoordinator = ensureNotNull(toRemove.w4i_1);
      var parentCoordinator = removedCoordinator.x4q_1;
      var childCoordinator = ensureNotNull(removedCoordinator.w4q_1);
      if (parentCoordinator != null)
        parentCoordinator.w4q_1 = childCoordinator;
      childCoordinator.x4q_1 = parentCoordinator;
      propagateCoordinator(this.i5x_1, this.d5x_1, childCoordinator);
    }
    this.d5x_1 = detachAndRemoveNode(this.i5x_1, toRemove);
  };
  protoOf(Differ).b5x = function (oldIndex, newIndex) {
    this.d5x_1 = ensureNotNull(this.d5x_1.u4i_1);
    // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
    var this_0 = this.f5x_1;
    var index = this.e5x_1 + oldIndex | 0;
    var tmp = this_0.n1q_1[index];
    var prev = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
    var this_1 = this.g5x_1;
    var index_0 = this.e5x_1 + newIndex | 0;
    var tmp_0 = this_1.n1q_1[index_0];
    var next = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    if (!equals(prev, next)) {
      updateNode(this.i5x_1, prev, next, this.d5x_1);
      var tmp0_safe_receiver = this.i5x_1.c4k_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.m5x(this.e5x_1 + oldIndex | 0, this.e5x_1 + newIndex | 0, prev, next, this.d5x_1);
      }
    } else {
      var tmp1_safe_receiver = this.i5x_1.c4k_1;
      if (tmp1_safe_receiver == null)
        null;
      else {
        tmp1_safe_receiver.l5x(this.e5x_1 + oldIndex | 0, this.e5x_1 + newIndex | 0, prev, next, this.d5x_1);
      }
    }
  };
  function structuralUpdate($this, offset, before, after, tail, shouldAttachOnInsert) {
    var differ = getDiffer($this, tail, offset, before, after, shouldAttachOnInsert);
    executeDiff(before.p1q_1 - offset | 0, after.p1q_1 - offset | 0, differ);
    syncAggregateChildKindSet($this);
  }
  function detachAndRemoveNode($this, node) {
    if (node.b4j_1) {
      autoInvalidateRemovedNode(node);
      node.j4j();
      node.l4j();
    }
    return removeNode($this, node);
  }
  function removeNode($this, node) {
    var child = node.u4i_1;
    var parent = node.t4i_1;
    if (!(child == null)) {
      child.t4i_1 = parent;
      node.u4i_1 = null;
    }
    if (!(parent == null)) {
      parent.u4i_1 = child;
      node.t4i_1 = null;
    }
    return ensureNotNull(parent);
  }
  function createAndInsertNodeAsChild($this, element, parent) {
    var tmp;
    if (element instanceof ModifierNodeElement) {
      // Inline function 'kotlin.also' call
      var this_0 = element.i29();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.node.NodeChain.createAndInsertNodeAsChild.<anonymous>' call
      this_0.r4i_1 = calculateNodeKindSetFromIncludingDelegates(this_0);
      tmp = this_0;
    } else {
      tmp = new BackwardsCompatNode(element);
    }
    var node = tmp;
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!node.b4j_1) {
      // Inline function 'androidx.compose.ui.node.NodeChain.createAndInsertNodeAsChild.<anonymous>' call
      var message = 'A ModifierNodeElement cannot return an already attached node from create() ';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    node.x4i_1 = true;
    return insertChild($this, node, parent);
  }
  function insertChild($this, node, parent) {
    var theChild = parent.u4i_1;
    if (!(theChild == null)) {
      theChild.t4i_1 = node;
      node.u4i_1 = theChild;
    }
    parent.u4i_1 = node;
    node.t4i_1 = parent;
    return node;
  }
  function updateNode($this, prev, next, node) {
    var tmp;
    if (prev instanceof ModifierNodeElement) {
      tmp = next instanceof ModifierNodeElement;
    } else {
      tmp = false;
    }
    if (tmp) {
      updateUnsafe(next, node);
      if (node.b4j_1) {
        autoInvalidateUpdatedNode(node);
      } else {
        node.y4i_1 = true;
      }
    } else {
      if (node instanceof BackwardsCompatNode) {
        node.g5h(next);
        if (node.b4j_1) {
          autoInvalidateUpdatedNode(node);
        } else {
          node.y4i_1 = true;
        }
      } else {
        var message = 'Unknown Modifier.Node type';
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
  }
  function NodeChain(layoutNode) {
    this.u4j_1 = layoutNode;
    this.v4j_1 = new InnerNodeCoordinator(this.u4j_1);
    this.w4j_1 = this.v4j_1;
    this.x4j_1 = this.v4j_1.v5m_1;
    this.y4j_1 = this.x4j_1;
    this.z4j_1 = null;
    this.a4k_1 = null;
    this.b4k_1 = null;
    this.c4k_1 = null;
  }
  protoOf(NodeChain).m5r = function (m) {
    var coordinatorSyncNeeded = false;
    var paddedHead = padChain(this);
    var before = this.z4j_1;
    var tmp0_safe_receiver = before;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.p1q_1;
    var beforeSize = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp2_elvis_lhs = this.a4k_1;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
      // Inline function 'androidx.compose.runtime.collection.MutableVector' call
      // Inline function 'kotlin.arrayOfNulls' call
      var tmp$ret$0 = fillArrayVal(Array(16), null);
      tmp = new MutableVector(tmp$ret$0, 0);
    } else {
      tmp = tmp2_elvis_lhs;
    }
    var after = fillVector(m, tmp);
    var i = 0;
    if (after.p1q_1 === beforeSize) {
      var node = paddedHead.u4i_1;
      $l$loop: while (!(node == null) ? i < beforeSize : false) {
        $l$block: {
          // Inline function 'kotlin.checkNotNull' call
          // Inline function 'kotlin.contracts.contract' call
          if (before == null) {
            // Inline function 'androidx.compose.ui.node.NodeChain.updateFrom.<anonymous>' call
            var message = 'expected prior modifier list to be non-empty';
            throw IllegalStateException_init_$Create$(toString(message));
          } else {
            break $l$block;
          }
        }
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var this_0 = before;
        var index = i;
        var tmp_0 = this_0.n1q_1[index];
        var prev = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var index_0 = i;
        var tmp_1 = after.n1q_1[index_0];
        var next = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
        switch (actionForModifiers(prev, next)) {
          case 0:
            var tmp4_safe_receiver = this.c4k_1;
            if (tmp4_safe_receiver == null)
              null;
            else {
              tmp4_safe_receiver.n5x(i, prev, next, node);
            }

            node = node.t4i_1;
            break $l$loop;
          case 1:
            updateNode(this, prev, next, node);
            var tmp5_safe_receiver = this.c4k_1;
            if (tmp5_safe_receiver == null)
              null;
            else {
              tmp5_safe_receiver.m5x(i, i, prev, next, node);
            }

            break;
          case 2:
            var tmp6_safe_receiver = this.c4k_1;
            if (tmp6_safe_receiver == null)
              null;
            else {
              tmp6_safe_receiver.l5x(i, i, prev, next, node);
            }

            break;
        }
        node = node.u4i_1;
        i = i + 1 | 0;
      }
      if (i < beforeSize) {
        coordinatorSyncNeeded = true;
        $l$block_0: {
          // Inline function 'kotlin.checkNotNull' call
          // Inline function 'kotlin.contracts.contract' call
          if (before == null) {
            // Inline function 'androidx.compose.ui.node.NodeChain.updateFrom.<anonymous>' call
            var message_0 = 'expected prior modifier list to be non-empty';
            throw IllegalStateException_init_$Create$(toString(message_0));
          } else {
            break $l$block_0;
          }
        }
        $l$block_1: {
          // Inline function 'kotlin.checkNotNull' call
          // Inline function 'kotlin.contracts.contract' call
          if (node == null) {
            // Inline function 'androidx.compose.ui.node.NodeChain.updateFrom.<anonymous>' call
            var message_1 = 'structuralUpdate requires a non-null tail';
            throw IllegalStateException_init_$Create$(toString(message_1));
          } else {
            break $l$block_1;
          }
        }
        structuralUpdate(this, i, before, after, node, this.u4j_1.r4r());
      }
    } else if (!this.u4j_1.r4r() ? beforeSize === 0 : false) {
      coordinatorSyncNeeded = true;
      var node_0 = paddedHead;
      while (i < after.p1q_1) {
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var index_1 = i;
        var tmp_2 = after.n1q_1[index_1];
        var next_0 = (tmp_2 == null ? true : !(tmp_2 == null)) ? tmp_2 : THROW_CCE();
        var parent = node_0;
        node_0 = createAndInsertNodeAsChild(this, next_0, parent);
        var tmp8_safe_receiver = this.c4k_1;
        if (tmp8_safe_receiver == null)
          null;
        else {
          tmp8_safe_receiver.j5x(0, i, next_0, parent, node_0);
        }
        i = i + 1 | 0;
      }
      syncAggregateChildKindSet(this);
    } else if (after.p1q_1 === 0) {
      $l$block_2: {
        // Inline function 'kotlin.checkNotNull' call
        // Inline function 'kotlin.contracts.contract' call
        if (before == null) {
          // Inline function 'androidx.compose.ui.node.NodeChain.updateFrom.<anonymous>' call
          var message_2 = 'expected prior modifier list to be non-empty';
          throw IllegalStateException_init_$Create$(toString(message_2));
        } else {
          break $l$block_2;
        }
      }
      var node_1 = paddedHead.u4i_1;
      while (!(node_1 == null) ? i < before.p1q_1 : false) {
        var tmp10_safe_receiver = this.c4k_1;
        if (tmp10_safe_receiver == null)
          null;
        else {
          var tmp_3 = i;
          // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
          var this_1 = before;
          var index_2 = i;
          var tmp_4 = this_1.n1q_1[index_2];
          var tmp$ret$14 = (tmp_4 == null ? true : !(tmp_4 == null)) ? tmp_4 : THROW_CCE();
          tmp10_safe_receiver.k5x(tmp_3, tmp$ret$14, node_1);
        }
        node_1 = detachAndRemoveNode(this, node_1).u4i_1;
        i = i + 1 | 0;
      }
      var tmp_5 = this.v4j_1;
      var tmp12_safe_receiver = this.u4j_1.pp();
      tmp_5.x4q_1 = tmp12_safe_receiver == null ? null : tmp12_safe_receiver.t5p();
      this.w4j_1 = this.v4j_1;
    } else {
      coordinatorSyncNeeded = true;
      var tmp13_elvis_lhs = before;
      var tmp_6;
      if (tmp13_elvis_lhs == null) {
        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
        // Inline function 'kotlin.arrayOfNulls' call
        var tmp$ret$15 = fillArrayVal(Array(16), null);
        tmp_6 = new MutableVector(tmp$ret$15, 0);
      } else {
        tmp_6 = tmp13_elvis_lhs;
      }
      before = tmp_6;
      structuralUpdate(this, 0, before, after, paddedHead, this.u4j_1.r4r());
    }
    this.z4j_1 = after;
    var tmp_7 = this;
    var tmp14_safe_receiver = before;
    var tmp_8;
    if (tmp14_safe_receiver == null) {
      tmp_8 = null;
    } else {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.node.NodeChain.updateFrom.<anonymous>' call
      tmp14_safe_receiver.h1();
      tmp_8 = tmp14_safe_receiver;
    }
    tmp_7.a4k_1 = tmp_8;
    this.y4j_1 = trimChain(this, paddedHead);
    if (coordinatorSyncNeeded) {
      this.h5j();
    }
  };
  protoOf(NodeChain).c5q = function () {
    // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead' call
    var node = this.x4j_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.NodeChain.resetState.<anonymous>' call
      var it = node;
      if (it.b4j_1) {
        it.a26();
      }
      node = node.t4i_1;
    }
    var tmp0_safe_receiver = this.z4j_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.contracts.contract' call
      var size = tmp0_safe_receiver.p1q_1;
      var tmp;
      if (size > 0) {
        var i = 0;
        var tmp_0 = tmp0_safe_receiver.n1q_1;
        var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
        do {
          // Inline function 'androidx.compose.ui.node.NodeChain.resetState.<anonymous>.<anonymous>' call
          var i_0 = i;
          var element = content[i];
          if (element instanceof SuspendPointerInputElement) {
            tmp0_safe_receiver.v2g(i_0, new ForceUpdateElement(element));
          }
          i = i + 1 | 0;
        }
         while (i < size);
        tmp = Unit_instance;
      }
    }
    this.j4j();
    this.l4j();
  };
  protoOf(NodeChain).h5j = function () {
    var coordinator = this.v4j_1;
    var node = this.x4j_1.t4i_1;
    while (!(node == null)) {
      var layoutmod = asLayoutModifierNode(node);
      if (!(layoutmod == null)) {
        var tmp;
        if (!(node.w4i_1 == null)) {
          var tmp_0 = node.w4i_1;
          var c = tmp_0 instanceof LayoutModifierNodeCoordinator ? tmp_0 : THROW_CCE();
          var prevNode = c.m5g_1;
          c.m5g_1 = layoutmod;
          if (!(prevNode === node)) {
            c.p5g();
          }
          tmp = c;
        } else {
          var c_0 = new LayoutModifierNodeCoordinator(this.u4j_1, layoutmod);
          node.f4j(c_0);
          tmp = c_0;
        }
        var next = tmp;
        coordinator.x4q_1 = next;
        next.w4q_1 = coordinator;
        coordinator = next;
      } else {
        node.f4j(coordinator);
      }
      node = node.t4i_1;
    }
    var tmp_1 = coordinator;
    var tmp0_safe_receiver = this.u4j_1.pp();
    tmp_1.x4q_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t5p();
    this.w4j_1 = coordinator;
  };
  protoOf(NodeChain).g4j = function () {
    // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
    var node = this.y4j_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.NodeChain.markAsAttached.<anonymous>' call
      node.g4j();
      node = node.u4i_1;
    }
  };
  protoOf(NodeChain).h4j = function () {
    // Inline function 'androidx.compose.ui.node.NodeChain.headToTail' call
    var node = this.y4j_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.NodeChain.runAttachLifecycle.<anonymous>' call
      var it = node;
      it.h4j();
      if (it.x4i_1) {
        autoInvalidateInsertedNode(it);
      }
      if (it.y4i_1) {
        autoInvalidateUpdatedNode(it);
      }
      it.x4i_1 = false;
      it.y4i_1 = false;
      node = node.u4i_1;
    }
  };
  protoOf(NodeChain).l4j = function () {
    // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead' call
    var node = this.x4j_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.NodeChain.markAsDetached.<anonymous>' call
      var it = node;
      if (it.b4j_1) {
        it.l4j();
      }
      node = node.t4i_1;
    }
  };
  protoOf(NodeChain).j4j = function () {
    // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead' call
    var node = this.x4j_1;
    while (!(node == null)) {
      // Inline function 'androidx.compose.ui.node.NodeChain.runDetachLifecycle.<anonymous>' call
      var it = node;
      if (it.b4j_1) {
        it.j4j();
      }
      node = node.t4i_1;
    }
  };
  protoOf(NodeChain).o5q = function (type) {
    return !((_get_aggregateChildKindSet__bx3g2o(this) & _NodeKind___get_mask__impl__1uopb6(type)) === 0);
  };
  protoOf(NodeChain).d5q = function (mask) {
    return !((_get_aggregateChildKindSet__bx3g2o(this) & mask) === 0);
  };
  protoOf(NodeChain).toString = function () {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block_0: {
      // Inline function 'androidx.compose.ui.node.NodeChain.toString.<anonymous>' call
      this_0.x5('[');
      if (this.y4j_1 === this.x4j_1) {
        this_0.x5(']');
        break $l$block_0;
      }
      // Inline function 'androidx.compose.ui.node.NodeChain.headToTailExclusive' call
      var node = this.y4j_1;
      while (!(node == null) ? !(node === this.x4j_1) : false) {
        // Inline function 'androidx.compose.ui.node.NodeChain.toString.<anonymous>.<anonymous>' call
        var it = node;
        this_0.x5('' + it);
        if (it.u4i_1 === this.x4j_1) {
          this_0.x5(']');
          break $l$block_0;
        }
        this_0.x5(',');
        node = node.u4i_1;
      }
    }
    return this_0.toString();
  };
  function fillVector(_this__u8e3s4, result) {
    _init_properties_NodeChain_kt__qwn24z();
    var capacity = coerceAtLeast(result.p1q_1, 16);
    // Inline function 'kotlin.also' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(capacity), null);
    var this_0 = new MutableVector(tmp$ret$0, 0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.fillVector.<anonymous>' call
    this_0.q1q(_this__u8e3s4);
    var stack = this_0;
    var predicate = null;
    while (stack.pn()) {
      var next = stack.m1(stack.p1q_1 - 1 | 0);
      if (next instanceof CombinedModifier) {
        stack.q1q(next.q4j_1);
        stack.q1q(next.p4j_1);
      } else {
        if (isInterface(next, Element)) {
          result.q1q(next);
        } else {
          var tmp0_elvis_lhs = predicate;
          var tmp;
          if (tmp0_elvis_lhs == null) {
            // Inline function 'kotlin.also' call
            var this_1 = fillVector$lambda(result);
            // Inline function 'kotlin.contracts.contract' call
            // Inline function 'androidx.compose.ui.node.fillVector.<anonymous>' call
            predicate = this_1;
            tmp = this_1;
          } else {
            tmp = tmp0_elvis_lhs;
          }
          next.o4i(tmp);
        }
      }
    }
    return result;
  }
  function actionForModifiers(prev, next) {
    _init_properties_NodeChain_kt__qwn24z();
    var tmp;
    if (equals(prev, next)) {
      tmp = 2;
    } else {
      var tmp_0;
      if (areObjectsOfSameType(prev, next)) {
        tmp_0 = true;
      } else {
        var tmp_1;
        if (prev instanceof ForceUpdateElement) {
          tmp_1 = areObjectsOfSameType(prev.p5x_1, next);
        } else {
          tmp_1 = false;
        }
        tmp_0 = tmp_1;
      }
      if (tmp_0) {
        tmp = 1;
      } else {
        tmp = 0;
      }
    }
    return tmp;
  }
  function ForceUpdateElement(original) {
    ModifierNodeElement.call(this);
    this.p5x_1 = original;
  }
  protoOf(ForceUpdateElement).i29 = function () {
    throw IllegalStateException_init_$Create$("Shouldn't be called");
  };
  protoOf(ForceUpdateElement).q5x = function (node) {
    throw IllegalStateException_init_$Create$("Shouldn't be called");
  };
  protoOf(ForceUpdateElement).r4o = function (node) {
    return this.q5x(node instanceof Node ? node : THROW_CCE());
  };
  protoOf(ForceUpdateElement).toString = function () {
    return 'ForceUpdateElement(original=' + this.p5x_1 + ')';
  };
  protoOf(ForceUpdateElement).hashCode = function () {
    return this.p5x_1.hashCode();
  };
  protoOf(ForceUpdateElement).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ForceUpdateElement))
      return false;
    var tmp0_other_with_cast = other instanceof ForceUpdateElement ? other : THROW_CCE();
    if (!this.p5x_1.equals(tmp0_other_with_cast.p5x_1))
      return false;
    return true;
  };
  function updateUnsafe(_this__u8e3s4, node) {
    _init_properties_NodeChain_kt__qwn24z();
    _this__u8e3s4.r4o(node instanceof Node ? node : THROW_CCE());
  }
  function SentinelHead$1() {
    Node.call(this);
  }
  protoOf(SentinelHead$1).toString = function () {
    return '<Head>';
  };
  function fillVector$lambda($result) {
    return function (element) {
      $result.q1q(element);
      return true;
    };
  }
  var properties_initialized_NodeChain_kt_rygwrz;
  function _init_properties_NodeChain_kt__qwn24z() {
    if (!properties_initialized_NodeChain_kt_rygwrz) {
      properties_initialized_NodeChain_kt_rygwrz = true;
      // Inline function 'kotlin.apply' call
      var this_0 = new SentinelHead$1();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.node.SentinelHead.<anonymous>' call
      this_0.s4i_1 = -1;
      SentinelHead = this_0;
    }
  }
  function NodeCoordinator$Companion$onCommitAffectingLayerParams$lambda(coordinator) {
    if (coordinator.j5h()) {
      var layerPositionalProperties = coordinator.j4r_1;
      if (layerPositionalProperties == null) {
        updateLayerParameters$default(coordinator);
      } else {
        Companion_getInstance_30().x5r_1.a5y(layerPositionalProperties);
        updateLayerParameters$default(coordinator);
        if (!Companion_getInstance_30().x5r_1.b5y(layerPositionalProperties)) {
          var layoutNode = coordinator.o4r();
          var layoutDelegate = layoutNode.e4l_1;
          if (layoutDelegate.o5p_1 > 0) {
            if (layoutDelegate.n5p_1 ? true : layoutDelegate.m5p_1) {
              layoutNode.r5s();
            }
            layoutDelegate.p5p_1.y5u();
          }
          var tmp0_safe_receiver = layoutNode.n4k_1;
          if (tmp0_safe_receiver == null)
            null;
          else {
            tmp0_safe_receiver.n5w(layoutNode);
          }
        }
      }
    }
    return Unit_instance;
  }
  function NodeCoordinator$Companion$onCommitAffectingLayer$lambda(coordinator) {
    var tmp0_safe_receiver = coordinator.n4r_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.n1y();
    }
    return Unit_instance;
  }
  function NodeCoordinator$Companion$PointerInputSource$1() {
  }
  protoOf(NodeCoordinator$Companion$PointerInputSource$1).c5y = function () {
    // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
    return _NodeKind___init__impl__ojsprp(16);
  };
  protoOf(NodeCoordinator$Companion$PointerInputSource$1).d5y = function () {
    return this.c5y();
  };
  protoOf(NodeCoordinator$Companion$PointerInputSource$1).e5y = function (node) {
    // Inline function 'androidx.compose.ui.node.dispatchForKind' call
    // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
    var kind = _NodeKind___init__impl__ojsprp(16);
    var stack = null;
    var node_0 = node;
    $l$loop: while (!(node_0 == null)) {
      if (!(node_0 == null) ? isInterface(node_0, PointerInputModifierNode) : false) {
        // Inline function 'androidx.compose.ui.node.<no name provided>.interceptOutOfBoundsChildEvents.<anonymous>' call
        if (node_0.q52())
          return true;
      } else {
        var tmp;
        // Inline function 'androidx.compose.ui.Node.isKind' call
        if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
          tmp = node_0 instanceof DelegatingNode;
        } else {
          tmp = false;
        }
        if (tmp) {
          var count = 0;
          // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
          var node_1 = node_0.b4m_1;
          while (!(node_1 == null)) {
            // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
            var next = node_1;
            // Inline function 'androidx.compose.ui.Node.isKind' call
            if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
              count = count + 1 | 0;
              if (count === 1) {
                node_0 = next;
              } else {
                var tmp1_elvis_lhs = stack;
                var tmp_0;
                if (tmp1_elvis_lhs == null) {
                  // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                  // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                  // Inline function 'kotlin.arrayOfNulls' call
                  var tmp$ret$3 = fillArrayVal(Array(16), null);
                  tmp_0 = new MutableVector(tmp$ret$3, 0);
                } else {
                  tmp_0 = tmp1_elvis_lhs;
                }
                stack = tmp_0;
                var theNode = node_0;
                if (!(theNode == null)) {
                  var tmp2_safe_receiver = stack;
                  if (tmp2_safe_receiver == null)
                    null;
                  else
                    tmp2_safe_receiver.q1q(theNode);
                  node_0 = null;
                }
                var tmp3_safe_receiver = stack;
                if (tmp3_safe_receiver == null)
                  null;
                else
                  tmp3_safe_receiver.q1q(next);
              }
            }
            node_1 = node_1.u4i_1;
          }
          if (count === 1) {
            continue $l$loop;
          }
        }
      }
      node_0 = pop$accessor$hxafa1(stack);
    }
    return false;
  };
  protoOf(NodeCoordinator$Companion$PointerInputSource$1).l5n = function (parentLayoutNode) {
    return true;
  };
  protoOf(NodeCoordinator$Companion$PointerInputSource$1).m5n = function (layoutNode, pointerPosition, hitTestResult, isTouchEvent, isInLayer) {
    return layoutNode.r5r(pointerPosition, hitTestResult, isTouchEvent, isInLayer);
  };
  function NodeCoordinator$Companion$SemanticsSource$1() {
  }
  protoOf(NodeCoordinator$Companion$SemanticsSource$1).f5y = function () {
    // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
    return _NodeKind___init__impl__ojsprp(8);
  };
  protoOf(NodeCoordinator$Companion$SemanticsSource$1).d5y = function () {
    return this.f5y();
  };
  protoOf(NodeCoordinator$Companion$SemanticsSource$1).e5y = function (node) {
    return false;
  };
  protoOf(NodeCoordinator$Companion$SemanticsSource$1).l5n = function (parentLayoutNode) {
    var tmp0_safe_receiver = parentLayoutNode.n5q();
    return !((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o5h_1) === true);
  };
  protoOf(NodeCoordinator$Companion$SemanticsSource$1).m5n = function (layoutNode, pointerPosition, hitTestResult, isTouchEvent, isInLayer) {
    return layoutNode.b5s(pointerPosition, hitTestResult, isTouchEvent, isInLayer);
  };
  function headNode($this, includeTail) {
    var tmp;
    if ($this.o4r().h59() === $this) {
      tmp = $this.o4r().d4l_1.y4j_1;
    } else if (includeTail) {
      var tmp0_safe_receiver = $this.x4q_1;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e5j();
      tmp = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.u4i_1;
    } else {
      var tmp2_safe_receiver = $this.x4q_1;
      tmp = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.e5j();
    }
    return tmp;
  }
  function hasNode($this, type) {
    var tmp0_safe_receiver = headNode($this, get_includeSelfInTraversal(type));
    return (tmp0_safe_receiver == null ? null : has(tmp0_safe_receiver, type)) === true;
  }
  function _get_snapshotObserver__i94x1t($this) {
    return requireOwner_0($this.o4r()).u5g();
  }
  function placeSelf_0($this, position, zIndex, layerBlock) {
    $this.s5n(layerBlock);
    if (!equals($this.m59(), position)) {
      $this.l5l(position);
      $this.o4r().e4l_1.p5p_1.y5u();
      var layer = $this.n4r_1;
      if (!(layer == null)) {
        layer.g5y(position);
      } else {
        var tmp0_safe_receiver = $this.x4q_1;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.y5j();
        }
      }
      $this.s5l($this);
      var tmp1_safe_receiver = $this.o4r().n4k_1;
      if (tmp1_safe_receiver == null)
        null;
      else {
        tmp1_safe_receiver.h5y($this.o4r());
      }
    }
    $this.h4r_1 = zIndex;
  }
  function drawContainedDrawModifiers($this, canvas) {
    // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(4);
    var head = $this.o5n(tmp$ret$0);
    if (head == null) {
      $this.c5n(canvas);
    } else {
      var drawScope = $this.o4r().h5r();
      drawScope.s5u(canvas, toSize_0($this.d2y()), $this, head);
    }
  }
  function updateLayerParameters($this, invokeOnLayoutChange) {
    var layer = $this.n4r_1;
    if (!(layer == null)) {
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlin.checkNotNull' call
        var value = $this.a4r_1;
        // Inline function 'kotlin.contracts.contract' call
        if (value == null) {
          // Inline function 'androidx.compose.ui.node.NodeCoordinator.updateLayerParameters.<anonymous>' call
          var message = 'updateLayerParameters requires a non-null layerBlock';
          throw IllegalStateException_init_$Create$(toString(message));
        } else {
          tmp$ret$1 = value;
          break $l$block;
        }
      }
      var layerBlock = tmp$ret$1;
      Companion_getInstance_30().w5r_1.a26();
      Companion_getInstance_30().w5r_1.b4w_1 = $this.o4r().w4k_1;
      Companion_getInstance_30().w5r_1.a4w_1 = toSize_0($this.d2y());
      var tmp = _get_snapshotObserver__i94x1t($this);
      var tmp_0 = Companion_getInstance_30().u5r_1;
      tmp.d5h($this, tmp_0, NodeCoordinator$updateLayerParameters$lambda(layerBlock));
      var tmp0_elvis_lhs = $this.j4r_1;
      var tmp_1;
      if (tmp0_elvis_lhs == null) {
        // Inline function 'kotlin.also' call
        var this_0 = new LayerPositionalProperties();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.node.NodeCoordinator.updateLayerParameters.<anonymous>' call
        $this.j4r_1 = this_0;
        tmp_1 = this_0;
      } else {
        tmp_1 = tmp0_elvis_lhs;
      }
      var layerPositionalProperties = tmp_1;
      layerPositionalProperties.i5y(Companion_getInstance_30().w5r_1);
      layer.j5y(Companion_getInstance_30().w5r_1, $this.o4r().x4k_1, $this.o4r().w4k_1);
      $this.z4q_1 = Companion_getInstance_30().w5r_1.y4v_1;
      $this.d4r_1 = Companion_getInstance_30().w5r_1.m4v_1;
      if (invokeOnLayoutChange) {
        var tmp1_safe_receiver = $this.o4r().n4k_1;
        if (tmp1_safe_receiver == null)
          null;
        else {
          tmp1_safe_receiver.h5y($this.o4r());
        }
      }
    } else {
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!($this.a4r_1 == null)) {
        // Inline function 'androidx.compose.ui.node.NodeCoordinator.updateLayerParameters.<anonymous>' call
        var message_0 = 'null layer with a non-null layerBlock';
        throw IllegalStateException_init_$Create$(toString(message_0));
      }
    }
  }
  function updateLayerParameters$default($this, invokeOnLayoutChange, $super) {
    invokeOnLayoutChange = invokeOnLayoutChange === VOID ? true : invokeOnLayoutChange;
    return updateLayerParameters($this, invokeOnLayoutChange);
  }
  function hit(_this__u8e3s4, $this, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer) {
    if (_this__u8e3s4 == null) {
      $this.h5n(hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer);
    } else {
      hitTestResult.m5k(_this__u8e3s4, isInLayer, NodeCoordinator$hit$lambda($this, _this__u8e3s4, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer));
    }
  }
  function hitNear(_this__u8e3s4, $this, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer, distanceFromEdge) {
    if (_this__u8e3s4 == null) {
      $this.h5n(hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer);
    } else {
      hitTestResult.n5k(_this__u8e3s4, distanceFromEdge, isInLayer, NodeCoordinator$hitNear$lambda($this, _this__u8e3s4, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer, distanceFromEdge));
    }
  }
  function speculativeHit(_this__u8e3s4, $this, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer, distanceFromEdge) {
    if (_this__u8e3s4 == null) {
      $this.h5n(hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer);
    } else if (hitTestSource.e5y(_this__u8e3s4)) {
      hitTestResult.o5k(_this__u8e3s4, distanceFromEdge, isInLayer, NodeCoordinator$speculativeHit$lambda($this, _this__u8e3s4, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer, distanceFromEdge));
    } else {
      var tmp = hitTestSource.d5y();
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var tmp$ret$0 = _NodeKind___init__impl__ojsprp(2);
      speculativeHit(nextUntil(_this__u8e3s4, tmp, tmp$ret$0), $this, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer, distanceFromEdge);
    }
  }
  function toCoordinator(_this__u8e3s4, $this) {
    var tmp0_safe_receiver = _this__u8e3s4 instanceof LookaheadLayoutCoordinates ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.s58();
    var tmp;
    if (tmp1_elvis_lhs == null) {
      tmp = _this__u8e3s4 instanceof NodeCoordinator ? _this__u8e3s4 : THROW_CCE();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function ancestorToLocal($this, ancestor, offset) {
    if (ancestor === $this) {
      return offset;
    }
    var wrappedBy = $this.x4q_1;
    if (wrappedBy == null ? true : equals(ancestor, wrappedBy)) {
      return $this.v5n(offset);
    }
    return $this.v5n(ancestorToLocal(wrappedBy, ancestor, offset));
  }
  function ancestorToLocal_0($this, ancestor, rect, clipBounds) {
    if (ancestor === $this) {
      return Unit_instance;
    }
    var tmp0_safe_receiver = $this.x4q_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      ancestorToLocal_0(tmp0_safe_receiver, ancestor, rect, clipBounds);
    }
    return fromParentRect($this, rect, clipBounds);
  }
  function fromParentRect($this, bounds, clipBounds) {
    var x = _IntOffset___get_x__impl__qiqr5o($this.m59());
    bounds.q2v_1 = bounds.q2v_1 - x;
    bounds.s2v_1 = bounds.s2v_1 - x;
    var y = _IntOffset___get_y__impl__2avpwj($this.m59());
    bounds.r2v_1 = bounds.r2v_1 - y;
    bounds.t2v_1 = bounds.t2v_1 - y;
    var layer = $this.n4r_1;
    if (!(layer == null)) {
      layer.k5y(bounds, true);
      if ($this.z4q_1 ? clipBounds : false) {
        bounds.u2v(0.0, 0.0, _IntSize___get_width__impl__d9yl4o($this.d2y()), _IntSize___get_height__impl__prv63b($this.d2y()));
        if (bounds.o1o()) {
          return Unit_instance;
        }
      }
    }
  }
  function offsetFromEdge($this, pointerPosition) {
    var x = _Offset___get_x__impl__xvi35n(pointerPosition);
    // Inline function 'kotlin.comparisons.maxOf' call
    var b = x < 0.0 ? -x : x - $this.m5a();
    var horizontal = Math.max(0.0, b);
    var y = _Offset___get_y__impl__8bzhra(pointerPosition);
    // Inline function 'kotlin.comparisons.maxOf' call
    var b_0 = y < 0.0 ? -y : y - $this.n5a();
    var vertical = Math.max(0.0, b_0);
    return Offset_0(horizontal, vertical);
  }
  function Companion_16() {
    Companion_instance_20 = this;
    this.s5r_1 = 'LayoutCoordinate operations are only valid when isAttached is true';
    this.t5r_1 = 'Asking for measurement result of unmeasured layout modifier';
    var tmp = this;
    tmp.u5r_1 = NodeCoordinator$Companion$onCommitAffectingLayerParams$lambda;
    var tmp_0 = this;
    tmp_0.v5r_1 = NodeCoordinator$Companion$onCommitAffectingLayer$lambda;
    this.w5r_1 = new ReusableGraphicsLayerScope();
    this.x5r_1 = new LayerPositionalProperties();
    this.y5r_1 = _Matrix___init__impl__q3kp4w();
    var tmp_1 = this;
    tmp_1.z5r_1 = new NodeCoordinator$Companion$PointerInputSource$1();
    var tmp_2 = this;
    tmp_2.a5s_1 = new NodeCoordinator$Companion$SemanticsSource$1();
  }
  var Companion_instance_20;
  function Companion_getInstance_30() {
    if (Companion_instance_20 == null)
      new Companion_16();
    return Companion_instance_20;
  }
  function NodeCoordinator$drawBlock$lambda$lambda(this$0, $canvas) {
    return function () {
      drawContainedDrawModifiers(this$0, $canvas);
      return Unit_instance;
    };
  }
  function NodeCoordinator$drawBlock$lambda(this$0) {
    return function (canvas) {
      var tmp;
      if (this$0.o4r().s4r()) {
        var tmp_0 = _get_snapshotObserver__i94x1t(this$0);
        var tmp_1 = Companion_getInstance_30().v5r_1;
        tmp_0.d5h(this$0, tmp_1, NodeCoordinator$drawBlock$lambda$lambda(this$0, canvas));
        this$0.m4r_1 = false;
        tmp = Unit_instance;
      } else {
        this$0.m4r_1 = true;
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function NodeCoordinator$updateLayerParameters$lambda($layerBlock) {
    return function () {
      $layerBlock(Companion_getInstance_30().w5r_1);
      return Unit_instance;
    };
  }
  function NodeCoordinator$invalidateParentLayer$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.x4q_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.y5j();
      }
      return Unit_instance;
    };
  }
  function NodeCoordinator$hit$lambda(this$0, $this_hit, $hitTestSource, $pointerPosition, $hitTestResult, $isTouchEvent, $isInLayer) {
    return function () {
      var tmp = $hitTestSource.d5y();
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var tmp$ret$0 = _NodeKind___init__impl__ojsprp(2);
      hit(nextUntil($this_hit, tmp, tmp$ret$0), this$0, $hitTestSource, $pointerPosition, $hitTestResult, $isTouchEvent, $isInLayer);
      return Unit_instance;
    };
  }
  function NodeCoordinator$hitNear$lambda(this$0, $this_hitNear, $hitTestSource, $pointerPosition, $hitTestResult, $isTouchEvent, $isInLayer, $distanceFromEdge) {
    return function () {
      var tmp = $hitTestSource.d5y();
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var tmp$ret$0 = _NodeKind___init__impl__ojsprp(2);
      hitNear(nextUntil($this_hitNear, tmp, tmp$ret$0), this$0, $hitTestSource, $pointerPosition, $hitTestResult, $isTouchEvent, $isInLayer, $distanceFromEdge);
      return Unit_instance;
    };
  }
  function NodeCoordinator$speculativeHit$lambda(this$0, $this_speculativeHit, $hitTestSource, $pointerPosition, $hitTestResult, $isTouchEvent, $isInLayer, $distanceFromEdge) {
    return function () {
      var tmp = $hitTestSource.d5y();
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var tmp$ret$0 = _NodeKind___init__impl__ojsprp(2);
      speculativeHit(nextUntil($this_speculativeHit, tmp, tmp$ret$0), this$0, $hitTestSource, $pointerPosition, $hitTestResult, $isTouchEvent, $isInLayer, $distanceFromEdge);
      return Unit_instance;
    };
  }
  function NodeCoordinator(layoutNode) {
    Companion_getInstance_30();
    LookaheadCapablePlaceable.call(this);
    this.v4q_1 = layoutNode;
    this.w4q_1 = null;
    this.x4q_1 = null;
    this.y4q_1 = false;
    this.z4q_1 = false;
    this.a4r_1 = null;
    this.b4r_1 = this.o4r().w4k_1;
    this.c4r_1 = this.o4r().x4k_1;
    this.d4r_1 = 0.8;
    this.e4r_1 = null;
    this.f4r_1 = null;
    this.g4r_1 = Companion_getInstance_4().w2x_1;
    this.h4r_1 = 0.0;
    this.i4r_1 = null;
    this.j4r_1 = null;
    var tmp = this;
    tmp.k4r_1 = NodeCoordinator$drawBlock$lambda(this);
    var tmp_0 = this;
    tmp_0.l4r_1 = NodeCoordinator$invalidateParentLayer$lambda(this);
    this.m4r_1 = false;
    this.n4r_1 = null;
  }
  protoOf(NodeCoordinator).o4r = function () {
    return this.v4q_1;
  };
  protoOf(NodeCoordinator).x4o = function () {
    return this.o4r().x4k_1;
  };
  protoOf(NodeCoordinator).g2x = function () {
    return this.o4r().w4k_1.g2x();
  };
  protoOf(NodeCoordinator).q2x = function () {
    return this.o4r().w4k_1.q2x();
  };
  protoOf(NodeCoordinator).z52 = function () {
    return this;
  };
  protoOf(NodeCoordinator).o5n = function (type) {
    $l$block_0: {
      // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes' call
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      var includeTail = get_includeSelfInTraversal(type);
      var tmp;
      if (includeTail) {
        tmp = this.e5j();
      } else {
        var tmp0_elvis_lhs = this.e5j().t4i_1;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          break $l$block_0;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp = tmp_0;
      }
      var stopNode = tmp;
      var node = headNode(this, includeTail);
      $l$loop: while (!(node == null)) {
        if ((node.s4i_1 & mask) === 0) {
          break $l$block_0;
        }
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.NodeCoordinator.head.<anonymous>' call
          return node;
        }
        if (node === stopNode)
          break $l$loop;
        node = node.u4i_1;
      }
    }
    return null;
  };
  protoOf(NodeCoordinator).d2y = function () {
    return this.w4u_1;
  };
  protoOf(NodeCoordinator).g5l = function () {
    return this.o4r().e4l_1.g5l();
  };
  protoOf(NodeCoordinator).j5l = function () {
    return this.w4q_1;
  };
  protoOf(NodeCoordinator).o5l = function () {
    this.e58(this.m59(), this.h4r_1, this.a4r_1);
  };
  protoOf(NodeCoordinator).k5l = function () {
    return !(this.e4r_1 == null);
  };
  protoOf(NodeCoordinator).r4r = function () {
    return this.e5j().b4j_1;
  };
  protoOf(NodeCoordinator).z5m = function (value) {
    var old = this.e4r_1;
    if (!(value === old)) {
      this.e4r_1 = value;
      if ((old == null ? true : !(value.e2w() === old.e2w())) ? true : !(value.f2w() === old.f2w())) {
        this.p5n(value.e2w(), value.f2w());
      }
      var tmp;
      var tmp_0;
      // Inline function 'kotlin.collections.isNullOrEmpty' call
      var this_0 = this.f4r_1;
      // Inline function 'kotlin.contracts.contract' call
      if (!(this_0 == null ? true : this_0.u())) {
        tmp_0 = true;
      } else {
        // Inline function 'kotlin.collections.isNotEmpty' call
        tmp_0 = !value.t59().u();
      }
      if (tmp_0) {
        tmp = !equals(value.t59(), this.f4r_1);
      } else {
        tmp = false;
      }
      if (tmp) {
        this.g5l().t59().s5t();
        var tmp0_elvis_lhs = this.f4r_1;
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          // Inline function 'kotlin.also' call
          // Inline function 'kotlin.collections.mutableMapOf' call
          var this_1 = LinkedHashMap_init_$Create$();
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.ui.node.NodeCoordinator.<set-measureResult>.<anonymous>' call
          this.f4r_1 = this_1;
          tmp_1 = this_1;
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        var oldLines = tmp_1;
        oldLines.h1();
        oldLines.o2(value.t59());
      }
    }
  };
  protoOf(NodeCoordinator).m5l = function () {
    var tmp0_elvis_lhs = this.e4r_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var message = 'Asking for measurement result of unmeasured layout modifier';
      throw IllegalStateException_init_$Create$(toString(message));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(NodeCoordinator).p5n = function (width, height) {
    var layer = this.n4r_1;
    if (!(layer == null)) {
      layer.l5y(IntSize(width, height));
    } else {
      var tmp0_safe_receiver = this.x4q_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.y5j();
      }
    }
    this.d58(IntSize(width, height));
    updateLayerParameters(this, false);
    // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes' call
    // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
    var type = _NodeKind___init__impl__ojsprp(4);
    $l$block_0: {
      // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes' call
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      var includeTail = get_includeSelfInTraversal(type);
      var tmp;
      if (includeTail) {
        tmp = this.e5j();
      } else {
        var tmp0_elvis_lhs = this.e5j().t4i_1;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          break $l$block_0;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp = tmp_0;
      }
      var stopNode = tmp;
      var node = headNode(this, includeTail);
      $l$loop_0: while (!(node == null)) {
        if ((node.s4i_1 & mask) === 0) {
          break $l$block_0;
        }
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop: while (!(node_0 == null)) {
            if (!(node_0 == null) ? isInterface(node_0, DrawModifierNode) : false) {
              // Inline function 'androidx.compose.ui.node.NodeCoordinator.onMeasureResultChanged.<anonymous>' call
              node_0.h5h();
            } else {
              var tmp_1;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp_1 = node_0 instanceof DelegatingNode;
              } else {
                tmp_1 = false;
              }
              if (tmp_1) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_2;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$4 = fillArrayVal(Array(16), null);
                        tmp_2 = new MutableVector(tmp$ret$4, 0);
                      } else {
                        tmp_2 = tmp1_elvis_lhs;
                      }
                      stack = tmp_2;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
        }
        if (node === stopNode)
          break $l$loop_0;
        node = node.u4i_1;
      }
    }
    var tmp1_safe_receiver = this.o4r().n4k_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      tmp1_safe_receiver.h5y(this.o4r());
    }
  };
  protoOf(NodeCoordinator).l5l = function (_set____db54di) {
    this.g4r_1 = _set____db54di;
  };
  protoOf(NodeCoordinator).m59 = function () {
    return this.g4r_1;
  };
  protoOf(NodeCoordinator).q5l = function () {
    var tmp = this.o4r().d4l_1;
    // Inline function 'androidx.compose.ui.node.Nodes.ParentData' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(64);
    if (tmp.o5q(tmp$ret$0)) {
      var thisNode = this.e5j();
      var data = null;
      // Inline function 'androidx.compose.ui.node.NodeChain.tailToHead' call
      var node = this.o4r().d4l_1.x4j_1;
      while (!(node == null)) {
        $l$block: {
          // Inline function 'androidx.compose.ui.node.NodeCoordinator.<get-parentData>.<anonymous>' call
          var node_0 = node;
          // Inline function 'androidx.compose.ui.Node.isKind' call
          // Inline function 'androidx.compose.ui.node.Nodes.ParentData' call
          var kind = _NodeKind___init__impl__ojsprp(64);
          if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind)) === 0)) {
            // Inline function 'androidx.compose.ui.node.dispatchForKind' call
            // Inline function 'androidx.compose.ui.node.Nodes.ParentData' call
            var kind_0 = _NodeKind___init__impl__ojsprp(64);
            var stack = null;
            var node_1 = node_0;
            $l$loop: while (!(node_1 == null)) {
              if (!(node_1 == null) ? isInterface(node_1, ParentDataModifierNode) : false) {
                // Inline function 'androidx.compose.ui.node.NodeCoordinator.<get-parentData>.<anonymous>.<anonymous>' call
                // Inline function 'kotlin.with' call
                // Inline function 'kotlin.contracts.contract' call
                // Inline function 'androidx.compose.ui.node.NodeCoordinator.<get-parentData>.<anonymous>.<anonymous>.<anonymous>' call
                data = node_1.l5a(this.o4r().w4k_1, data);
              } else {
                var tmp_0;
                // Inline function 'androidx.compose.ui.Node.isKind' call
                if (!((node_1.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_0)) === 0)) {
                  tmp_0 = node_1 instanceof DelegatingNode;
                } else {
                  tmp_0 = false;
                }
                if (tmp_0) {
                  var count = 0;
                  // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                  var node_2 = node_1.b4m_1;
                  while (!(node_2 == null)) {
                    // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                    var next = node_2;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(kind_0)) === 0)) {
                      count = count + 1 | 0;
                      if (count === 1) {
                        node_1 = next;
                      } else {
                        var tmp1_elvis_lhs = stack;
                        var tmp_1;
                        if (tmp1_elvis_lhs == null) {
                          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                          // Inline function 'kotlin.arrayOfNulls' call
                          var tmp$ret$8 = fillArrayVal(Array(16), null);
                          tmp_1 = new MutableVector(tmp$ret$8, 0);
                        } else {
                          tmp_1 = tmp1_elvis_lhs;
                        }
                        stack = tmp_1;
                        var theNode = node_1;
                        if (!(theNode == null)) {
                          var tmp2_safe_receiver = stack;
                          if (tmp2_safe_receiver == null)
                            null;
                          else
                            tmp2_safe_receiver.q1q(theNode);
                          node_1 = null;
                        }
                        var tmp3_safe_receiver = stack;
                        if (tmp3_safe_receiver == null)
                          null;
                        else
                          tmp3_safe_receiver.q1q(next);
                      }
                    }
                    node_2 = node_2.u4i_1;
                  }
                  if (count === 1) {
                    continue $l$loop;
                  }
                }
              }
              node_1 = pop$accessor$hxafa1(stack);
            }
          }
          if (node_0 === thisNode) {
            break $l$block;
          }
        }
        node = node.t4i_1;
      }
      return data;
    }
    return null;
  };
  protoOf(NodeCoordinator).j59 = function () {
    this.o4r().e4l_1.j59();
  };
  protoOf(NodeCoordinator).q58 = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.r4r()) {
      // Inline function 'androidx.compose.ui.node.NodeCoordinator.<get-parentLayoutCoordinates>.<anonymous>' call
      var message = 'LayoutCoordinate operations are only valid when isAttached is true';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.j59();
    return this.o4r().h59().x4q_1;
  };
  protoOf(NodeCoordinator).q5n = function () {
    var tmp0_elvis_lhs = this.i4r_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = new MutableRect(0.0, 0.0, 0.0, 0.0);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.node.NodeCoordinator.<get-rectCache>.<anonymous>' call
      this.i4r_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(NodeCoordinator).a5n = function () {
    // Inline function 'androidx.compose.ui.node.Nodes.LayoutAware' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(128);
    if (hasNode(this, tmp$ret$0)) {
      $l$block_2: {
        // Inline function 'androidx.compose.runtime.snapshots.Companion.withoutReadObservation' call
        // Inline function 'kotlin.contracts.contract' call
        var snapshot = Companion_instance_0.a2m();
        try {
          $l$block_1: {
            // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
            var previous = snapshot.y22();
            try {
              // Inline function 'androidx.compose.ui.node.Nodes.LayoutAware' call
              var type = _NodeKind___init__impl__ojsprp(128);
              $l$block_0: {
                // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes' call
                var mask = _NodeKind___get_mask__impl__1uopb6(type);
                var includeTail = get_includeSelfInTraversal(type);
                var tmp;
                if (includeTail) {
                  tmp = this.e5j();
                } else {
                  var tmp0_elvis_lhs = this.e5j().t4i_1;
                  var tmp_0;
                  if (tmp0_elvis_lhs == null) {
                    break $l$block_0;
                  } else {
                    tmp_0 = tmp0_elvis_lhs;
                  }
                  tmp = tmp_0;
                }
                var stopNode = tmp;
                var node = headNode(this, includeTail);
                $l$loop_0: while (!(node == null)) {
                  if ((node.s4i_1 & mask) === 0) {
                    break $l$block_0;
                  }
                  if (!((node.r4i_1 & mask) === 0)) {
                    // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes.<anonymous>' call
                    // Inline function 'androidx.compose.ui.node.dispatchForKind' call
                    var stack = null;
                    var node_0 = node;
                    $l$loop: while (!(node_0 == null)) {
                      if (!(node_0 == null) ? isInterface(node_0, LayoutAwareModifierNode) : false) {
                        // Inline function 'androidx.compose.ui.node.NodeCoordinator.onMeasured.<anonymous>.<anonymous>' call
                        node_0.k5a(this.w4u_1);
                      } else {
                        var tmp_1;
                        // Inline function 'androidx.compose.ui.Node.isKind' call
                        if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                          tmp_1 = node_0 instanceof DelegatingNode;
                        } else {
                          tmp_1 = false;
                        }
                        if (tmp_1) {
                          var count = 0;
                          // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                          var node_1 = node_0.b4m_1;
                          while (!(node_1 == null)) {
                            // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                            var next = node_1;
                            // Inline function 'androidx.compose.ui.Node.isKind' call
                            if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                              count = count + 1 | 0;
                              if (count === 1) {
                                node_0 = next;
                              } else {
                                var tmp1_elvis_lhs = stack;
                                var tmp_2;
                                if (tmp1_elvis_lhs == null) {
                                  // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                                  // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                                  // Inline function 'kotlin.arrayOfNulls' call
                                  var tmp$ret$5 = fillArrayVal(Array(16), null);
                                  tmp_2 = new MutableVector(tmp$ret$5, 0);
                                } else {
                                  tmp_2 = tmp1_elvis_lhs;
                                }
                                stack = tmp_2;
                                var theNode = node_0;
                                if (!(theNode == null)) {
                                  var tmp2_safe_receiver = stack;
                                  if (tmp2_safe_receiver == null)
                                    null;
                                  else
                                    tmp2_safe_receiver.q1q(theNode);
                                  node_0 = null;
                                }
                                var tmp3_safe_receiver = stack;
                                if (tmp3_safe_receiver == null)
                                  null;
                                else
                                  tmp3_safe_receiver.q1q(next);
                              }
                            }
                            node_1 = node_1.u4i_1;
                          }
                          if (count === 1) {
                            continue $l$loop;
                          }
                        }
                      }
                      node_0 = pop$accessor$hxafa1(stack);
                    }
                  }
                  if (node === stopNode)
                    break $l$loop_0;
                  node = node.u4i_1;
                }
              }
              break $l$block_1;
            }finally {
              snapshot.z22(previous);
            }
          }
          break $l$block_2;
        }finally {
          snapshot.ss();
        }
      }
    }
  };
  protoOf(NodeCoordinator).e58 = function (position, zIndex, layerBlock) {
    placeSelf_0(this, position, zIndex, layerBlock);
  };
  protoOf(NodeCoordinator).r5n = function (position, zIndex, layerBlock) {
    // Inline function 'androidx.compose.ui.unit.IntOffset.plus' call
    var other = this.y4u_1;
    var tmp$ret$0 = IntOffset(_IntOffset___get_x__impl__qiqr5o(position) + _IntOffset___get_x__impl__qiqr5o(other) | 0, _IntOffset___get_y__impl__2avpwj(position) + _IntOffset___get_y__impl__2avpwj(other) | 0);
    placeSelf_0(this, tmp$ret$0, zIndex, layerBlock);
  };
  protoOf(NodeCoordinator).e5n = function (canvas) {
    var layer = this.n4r_1;
    if (!(layer == null)) {
      layer.m5y(canvas);
    } else {
      var x = _IntOffset___get_x__impl__qiqr5o(this.m59());
      var y = _IntOffset___get_y__impl__2avpwj(this.m59());
      canvas.a3j(x, y);
      drawContainedDrawModifiers(this, canvas);
      canvas.a3j(-x, -y);
    }
  };
  protoOf(NodeCoordinator).c5n = function (canvas) {
    var tmp0_safe_receiver = this.w4q_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.e5n(canvas);
    }
  };
  protoOf(NodeCoordinator).b5n = function () {
    // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes' call
    // Inline function 'androidx.compose.ui.node.Nodes.LayoutAware' call
    var type = _NodeKind___init__impl__ojsprp(128);
    $l$block_0: {
      // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes' call
      var mask = _NodeKind___get_mask__impl__1uopb6(type);
      var includeTail = get_includeSelfInTraversal(type);
      var tmp;
      if (includeTail) {
        tmp = this.e5j();
      } else {
        var tmp0_elvis_lhs = this.e5j().t4i_1;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          break $l$block_0;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp = tmp_0;
      }
      var stopNode = tmp;
      var node = headNode(this, includeTail);
      $l$loop_0: while (!(node == null)) {
        if ((node.s4i_1 & mask) === 0) {
          break $l$block_0;
        }
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.NodeCoordinator.visitNodes.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop: while (!(node_0 == null)) {
            if (!(node_0 == null) ? isInterface(node_0, LayoutAwareModifierNode) : false) {
              // Inline function 'androidx.compose.ui.node.NodeCoordinator.onPlaced.<anonymous>' call
              node_0.j5a(this);
            } else {
              var tmp_1;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp_1 = node_0 instanceof DelegatingNode;
              } else {
                tmp_1 = false;
              }
              if (tmp_1) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_2;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$4 = fillArrayVal(Array(16), null);
                        tmp_2 = new MutableVector(tmp$ret$4, 0);
                      } else {
                        tmp_2 = tmp1_elvis_lhs;
                      }
                      stack = tmp_2;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
        }
        if (node === stopNode)
          break $l$loop_0;
        node = node.u4i_1;
      }
    }
  };
  protoOf(NodeCoordinator).r4u = function (layerBlock, forceUpdateLayerParameters) {
    var layoutNode = this.o4r();
    var updateParameters = ((forceUpdateLayerParameters ? true : !(this.a4r_1 === layerBlock)) ? true : !equals(this.b4r_1, layoutNode.w4k_1)) ? true : !this.c4r_1.equals(layoutNode.x4k_1);
    this.a4r_1 = layerBlock;
    this.b4r_1 = layoutNode.w4k_1;
    this.c4r_1 = layoutNode.x4k_1;
    if (layoutNode.r4r() ? !(layerBlock == null) : false) {
      if (this.n4r_1 == null) {
        var tmp = this;
        // Inline function 'kotlin.apply' call
        var this_0 = requireOwner_0(layoutNode).o5y(this.k4r_1, this.l4r_1);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.node.NodeCoordinator.updateLayerBlock.<anonymous>' call
        this_0.l5y(this.w4u_1);
        this_0.g5y(this.m59());
        tmp.n4r_1 = this_0;
        updateLayerParameters$default(this);
        layoutNode.h4l_1 = true;
        this.l4r_1();
      } else if (updateParameters) {
        updateLayerParameters$default(this);
      }
    } else {
      var tmp0_safe_receiver = this.n4r_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_safe_receiver.n5y();
        layoutNode.h4l_1 = true;
        this.l4r_1();
        var tmp_0;
        if (this.r4r()) {
          var tmp0_safe_receiver_0 = layoutNode.n4k_1;
          if (tmp0_safe_receiver_0 == null)
            null;
          else {
            tmp0_safe_receiver_0.h5y(layoutNode);
          }
          tmp_0 = Unit_instance;
        }
      }
      this.n4r_1 = null;
      this.m4r_1 = false;
    }
  };
  protoOf(NodeCoordinator).s5n = function (layerBlock, forceUpdateLayerParameters, $super) {
    forceUpdateLayerParameters = forceUpdateLayerParameters === VOID ? false : forceUpdateLayerParameters;
    var tmp;
    if ($super === VOID) {
      this.r4u(layerBlock, forceUpdateLayerParameters);
      tmp = Unit_instance;
    } else {
      tmp = $super.r4u.call(this, layerBlock, forceUpdateLayerParameters);
    }
    return tmp;
  };
  protoOf(NodeCoordinator).j5h = function () {
    return (!(this.n4r_1 == null) ? !this.y4q_1 : false) ? this.o4r().r4r() : false;
  };
  protoOf(NodeCoordinator).i5n = function () {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.NodeCoordinator.<get-minimumTouchTargetSize>.<anonymous>' call
    return this.b4r_1.n2x(this.o4r().y4k_1.u56());
  };
  protoOf(NodeCoordinator).t5n = function (hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer) {
    var head = this.o5n(hitTestSource.d5y());
    if (!this.k5n(pointerPosition)) {
      if (isTouchEvent) {
        var distanceFromEdge = this.j5n(pointerPosition, this.i5n());
        if (isFinite(distanceFromEdge) ? hitTestResult.l5k(distanceFromEdge, false) : false) {
          hitNear(head, this, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, false, distanceFromEdge);
        }
      }
    } else if (head == null) {
      this.h5n(hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer);
    } else if (this.z5n(pointerPosition)) {
      hit(head, this, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer);
    } else {
      var tmp;
      if (!isTouchEvent) {
        tmp = Infinity;
      } else {
        tmp = this.j5n(pointerPosition, this.i5n());
      }
      var distanceFromEdge_0 = tmp;
      if (isFinite(distanceFromEdge_0) ? hitTestResult.l5k(distanceFromEdge_0, isInLayer) : false) {
        hitNear(head, this, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer, distanceFromEdge_0);
      } else {
        speculativeHit(head, this, hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer, distanceFromEdge_0);
      }
    }
  };
  protoOf(NodeCoordinator).h5n = function (hitTestSource, pointerPosition, hitTestResult, isTouchEvent, isInLayer) {
    var wrapped = this.w4q_1;
    if (!(wrapped == null)) {
      var positionInWrapped = wrapped.v5n(pointerPosition);
      wrapped.t5n(hitTestSource, positionInWrapped, hitTestResult, isTouchEvent, isInLayer);
    }
  };
  protoOf(NodeCoordinator).x4z = function (sourceCoordinates, relativeToSource) {
    if (sourceCoordinates instanceof LookaheadLayoutCoordinates) {
      return Offset__unaryMinus_impl_ssu2iv(sourceCoordinates.x4z(this, Offset__unaryMinus_impl_ssu2iv(relativeToSource)));
    }
    var nodeCoordinator = toCoordinator(sourceCoordinates, this);
    nodeCoordinator.j59();
    var commonAncestor = this.k59(nodeCoordinator);
    var position = relativeToSource;
    var coordinator = nodeCoordinator;
    while (!(coordinator === commonAncestor)) {
      position = coordinator.u5n(position);
      coordinator = ensureNotNull(coordinator.x4q_1);
    }
    return ancestorToLocal(this, commonAncestor, position);
  };
  protoOf(NodeCoordinator).q4r = function (sourceCoordinates, clipBounds) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.r4r()) {
      // Inline function 'androidx.compose.ui.node.NodeCoordinator.localBoundingBoxOf.<anonymous>' call
      var message = 'LayoutCoordinate operations are only valid when isAttached is true';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!sourceCoordinates.r4r()) {
      // Inline function 'androidx.compose.ui.node.NodeCoordinator.localBoundingBoxOf.<anonymous>' call
      var message_0 = 'LayoutCoordinates ' + sourceCoordinates + ' is not attached!';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    var srcCoordinator = toCoordinator(sourceCoordinates, this);
    srcCoordinator.j59();
    var commonAncestor = this.k59(srcCoordinator);
    var bounds = this.q5n();
    bounds.q2v_1 = 0.0;
    bounds.r2v_1 = 0.0;
    bounds.s2v_1 = _IntSize___get_width__impl__d9yl4o(sourceCoordinates.d2y());
    bounds.t2v_1 = _IntSize___get_height__impl__prv63b(sourceCoordinates.d2y());
    var coordinator = srcCoordinator;
    while (!(coordinator === commonAncestor)) {
      coordinator.y5n(bounds, clipBounds);
      if (bounds.o1o()) {
        return Companion_getInstance().z2v_1;
      }
      coordinator = ensureNotNull(coordinator.x4q_1);
    }
    ancestorToLocal_0(this, commonAncestor, bounds, clipBounds);
    return toRect(bounds);
  };
  protoOf(NodeCoordinator).u5n = function (position) {
    var layer = this.n4r_1;
    var tmp1_elvis_lhs = layer == null ? null : layer.p5y(position, false);
    var tmp;
    var tmp_0 = tmp1_elvis_lhs;
    if ((tmp_0 == null ? null : new Offset(tmp_0)) == null) {
      tmp = position;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var targetPosition = tmp;
    return plus(targetPosition, this.m59());
  };
  protoOf(NodeCoordinator).v5n = function (position) {
    var relativeToPosition = minus(position, this.m59());
    var layer = this.n4r_1;
    var tmp1_elvis_lhs = layer == null ? null : layer.p5y(relativeToPosition, true);
    var tmp;
    var tmp_0 = tmp1_elvis_lhs;
    if ((tmp_0 == null ? null : new Offset(tmp_0)) == null) {
      tmp = relativeToPosition;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  protoOf(NodeCoordinator).f5n = function (canvas, paint) {
    var rect = new Rect(0.5, 0.5, _IntSize___get_width__impl__d9yl4o(this.w4u_1) - 0.5, _IntSize___get_height__impl__prv63b(this.w4u_1) - 0.5);
    canvas.j3j(rect, paint);
  };
  protoOf(NodeCoordinator).w5n = function () {
    this.r4u(this.a4r_1, true);
    var tmp0_safe_receiver = this.n4r_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.n1y();
    }
  };
  protoOf(NodeCoordinator).t1g = function () {
    this.y4q_1 = true;
    this.l4r_1();
    if (!(this.n4r_1 == null)) {
      this.s5n(null);
    }
  };
  protoOf(NodeCoordinator).x5n = function (bounds, clipBounds, clipToMinimumTouchTargetSize) {
    var layer = this.n4r_1;
    if (!(layer == null)) {
      if (this.z4q_1) {
        if (clipToMinimumTouchTargetSize) {
          var minTouch = this.i5n();
          var horz = _Size___get_width__impl__58y75t(minTouch) / 2.0;
          var vert = _Size___get_height__impl__a04p02(minTouch) / 2.0;
          bounds.u2v(-horz, -vert, _IntSize___get_width__impl__d9yl4o(this.d2y()) + horz, _IntSize___get_height__impl__prv63b(this.d2y()) + vert);
        } else if (clipBounds) {
          bounds.u2v(0.0, 0.0, _IntSize___get_width__impl__d9yl4o(this.d2y()), _IntSize___get_height__impl__prv63b(this.d2y()));
        }
        if (bounds.o1o()) {
          return Unit_instance;
        }
      }
      layer.k5y(bounds, false);
    }
    var x = _IntOffset___get_x__impl__qiqr5o(this.m59());
    bounds.q2v_1 = bounds.q2v_1 + x;
    bounds.s2v_1 = bounds.s2v_1 + x;
    var y = _IntOffset___get_y__impl__2avpwj(this.m59());
    bounds.r2v_1 = bounds.r2v_1 + y;
    bounds.t2v_1 = bounds.t2v_1 + y;
  };
  protoOf(NodeCoordinator).y5n = function (bounds, clipBounds, clipToMinimumTouchTargetSize, $super) {
    clipToMinimumTouchTargetSize = clipToMinimumTouchTargetSize === VOID ? false : clipToMinimumTouchTargetSize;
    var tmp;
    if ($super === VOID) {
      this.x5n(bounds, clipBounds, clipToMinimumTouchTargetSize);
      tmp = Unit_instance;
    } else {
      tmp = $super.x5n.call(this, bounds, clipBounds, clipToMinimumTouchTargetSize);
    }
    return tmp;
  };
  protoOf(NodeCoordinator).k5n = function (pointerPosition) {
    if (!get_isFinite(pointerPosition)) {
      return false;
    }
    var layer = this.n4r_1;
    return (layer == null ? true : !this.z4q_1) ? true : layer.q5y(pointerPosition);
  };
  protoOf(NodeCoordinator).z5n = function (pointerPosition) {
    var x = _Offset___get_x__impl__xvi35n(pointerPosition);
    var y = _Offset___get_y__impl__8bzhra(pointerPosition);
    return ((x >= 0.0 ? y >= 0.0 : false) ? x < this.m5a() : false) ? y < this.n5a() : false;
  };
  protoOf(NodeCoordinator).y5j = function () {
    var layer = this.n4r_1;
    if (!(layer == null)) {
      layer.n1y();
    } else {
      var tmp0_safe_receiver = this.x4q_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.y5j();
      }
    }
  };
  protoOf(NodeCoordinator).p5g = function () {
    var tmp0_safe_receiver = this.n4r_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.n1y();
    }
  };
  protoOf(NodeCoordinator).k59 = function (other) {
    var ancestor1 = other.o4r();
    var ancestor2 = this.o4r();
    if (ancestor1 === ancestor2) {
      var otherNode = other.e5j();
      // Inline function 'androidx.compose.ui.node.visitLocalAncestors' call
      var this_0 = this.e5j();
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var tmp$ret$0 = _NodeKind___init__impl__ojsprp(2);
      var mask = _NodeKind___get_mask__impl__1uopb6(tmp$ret$0);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this_0.c4j().b4j_1) {
        // Inline function 'androidx.compose.ui.node.visitLocalAncestors.<anonymous>' call
        var message = 'visitLocalAncestors called on an unattached node';
        throw IllegalStateException_init_$Create$(toString(message));
      }
      var next = this_0.c4j().t4i_1;
      while (!(next == null)) {
        if (!((next.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.NodeCoordinator.findCommonAncestor.<anonymous>' call
          if (next === otherNode)
            return other;
        }
        next = next.t4i_1;
      }
      return this;
    }
    while (ancestor1.p4k_1 > ancestor2.p4k_1) {
      ancestor1 = ensureNotNull(ancestor1.pp());
    }
    while (ancestor2.p4k_1 > ancestor1.p4k_1) {
      ancestor2 = ensureNotNull(ancestor2.pp());
    }
    while (!(ancestor1 === ancestor2)) {
      var parent1 = ancestor1.pp();
      var parent2 = ancestor2.pp();
      if (parent1 == null ? true : parent2 == null) {
        throw IllegalArgumentException_init_$Create$('layouts are not part of the same hierarchy');
      }
      ancestor1 = parent1;
      ancestor2 = parent2;
    }
    return ancestor2 === this.o4r() ? this : ancestor1 === other.o4r() ? other : ancestor1.t5p();
  };
  protoOf(NodeCoordinator).n5n = function () {
    // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(16);
    var tmp0_elvis_lhs = headNode(this, get_includeSelfInTraversal(tmp$ret$0));
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var start = tmp;
    if (start.b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitLocalDescendants' call
      // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
      var type = _NodeKind___init__impl__ojsprp(16);
      $l$block: {
        // Inline function 'androidx.compose.ui.node.visitLocalDescendants' call
        var mask = _NodeKind___get_mask__impl__1uopb6(type);
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!start.c4j().b4j_1) {
          // Inline function 'androidx.compose.ui.node.visitLocalDescendants.<anonymous>' call
          var message = 'visitLocalDescendants called on an unattached node';
          throw IllegalStateException_init_$Create$(toString(message));
        }
        var self_0 = start.c4j();
        if ((self_0.s4i_1 & mask) === 0) {
          break $l$block;
        }
        var next = self_0.u4i_1;
        while (!(next == null)) {
          if (!((next.r4i_1 & mask) === 0)) {
            // Inline function 'androidx.compose.ui.node.visitLocalDescendants.<anonymous>' call
            // Inline function 'androidx.compose.ui.node.dispatchForKind' call
            var stack = null;
            var node = next;
            $l$loop: while (!(node == null)) {
              if (!(node == null) ? isInterface(node, PointerInputModifierNode) : false) {
                // Inline function 'androidx.compose.ui.node.NodeCoordinator.shouldSharePointerInputWithSiblings.<anonymous>' call
                if (node.r52())
                  return true;
              } else {
                var tmp_0;
                // Inline function 'androidx.compose.ui.Node.isKind' call
                if (!((node.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                  tmp_0 = node instanceof DelegatingNode;
                } else {
                  tmp_0 = false;
                }
                if (tmp_0) {
                  var count = 0;
                  // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                  var node_0 = node.b4m_1;
                  while (!(node_0 == null)) {
                    // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                    var next_0 = node_0;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((next_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      count = count + 1 | 0;
                      if (count === 1) {
                        node = next_0;
                      } else {
                        var tmp1_elvis_lhs = stack;
                        var tmp_1;
                        if (tmp1_elvis_lhs == null) {
                          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                          // Inline function 'kotlin.arrayOfNulls' call
                          var tmp$ret$6 = fillArrayVal(Array(16), null);
                          tmp_1 = new MutableVector(tmp$ret$6, 0);
                        } else {
                          tmp_1 = tmp1_elvis_lhs;
                        }
                        stack = tmp_1;
                        var theNode = node;
                        if (!(theNode == null)) {
                          var tmp2_safe_receiver = stack;
                          if (tmp2_safe_receiver == null)
                            null;
                          else
                            tmp2_safe_receiver.q1q(theNode);
                          node = null;
                        }
                        var tmp3_safe_receiver = stack;
                        if (tmp3_safe_receiver == null)
                          null;
                        else
                          tmp3_safe_receiver.q1q(next_0);
                      }
                    }
                    node_0 = node_0.u4i_1;
                  }
                  if (count === 1) {
                    continue $l$loop;
                  }
                }
              }
              node = pop$accessor$hxafa1(stack);
            }
          }
          next = next.u4i_1;
        }
      }
    }
    return false;
  };
  protoOf(NodeCoordinator).a5o = function (minimumTouchTargetSize) {
    var widthDiff = _Size___get_width__impl__58y75t(minimumTouchTargetSize) - this.m5a();
    var heightDiff = _Size___get_height__impl__a04p02(minimumTouchTargetSize) - this.n5a();
    // Inline function 'kotlin.comparisons.maxOf' call
    var b = widthDiff / 2.0;
    var tmp = Math.max(0.0, b);
    // Inline function 'kotlin.comparisons.maxOf' call
    var b_0 = heightDiff / 2.0;
    var tmp$ret$1 = Math.max(0.0, b_0);
    return Size(tmp, tmp$ret$1);
  };
  protoOf(NodeCoordinator).j5n = function (pointerPosition, minimumTouchTargetSize) {
    if (this.m5a() >= _Size___get_width__impl__58y75t(minimumTouchTargetSize) ? this.n5a() >= _Size___get_height__impl__a04p02(minimumTouchTargetSize) : false) {
      return Infinity;
    }
    var tmp0_container = this.a5o(minimumTouchTargetSize);
    // Inline function 'androidx.compose.ui.geometry.Size.component1' call
    var width = _Size___get_width__impl__58y75t(tmp0_container);
    // Inline function 'androidx.compose.ui.geometry.Size.component2' call
    var height = _Size___get_height__impl__a04p02(tmp0_container);
    var offsetFromEdge_0 = offsetFromEdge(this, pointerPosition);
    var tmp;
    if (((width > 0.0 ? true : height > 0.0) ? _Offset___get_x__impl__xvi35n(offsetFromEdge_0) <= width : false) ? _Offset___get_y__impl__8bzhra(offsetFromEdge_0) <= height : false) {
      tmp = Offset__getDistanceSquared_impl_97mhi6(offsetFromEdge_0);
    } else {
      tmp = Infinity;
    }
    return tmp;
  };
  function LayerPositionalProperties() {
    this.r5x_1 = 1.0;
    this.s5x_1 = 1.0;
    this.t5x_1 = 0.0;
    this.u5x_1 = 0.0;
    this.v5x_1 = 0.0;
    this.w5x_1 = 0.0;
    this.x5x_1 = 0.0;
    this.y5x_1 = get_DefaultCameraDistance();
    this.z5x_1 = Companion_getInstance_17().a4s_1;
  }
  protoOf(LayerPositionalProperties).a5y = function (other) {
    this.r5x_1 = other.r5x_1;
    this.s5x_1 = other.s5x_1;
    this.t5x_1 = other.t5x_1;
    this.u5x_1 = other.u5x_1;
    this.v5x_1 = other.v5x_1;
    this.w5x_1 = other.w5x_1;
    this.x5x_1 = other.x5x_1;
    this.y5x_1 = other.y5x_1;
    this.z5x_1 = other.z5x_1;
  };
  protoOf(LayerPositionalProperties).i5y = function (scope) {
    this.r5x_1 = scope.a4v();
    this.s5x_1 = scope.b4v();
    this.t5x_1 = scope.c4v();
    this.u5x_1 = scope.d4v();
    this.v5x_1 = scope.e4v();
    this.w5x_1 = scope.f4v();
    this.x5x_1 = scope.g4v();
    this.y5x_1 = scope.h4v();
    this.z5x_1 = scope.i4v();
  };
  protoOf(LayerPositionalProperties).b5y = function (other) {
    return (((((((this.r5x_1 === other.r5x_1 ? this.s5x_1 === other.s5x_1 : false) ? this.t5x_1 === other.t5x_1 : false) ? this.u5x_1 === other.u5x_1 : false) ? this.v5x_1 === other.v5x_1 : false) ? this.w5x_1 === other.w5x_1 : false) ? this.x5x_1 === other.x5x_1 : false) ? this.y5x_1 === other.y5x_1 : false) ? equals(this.z5x_1, other.z5x_1) : false;
  };
  function nextUntil(_this__u8e3s4, type, stopType) {
    var tmp0_elvis_lhs = _this__u8e3s4.c4j().u4i_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var child = tmp;
    if ((child.s4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)
      return null;
    var next = child;
    while (!(next == null)) {
      var kindSet = next.r4i_1;
      if (!((kindSet & _NodeKind___get_mask__impl__1uopb6(stopType)) === 0))
        return null;
      if (!((kindSet & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
        return next;
      }
      next = next.u4i_1;
    }
    return null;
  }
  function _NodeKind___init__impl__ojsprp(mask) {
    return mask;
  }
  function _NodeKind___get_mask__impl__1uopb6($this) {
    return $this;
  }
  function Nodes() {
  }
  var Nodes_instance;
  function Nodes_getInstance() {
    return Nodes_instance;
  }
  function calculateNodeKindSetFrom(element) {
    // Inline function 'androidx.compose.ui.node.Nodes.Any' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(1);
    var mask = _NodeKind___get_mask__impl__1uopb6(tmp$ret$0);
    if (isInterface(element, LayoutModifier)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_0 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var other = _NodeKind___init__impl__ojsprp(2);
      mask = this_0 | _NodeKind___get_mask__impl__1uopb6(other);
    }
    if (isInterface(element, DrawModifier)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_1 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
      var other_0 = _NodeKind___init__impl__ojsprp(4);
      mask = this_1 | _NodeKind___get_mask__impl__1uopb6(other_0);
    }
    if (isInterface(element, SemanticsModifier)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_2 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
      var other_1 = _NodeKind___init__impl__ojsprp(8);
      mask = this_2 | _NodeKind___get_mask__impl__1uopb6(other_1);
    }
    if (isInterface(element, PointerInputModifier)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_3 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
      var other_2 = _NodeKind___init__impl__ojsprp(16);
      mask = this_3 | _NodeKind___get_mask__impl__1uopb6(other_2);
    }
    var tmp;
    if (isInterface(element, ModifierLocalConsumer)) {
      tmp = true;
    } else {
      tmp = isInterface(element, ModifierLocalProvider);
    }
    if (tmp) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_4 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.Locals' call
      var other_3 = _NodeKind___init__impl__ojsprp(32);
      mask = this_4 | _NodeKind___get_mask__impl__1uopb6(other_3);
    }
    if (isInterface(element, FocusEventModifier)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_5 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.FocusEvent' call
      var other_4 = _NodeKind___init__impl__ojsprp(4096);
      mask = this_5 | _NodeKind___get_mask__impl__1uopb6(other_4);
    }
    if (isInterface(element, FocusOrderModifier)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_6 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.FocusProperties' call
      var other_5 = _NodeKind___init__impl__ojsprp(2048);
      mask = this_6 | _NodeKind___get_mask__impl__1uopb6(other_5);
    }
    if (isInterface(element, OnGloballyPositionedModifier)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_7 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.GlobalPositionAware' call
      var other_6 = _NodeKind___init__impl__ojsprp(256);
      mask = this_7 | _NodeKind___get_mask__impl__1uopb6(other_6);
    }
    if (isInterface(element, ParentDataModifier)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_8 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.ParentData' call
      var other_7 = _NodeKind___init__impl__ojsprp(64);
      mask = this_8 | _NodeKind___get_mask__impl__1uopb6(other_7);
    }
    var tmp_0;
    if (isInterface(element, OnPlacedModifier)) {
      tmp_0 = true;
    } else {
      tmp_0 = isInterface(element, OnRemeasuredModifier);
    }
    if (tmp_0) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_9 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.LayoutAware' call
      var other_8 = _NodeKind___init__impl__ojsprp(128);
      mask = this_9 | _NodeKind___get_mask__impl__1uopb6(other_8);
    }
    return mask;
  }
  function get_includeSelfInTraversal(_this__u8e3s4) {
    var tmp = _NodeKind___get_mask__impl__1uopb6(_this__u8e3s4);
    // Inline function 'androidx.compose.ui.node.Nodes.LayoutAware' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(128);
    return !((tmp & _NodeKind___get_mask__impl__1uopb6(tmp$ret$0)) === 0);
  }
  function calculateNodeKindSetFrom_0(node) {
    if (!(node.r4i_1 === 0))
      return node.r4i_1;
    // Inline function 'androidx.compose.ui.node.Nodes.Any' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(1);
    var mask = _NodeKind___get_mask__impl__1uopb6(tmp$ret$0);
    if (isInterface(node, LayoutModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_0 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
      var other = _NodeKind___init__impl__ojsprp(2);
      mask = this_0 | _NodeKind___get_mask__impl__1uopb6(other);
    }
    if (isInterface(node, DrawModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_1 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
      var other_0 = _NodeKind___init__impl__ojsprp(4);
      mask = this_1 | _NodeKind___get_mask__impl__1uopb6(other_0);
    }
    if (isInterface(node, SemanticsModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_2 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
      var other_1 = _NodeKind___init__impl__ojsprp(8);
      mask = this_2 | _NodeKind___get_mask__impl__1uopb6(other_1);
    }
    if (isInterface(node, PointerInputModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_3 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
      var other_2 = _NodeKind___init__impl__ojsprp(16);
      mask = this_3 | _NodeKind___get_mask__impl__1uopb6(other_2);
    }
    if (isInterface(node, ModifierLocalModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_4 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.Locals' call
      var other_3 = _NodeKind___init__impl__ojsprp(32);
      mask = this_4 | _NodeKind___get_mask__impl__1uopb6(other_3);
    }
    if (isInterface(node, ParentDataModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_5 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.ParentData' call
      var other_4 = _NodeKind___init__impl__ojsprp(64);
      mask = this_5 | _NodeKind___get_mask__impl__1uopb6(other_4);
    }
    if (isInterface(node, LayoutAwareModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_6 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.LayoutAware' call
      var other_5 = _NodeKind___init__impl__ojsprp(128);
      mask = this_6 | _NodeKind___get_mask__impl__1uopb6(other_5);
    }
    if (isInterface(node, GlobalPositionAwareModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_7 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.GlobalPositionAware' call
      var other_6 = _NodeKind___init__impl__ojsprp(256);
      mask = this_7 | _NodeKind___get_mask__impl__1uopb6(other_6);
    }
    if (node instanceof IntermediateLayoutModifierNode) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_8 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.IntermediateMeasure' call
      var other_7 = _NodeKind___init__impl__ojsprp(512);
      mask = this_8 | _NodeKind___get_mask__impl__1uopb6(other_7);
    }
    if (node instanceof FocusTargetNode) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_9 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
      var other_8 = _NodeKind___init__impl__ojsprp(1024);
      mask = this_9 | _NodeKind___get_mask__impl__1uopb6(other_8);
    }
    if (isInterface(node, FocusPropertiesModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_10 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.FocusProperties' call
      var other_9 = _NodeKind___init__impl__ojsprp(2048);
      mask = this_10 | _NodeKind___get_mask__impl__1uopb6(other_9);
    }
    if (isInterface(node, FocusEventModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_11 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.FocusEvent' call
      var other_10 = _NodeKind___init__impl__ojsprp(4096);
      mask = this_11 | _NodeKind___get_mask__impl__1uopb6(other_10);
    }
    if (isInterface(node, KeyInputModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_12 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.KeyInput' call
      var other_11 = _NodeKind___init__impl__ojsprp(8192);
      mask = this_12 | _NodeKind___get_mask__impl__1uopb6(other_11);
    }
    if (isInterface(node, RotaryInputModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_13 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.RotaryInput' call
      var other_12 = _NodeKind___init__impl__ojsprp(16384);
      mask = this_13 | _NodeKind___get_mask__impl__1uopb6(other_12);
    }
    if (isInterface(node, CompositionLocalConsumerModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_14 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.CompositionLocalConsumer' call
      var other_13 = _NodeKind___init__impl__ojsprp(32768);
      mask = this_14 | _NodeKind___get_mask__impl__1uopb6(other_13);
    }
    if (isInterface(node, SoftKeyboardInterceptionModifierNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_15 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.SoftKeyboardKeyInput' call
      var other_14 = _NodeKind___init__impl__ojsprp(131072);
      mask = this_15 | _NodeKind___get_mask__impl__1uopb6(other_14);
    }
    if (isInterface(node, TraversableNode)) {
      // Inline function 'androidx.compose.ui.node.or' call
      var this_16 = mask;
      // Inline function 'androidx.compose.ui.node.Nodes.Traversable' call
      var other_15 = _NodeKind___init__impl__ojsprp(262144);
      mask = this_16 | _NodeKind___get_mask__impl__1uopb6(other_15);
    }
    return mask;
  }
  function calculateNodeKindSetFromIncludingDelegates(node) {
    var tmp;
    if (node instanceof DelegatingNode) {
      var mask = node.a4m_1;
      // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
      var node_0 = node.b4m_1;
      while (!(node_0 == null)) {
        // Inline function 'androidx.compose.ui.node.calculateNodeKindSetFromIncludingDelegates.<anonymous>' call
        var it = node_0;
        mask = mask | calculateNodeKindSetFromIncludingDelegates(it);
        node_0 = node_0.u4i_1;
      }
      tmp = mask;
    } else {
      tmp = calculateNodeKindSetFrom_0(node);
    }
    return tmp;
  }
  function autoInvalidateInsertedNode(node) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!node.b4j_1) {
      // Inline function 'androidx.compose.ui.node.autoInvalidateInsertedNode.<anonymous>' call
      var message = 'autoInvalidateInsertedNode called on unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    autoInvalidateNodeIncludingDelegates(node, -1, 1);
  }
  function autoInvalidateRemovedNode(node) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!node.b4j_1) {
      // Inline function 'androidx.compose.ui.node.autoInvalidateRemovedNode.<anonymous>' call
      var message = 'autoInvalidateRemovedNode called on unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    autoInvalidateNodeIncludingDelegates(node, -1, 2);
  }
  function autoInvalidateUpdatedNode(node) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!node.b4j_1) {
      // Inline function 'androidx.compose.ui.node.autoInvalidateUpdatedNode.<anonymous>' call
      var message = 'autoInvalidateUpdatedNode called on unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    autoInvalidateNodeIncludingDelegates(node, -1, 0);
  }
  function autoInvalidateNodeIncludingDelegates(node, remainingSet, phase) {
    if (node instanceof DelegatingNode) {
      autoInvalidateNodeSelf(node, node.a4m_1 & remainingSet, phase);
      var newRemaining = remainingSet & ~node.a4m_1;
      // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
      var node_0 = node.b4m_1;
      while (!(node_0 == null)) {
        // Inline function 'androidx.compose.ui.node.autoInvalidateNodeIncludingDelegates.<anonymous>' call
        var it = node_0;
        autoInvalidateNodeIncludingDelegates(it, newRemaining, phase);
        node_0 = node_0.u4i_1;
      }
    } else {
      autoInvalidateNodeSelf(node, node.r4i_1 & remainingSet, phase);
    }
  }
  function autoInvalidateNodeSelf(node, selfKindSet, phase) {
    if (phase === 0 ? !node.e4j() : false)
      return Unit_instance;
    var tmp;
    // Inline function 'androidx.compose.ui.node.contains' call
    // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
    var value = _NodeKind___init__impl__ojsprp(2);
    if (!((selfKindSet & _NodeKind___get_mask__impl__1uopb6(value)) === 0)) {
      tmp = isInterface(node, LayoutModifierNode);
    } else {
      tmp = false;
    }
    if (tmp) {
      invalidateMeasurement(node);
      if (phase === 2) {
        // Inline function 'androidx.compose.ui.node.Nodes.Layout' call
        var tmp$ret$2 = _NodeKind___init__impl__ojsprp(2);
        var coordinator = requireCoordinator(node, tmp$ret$2);
        coordinator.t1g();
      }
    }
    var tmp_0;
    // Inline function 'androidx.compose.ui.node.contains' call
    // Inline function 'androidx.compose.ui.node.Nodes.GlobalPositionAware' call
    var value_0 = _NodeKind___init__impl__ojsprp(256);
    if (!((selfKindSet & _NodeKind___get_mask__impl__1uopb6(value_0)) === 0)) {
      tmp_0 = isInterface(node, GlobalPositionAwareModifierNode);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      requireLayoutNode(node).q5g();
    }
    var tmp_1;
    // Inline function 'androidx.compose.ui.node.contains' call
    // Inline function 'androidx.compose.ui.node.Nodes.Draw' call
    var value_1 = _NodeKind___init__impl__ojsprp(4);
    if (!((selfKindSet & _NodeKind___get_mask__impl__1uopb6(value_1)) === 0)) {
      tmp_1 = isInterface(node, DrawModifierNode);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      invalidateDraw(node);
    }
    var tmp_2;
    // Inline function 'androidx.compose.ui.node.contains' call
    // Inline function 'androidx.compose.ui.node.Nodes.Semantics' call
    var value_2 = _NodeKind___init__impl__ojsprp(8);
    if (!((selfKindSet & _NodeKind___get_mask__impl__1uopb6(value_2)) === 0)) {
      tmp_2 = isInterface(node, SemanticsModifierNode);
    } else {
      tmp_2 = false;
    }
    if (tmp_2) {
      invalidateSemantics(node);
    }
    var tmp_3;
    // Inline function 'androidx.compose.ui.node.contains' call
    // Inline function 'androidx.compose.ui.node.Nodes.ParentData' call
    var value_3 = _NodeKind___init__impl__ojsprp(64);
    if (!((selfKindSet & _NodeKind___get_mask__impl__1uopb6(value_3)) === 0)) {
      tmp_3 = isInterface(node, ParentDataModifierNode);
    } else {
      tmp_3 = false;
    }
    if (tmp_3) {
      invalidateParentData(node);
    }
    var tmp_4;
    // Inline function 'androidx.compose.ui.node.contains' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var value_4 = _NodeKind___init__impl__ojsprp(1024);
    if (!((selfKindSet & _NodeKind___get_mask__impl__1uopb6(value_4)) === 0)) {
      tmp_4 = node instanceof FocusTargetNode;
    } else {
      tmp_4 = false;
    }
    if (tmp_4) {
      if (phase === 2) {
        node.m4j();
      } else {
        requireOwner(node).l4n().u4n(node);
      }
    }
    var tmp_5;
    var tmp_6;
    // Inline function 'androidx.compose.ui.node.contains' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusProperties' call
    var value_5 = _NodeKind___init__impl__ojsprp(2048);
    if (!((selfKindSet & _NodeKind___get_mask__impl__1uopb6(value_5)) === 0)) {
      tmp_6 = isInterface(node, FocusPropertiesModifierNode);
    } else {
      tmp_6 = false;
    }
    if (tmp_6) {
      tmp_5 = specifiesCanFocusProperty(node);
    } else {
      tmp_5 = false;
    }
    if (tmp_5) {
      if (phase === 2) {
        scheduleInvalidationOfAssociatedFocusTargets(node);
      } else {
        invalidateFocusProperties(node);
      }
    }
    var tmp_7;
    // Inline function 'androidx.compose.ui.node.contains' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusEvent' call
    var value_6 = _NodeKind___init__impl__ojsprp(4096);
    if (!((selfKindSet & _NodeKind___get_mask__impl__1uopb6(value_6)) === 0)) {
      tmp_7 = isInterface(node, FocusEventModifierNode);
    } else {
      tmp_7 = false;
    }
    if (tmp_7) {
      invalidateFocusEvent(node);
    }
  }
  function specifiesCanFocusProperty(_this__u8e3s4) {
    CanFocusChecker_instance.a26();
    _this__u8e3s4.d4q(CanFocusChecker_instance);
    return CanFocusChecker_instance.s5y();
  }
  function scheduleInvalidationOfAssociatedFocusTargets(_this__u8e3s4) {
    // Inline function 'androidx.compose.ui.node.visitChildren' call
    // Inline function 'androidx.compose.ui.node.Nodes.FocusTarget' call
    var type = _NodeKind___init__impl__ojsprp(1024);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
      var message = 'visitChildren called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$2 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$2, 0);
    var child = _this__u8e3s4.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
    } else {
      branches.q1q(child);
    }
    $l$loop: while (branches.pn()) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var tmp$ret$5 = branches.p1q_1 - 1 | 0;
      var branch = branches.m1(tmp$ret$5);
      if ((branch.s4i_1 & mask) === 0) {
        addLayoutNodeChildren$accessor$hxafa1(branches, branch);
        continue $l$loop;
      }
      var node = branch;
      $l$loop_1: while (!(node == null)) {
        if (!((node.r4i_1 & mask) === 0)) {
          // Inline function 'androidx.compose.ui.node.visitChildren.<anonymous>' call
          // Inline function 'androidx.compose.ui.node.dispatchForKind' call
          var stack = null;
          var node_0 = node;
          $l$loop_0: while (!(node_0 == null)) {
            if (node_0 instanceof FocusTargetNode) {
              // Inline function 'androidx.compose.ui.node.scheduleInvalidationOfAssociatedFocusTargets.<anonymous>' call
              var it = node_0;
              invalidateFocusTarget(it);
            } else {
              var tmp;
              // Inline function 'androidx.compose.ui.Node.isKind' call
              if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                tmp = node_0 instanceof DelegatingNode;
              } else {
                tmp = false;
              }
              if (tmp) {
                var count = 0;
                // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                var node_1 = node_0.b4m_1;
                while (!(node_1 == null)) {
                  // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                  var next = node_1;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    count = count + 1 | 0;
                    if (count === 1) {
                      node_0 = next;
                    } else {
                      var tmp1_elvis_lhs = stack;
                      var tmp_0;
                      if (tmp1_elvis_lhs == null) {
                        // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                        // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                        // Inline function 'kotlin.arrayOfNulls' call
                        var tmp$ret$8 = fillArrayVal(Array(16), null);
                        tmp_0 = new MutableVector(tmp$ret$8, 0);
                      } else {
                        tmp_0 = tmp1_elvis_lhs;
                      }
                      stack = tmp_0;
                      var theNode = node_0;
                      if (!(theNode == null)) {
                        var tmp2_safe_receiver = stack;
                        if (tmp2_safe_receiver == null)
                          null;
                        else
                          tmp2_safe_receiver.q1q(theNode);
                        node_0 = null;
                      }
                      var tmp3_safe_receiver = stack;
                      if (tmp3_safe_receiver == null)
                        null;
                      else
                        tmp3_safe_receiver.q1q(next);
                    }
                  }
                  node_1 = node_1.u4i_1;
                }
                if (count === 1) {
                  continue $l$loop_0;
                }
              }
            }
            node_0 = pop$accessor$hxafa1(stack);
          }
          break $l$loop_1;
        }
        node = node.u4i_1;
      }
    }
  }
  function CanFocusChecker() {
    this.r5y_1 = null;
  }
  protoOf(CanFocusChecker).j4p = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      var value = this.r5y_1;
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'androidx.compose.ui.node.CanFocusChecker.<get-canFocus>.<anonymous>' call
        var message = 'canFocus is read before it is written';
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    return tmp$ret$1;
  };
  protoOf(CanFocusChecker).s5y = function () {
    return !(this.r5y_1 == null);
  };
  protoOf(CanFocusChecker).a26 = function () {
    this.r5y_1 = null;
  };
  var CanFocusChecker_instance;
  function CanFocusChecker_getInstance() {
    return CanFocusChecker_instance;
  }
  function ObserverNodeOwnerScope$Companion$OnObserveReadsChanged$lambda(it) {
    if (it.j5h()) {
      it.t5y_1.j4q();
    }
    return Unit_instance;
  }
  function Companion_17() {
    Companion_instance_21 = this;
    var tmp = this;
    tmp.u5y_1 = ObserverNodeOwnerScope$Companion$OnObserveReadsChanged$lambda;
  }
  var Companion_instance_21;
  function Companion_getInstance_31() {
    if (Companion_instance_21 == null)
      new Companion_17();
    return Companion_instance_21;
  }
  function ObserverNodeOwnerScope(observerNode) {
    Companion_getInstance_31();
    this.t5y_1 = observerNode;
  }
  protoOf(ObserverNodeOwnerScope).j5h = function () {
    return this.t5y_1.c4j().b4j_1;
  };
  function observeReads(_this__u8e3s4, block) {
    var tmp0_elvis_lhs = _this__u8e3s4.v4i_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = new ObserverNodeOwnerScope(_this__u8e3s4);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.node.observeReads.<anonymous>' call
      _this__u8e3s4.v4i_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var target = tmp;
    requireOwner(_this__u8e3s4).u5g().d5h(target, Companion_getInstance_31().u5y_1, block);
  }
  function DepthComparator() {
  }
  protoOf(DepthComparator).u5j = function (a, b) {
    var depthDiff = compareTo(b.p4k_1, a.p4k_1);
    if (!(depthDiff === 0)) {
      return depthDiff;
    }
    return compareTo(hashCode(a), hashCode(b));
  };
  protoOf(DepthComparator).compare = function (a, b) {
    var tmp = a instanceof LayoutNode ? a : THROW_CCE();
    return this.u5j(tmp, b instanceof LayoutNode ? b : THROW_CCE());
  };
  var DepthComparator_instance;
  function DepthComparator_getInstance() {
    return DepthComparator_instance;
  }
  function dispatchHierarchy($this, layoutNode) {
    layoutNode.u5s();
    layoutNode.l4l_1 = false;
    // Inline function 'androidx.compose.ui.node.LayoutNode.forEachChild' call
    var this_0 = layoutNode.f5j();
    // Inline function 'kotlin.contracts.contract' call
    var size = this_0.p1q_1;
    var tmp;
    if (size > 0) {
      var i = 0;
      var tmp_0 = this_0.n1q_1;
      var content = isArray(tmp_0) ? tmp_0 : THROW_CCE();
      do {
        // Inline function 'androidx.compose.ui.node.OnPositionedDispatcher.dispatchHierarchy.<anonymous>' call
        var child = content[i];
        dispatchHierarchy($this, child);
        i = i + 1 | 0;
      }
       while (i < size);
      tmp = Unit_instance;
    }
  }
  function Companion_18() {
    this.v5y_1 = 16;
  }
  var Companion_instance_22;
  function Companion_getInstance_32() {
    return Companion_instance_22;
  }
  function OnPositionedDispatcher() {
    var tmp = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp.e5w_1 = new MutableVector(tmp$ret$0, 0);
    this.f5w_1 = null;
  }
  protoOf(OnPositionedDispatcher).g5w = function (node) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    this.e5w_1.q1q(node);
    node.l4l_1 = true;
  };
  protoOf(OnPositionedDispatcher).q5w = function (rootNode) {
    this.e5w_1.h1();
    // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
    this.e5w_1.q1q(rootNode);
    rootNode.l4l_1 = true;
  };
  protoOf(OnPositionedDispatcher).r5w = function () {
    this.e5w_1.c2h(DepthComparator_instance);
    var cache;
    var size = this.e5w_1.p1q_1;
    var cachedNodes = this.f5w_1;
    if (cachedNodes == null ? true : cachedNodes.length < size) {
      // Inline function 'kotlin.arrayOfNulls' call
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = this.e5w_1.p1q_1;
      var size_0 = Math.max(16, b);
      cache = fillArrayVal(Array(size_0), null);
    } else {
      cache = cachedNodes;
    }
    this.f5w_1 = null;
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var tmp = this.e5w_1.n1q_1[i];
        cache[i] = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
      }
       while (inductionVariable < size);
    this.e5w_1.h1();
    var inductionVariable_0 = size - 1 | 0;
    if (0 <= inductionVariable_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + -1 | 0;
        var layoutNode = ensureNotNull(cache[i_0]);
        if (layoutNode.l4l_1) {
          dispatchHierarchy(this, layoutNode);
        }
      }
       while (0 <= inductionVariable_0);
    this.f5w_1 = cache;
  };
  function Companion_19() {
    this.j5w_1 = false;
  }
  var Companion_instance_23;
  function Companion_getInstance_33() {
    return Companion_instance_23;
  }
  function Owner() {
  }
  function OwnerScope() {
  }
  function OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$lambda(layoutNode) {
    if (layoutNode.j5h()) {
      layoutNode.j5s();
    }
    return Unit_instance;
  }
  function OwnerSnapshotObserver$onCommitAffectingMeasure$lambda(layoutNode) {
    if (layoutNode.j5h()) {
      layoutNode.h5s();
    }
    return Unit_instance;
  }
  function OwnerSnapshotObserver$onCommitAffectingSemantics$lambda(layoutNode) {
    if (layoutNode.j5h()) {
      layoutNode.m5q();
    }
    return Unit_instance;
  }
  function OwnerSnapshotObserver$onCommitAffectingLayout$lambda(layoutNode) {
    if (layoutNode.j5h()) {
      layoutNode.r5s();
    }
    return Unit_instance;
  }
  function OwnerSnapshotObserver$onCommitAffectingLayoutModifier$lambda(layoutNode) {
    if (layoutNode.j5h()) {
      layoutNode.r5s();
    }
    return Unit_instance;
  }
  function OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$lambda(layoutNode) {
    if (layoutNode.j5h()) {
      layoutNode.t5s();
    }
    return Unit_instance;
  }
  function OwnerSnapshotObserver$onCommitAffectingLookahead$lambda(layoutNode) {
    if (layoutNode.j5h()) {
      layoutNode.t5s();
    }
    return Unit_instance;
  }
  function OwnerSnapshotObserver$clearInvalidObservations$lambda(it) {
    return !(isInterface(it, OwnerScope) ? it : THROW_CCE()).j5h();
  }
  function OwnerSnapshotObserver(onChangedExecutor) {
    this.v5g_1 = new SnapshotStateObserver(onChangedExecutor);
    var tmp = this;
    tmp.w5g_1 = OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$lambda;
    var tmp_0 = this;
    tmp_0.x5g_1 = OwnerSnapshotObserver$onCommitAffectingMeasure$lambda;
    var tmp_1 = this;
    tmp_1.y5g_1 = OwnerSnapshotObserver$onCommitAffectingSemantics$lambda;
    var tmp_2 = this;
    tmp_2.z5g_1 = OwnerSnapshotObserver$onCommitAffectingLayout$lambda;
    var tmp_3 = this;
    tmp_3.a5h_1 = OwnerSnapshotObserver$onCommitAffectingLayoutModifier$lambda;
    var tmp_4 = this;
    tmp_4.b5h_1 = OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$lambda;
    var tmp_5 = this;
    tmp_5.c5h_1 = OwnerSnapshotObserver$onCommitAffectingLookahead$lambda;
  }
  protoOf(OwnerSnapshotObserver).w5u = function (node, affectsLookahead, block) {
    if (affectsLookahead ? !(node.h4k_1 == null) : false) {
      this.d5h(node, this.c5h_1, block);
    } else {
      this.d5h(node, this.z5g_1, block);
    }
  };
  protoOf(OwnerSnapshotObserver).a5v = function (node, affectsLookahead, block, $super) {
    affectsLookahead = affectsLookahead === VOID ? true : affectsLookahead;
    var tmp;
    if ($super === VOID) {
      this.w5u(node, affectsLookahead, block);
      tmp = Unit_instance;
    } else {
      tmp = $super.w5u.call(this, node, affectsLookahead, block);
    }
    return tmp;
  };
  protoOf(OwnerSnapshotObserver).u5u = function (node, affectsLookahead, block) {
    if (affectsLookahead ? !(node.h4k_1 == null) : false) {
      this.d5h(node, this.b5h_1, block);
    } else {
      this.d5h(node, this.a5h_1, block);
    }
  };
  protoOf(OwnerSnapshotObserver).c5v = function (node, affectsLookahead, block, $super) {
    affectsLookahead = affectsLookahead === VOID ? true : affectsLookahead;
    var tmp;
    if ($super === VOID) {
      this.u5u(node, affectsLookahead, block);
      tmp = Unit_instance;
    } else {
      tmp = $super.u5u.call(this, node, affectsLookahead, block);
    }
    return tmp;
  };
  protoOf(OwnerSnapshotObserver).d5v = function (node, affectsLookahead, block) {
    if (affectsLookahead ? !(node.h4k_1 == null) : false) {
      this.d5h(node, this.w5g_1, block);
    } else {
      this.d5h(node, this.x5g_1, block);
    }
  };
  protoOf(OwnerSnapshotObserver).e5v = function (node, affectsLookahead, block, $super) {
    affectsLookahead = affectsLookahead === VOID ? true : affectsLookahead;
    var tmp;
    if ($super === VOID) {
      this.d5v(node, affectsLookahead, block);
      tmp = Unit_instance;
    } else {
      tmp = $super.d5v.call(this, node, affectsLookahead, block);
    }
    return tmp;
  };
  protoOf(OwnerSnapshotObserver).p5q = function (node, block) {
    this.d5h(node, this.y5g_1, block);
  };
  protoOf(OwnerSnapshotObserver).d5h = function (target, onChanged, block) {
    this.v5g_1.k2u(target, onChanged, block);
  };
  protoOf(OwnerSnapshotObserver).n5z = function () {
    this.v5g_1.m2u(OwnerSnapshotObserver$clearInvalidObservations$lambda);
  };
  protoOf(OwnerSnapshotObserver).l2u = function (target) {
    this.v5g_1.l2u(target);
  };
  protoOf(OwnerSnapshotObserver).o5z = function () {
    this.v5g_1.n2u();
  };
  function ParentDataModifierNode() {
  }
  function invalidateParentData(_this__u8e3s4) {
    return requireLayoutNode(_this__u8e3s4).n5r();
  }
  function PointerInputModifierNode() {
  }
  function get_layoutCoordinates(_this__u8e3s4) {
    // Inline function 'androidx.compose.ui.node.Nodes.PointerInput' call
    var tmp$ret$0 = _NodeKind___init__impl__ojsprp(16);
    return requireCoordinator(_this__u8e3s4, tmp$ret$0);
  }
  function SemanticsModifierNode() {
  }
  function invalidateSemantics(_this__u8e3s4) {
    return requireLayoutNode(_this__u8e3s4).m5q();
  }
  var TraverseDescendantsAction_ContinueTraversal_instance;
  var TraverseDescendantsAction_SkipSubtreeAndContinueTraversal_instance;
  var TraverseDescendantsAction_CancelTraversal_instance;
  var TraverseDescendantsAction_entriesInitialized;
  function TraverseDescendantsAction_initEntries() {
    if (TraverseDescendantsAction_entriesInitialized)
      return Unit_instance;
    TraverseDescendantsAction_entriesInitialized = true;
    TraverseDescendantsAction_ContinueTraversal_instance = new TraverseDescendantsAction('ContinueTraversal', 0);
    TraverseDescendantsAction_SkipSubtreeAndContinueTraversal_instance = new TraverseDescendantsAction('SkipSubtreeAndContinueTraversal', 1);
    TraverseDescendantsAction_CancelTraversal_instance = new TraverseDescendantsAction('CancelTraversal', 2);
  }
  function TraverseDescendantsAction(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function TraverseDescendantsAction_ContinueTraversal_getInstance() {
    TraverseDescendantsAction_initEntries();
    return TraverseDescendantsAction_ContinueTraversal_instance;
  }
  function TraverseDescendantsAction_SkipSubtreeAndContinueTraversal_getInstance() {
    TraverseDescendantsAction_initEntries();
    return TraverseDescendantsAction_SkipSubtreeAndContinueTraversal_instance;
  }
  function TraverseDescendantsAction_CancelTraversal_getInstance() {
    TraverseDescendantsAction_initEntries();
    return TraverseDescendantsAction_CancelTraversal_instance;
  }
  function TraversableNode() {
  }
  function traverseDescendants(_this__u8e3s4, block) {
    // Inline function 'androidx.compose.ui.node.visitSubtreeIf' call
    // Inline function 'androidx.compose.ui.node.Nodes.Traversable' call
    var type = _NodeKind___init__impl__ojsprp(262144);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitSubtreeIf.<anonymous>' call
      var message = 'visitSubtreeIf called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$2 = fillArrayVal(Array(16), null);
    var branches = new MutableVector(tmp$ret$2, 0);
    var child = _this__u8e3s4.c4j().u4i_1;
    if (child == null) {
      addLayoutNodeChildren$accessor$hxafa1(branches, _this__u8e3s4.c4j());
    } else {
      branches.q1q(child);
    }
    outer: while (branches.pn()) {
      var branch = branches.m1(branches.p1q_1 - 1 | 0);
      if (!((branch.s4i_1 & mask) === 0)) {
        var node = branch;
        while (!(node == null)) {
          if (!((node.r4i_1 & mask) === 0)) {
            var tmp$ret$6;
            $l$block: {
              // Inline function 'androidx.compose.ui.node.visitSubtreeIf.<anonymous>' call
              // Inline function 'androidx.compose.ui.node.dispatchForKind' call
              var stack = null;
              var node_0 = node;
              $l$loop: while (!(node_0 == null)) {
                if (!(node_0 == null) ? isInterface(node_0, TraversableNode) : false) {
                  // Inline function 'androidx.compose.ui.node.visitSubtreeIf.<anonymous>.<anonymous>' call
                  // Inline function 'androidx.compose.ui.node.traverseDescendants.<anonymous>' call
                  var it = node_0;
                  var tmp;
                  if (equals(_this__u8e3s4.p52(), it.p52()) ? areObjectsOfSameType(_this__u8e3s4, it) : false) {
                    tmp = block(isInterface(it, TraversableNode) ? it : THROW_CCE());
                  } else {
                    tmp = TraverseDescendantsAction_ContinueTraversal_getInstance();
                  }
                  var action = tmp;
                  if (action.equals(TraverseDescendantsAction_CancelTraversal_getInstance()))
                    return Unit_instance;
                  if (!!action.equals(TraverseDescendantsAction_SkipSubtreeAndContinueTraversal_getInstance())) {
                    tmp$ret$6 = false;
                    break $l$block;
                  }
                } else {
                  var tmp_0;
                  // Inline function 'androidx.compose.ui.Node.isKind' call
                  if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                    tmp_0 = node_0 instanceof DelegatingNode;
                  } else {
                    tmp_0 = false;
                  }
                  if (tmp_0) {
                    var count = 0;
                    // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                    var node_1 = node_0.b4m_1;
                    while (!(node_1 == null)) {
                      // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                      var next = node_1;
                      // Inline function 'androidx.compose.ui.Node.isKind' call
                      if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                        count = count + 1 | 0;
                        if (count === 1) {
                          node_0 = next;
                        } else {
                          var tmp1_elvis_lhs = stack;
                          var tmp_1;
                          if (tmp1_elvis_lhs == null) {
                            // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                            // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                            // Inline function 'kotlin.arrayOfNulls' call
                            var tmp$ret$9 = fillArrayVal(Array(16), null);
                            tmp_1 = new MutableVector(tmp$ret$9, 0);
                          } else {
                            tmp_1 = tmp1_elvis_lhs;
                          }
                          stack = tmp_1;
                          var theNode = node_0;
                          if (!(theNode == null)) {
                            var tmp2_safe_receiver = stack;
                            if (tmp2_safe_receiver == null)
                              null;
                            else
                              tmp2_safe_receiver.q1q(theNode);
                            node_0 = null;
                          }
                          var tmp3_safe_receiver = stack;
                          if (tmp3_safe_receiver == null)
                            null;
                          else
                            tmp3_safe_receiver.q1q(next);
                        }
                      }
                      node_1 = node_1.u4i_1;
                    }
                    if (count === 1) {
                      continue $l$loop;
                    }
                  }
                }
                node_0 = pop$accessor$hxafa1(stack);
              }
              tmp$ret$6 = true;
            }
            var diveDeeper = tmp$ret$6;
            if (!diveDeeper)
              continue outer;
          }
          node = node.u4i_1;
        }
      }
      addLayoutNodeChildren$accessor$hxafa1(branches, branch);
    }
  }
  function traverseAncestors(_this__u8e3s4, block) {
    // Inline function 'androidx.compose.ui.node.visitAncestors' call
    // Inline function 'androidx.compose.ui.node.Nodes.Traversable' call
    var type = _NodeKind___init__impl__ojsprp(262144);
    var mask = _NodeKind___get_mask__impl__1uopb6(type);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!_this__u8e3s4.c4j().b4j_1) {
      // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
      var message = 'visitAncestors called on an unattached node';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var node = false ? _this__u8e3s4.c4j() : _this__u8e3s4.c4j().t4i_1;
    var layout = requireLayoutNode(_this__u8e3s4);
    while (!(layout == null)) {
      var head = layout.d4l_1.y4j_1;
      if (!((head.s4i_1 & mask) === 0)) {
        while (!(node == null)) {
          if (!((node.r4i_1 & mask) === 0)) {
            // Inline function 'androidx.compose.ui.node.visitAncestors.<anonymous>' call
            // Inline function 'androidx.compose.ui.node.dispatchForKind' call
            var stack = null;
            var node_0 = node;
            $l$loop: while (!(node_0 == null)) {
              if (!(node_0 == null) ? isInterface(node_0, TraversableNode) : false) {
                // Inline function 'androidx.compose.ui.node.traverseAncestors.<anonymous>' call
                var it = node_0;
                var tmp;
                if (equals(_this__u8e3s4.p52(), it.p52()) ? areObjectsOfSameType(_this__u8e3s4, it) : false) {
                  tmp = block(isInterface(it, TraversableNode) ? it : THROW_CCE());
                } else {
                  tmp = true;
                }
                var continueTraversal = tmp;
                if (!continueTraversal)
                  return Unit_instance;
              } else {
                var tmp_0;
                // Inline function 'androidx.compose.ui.Node.isKind' call
                if (!((node_0.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                  tmp_0 = node_0 instanceof DelegatingNode;
                } else {
                  tmp_0 = false;
                }
                if (tmp_0) {
                  var count = 0;
                  // Inline function 'androidx.compose.ui.node.DelegatingNode.forEachImmediateDelegate' call
                  var node_1 = node_0.b4m_1;
                  while (!(node_1 == null)) {
                    // Inline function 'androidx.compose.ui.node.dispatchForKind.<anonymous>' call
                    var next = node_1;
                    // Inline function 'androidx.compose.ui.Node.isKind' call
                    if (!((next.r4i_1 & _NodeKind___get_mask__impl__1uopb6(type)) === 0)) {
                      count = count + 1 | 0;
                      if (count === 1) {
                        node_0 = next;
                      } else {
                        var tmp1_elvis_lhs = stack;
                        var tmp_1;
                        if (tmp1_elvis_lhs == null) {
                          // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
                          // Inline function 'androidx.compose.runtime.collection.MutableVector' call
                          // Inline function 'kotlin.arrayOfNulls' call
                          var tmp$ret$4 = fillArrayVal(Array(16), null);
                          tmp_1 = new MutableVector(tmp$ret$4, 0);
                        } else {
                          tmp_1 = tmp1_elvis_lhs;
                        }
                        stack = tmp_1;
                        var theNode = node_0;
                        if (!(theNode == null)) {
                          var tmp2_safe_receiver = stack;
                          if (tmp2_safe_receiver == null)
                            null;
                          else
                            tmp2_safe_receiver.q1q(theNode);
                          node_0 = null;
                        }
                        var tmp3_safe_receiver = stack;
                        if (tmp3_safe_receiver == null)
                          null;
                        else
                          tmp3_safe_receiver.q1q(next);
                      }
                    }
                    node_1 = node_1.u4i_1;
                  }
                  if (count === 1) {
                    continue $l$loop;
                  }
                }
              }
              node_0 = pop$accessor$hxafa1(stack);
            }
          }
          node = node.t4i_1;
        }
      }
      layout = layout.pp();
      var tmp0_safe_receiver = layout;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d4l_1;
      node = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x4j_1;
    }
  }
  function get_LocalAccessibilityManager() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalAccessibilityManager;
  }
  var LocalAccessibilityManager;
  function get_LocalAutofill() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalAutofill;
  }
  var LocalAutofill;
  function get_LocalAutofillTree() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalAutofillTree;
  }
  var LocalAutofillTree;
  function get_LocalClipboardManager() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalClipboardManager;
  }
  var LocalClipboardManager;
  function get_LocalDensity() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalDensity;
  }
  var LocalDensity;
  function get_LocalFocusManager() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalFocusManager;
  }
  var LocalFocusManager;
  function get_LocalFontLoader() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalFontLoader;
  }
  var LocalFontLoader;
  function get_LocalFontFamilyResolver() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalFontFamilyResolver;
  }
  var LocalFontFamilyResolver;
  function get_LocalHapticFeedback() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalHapticFeedback;
  }
  var LocalHapticFeedback;
  function get_LocalInputModeManager() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalInputModeManager;
  }
  var LocalInputModeManager;
  function get_LocalLayoutDirection() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalLayoutDirection;
  }
  var LocalLayoutDirection;
  function get_LocalTextInputService() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalTextInputService;
  }
  var LocalTextInputService;
  function get_LocalSoftwareKeyboardController() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalSoftwareKeyboardController;
  }
  var LocalSoftwareKeyboardController;
  function get_LocalTextToolbar() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalTextToolbar;
  }
  var LocalTextToolbar;
  function get_LocalUriHandler() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalUriHandler;
  }
  var LocalUriHandler;
  function get_LocalViewConfiguration() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalViewConfiguration;
  }
  var LocalViewConfiguration;
  function get_LocalWindowInfo() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalWindowInfo;
  }
  var LocalWindowInfo;
  function get_LocalPointerIconService() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return LocalPointerIconService;
  }
  var LocalPointerIconService;
  function noLocalProvidedFor(name) {
    _init_properties_CompositionLocals_kt__uo3k1s();
    // Inline function 'kotlin.error' call
    var message = 'CompositionLocal ' + name + ' not present';
    throw IllegalStateException_init_$Create$(toString(message));
  }
  function ProvideCommonCompositionLocals(owner, uriHandler, content, $composer, $changed) {
    _init_properties_CompositionLocals_kt__uo3k1s();
    var $composer_0 = $composer;
    $composer_0 = $composer_0.c1u(874662829);
    sourceInformation($composer_0, 'C(ProvideCommonCompositionLocals)P(1,2)185@6194L1195:CompositionLocals.kt#itgzvw');
    var $dirty = $changed;
    if (($changed & 14) === 0)
      $dirty = $dirty | ($composer_0.s1j(owner) ? 4 : 2);
    if (($changed & 112) === 0)
      $dirty = $dirty | ($composer_0.s1j(uriHandler) ? 32 : 16);
    if (($changed & 896) === 0)
      $dirty = $dirty | ($composer_0.z1s(content) ? 256 : 128);
    if (!(($dirty & 731) === 146) ? true : !$composer_0.v1r()) {
      if (isTraceInProgress()) {
        traceEventStart(874662829, $dirty, -1, 'androidx.compose.ui.platform.ProvideCommonCompositionLocals (CompositionLocals.kt:184)');
      }
      CompositionLocalProvider([get_LocalAccessibilityManager().z1y(owner.z5y()), get_LocalAutofill().z1y(owner.c5z()), get_LocalAutofillTree().z1y(owner.b5z()), get_LocalClipboardManager().z1y(owner.y5y()), get_LocalDensity().z1y(owner.g2x()), get_LocalFocusManager().z1y(owner.l4n()), get_LocalFontLoader().a1z(owner.h5z()), get_LocalFontFamilyResolver().a1z(owner.i5z()), get_LocalHapticFeedback().z1y(owner.w5y()), get_LocalInputModeManager().z1y(owner.x5y()), get_LocalLayoutDirection().z1y(owner.x4o()), get_LocalTextInputService().z1y(owner.d5z()), get_LocalSoftwareKeyboardController().z1y(owner.e5z()), get_LocalTextToolbar().z1y(owner.a5z()), get_LocalUriHandler().z1y(uriHandler), get_LocalViewConfiguration().z1y(owner.d56()), get_LocalWindowInfo().z1y(owner.g5z()), get_LocalPointerIconService().z1y(owner.f5z())], content, $composer_0, 8 | 112 & $dirty >> 3);
      if (isTraceInProgress()) {
        traceEventEnd();
      }
    } else {
      $composer_0.m1m();
    }
    var tmp0_safe_receiver = $composer_0.d1u();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.c1z(ProvideCommonCompositionLocals$lambda(owner, uriHandler, content, $changed));
    }
  }
  function LocalAccessibilityManager$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return null;
  }
  function LocalAutofill$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return null;
  }
  function LocalAutofillTree$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalAutofillTree');
  }
  function LocalClipboardManager$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalClipboardManager');
  }
  function LocalDensity$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalDensity');
  }
  function LocalFocusManager$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalFocusManager');
  }
  function LocalFontLoader$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalFontLoader');
  }
  function LocalFontFamilyResolver$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalFontFamilyResolver');
  }
  function LocalHapticFeedback$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalHapticFeedback');
  }
  function LocalInputModeManager$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalInputManager');
  }
  function LocalLayoutDirection$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalLayoutDirection');
  }
  function LocalTextInputService$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return null;
  }
  function LocalSoftwareKeyboardController$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return null;
  }
  function LocalTextToolbar$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalTextToolbar');
  }
  function LocalUriHandler$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalUriHandler');
  }
  function LocalViewConfiguration$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalViewConfiguration');
  }
  function LocalWindowInfo$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    noLocalProvidedFor('LocalWindowInfo');
  }
  function LocalPointerIconService$lambda() {
    _init_properties_CompositionLocals_kt__uo3k1s();
    return null;
  }
  function ProvideCommonCompositionLocals$lambda($owner, $uriHandler, $content, $$changed) {
    return function ($composer, $force) {
      ProvideCommonCompositionLocals($owner, $uriHandler, $content, $composer, updateChangedFlags($$changed | 1));
      return Unit_instance;
    };
  }
  var properties_initialized_CompositionLocals_kt_24dxlq;
  function _init_properties_CompositionLocals_kt__uo3k1s() {
    if (!properties_initialized_CompositionLocals_kt_24dxlq) {
      properties_initialized_CompositionLocals_kt_24dxlq = true;
      LocalAccessibilityManager = staticCompositionLocalOf(LocalAccessibilityManager$lambda);
      LocalAutofill = staticCompositionLocalOf(LocalAutofill$lambda);
      LocalAutofillTree = staticCompositionLocalOf(LocalAutofillTree$lambda);
      LocalClipboardManager = staticCompositionLocalOf(LocalClipboardManager$lambda);
      LocalDensity = staticCompositionLocalOf(LocalDensity$lambda);
      LocalFocusManager = staticCompositionLocalOf(LocalFocusManager$lambda);
      LocalFontLoader = staticCompositionLocalOf(LocalFontLoader$lambda);
      LocalFontFamilyResolver = staticCompositionLocalOf(LocalFontFamilyResolver$lambda);
      LocalHapticFeedback = staticCompositionLocalOf(LocalHapticFeedback$lambda);
      LocalInputModeManager = staticCompositionLocalOf(LocalInputModeManager$lambda);
      LocalLayoutDirection = staticCompositionLocalOf(LocalLayoutDirection$lambda);
      LocalTextInputService = staticCompositionLocalOf(LocalTextInputService$lambda);
      LocalSoftwareKeyboardController = staticCompositionLocalOf(LocalSoftwareKeyboardController$lambda);
      LocalTextToolbar = staticCompositionLocalOf(LocalTextToolbar$lambda);
      LocalUriHandler = staticCompositionLocalOf(LocalUriHandler$lambda);
      LocalViewConfiguration = staticCompositionLocalOf(LocalViewConfiguration$lambda);
      LocalWindowInfo = staticCompositionLocalOf(LocalWindowInfo$lambda);
      LocalPointerIconService = staticCompositionLocalOf(LocalPointerIconService$lambda);
    }
  }
  function get_NoInspectorInfo() {
    _init_properties_InspectableValue_kt__dlvdqb();
    return NoInspectorInfo;
  }
  var NoInspectorInfo;
  var isDebugInspectorInfoEnabled;
  function InspectorValueInfo(info) {
    this.p5z_1 = info;
    this.q5z_1 = null;
  }
  function NoInspectorInfo$lambda($this$null) {
    _init_properties_InspectableValue_kt__dlvdqb();
    return Unit_instance;
  }
  var properties_initialized_InspectableValue_kt_898af9;
  function _init_properties_InspectableValue_kt__dlvdqb() {
    if (!properties_initialized_InspectableValue_kt_898af9) {
      properties_initialized_InspectableValue_kt_898af9 = true;
      NoInspectorInfo = NoInspectorInfo$lambda;
      isDebugInspectorInfoEnabled = false;
    }
  }
  function invertTo(_this__u8e3s4, other) {
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a00 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(0, 4) + 0 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a01 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(0, 4) + 1 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a02 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(0, 4) + 2 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a03 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(0, 4) + 3 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a10 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(1, 4) + 0 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a11 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(1, 4) + 1 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a12 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(1, 4) + 2 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a13 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(1, 4) + 3 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a20 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(2, 4) + 0 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a21 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(2, 4) + 1 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a22 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(2, 4) + 2 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a23 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(2, 4) + 3 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a30 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(3, 4) + 0 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a31 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(3, 4) + 1 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a32 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(3, 4) + 2 | 0];
    // Inline function 'androidx.compose.ui.graphics.Matrix.get' call
    var a33 = _Matrix___get_values__impl__fblr7b(_this__u8e3s4)[imul(3, 4) + 3 | 0];
    var b00 = a00 * a11 - a01 * a10;
    var b01 = a00 * a12 - a02 * a10;
    var b02 = a00 * a13 - a03 * a10;
    var b03 = a01 * a12 - a02 * a11;
    var b04 = a01 * a13 - a03 * a11;
    var b05 = a02 * a13 - a03 * a12;
    var b06 = a20 * a31 - a21 * a30;
    var b07 = a20 * a32 - a22 * a30;
    var b08 = a20 * a33 - a23 * a30;
    var b09 = a21 * a32 - a22 * a31;
    var b10 = a21 * a33 - a23 * a31;
    var b11 = a22 * a33 - a23 * a32;
    var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
    if (det === 0.0) {
      return false;
    }
    var invDet = 1.0 / det;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(0, 4) + 0 | 0] = v;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_0 = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(0, 4) + 1 | 0] = v_0;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_1 = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(0, 4) + 2 | 0] = v_1;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_2 = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(0, 4) + 3 | 0] = v_2;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_3 = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(1, 4) + 0 | 0] = v_3;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_4 = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(1, 4) + 1 | 0] = v_4;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_5 = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(1, 4) + 2 | 0] = v_5;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_6 = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(1, 4) + 3 | 0] = v_6;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_7 = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(2, 4) + 0 | 0] = v_7;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_8 = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(2, 4) + 1 | 0] = v_8;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_9 = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(2, 4) + 2 | 0] = v_9;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_10 = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(2, 4) + 3 | 0] = v_10;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_11 = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(3, 4) + 0 | 0] = v_11;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_12 = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(3, 4) + 1 | 0] = v_12;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_13 = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(3, 4) + 2 | 0] = v_13;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var v_14 = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
    _Matrix___get_values__impl__fblr7b(other)[imul(3, 4) + 3 | 0] = v_14;
    return true;
  }
  function isInOutline(outline, x, y, tmpTouchPointPath, tmpOpPath) {
    tmpTouchPointPath = tmpTouchPointPath === VOID ? null : tmpTouchPointPath;
    tmpOpPath = tmpOpPath === VOID ? null : tmpOpPath;
    var tmp;
    if (outline instanceof Rectangle) {
      tmp = isInRectangle(outline.k3n_1, x, y);
    } else {
      if (outline instanceof Rounded) {
        tmp = isInRoundedRect(outline, x, y, tmpTouchPointPath, tmpOpPath);
      } else {
        if (outline instanceof Generic) {
          tmp = isInPath(outline.r5z_1, x, y, tmpTouchPointPath, tmpOpPath);
        } else {
          noWhenBranchMatchedException();
        }
      }
    }
    return tmp;
  }
  function isInRectangle(rect, x, y) {
    return ((rect.a2w_1 <= x ? x < rect.c2w_1 : false) ? rect.b2w_1 <= y : false) ? y < rect.d2w_1 : false;
  }
  function isInRoundedRect(outline, x, y, touchPointPath, opPath) {
    var rrect = outline.s5z_1;
    if (((x < rrect.d3u_1 ? true : x >= rrect.f3u_1) ? true : y < rrect.e3u_1) ? true : y >= rrect.g3u_1) {
      return false;
    }
    if (!cornersFit(rrect)) {
      var path = opPath == null ? Path() : opPath;
      path.o3n(rrect);
      return isInPath(path, x, y, touchPointPath, opPath);
    }
    var topLeftX = rrect.d3u_1 + _CornerRadius___get_x__impl__1594cn(rrect.h3u_1);
    var topLeftY = rrect.e3u_1 + _CornerRadius___get_y__impl__tyvleu(rrect.h3u_1);
    var topRightX = rrect.f3u_1 - _CornerRadius___get_x__impl__1594cn(rrect.i3u_1);
    var topRightY = rrect.e3u_1 + _CornerRadius___get_y__impl__tyvleu(rrect.i3u_1);
    var bottomRightX = rrect.f3u_1 - _CornerRadius___get_x__impl__1594cn(rrect.j3u_1);
    var bottomRightY = rrect.g3u_1 - _CornerRadius___get_y__impl__tyvleu(rrect.j3u_1);
    var bottomLeftX = rrect.g3u_1 - _CornerRadius___get_y__impl__tyvleu(rrect.k3u_1);
    var bottomLeftY = rrect.d3u_1 + _CornerRadius___get_x__impl__1594cn(rrect.k3u_1);
    var tmp;
    if (x < topLeftX ? y < topLeftY : false) {
      tmp = isWithinEllipse(x, y, rrect.h3u_1, topLeftX, topLeftY);
    } else if (x < bottomLeftY ? y > bottomLeftX : false) {
      tmp = isWithinEllipse(x, y, rrect.k3u_1, bottomLeftY, bottomLeftX);
    } else if (x > topRightX ? y < topRightY : false) {
      tmp = isWithinEllipse(x, y, rrect.i3u_1, topRightX, topRightY);
    } else if (x > bottomRightX ? y > bottomRightY : false) {
      tmp = isWithinEllipse(x, y, rrect.j3u_1, bottomRightX, bottomRightY);
    } else {
      tmp = true;
    }
    return tmp;
  }
  function isInPath(path, x, y, tmpTouchPointPath, tmpOpPath) {
    var rect = new Rect(x - 0.005, y - 0.005, x + 0.005, y + 0.005);
    var touchPointPath = tmpTouchPointPath == null ? Path() : tmpTouchPointPath;
    touchPointPath.n3n(rect);
    var opPath = tmpOpPath == null ? Path() : tmpOpPath;
    opPath.s3n(path, touchPointPath, Companion_getInstance_8().w3n_1);
    var isClipped = opPath.o1o();
    opPath.a26();
    touchPointPath.a26();
    return !isClipped;
  }
  function cornersFit(_this__u8e3s4) {
    return ((_CornerRadius___get_x__impl__1594cn(_this__u8e3s4.h3u_1) + _CornerRadius___get_x__impl__1594cn(_this__u8e3s4.i3u_1) <= _this__u8e3s4.e2w() ? _CornerRadius___get_x__impl__1594cn(_this__u8e3s4.k3u_1) + _CornerRadius___get_x__impl__1594cn(_this__u8e3s4.j3u_1) <= _this__u8e3s4.e2w() : false) ? _CornerRadius___get_y__impl__tyvleu(_this__u8e3s4.h3u_1) + _CornerRadius___get_y__impl__tyvleu(_this__u8e3s4.k3u_1) <= _this__u8e3s4.f2w() : false) ? _CornerRadius___get_y__impl__tyvleu(_this__u8e3s4.i3u_1) + _CornerRadius___get_y__impl__tyvleu(_this__u8e3s4.j3u_1) <= _this__u8e3s4.f2w() : false;
  }
  function isWithinEllipse(x, y, cornerRadius, centerX, centerY) {
    var px = x - centerX;
    var py = y - centerY;
    var radiusX = _CornerRadius___get_x__impl__1594cn(cornerRadius);
    var radiusY = _CornerRadius___get_y__impl__tyvleu(cornerRadius);
    return px * px / (radiusX * radiusX) + py * py / (radiusY * radiusY) <= 1.0;
  }
  function DelegatingSoftwareKeyboardController(textInputService) {
    this.t5z_1 = textInputService;
  }
  var TextToolbarStatus_Shown_instance;
  var TextToolbarStatus_Hidden_instance;
  var TextToolbarStatus_entriesInitialized;
  function TextToolbarStatus_initEntries() {
    if (TextToolbarStatus_entriesInitialized)
      return Unit_instance;
    TextToolbarStatus_entriesInitialized = true;
    TextToolbarStatus_Shown_instance = new TextToolbarStatus('Shown', 0);
    TextToolbarStatus_Hidden_instance = new TextToolbarStatus('Hidden', 1);
  }
  function TextToolbarStatus(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function TextToolbarStatus_Hidden_getInstance() {
    TextToolbarStatus_initEntries();
    return TextToolbarStatus_Hidden_instance;
  }
  function ViewConfiguration() {
  }
  function AccessibilityKey(name, mergePolicy) {
    return SemanticsPropertyKey_init_$Create$_0(name, true, mergePolicy);
  }
  function AccessibilityKey_0(name) {
    return SemanticsPropertyKey_init_$Create$(name, true);
  }
  function SemanticsConfiguration() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.m5h_1 = LinkedHashMap_init_$Create$();
    this.n5h_1 = false;
    this.o5h_1 = false;
  }
  protoOf(SemanticsConfiguration).o = function () {
    // Inline function 'kotlin.collections.iterator' call
    return this.m5h_1.m2().o();
  };
  protoOf(SemanticsConfiguration).u5z = function (key, value) {
    var tmp;
    if (value instanceof AccessibilityAction) {
      tmp = this.v5z(key);
    } else {
      tmp = false;
    }
    if (tmp) {
      var tmp_0 = this.m5h_1.x2(key);
      var prev = tmp_0 instanceof AccessibilityAction ? tmp_0 : THROW_CCE();
      // Inline function 'kotlin.collections.set' call
      var this_0 = this.m5h_1;
      var tmp0_elvis_lhs = value.w5z_1;
      var tmp_1 = tmp0_elvis_lhs == null ? prev.w5z_1 : tmp0_elvis_lhs;
      var tmp1_elvis_lhs = value.x5z_1;
      var value_0 = new AccessibilityAction(tmp_1, tmp1_elvis_lhs == null ? prev.x5z_1 : tmp1_elvis_lhs);
      this_0.n2(key, value_0);
    } else {
      // Inline function 'kotlin.collections.set' call
      this.m5h_1.n2(key, value);
    }
  };
  protoOf(SemanticsConfiguration).v5z = function (key) {
    return this.m5h_1.u2(key);
  };
  protoOf(SemanticsConfiguration).p5h = function (peer) {
    if (peer.n5h_1) {
      this.n5h_1 = true;
    }
    if (peer.o5h_1) {
      this.o5h_1 = true;
    }
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = peer.m5h_1.m2().o();
    while (tmp0_iterator.d1()) {
      var tmp1_loop_parameter = tmp0_iterator.f1();
      // Inline function 'kotlin.collections.component1' call
      var key = tmp1_loop_parameter.p2();
      // Inline function 'kotlin.collections.component2' call
      var nextValue = tmp1_loop_parameter.q2();
      // Inline function 'kotlin.collections.contains' call
      // Inline function 'kotlin.collections.containsKey' call
      var this_0 = this.m5h_1;
      if (!(isInterface(this_0, Map) ? this_0 : THROW_CCE()).u2(key)) {
        // Inline function 'kotlin.collections.set' call
        this.m5h_1.n2(key, nextValue);
      } else {
        if (nextValue instanceof AccessibilityAction) {
          var tmp = this.m5h_1.x2(key);
          var value = tmp instanceof AccessibilityAction ? tmp : THROW_CCE();
          // Inline function 'kotlin.collections.set' call
          var this_1 = this.m5h_1;
          var tmp2_elvis_lhs = value.w5z_1;
          var tmp_0 = tmp2_elvis_lhs == null ? nextValue.w5z_1 : tmp2_elvis_lhs;
          var tmp3_elvis_lhs = value.x5z_1;
          var value_0 = new AccessibilityAction(tmp_0, tmp3_elvis_lhs == null ? nextValue.x5z_1 : tmp3_elvis_lhs);
          this_1.n2(key, value_0);
        }
      }
    }
  };
  protoOf(SemanticsConfiguration).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SemanticsConfiguration))
      return false;
    if (!equals(this.m5h_1, other.m5h_1))
      return false;
    if (!(this.n5h_1 === other.n5h_1))
      return false;
    if (!(this.o5h_1 === other.o5h_1))
      return false;
    return true;
  };
  protoOf(SemanticsConfiguration).hashCode = function () {
    var result = hashCode(this.m5h_1);
    result = imul(31, result) + getBooleanHashCode(this.n5h_1) | 0;
    result = imul(31, result) + getBooleanHashCode(this.o5h_1) | 0;
    return result;
  };
  protoOf(SemanticsConfiguration).toString = function () {
    var propsString = StringBuilder_init_$Create$();
    var nextSeparator = '';
    if (this.n5h_1) {
      propsString.x5(nextSeparator);
      propsString.x5('mergeDescendants=true');
      nextSeparator = ', ';
    }
    if (this.o5h_1) {
      propsString.x5(nextSeparator);
      propsString.x5('isClearingSemantics=true');
      nextSeparator = ', ';
    }
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = this.m5h_1.m2().o();
    while (tmp0_iterator.d1()) {
      var tmp1_loop_parameter = tmp0_iterator.f1();
      // Inline function 'kotlin.collections.component1' call
      var key = tmp1_loop_parameter.p2();
      // Inline function 'kotlin.collections.component2' call
      var value = tmp1_loop_parameter.q2();
      propsString.x5(nextSeparator);
      propsString.x5(key.y5z_1);
      propsString.x5(' : ');
      propsString.w5(value);
      nextSeparator = ', ';
    }
    return simpleIdentityToString(this, null) + '{ ' + propsString + ' }';
  };
  function get_lastIdentifier() {
    _init_properties_SemanticsModifier_kt__yd9o4y();
    return lastIdentifier;
  }
  var lastIdentifier;
  function SemanticsModifier() {
  }
  function generateSemanticsId() {
    _init_properties_SemanticsModifier_kt__yd9o4y();
    return get_lastIdentifier().c60(1);
  }
  function EmptySemanticsElement() {
    EmptySemanticsElement_instance = this;
    ModifierNodeElement.call(this);
    this.e60_1 = identityHashCode(this);
  }
  protoOf(EmptySemanticsElement).i29 = function () {
    return new EmptySemanticsModifier();
  };
  protoOf(EmptySemanticsElement).f60 = function (node) {
  };
  protoOf(EmptySemanticsElement).r4o = function (node) {
    return this.f60(node instanceof EmptySemanticsModifier ? node : THROW_CCE());
  };
  protoOf(EmptySemanticsElement).hashCode = function () {
    return this.e60_1;
  };
  protoOf(EmptySemanticsElement).equals = function (other) {
    return other === this;
  };
  var EmptySemanticsElement_instance;
  function EmptySemanticsElement_getInstance() {
    if (EmptySemanticsElement_instance == null)
      new EmptySemanticsElement();
    return EmptySemanticsElement_instance;
  }
  function EmptySemanticsModifier() {
    Node.call(this);
  }
  protoOf(EmptySemanticsModifier).k5h = function (_this__u8e3s4) {
  };
  var properties_initialized_SemanticsModifier_kt_d25qs;
  function _init_properties_SemanticsModifier_kt__yd9o4y() {
    if (!properties_initialized_SemanticsModifier_kt_d25qs) {
      properties_initialized_SemanticsModifier_kt_d25qs = true;
      lastIdentifier = new AtomicInt(0);
    }
  }
  function SemanticsOwner(rootNode) {
    this.t60_1 = rootNode;
  }
  var stateDescription$delegate;
  var progressBarRangeInfo$delegate;
  var paneTitle$delegate;
  var liveRegion$delegate;
  var focused$delegate;
  var isContainer$delegate;
  var isTraversalGroup$delegate;
  var traversalIndex$delegate;
  var horizontalScrollAxisRange$delegate;
  var verticalScrollAxisRange$delegate;
  var role$delegate;
  var testTag$delegate;
  function set_textSubstitution(_this__u8e3s4, _set____db54di) {
    _init_properties_SemanticsProperties_kt__mp85yq();
    return textSubstitution$delegate.u60(_this__u8e3s4, textSubstitution$factory(), _set____db54di);
  }
  function get_textSubstitution(_this__u8e3s4) {
    _init_properties_SemanticsProperties_kt__mp85yq();
    return textSubstitution$delegate.v60(_this__u8e3s4, textSubstitution$factory_0());
  }
  var textSubstitution$delegate;
  function set_isShowingTextSubstitution(_this__u8e3s4, _set____db54di) {
    _init_properties_SemanticsProperties_kt__mp85yq();
    return isShowingTextSubstitution$delegate.u60(_this__u8e3s4, isShowingTextSubstitution$factory(), _set____db54di);
  }
  function get_isShowingTextSubstitution(_this__u8e3s4) {
    _init_properties_SemanticsProperties_kt__mp85yq();
    return isShowingTextSubstitution$delegate.v60(_this__u8e3s4, isShowingTextSubstitution$factory_0());
  }
  var isShowingTextSubstitution$delegate;
  var editableText$delegate;
  var textSelectionRange$delegate;
  var imeAction$delegate;
  var selected$delegate;
  var collectionInfo$delegate;
  var collectionItemInfo$delegate;
  var toggleableState$delegate;
  var customActions$delegate;
  function SemanticsPropertyKey_init_$Init$(name, isImportantForAccessibility, $this) {
    SemanticsPropertyKey.call($this, name);
    $this.a60_1 = isImportantForAccessibility;
    return $this;
  }
  function SemanticsPropertyKey_init_$Create$(name, isImportantForAccessibility) {
    return SemanticsPropertyKey_init_$Init$(name, isImportantForAccessibility, objectCreate(protoOf(SemanticsPropertyKey)));
  }
  function SemanticsPropertyKey_init_$Init$_0(name, isImportantForAccessibility, mergePolicy, $this) {
    SemanticsPropertyKey.call($this, name, mergePolicy);
    $this.a60_1 = isImportantForAccessibility;
    return $this;
  }
  function SemanticsPropertyKey_init_$Create$_0(name, isImportantForAccessibility, mergePolicy) {
    return SemanticsPropertyKey_init_$Init$_0(name, isImportantForAccessibility, mergePolicy, objectCreate(protoOf(SemanticsPropertyKey)));
  }
  function SemanticsPropertyKey$_init_$lambda_wl0qjy(parentValue, childValue) {
    return parentValue == null ? childValue : parentValue;
  }
  function SemanticsPropertyKey(name, mergePolicy) {
    var tmp;
    if (mergePolicy === VOID) {
      tmp = SemanticsPropertyKey$_init_$lambda_wl0qjy;
    } else {
      tmp = mergePolicy;
    }
    mergePolicy = tmp;
    this.y5z_1 = name;
    this.z5z_1 = mergePolicy;
    this.a60_1 = false;
  }
  protoOf(SemanticsPropertyKey).v60 = function (thisRef, property) {
    return throwSemanticsGetNotSupported();
  };
  protoOf(SemanticsPropertyKey).u60 = function (thisRef, property, value) {
    thisRef.u5z(this, value);
  };
  protoOf(SemanticsPropertyKey).toString = function () {
    return 'AccessibilityKey: ' + this.y5z_1;
  };
  function AccessibilityAction(label, action) {
    this.w5z_1 = label;
    this.x5z_1 = action;
  }
  protoOf(AccessibilityAction).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof AccessibilityAction))
      return false;
    if (!(this.w5z_1 == other.w5z_1))
      return false;
    if (!equals(this.x5z_1, other.x5z_1))
      return false;
    return true;
  };
  protoOf(AccessibilityAction).hashCode = function () {
    var tmp0_safe_receiver = this.w5z_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
    var result = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp = imul(31, result);
    // Inline function 'kotlin.hashCode' call
    var tmp0_safe_receiver_0 = this.x5z_1;
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
    result = tmp + (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0) | 0;
    return result;
  };
  protoOf(AccessibilityAction).toString = function () {
    return 'AccessibilityAction(label=' + this.w5z_1 + ', action=' + this.x5z_1 + ')';
  };
  function SemanticsProperties$ContentDescription$lambda(parentValue, childValue) {
    var tmp1_safe_receiver = parentValue == null ? null : toMutableList(parentValue);
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.semantics.SemanticsProperties.ContentDescription.<anonymous>.<anonymous>' call
      tmp1_safe_receiver.g1(childValue);
      tmp = tmp1_safe_receiver;
    }
    var tmp2_elvis_lhs = tmp;
    return tmp2_elvis_lhs == null ? childValue : tmp2_elvis_lhs;
  }
  function SemanticsProperties$PaneTitle$lambda(_anonymous_parameter_0__qggqh8, _anonymous_parameter_1__qggqgd) {
    throw IllegalStateException_init_$Create$('merge function called on unmergeable property PaneTitle.');
  }
  function SemanticsProperties$InvisibleToUser$lambda(parentValue, _anonymous_parameter_1__qggqgd) {
    return parentValue;
  }
  function SemanticsProperties$TraversalIndex$lambda(parentValue, _anonymous_parameter_1__qggqgd) {
    return parentValue;
  }
  function SemanticsProperties$IsPopup$lambda(_anonymous_parameter_0__qggqh8, _anonymous_parameter_1__qggqgd) {
    throw IllegalStateException_init_$Create$('merge function called on unmergeable property IsPopup. A popup should not be a child of a clickable/focusable node.');
  }
  function SemanticsProperties$IsDialog$lambda(_anonymous_parameter_0__qggqh8, _anonymous_parameter_1__qggqgd) {
    throw IllegalStateException_init_$Create$('merge function called on unmergeable property IsDialog. A dialog should not be a child of a clickable/focusable node.');
  }
  function SemanticsProperties$Role$lambda(parentValue, _anonymous_parameter_1__qggqgd) {
    return parentValue;
  }
  function SemanticsProperties$TestTag$lambda(parentValue, _anonymous_parameter_1__qggqgd) {
    return parentValue;
  }
  function SemanticsProperties$Text$lambda(parentValue, childValue) {
    var tmp1_safe_receiver = parentValue == null ? null : toMutableList(parentValue);
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.semantics.SemanticsProperties.Text.<anonymous>.<anonymous>' call
      tmp1_safe_receiver.g1(childValue);
      tmp = tmp1_safe_receiver;
    }
    var tmp2_elvis_lhs = tmp;
    return tmp2_elvis_lhs == null ? childValue : tmp2_elvis_lhs;
  }
  function SemanticsProperties() {
    SemanticsProperties_instance = this;
    var tmp = this;
    tmp.w60_1 = AccessibilityKey('ContentDescription', SemanticsProperties$ContentDescription$lambda);
    this.x60_1 = AccessibilityKey_0('StateDescription');
    this.y60_1 = AccessibilityKey_0('ProgressBarRangeInfo');
    var tmp_0 = this;
    tmp_0.z60_1 = AccessibilityKey('PaneTitle', SemanticsProperties$PaneTitle$lambda);
    this.a61_1 = AccessibilityKey_0('SelectableGroup');
    this.b61_1 = AccessibilityKey_0('CollectionInfo');
    this.c61_1 = AccessibilityKey_0('CollectionItemInfo');
    this.d61_1 = AccessibilityKey_0('Heading');
    this.e61_1 = AccessibilityKey_0('Disabled');
    this.f61_1 = AccessibilityKey_0('LiveRegion');
    this.g61_1 = AccessibilityKey_0('Focused');
    this.h61_1 = AccessibilityKey_0('IsTraversalGroup');
    var tmp_1 = this;
    tmp_1.i61_1 = new SemanticsPropertyKey('InvisibleToUser', SemanticsProperties$InvisibleToUser$lambda);
    var tmp_2 = this;
    tmp_2.j61_1 = AccessibilityKey('TraversalIndex', SemanticsProperties$TraversalIndex$lambda);
    this.k61_1 = AccessibilityKey_0('HorizontalScrollAxisRange');
    this.l61_1 = AccessibilityKey_0('VerticalScrollAxisRange');
    var tmp_3 = this;
    tmp_3.m61_1 = AccessibilityKey('IsPopup', SemanticsProperties$IsPopup$lambda);
    var tmp_4 = this;
    tmp_4.n61_1 = AccessibilityKey('IsDialog', SemanticsProperties$IsDialog$lambda);
    var tmp_5 = this;
    tmp_5.o61_1 = AccessibilityKey('Role', SemanticsProperties$Role$lambda);
    var tmp_6 = this;
    tmp_6.p61_1 = SemanticsPropertyKey_init_$Create$_0('TestTag', false, SemanticsProperties$TestTag$lambda);
    var tmp_7 = this;
    tmp_7.q61_1 = AccessibilityKey('Text', SemanticsProperties$Text$lambda);
    this.r61_1 = new SemanticsPropertyKey('TextSubstitution');
    this.s61_1 = new SemanticsPropertyKey('IsShowingTextSubstitution');
    this.t61_1 = AccessibilityKey_0('EditableText');
    this.u61_1 = AccessibilityKey_0('TextSelectionRange');
    this.v61_1 = AccessibilityKey_0('ImeAction');
    this.w61_1 = AccessibilityKey_0('Selected');
    this.x61_1 = AccessibilityKey_0('ToggleableState');
    this.y61_1 = AccessibilityKey_0('Password');
    this.z61_1 = AccessibilityKey_0('Error');
    this.a62_1 = new SemanticsPropertyKey('IndexForKey');
  }
  var SemanticsProperties_instance;
  function SemanticsProperties_getInstance() {
    if (SemanticsProperties_instance == null)
      new SemanticsProperties();
    return SemanticsProperties_instance;
  }
  function SemanticsActions$GetTextLayoutResult$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$OnClick$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$OnLongClick$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$ScrollBy$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$ScrollToIndex$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$SetProgress$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$SetSelection$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$SetText$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$SetTextSubstitution$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$ShowTextSubstitution$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$ClearTextSubstitution$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$InsertTextAtCursor$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$OnImeAction$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$PerformImeAction$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$CopyText$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$CutText$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$PasteText$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$Expand$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$Collapse$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$Dismiss$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$RequestFocus$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$PageUp$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$PageLeft$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$PageDown$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions$PageRight$lambda(parentValue, childValue) {
    var tmp1_elvis_lhs = parentValue == null ? null : parentValue.w5z_1;
    var tmp = tmp1_elvis_lhs == null ? childValue.w5z_1 : tmp1_elvis_lhs;
    var tmp3_elvis_lhs = parentValue == null ? null : parentValue.x5z_1;
    return new AccessibilityAction(tmp, tmp3_elvis_lhs == null ? childValue.x5z_1 : tmp3_elvis_lhs);
  }
  function SemanticsActions() {
    SemanticsActions_instance = this;
    var tmp = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name = 'GetTextLayoutResult';
    tmp.b62_1 = AccessibilityKey(name, SemanticsActions$GetTextLayoutResult$lambda);
    var tmp_0 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    tmp_0.c62_1 = AccessibilityKey('OnClick', SemanticsActions$OnClick$lambda);
    var tmp_1 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_0 = 'OnLongClick';
    tmp_1.d62_1 = AccessibilityKey(name_0, SemanticsActions$OnLongClick$lambda);
    var tmp_2 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_1 = 'ScrollBy';
    tmp_2.e62_1 = AccessibilityKey(name_1, SemanticsActions$ScrollBy$lambda);
    var tmp_3 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_2 = 'ScrollToIndex';
    tmp_3.f62_1 = AccessibilityKey(name_2, SemanticsActions$ScrollToIndex$lambda);
    var tmp_4 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_3 = 'SetProgress';
    tmp_4.g62_1 = AccessibilityKey(name_3, SemanticsActions$SetProgress$lambda);
    var tmp_5 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_4 = 'SetSelection';
    tmp_5.h62_1 = AccessibilityKey(name_4, SemanticsActions$SetSelection$lambda);
    var tmp_6 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    tmp_6.i62_1 = AccessibilityKey('SetText', SemanticsActions$SetText$lambda);
    var tmp_7 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_5 = 'SetTextSubstitution';
    tmp_7.j62_1 = AccessibilityKey(name_5, SemanticsActions$SetTextSubstitution$lambda);
    var tmp_8 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_6 = 'ShowTextSubstitution';
    tmp_8.k62_1 = AccessibilityKey(name_6, SemanticsActions$ShowTextSubstitution$lambda);
    var tmp_9 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_7 = 'ClearTextSubstitution';
    tmp_9.l62_1 = AccessibilityKey(name_7, SemanticsActions$ClearTextSubstitution$lambda);
    var tmp_10 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_8 = 'InsertTextAtCursor';
    tmp_10.m62_1 = AccessibilityKey(name_8, SemanticsActions$InsertTextAtCursor$lambda);
    var tmp_11 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_9 = 'PerformImeAction';
    tmp_11.n62_1 = AccessibilityKey(name_9, SemanticsActions$OnImeAction$lambda);
    var tmp_12 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_10 = 'PerformImeAction';
    tmp_12.o62_1 = AccessibilityKey(name_10, SemanticsActions$PerformImeAction$lambda);
    var tmp_13 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_11 = 'CopyText';
    tmp_13.p62_1 = AccessibilityKey(name_11, SemanticsActions$CopyText$lambda);
    var tmp_14 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    tmp_14.q62_1 = AccessibilityKey('CutText', SemanticsActions$CutText$lambda);
    var tmp_15 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_12 = 'PasteText';
    tmp_15.r62_1 = AccessibilityKey(name_12, SemanticsActions$PasteText$lambda);
    var tmp_16 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    tmp_16.s62_1 = AccessibilityKey('Expand', SemanticsActions$Expand$lambda);
    var tmp_17 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_13 = 'Collapse';
    tmp_17.t62_1 = AccessibilityKey(name_13, SemanticsActions$Collapse$lambda);
    var tmp_18 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    tmp_18.u62_1 = AccessibilityKey('Dismiss', SemanticsActions$Dismiss$lambda);
    var tmp_19 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_14 = 'RequestFocus';
    tmp_19.v62_1 = AccessibilityKey(name_14, SemanticsActions$RequestFocus$lambda);
    this.w62_1 = AccessibilityKey_0('CustomActions');
    var tmp_20 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    tmp_20.x62_1 = AccessibilityKey('PageUp', SemanticsActions$PageUp$lambda);
    var tmp_21 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_15 = 'PageLeft';
    tmp_21.y62_1 = AccessibilityKey(name_15, SemanticsActions$PageLeft$lambda);
    var tmp_22 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_16 = 'PageDown';
    tmp_22.z62_1 = AccessibilityKey(name_16, SemanticsActions$PageDown$lambda);
    var tmp_23 = this;
    // Inline function 'androidx.compose.ui.semantics.ActionPropertyKey' call
    var name_17 = 'PageRight';
    tmp_23.a63_1 = AccessibilityKey(name_17, SemanticsActions$PageRight$lambda);
  }
  var SemanticsActions_instance;
  function SemanticsActions_getInstance() {
    if (SemanticsActions_instance == null)
      new SemanticsActions();
    return SemanticsActions_instance;
  }
  function throwSemanticsGetNotSupported() {
    _init_properties_SemanticsProperties_kt__mp85yq();
    throw UnsupportedOperationException_init_$Create$('You cannot retrieve a semantics property directly - use one of the SemanticsConfiguration.getOr* methods instead');
  }
  function set_text(_this__u8e3s4, value) {
    _init_properties_SemanticsProperties_kt__mp85yq();
    _this__u8e3s4.u5z(SemanticsProperties_getInstance().q61_1, listOf(value));
  }
  function setTextSubstitution(_this__u8e3s4, label, action) {
    label = label === VOID ? null : label;
    _init_properties_SemanticsProperties_kt__mp85yq();
    _this__u8e3s4.u5z(SemanticsActions_getInstance().j62_1, new AccessibilityAction(label, action));
  }
  function showTextSubstitution(_this__u8e3s4, label, action) {
    label = label === VOID ? null : label;
    _init_properties_SemanticsProperties_kt__mp85yq();
    _this__u8e3s4.u5z(SemanticsActions_getInstance().k62_1, new AccessibilityAction(label, action));
  }
  function clearTextSubstitution(_this__u8e3s4, label, action) {
    label = label === VOID ? null : label;
    _init_properties_SemanticsProperties_kt__mp85yq();
    _this__u8e3s4.u5z(SemanticsActions_getInstance().l62_1, new AccessibilityAction(label, action));
  }
  function getTextLayoutResult(_this__u8e3s4, label, action) {
    label = label === VOID ? null : label;
    _init_properties_SemanticsProperties_kt__mp85yq();
    _this__u8e3s4.u5z(SemanticsActions_getInstance().b62_1, new AccessibilityAction(label, action));
  }
  function textSubstitution$factory() {
    return getPropertyCallableRef('textSubstitution', 1, KMutableProperty1, function (receiver) {
      return get_textSubstitution(receiver);
    }, function (receiver, value) {
      return set_textSubstitution(receiver, value);
    });
  }
  function textSubstitution$factory_0() {
    return getPropertyCallableRef('textSubstitution', 1, KMutableProperty1, function (receiver) {
      return get_textSubstitution(receiver);
    }, function (receiver, value) {
      return set_textSubstitution(receiver, value);
    });
  }
  function isShowingTextSubstitution$factory() {
    return getPropertyCallableRef('isShowingTextSubstitution', 1, KMutableProperty1, function (receiver) {
      return get_isShowingTextSubstitution(receiver);
    }, function (receiver, value) {
      return set_isShowingTextSubstitution(receiver, value);
    });
  }
  function isShowingTextSubstitution$factory_0() {
    return getPropertyCallableRef('isShowingTextSubstitution', 1, KMutableProperty1, function (receiver) {
      return get_isShowingTextSubstitution(receiver);
    }, function (receiver, value) {
      return set_isShowingTextSubstitution(receiver, value);
    });
  }
  var properties_initialized_SemanticsProperties_kt_cpdmz4;
  function _init_properties_SemanticsProperties_kt__mp85yq() {
    if (!properties_initialized_SemanticsProperties_kt_cpdmz4) {
      properties_initialized_SemanticsProperties_kt_cpdmz4 = true;
      stateDescription$delegate = SemanticsProperties_getInstance().x60_1;
      progressBarRangeInfo$delegate = SemanticsProperties_getInstance().y60_1;
      paneTitle$delegate = SemanticsProperties_getInstance().z60_1;
      liveRegion$delegate = SemanticsProperties_getInstance().f61_1;
      focused$delegate = SemanticsProperties_getInstance().g61_1;
      isContainer$delegate = SemanticsProperties_getInstance().h61_1;
      isTraversalGroup$delegate = SemanticsProperties_getInstance().h61_1;
      traversalIndex$delegate = SemanticsProperties_getInstance().j61_1;
      horizontalScrollAxisRange$delegate = SemanticsProperties_getInstance().k61_1;
      verticalScrollAxisRange$delegate = SemanticsProperties_getInstance().l61_1;
      role$delegate = SemanticsProperties_getInstance().o61_1;
      testTag$delegate = SemanticsProperties_getInstance().p61_1;
      textSubstitution$delegate = SemanticsProperties_getInstance().r61_1;
      isShowingTextSubstitution$delegate = SemanticsProperties_getInstance().s61_1;
      editableText$delegate = SemanticsProperties_getInstance().t61_1;
      textSelectionRange$delegate = SemanticsProperties_getInstance().u61_1;
      imeAction$delegate = SemanticsProperties_getInstance().v61_1;
      selected$delegate = SemanticsProperties_getInstance().w61_1;
      collectionInfo$delegate = SemanticsProperties_getInstance().b61_1;
      collectionItemInfo$delegate = SemanticsProperties_getInstance().c61_1;
      toggleableState$delegate = SemanticsProperties_getInstance().x61_1;
      customActions$delegate = SemanticsActions_getInstance().w62_1;
    }
  }
  var DefaultCacheSize;
  function areObjectsOfSameType(a, b) {
    var tmp = Object.getPrototypeOf(a).constructor == Object.getPrototypeOf(b).constructor;
    return (!(tmp == null) ? typeof tmp === 'boolean' : false) ? tmp : THROW_CCE();
  }
  function getCurrentThreadId() {
    return new Long(0, 0);
  }
  function getSystemThemeObserver(window_0) {
    return new SystemThemeObserverImpl(window_0);
  }
  function _get_media__ebgb6b($this) {
    // Inline function 'kotlin.getValue' call
    var this_0 = $this.b63_1;
    media$factory();
    return this_0.q2();
  }
  function _get_isSupported__hx18yb($this) {
    // Inline function 'kotlin.js.unsafeCast' call
    return window.matchMedia != undefined;
  }
  function SystemThemeObserverImpl$media$delegate$lambda($window) {
    return function () {
      return $window.matchMedia('(prefers-color-scheme: dark)');
    };
  }
  function SystemThemeObserverImpl$listener$lambda(this$0) {
    return function (it) {
      var tmp;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      if (it.matches) {
        tmp = SystemTheme_Dark_getInstance();
      } else {
        tmp = SystemTheme_Light_getInstance();
      }
      this$0.c63_1.d1a(tmp);
      return Unit_instance;
    };
  }
  function SystemThemeObserverImpl(window_0) {
    var tmp = this;
    tmp.b63_1 = lazy_0(SystemThemeObserverImpl$media$delegate$lambda(window_0));
    this.c63_1 = mutableStateOf(!_get_isSupported__hx18yb(this) ? SystemTheme_Unknown_getInstance() : _get_media__ebgb6b(this).matches ? SystemTheme_Dark_getInstance() : SystemTheme_Light_getInstance());
    var tmp_0 = this;
    tmp_0.d63_1 = EventListener(SystemThemeObserverImpl$listener$lambda(this));
    if (_get_isSupported__hx18yb(this)) {
      try {
        _get_media__ebgb6b(this).addEventListener('change', this.d63_1);
      } catch ($p) {
        if ($p instanceof Error) {
          var t = $p;
          _get_media__ebgb6b(this).addListener(this.d63_1);
        } else {
          throw $p;
        }
      }
    }
  }
  protoOf(SystemThemeObserverImpl).e63 = function () {
    return this.c63_1;
  };
  function media$factory() {
    return getPropertyCallableRef('media', 1, KProperty1, function (receiver) {
      return _get_media__ebgb6b(receiver);
    }, null);
  }
  function PlatformOptimizedCancellationException(message) {
    message = message === VOID ? null : message;
    CancellationException_init_$Init$(message, this);
    captureStack(this, PlatformOptimizedCancellationException);
  }
  function _Key___init__impl__p6mluu(keyCode) {
    return keyCode;
  }
  function _Key___get_keyCode__impl__ymzu5v($this) {
    return $this;
  }
  function Companion_20() {
    Companion_instance_24 = this;
    this.f63_1 = skikoKeyToKey(SkikoKey_KEY_UNKNOWN_getInstance());
    this.g63_1 = skikoKeyToKey(SkikoKey_KEY_HOME_getInstance());
    this.h63_1 = skikoKeyToKey(SkikoKey_KEY_UP_getInstance());
    this.i63_1 = skikoKeyToKey(SkikoKey_KEY_DOWN_getInstance());
    this.j63_1 = skikoKeyToKey(SkikoKey_KEY_LEFT_getInstance());
    this.k63_1 = skikoKeyToKey(SkikoKey_KEY_RIGHT_getInstance());
    this.l63_1 = skikoKeyToKey(SkikoKey_KEY_0_getInstance());
    this.m63_1 = skikoKeyToKey(SkikoKey_KEY_1_getInstance());
    this.n63_1 = skikoKeyToKey(SkikoKey_KEY_2_getInstance());
    this.o63_1 = skikoKeyToKey(SkikoKey_KEY_3_getInstance());
    this.p63_1 = skikoKeyToKey(SkikoKey_KEY_4_getInstance());
    this.q63_1 = skikoKeyToKey(SkikoKey_KEY_5_getInstance());
    this.r63_1 = skikoKeyToKey(SkikoKey_KEY_6_getInstance());
    this.s63_1 = skikoKeyToKey(SkikoKey_KEY_7_getInstance());
    this.t63_1 = skikoKeyToKey(SkikoKey_KEY_8_getInstance());
    this.u63_1 = skikoKeyToKey(SkikoKey_KEY_9_getInstance());
    this.v63_1 = skikoKeyToKey(SkikoKey_KEY_MINUS_getInstance());
    this.w63_1 = skikoKeyToKey(SkikoKey_KEY_EQUALS_getInstance());
    this.x63_1 = skikoKeyToKey(SkikoKey_KEY_A_getInstance());
    this.y63_1 = skikoKeyToKey(SkikoKey_KEY_B_getInstance());
    this.z63_1 = skikoKeyToKey(SkikoKey_KEY_C_getInstance());
    this.a64_1 = skikoKeyToKey(SkikoKey_KEY_D_getInstance());
    this.b64_1 = skikoKeyToKey(SkikoKey_KEY_E_getInstance());
    this.c64_1 = skikoKeyToKey(SkikoKey_KEY_F_getInstance());
    this.d64_1 = skikoKeyToKey(SkikoKey_KEY_G_getInstance());
    this.e64_1 = skikoKeyToKey(SkikoKey_KEY_H_getInstance());
    this.f64_1 = skikoKeyToKey(SkikoKey_KEY_I_getInstance());
    this.g64_1 = skikoKeyToKey(SkikoKey_KEY_J_getInstance());
    this.h64_1 = skikoKeyToKey(SkikoKey_KEY_K_getInstance());
    this.i64_1 = skikoKeyToKey(SkikoKey_KEY_L_getInstance());
    this.j64_1 = skikoKeyToKey(SkikoKey_KEY_M_getInstance());
    this.k64_1 = skikoKeyToKey(SkikoKey_KEY_N_getInstance());
    this.l64_1 = skikoKeyToKey(SkikoKey_KEY_O_getInstance());
    this.m64_1 = skikoKeyToKey(SkikoKey_KEY_P_getInstance());
    this.n64_1 = skikoKeyToKey(SkikoKey_KEY_Q_getInstance());
    this.o64_1 = skikoKeyToKey(SkikoKey_KEY_R_getInstance());
    this.p64_1 = skikoKeyToKey(SkikoKey_KEY_S_getInstance());
    this.q64_1 = skikoKeyToKey(SkikoKey_KEY_T_getInstance());
    this.r64_1 = skikoKeyToKey(SkikoKey_KEY_U_getInstance());
    this.s64_1 = skikoKeyToKey(SkikoKey_KEY_V_getInstance());
    this.t64_1 = skikoKeyToKey(SkikoKey_KEY_W_getInstance());
    this.u64_1 = skikoKeyToKey(SkikoKey_KEY_X_getInstance());
    this.v64_1 = skikoKeyToKey(SkikoKey_KEY_Y_getInstance());
    this.w64_1 = skikoKeyToKey(SkikoKey_KEY_Z_getInstance());
    this.x64_1 = skikoKeyToKey(SkikoKey_KEY_COMMA_getInstance());
    this.y64_1 = skikoKeyToKey(SkikoKey_KEY_PERIOD_getInstance());
    this.z64_1 = skikoKeyToKey(SkikoKey_KEY_LEFT_ALT_getInstance());
    this.a65_1 = skikoKeyToKey(SkikoKey_KEY_RIGHT_ALT_getInstance());
    this.b65_1 = skikoKeyToKey(SkikoKey_KEY_LEFT_SHIFT_getInstance());
    this.c65_1 = skikoKeyToKey(SkikoKey_KEY_RIGHT_SHIFT_getInstance());
    this.d65_1 = skikoKeyToKey(SkikoKey_KEY_TAB_getInstance());
    this.e65_1 = skikoKeyToKey(SkikoKey_KEY_SPACE_getInstance());
    this.f65_1 = skikoKeyToKey(SkikoKey_KEY_ENTER_getInstance());
    this.g65_1 = skikoKeyToKey(SkikoKey_KEY_BACKSPACE_getInstance());
    this.h65_1 = skikoKeyToKey(SkikoKey_KEY_DELETE_getInstance());
    this.i65_1 = skikoKeyToKey(SkikoKey_KEY_ESCAPE_getInstance());
    this.j65_1 = skikoKeyToKey(SkikoKey_KEY_LEFT_CONTROL_getInstance());
    this.k65_1 = skikoKeyToKey(SkikoKey_KEY_RIGHT_CONTROL_getInstance());
    this.l65_1 = skikoKeyToKey(SkikoKey_KEY_CAPSLOCK_getInstance());
    this.m65_1 = skikoKeyToKey(SkikoKey_KEY_SCROLL_LOCK_getInstance());
    this.n65_1 = skikoKeyToKey(SkikoKey_KEY_LEFT_META_getInstance());
    this.o65_1 = skikoKeyToKey(SkikoKey_KEY_RIGHT_META_getInstance());
    this.p65_1 = skikoKeyToKey(SkikoKey_KEY_PRINTSCEEN_getInstance());
    this.q65_1 = skikoKeyToKey(SkikoKey_KEY_INSERT_getInstance());
    this.r65_1 = skikoKeyToKey(SkikoKey_KEY_BACK_QUOTE_getInstance());
    this.s65_1 = skikoKeyToKey(SkikoKey_KEY_OPEN_BRACKET_getInstance());
    this.t65_1 = skikoKeyToKey(SkikoKey_KEY_CLOSE_BRACKET_getInstance());
    this.u65_1 = skikoKeyToKey(SkikoKey_KEY_SLASH_getInstance());
    this.v65_1 = skikoKeyToKey(SkikoKey_KEY_BACKSLASH_getInstance());
    this.w65_1 = skikoKeyToKey(SkikoKey_KEY_SEMICOLON_getInstance());
    this.x65_1 = skikoKeyToKey(SkikoKey_KEY_PGUP_getInstance());
    this.y65_1 = skikoKeyToKey(SkikoKey_KEY_PGDOWN_getInstance());
    this.z65_1 = skikoKeyToKey(SkikoKey_KEY_F1_getInstance());
    this.a66_1 = skikoKeyToKey(SkikoKey_KEY_F2_getInstance());
    this.b66_1 = skikoKeyToKey(SkikoKey_KEY_F3_getInstance());
    this.c66_1 = skikoKeyToKey(SkikoKey_KEY_F4_getInstance());
    this.d66_1 = skikoKeyToKey(SkikoKey_KEY_F5_getInstance());
    this.e66_1 = skikoKeyToKey(SkikoKey_KEY_F6_getInstance());
    this.f66_1 = skikoKeyToKey(SkikoKey_KEY_F7_getInstance());
    this.g66_1 = skikoKeyToKey(SkikoKey_KEY_F8_getInstance());
    this.h66_1 = skikoKeyToKey(SkikoKey_KEY_F9_getInstance());
    this.i66_1 = skikoKeyToKey(SkikoKey_KEY_F10_getInstance());
    this.j66_1 = skikoKeyToKey(SkikoKey_KEY_F11_getInstance());
    this.k66_1 = skikoKeyToKey(SkikoKey_KEY_F12_getInstance());
    this.l66_1 = skikoKeyToKey(SkikoKey_KEY_NUM_LOCK_getInstance());
    this.m66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_0_getInstance());
    this.n66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_1_getInstance());
    this.o66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_2_getInstance());
    this.p66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_3_getInstance());
    this.q66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_4_getInstance());
    this.r66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_5_getInstance());
    this.s66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_6_getInstance());
    this.t66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_7_getInstance());
    this.u66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_8_getInstance());
    this.v66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_9_getInstance());
    this.w66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_DIVIDE_getInstance());
    this.x66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_MULTIPLY_getInstance());
    this.y66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_SUBTRACT_getInstance());
    this.z66_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_ADD_getInstance());
    this.a67_1 = skikoKeyToKey(SkikoKey_KEY_NUMPAD_ENTER_getInstance());
    this.b67_1 = skikoKeyToKey(SkikoKey_KEY_HOME_getInstance());
    this.c67_1 = skikoKeyToKey(SkikoKey_KEY_END_getInstance());
    this.d67_1 = _Key___init__impl__p6mluu(new Long(-1000000001, -1));
    this.e67_1 = _Key___init__impl__p6mluu(new Long(-1000000002, -1));
    this.f67_1 = _Key___init__impl__p6mluu(new Long(-1000000003, -1));
    this.g67_1 = _Key___init__impl__p6mluu(new Long(-1000000004, -1));
    this.h67_1 = _Key___init__impl__p6mluu(new Long(-1000000005, -1));
    this.i67_1 = _Key___init__impl__p6mluu(new Long(-1000000006, -1));
    this.j67_1 = _Key___init__impl__p6mluu(new Long(-1000000007, -1));
    this.k67_1 = _Key___init__impl__p6mluu(new Long(-1000000008, -1));
    this.l67_1 = _Key___init__impl__p6mluu(new Long(-1000000009, -1));
    this.m67_1 = _Key___init__impl__p6mluu(new Long(-1000000010, -1));
    this.n67_1 = _Key___init__impl__p6mluu(new Long(-1000000011, -1));
    this.o67_1 = _Key___init__impl__p6mluu(new Long(-1000000012, -1));
    this.p67_1 = _Key___init__impl__p6mluu(new Long(-1000000013, -1));
    this.q67_1 = _Key___init__impl__p6mluu(new Long(-1000000014, -1));
    this.r67_1 = _Key___init__impl__p6mluu(new Long(-1000000015, -1));
    this.s67_1 = _Key___init__impl__p6mluu(new Long(-1000000016, -1));
    this.t67_1 = _Key___init__impl__p6mluu(new Long(-1000000017, -1));
    this.u67_1 = _Key___init__impl__p6mluu(new Long(-1000000018, -1));
    this.v67_1 = _Key___init__impl__p6mluu(new Long(-1000000019, -1));
    this.w67_1 = _Key___init__impl__p6mluu(new Long(-1000000020, -1));
    this.x67_1 = _Key___init__impl__p6mluu(new Long(-1000000021, -1));
    this.y67_1 = _Key___init__impl__p6mluu(new Long(-1000000022, -1));
    this.z67_1 = _Key___init__impl__p6mluu(new Long(-1000000023, -1));
    this.a68_1 = _Key___init__impl__p6mluu(new Long(-1000000024, -1));
    this.b68_1 = _Key___init__impl__p6mluu(new Long(-1000000025, -1));
    this.c68_1 = _Key___init__impl__p6mluu(new Long(-1000000026, -1));
    this.d68_1 = _Key___init__impl__p6mluu(new Long(-1000000027, -1));
    this.e68_1 = _Key___init__impl__p6mluu(new Long(-1000000028, -1));
    this.f68_1 = _Key___init__impl__p6mluu(new Long(-1000000031, -1));
    this.g68_1 = _Key___init__impl__p6mluu(new Long(-1000000032, -1));
    this.h68_1 = _Key___init__impl__p6mluu(new Long(-1000000033, -1));
    this.i68_1 = _Key___init__impl__p6mluu(new Long(-1000000034, -1));
    this.j68_1 = _Key___init__impl__p6mluu(new Long(-1000000035, -1));
    this.k68_1 = _Key___init__impl__p6mluu(new Long(-1000000036, -1));
    this.l68_1 = _Key___init__impl__p6mluu(new Long(-1000000037, -1));
    this.m68_1 = _Key___init__impl__p6mluu(new Long(-1000000038, -1));
    this.n68_1 = _Key___init__impl__p6mluu(new Long(-1000000039, -1));
    this.o68_1 = _Key___init__impl__p6mluu(new Long(-1000000040, -1));
    this.p68_1 = _Key___init__impl__p6mluu(new Long(-1000000041, -1));
    this.q68_1 = _Key___init__impl__p6mluu(new Long(-1000000042, -1));
    this.r68_1 = _Key___init__impl__p6mluu(new Long(-1000000043, -1));
    this.s68_1 = _Key___init__impl__p6mluu(new Long(-1000000044, -1));
    this.t68_1 = _Key___init__impl__p6mluu(new Long(-1000000045, -1));
    this.u68_1 = _Key___init__impl__p6mluu(new Long(-1000000046, -1));
    this.v68_1 = _Key___init__impl__p6mluu(new Long(-1000000047, -1));
    this.w68_1 = _Key___init__impl__p6mluu(new Long(-1000000048, -1));
    this.x68_1 = _Key___init__impl__p6mluu(new Long(-1000000049, -1));
    this.y68_1 = _Key___init__impl__p6mluu(new Long(-1000000050, -1));
    this.z68_1 = _Key___init__impl__p6mluu(new Long(-1000000051, -1));
    this.a69_1 = _Key___init__impl__p6mluu(new Long(-1000000052, -1));
    this.b69_1 = _Key___init__impl__p6mluu(new Long(-1000000053, -1));
    this.c69_1 = _Key___init__impl__p6mluu(new Long(-1000000054, -1));
    this.d69_1 = _Key___init__impl__p6mluu(new Long(-1000000055, -1));
    this.e69_1 = _Key___init__impl__p6mluu(new Long(-1000000056, -1));
    this.f69_1 = _Key___init__impl__p6mluu(new Long(-1000000057, -1));
    this.g69_1 = _Key___init__impl__p6mluu(new Long(-1000000058, -1));
    this.h69_1 = _Key___init__impl__p6mluu(new Long(-1000000059, -1));
    this.i69_1 = _Key___init__impl__p6mluu(new Long(-1000000060, -1));
    this.j69_1 = _Key___init__impl__p6mluu(new Long(-1000000061, -1));
    this.k69_1 = _Key___init__impl__p6mluu(new Long(-1000000062, -1));
    this.l69_1 = _Key___init__impl__p6mluu(new Long(-1000000063, -1));
    this.m69_1 = _Key___init__impl__p6mluu(new Long(-1000000064, -1));
    this.n69_1 = _Key___init__impl__p6mluu(new Long(-1000000065, -1));
    this.o69_1 = _Key___init__impl__p6mluu(new Long(-1000000066, -1));
    this.p69_1 = _Key___init__impl__p6mluu(new Long(-1000000067, -1));
    this.q69_1 = _Key___init__impl__p6mluu(new Long(-1000000068, -1));
    this.r69_1 = _Key___init__impl__p6mluu(new Long(-1000000069, -1));
    this.s69_1 = _Key___init__impl__p6mluu(new Long(-1000000070, -1));
    this.t69_1 = _Key___init__impl__p6mluu(new Long(-1000000071, -1));
    this.u69_1 = _Key___init__impl__p6mluu(new Long(-1000000072, -1));
    this.v69_1 = _Key___init__impl__p6mluu(new Long(-1000000073, -1));
    this.w69_1 = _Key___init__impl__p6mluu(new Long(-1000000074, -1));
    this.x69_1 = _Key___init__impl__p6mluu(new Long(-1000000075, -1));
    this.y69_1 = _Key___init__impl__p6mluu(new Long(-1000000076, -1));
    this.z69_1 = _Key___init__impl__p6mluu(new Long(-1000000077, -1));
    this.a6a_1 = _Key___init__impl__p6mluu(new Long(-1000000078, -1));
    this.b6a_1 = _Key___init__impl__p6mluu(new Long(-1000000079, -1));
    this.c6a_1 = _Key___init__impl__p6mluu(new Long(-1000000080, -1));
    this.d6a_1 = _Key___init__impl__p6mluu(new Long(-1000000081, -1));
    this.e6a_1 = _Key___init__impl__p6mluu(new Long(-1000000082, -1));
    this.f6a_1 = _Key___init__impl__p6mluu(new Long(-1000000083, -1));
    this.g6a_1 = _Key___init__impl__p6mluu(new Long(-1000000084, -1));
    this.h6a_1 = _Key___init__impl__p6mluu(new Long(-1000000085, -1));
    this.i6a_1 = _Key___init__impl__p6mluu(new Long(-1000000086, -1));
    this.j6a_1 = _Key___init__impl__p6mluu(new Long(-1000000087, -1));
    this.k6a_1 = _Key___init__impl__p6mluu(new Long(-1000000088, -1));
    this.l6a_1 = _Key___init__impl__p6mluu(new Long(-1000000089, -1));
    this.m6a_1 = _Key___init__impl__p6mluu(new Long(-1000000090, -1));
    this.n6a_1 = _Key___init__impl__p6mluu(new Long(-1000000091, -1));
    this.o6a_1 = _Key___init__impl__p6mluu(new Long(-1000000092, -1));
    this.p6a_1 = _Key___init__impl__p6mluu(new Long(-1000000093, -1));
    this.q6a_1 = _Key___init__impl__p6mluu(new Long(-1000000094, -1));
    this.r6a_1 = _Key___init__impl__p6mluu(new Long(-1000000095, -1));
    this.s6a_1 = _Key___init__impl__p6mluu(new Long(-1000000096, -1));
    this.t6a_1 = _Key___init__impl__p6mluu(new Long(-1000000097, -1));
    this.u6a_1 = _Key___init__impl__p6mluu(new Long(-1000000098, -1));
    this.v6a_1 = _Key___init__impl__p6mluu(new Long(-1000000099, -1));
    this.w6a_1 = _Key___init__impl__p6mluu(new Long(-1000000100, -1));
    this.x6a_1 = _Key___init__impl__p6mluu(new Long(-1000000101, -1));
    this.y6a_1 = _Key___init__impl__p6mluu(new Long(-1000000102, -1));
    this.z6a_1 = _Key___init__impl__p6mluu(new Long(-1000000103, -1));
    this.a6b_1 = _Key___init__impl__p6mluu(new Long(-1000000104, -1));
    this.b6b_1 = _Key___init__impl__p6mluu(new Long(-1000000105, -1));
    this.c6b_1 = _Key___init__impl__p6mluu(new Long(-1000000106, -1));
    this.d6b_1 = _Key___init__impl__p6mluu(new Long(-1000000107, -1));
    this.e6b_1 = _Key___init__impl__p6mluu(new Long(-1000000108, -1));
    this.f6b_1 = _Key___init__impl__p6mluu(new Long(-1000000109, -1));
    this.g6b_1 = _Key___init__impl__p6mluu(new Long(-1000000110, -1));
    this.h6b_1 = _Key___init__impl__p6mluu(new Long(-1000000111, -1));
    this.i6b_1 = _Key___init__impl__p6mluu(new Long(-1000000112, -1));
    this.j6b_1 = _Key___init__impl__p6mluu(new Long(-1000000113, -1));
    this.k6b_1 = _Key___init__impl__p6mluu(new Long(-1000000114, -1));
    this.l6b_1 = _Key___init__impl__p6mluu(new Long(-1000000125, -1));
    this.m6b_1 = _Key___init__impl__p6mluu(new Long(-1000000126, -1));
    this.n6b_1 = _Key___init__impl__p6mluu(new Long(-1000000127, -1));
    this.o6b_1 = _Key___init__impl__p6mluu(new Long(-1000000128, -1));
    this.p6b_1 = _Key___init__impl__p6mluu(new Long(-1000000129, -1));
    this.q6b_1 = _Key___init__impl__p6mluu(new Long(-1000000130, -1));
    this.r6b_1 = _Key___init__impl__p6mluu(new Long(-1000000131, -1));
    this.s6b_1 = _Key___init__impl__p6mluu(new Long(-1000000132, -1));
    this.t6b_1 = _Key___init__impl__p6mluu(new Long(-1000000133, -1));
    this.u6b_1 = _Key___init__impl__p6mluu(new Long(-1000000134, -1));
    this.v6b_1 = _Key___init__impl__p6mluu(new Long(-1000000135, -1));
    this.w6b_1 = _Key___init__impl__p6mluu(new Long(-1000000136, -1));
    this.x6b_1 = _Key___init__impl__p6mluu(new Long(-1000000137, -1));
    this.y6b_1 = _Key___init__impl__p6mluu(new Long(-1000000138, -1));
    this.z6b_1 = _Key___init__impl__p6mluu(new Long(-1000000139, -1));
    this.a6c_1 = _Key___init__impl__p6mluu(new Long(-1000000140, -1));
    this.b6c_1 = _Key___init__impl__p6mluu(new Long(-1000000141, -1));
    this.c6c_1 = _Key___init__impl__p6mluu(new Long(-1000000142, -1));
    this.d6c_1 = _Key___init__impl__p6mluu(new Long(-1000000143, -1));
    this.e6c_1 = _Key___init__impl__p6mluu(new Long(-1000000144, -1));
    this.f6c_1 = _Key___init__impl__p6mluu(new Long(-1000000145, -1));
    this.g6c_1 = _Key___init__impl__p6mluu(new Long(-1000000146, -1));
    this.h6c_1 = _Key___init__impl__p6mluu(new Long(-1000000147, -1));
    this.i6c_1 = _Key___init__impl__p6mluu(new Long(-1000000148, -1));
    this.j6c_1 = _Key___init__impl__p6mluu(new Long(-1000000149, -1));
    this.k6c_1 = _Key___init__impl__p6mluu(new Long(-1000000150, -1));
    this.l6c_1 = _Key___init__impl__p6mluu(new Long(-1000000151, -1));
    this.m6c_1 = _Key___init__impl__p6mluu(new Long(-1000000152, -1));
    this.n6c_1 = _Key___init__impl__p6mluu(new Long(-1000000153, -1));
    this.o6c_1 = _Key___init__impl__p6mluu(new Long(-1000000154, -1));
    this.p6c_1 = _Key___init__impl__p6mluu(new Long(-1000000155, -1));
    this.q6c_1 = _Key___init__impl__p6mluu(new Long(-1000000156, -1));
    this.r6c_1 = _Key___init__impl__p6mluu(new Long(-1000000157, -1));
    this.s6c_1 = _Key___init__impl__p6mluu(new Long(-1000000158, -1));
    this.t6c_1 = _Key___init__impl__p6mluu(new Long(-1000000159, -1));
    this.u6c_1 = _Key___init__impl__p6mluu(new Long(-1000000160, -1));
    this.v6c_1 = _Key___init__impl__p6mluu(new Long(-1000000161, -1));
    this.w6c_1 = _Key___init__impl__p6mluu(new Long(-1000000162, -1));
    this.x6c_1 = _Key___init__impl__p6mluu(new Long(-1000000163, -1));
    this.y6c_1 = _Key___init__impl__p6mluu(new Long(-1000000164, -1));
    this.z6c_1 = _Key___init__impl__p6mluu(new Long(-1000000165, -1));
    this.a6d_1 = _Key___init__impl__p6mluu(new Long(-1000000166, -1));
    this.b6d_1 = _Key___init__impl__p6mluu(new Long(-1000000167, -1));
    this.c6d_1 = _Key___init__impl__p6mluu(new Long(-1000000168, -1));
    this.d6d_1 = _Key___init__impl__p6mluu(new Long(-1000000169, -1));
    this.e6d_1 = _Key___init__impl__p6mluu(new Long(-1000000170, -1));
    this.f6d_1 = _Key___init__impl__p6mluu(new Long(-1000000171, -1));
    this.g6d_1 = _Key___init__impl__p6mluu(new Long(-1000000172, -1));
    this.h6d_1 = _Key___init__impl__p6mluu(new Long(-1000000173, -1));
    this.i6d_1 = _Key___init__impl__p6mluu(new Long(-1000000174, -1));
    this.j6d_1 = _Key___init__impl__p6mluu(new Long(-1000000175, -1));
    this.k6d_1 = _Key___init__impl__p6mluu(new Long(-1000000176, -1));
    this.l6d_1 = _Key___init__impl__p6mluu(new Long(-1000000177, -1));
    this.m6d_1 = _Key___init__impl__p6mluu(new Long(-1000000178, -1));
    this.n6d_1 = _Key___init__impl__p6mluu(new Long(-1000000179, -1));
    this.o6d_1 = _Key___init__impl__p6mluu(new Long(-1000000180, -1));
    this.p6d_1 = _Key___init__impl__p6mluu(new Long(-1000000181, -1));
    this.q6d_1 = _Key___init__impl__p6mluu(new Long(-1000000182, -1));
    this.r6d_1 = _Key___init__impl__p6mluu(new Long(-1000000183, -1));
    this.s6d_1 = _Key___init__impl__p6mluu(new Long(-1000000184, -1));
    this.t6d_1 = _Key___init__impl__p6mluu(new Long(-1000000185, -1));
    this.u6d_1 = _Key___init__impl__p6mluu(new Long(-1000000186, -1));
    this.v6d_1 = _Key___init__impl__p6mluu(new Long(-1000000187, -1));
    this.w6d_1 = _Key___init__impl__p6mluu(new Long(-1000000188, -1));
    this.x6d_1 = _Key___init__impl__p6mluu(new Long(-1000000189, -1));
    this.y6d_1 = _Key___init__impl__p6mluu(new Long(-1000000190, -1));
    this.z6d_1 = _Key___init__impl__p6mluu(new Long(-1000000191, -1));
    this.a6e_1 = _Key___init__impl__p6mluu(new Long(-1410067310, -3));
    this.b6e_1 = _Key___init__impl__p6mluu(new Long(-1000000193, -1));
    this.c6e_1 = _Key___init__impl__p6mluu(new Long(-1000000194, -1));
    this.d6e_1 = _Key___init__impl__p6mluu(new Long(-1000000195, -1));
    this.e6e_1 = _Key___init__impl__p6mluu(new Long(-1000000196, -1));
    this.f6e_1 = _Key___init__impl__p6mluu(new Long(-1000000197, -1));
  }
  var Companion_instance_24;
  function Companion_getInstance_34() {
    if (Companion_instance_24 == null)
      new Companion_20();
    return Companion_instance_24;
  }
  function skikoKeyToKey(skikoKey) {
    return _Key___init__impl__p6mluu(toLong(skikoKey.r3h_1));
  }
  function get_isShiftPressed(_this__u8e3s4) {
    return SkikoInputModifiers__has_impl_qg30o6(_KeyEvent___get_nativeKeyEvent__impl__py13j5(_this__u8e3s4).q3d_1, Companion_getInstance_9().o3d_1);
  }
  function get_key(_this__u8e3s4) {
    return skikoKeyToKey(_KeyEvent___get_nativeKeyEvent__impl__py13j5(_this__u8e3s4).p3d_1);
  }
  function get_type(_this__u8e3s4) {
    var tmp;
    switch (_KeyEvent___get_nativeKeyEvent__impl__py13j5(_this__u8e3s4).r3d_1.t9_1) {
      case 1:
        tmp = Companion_getInstance_19().m4o_1;
        break;
      case 2:
        tmp = Companion_getInstance_19().n4o_1;
        break;
      case 3:
        tmp = Companion_getInstance_19().l4o_1;
        break;
      case 0:
        tmp = Companion_getInstance_19().l4o_1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function PointerEventTimeoutCancellationException(time) {
    CancellationException_init_$Init$('Timed out waiting for ' + time.toString() + ' ms', this);
    captureStack(this, PointerEventTimeoutCancellationException);
  }
  function onPointerEventWithMultitouch($this, event) {
    var scale = $this.o6e_1.j6e_1.g2x();
    var tmp = toCompose(event.j3e_1);
    // Inline function 'kotlin.collections.map' call
    var this_0 = event.q3e_1;
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$_0(collectionSizeOrDefault(this_0, 10));
    var tmp0_iterator = this_0.o();
    while (tmp0_iterator.d1()) {
      var item = tmp0_iterator.f1();
      // Inline function 'androidx.compose.ui.native.ComponentImpl.onPointerEventWithMultitouch.<anonymous>' call
      var tmp$ret$0 = new ComposeScenePointer(_PointerId___init__impl__w2urwh(item.s3e_1), Offset_0(item.t3e_1 * scale, item.u3e_1 * scale), item.v3e_1, toCompose_0(item.w3e_1), item.x3e_1);
      destination.a1(tmp$ret$0);
    }
    $this.o6e_1.l6e_1.p6e(tmp, destination, VOID, VOID, VOID, event.p3e_1, event);
  }
  function onPointerEventNoMultitouch($this, event) {
    var scale = $this.o6e_1.j6e_1.g2x();
    var tmp0_$this = $this.o6e_1.l6e_1;
    var tmp1_eventType = toCompose(event.j3e_1);
    var tmp2_scrollDelta = getScrollDelta(event);
    var tmp3_position = Offset_0(event.h3e_1 * scale, event.i3e_1 * scale);
    var tmp4_timeMillis = currentMillis();
    var tmp5_type = Companion_getInstance_21().x50_1;
    tmp0_$this.q6e(tmp1_eventType, tmp3_position, tmp2_scrollDelta, tmp4_timeMillis, tmp5_type, VOID, VOID, event);
  }
  function ComponentImpl($outer) {
    this.o6e_1 = $outer;
    this.n6e_1 = this.o6e_1.h6e_1;
  }
  protoOf(ComponentImpl).h3f = function (canvas, width, height, nanoTime) {
    this.o6e_1.l6e_1.r6e(asComposeCanvas(canvas), nanoTime);
  };
  protoOf(ComponentImpl).f3f = function (event) {
    if (this.o6e_1.i6e_1)
      return Unit_instance;
    this.o6e_1.l6e_1.s6e(_KeyEvent___init__impl__411tom(event));
  };
  protoOf(ComponentImpl).g3f = function (event) {
    var tmp0_safe_receiver = firstOrNull(event.q3e_1);
    if (equals(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.w3e_1, SkikoPointerDevice_TOUCH_getInstance())) {
      if (!(get_platformContext_0(this.o6e_1.l6e_1).x5y().u6e() === Companion_getInstance_18().w4w_1)) {
        get_platformContext_0(this.o6e_1.l6e_1).x5y().t6e(Companion_getInstance_18().w4w_1);
      }
      onPointerEventWithMultitouch(this, event);
    } else {
      onPointerEventNoMultitouch(this, event);
    }
  };
  function initContent($this) {
    var tmp0_safe_receiver = $this.m6e_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver();
    $this.m6e_1 = null;
  }
  function ComposeLayer$scene$1($platformContext) {
    this.v6e_1 = $platformContext;
  }
  protoOf(ComposeLayer$scene$1).w6e = function () {
    return this.v6e_1;
  };
  function SkiaLayer$needRedraw$ref($boundThis) {
    var l = function () {
      $boundThis.e3h();
      return Unit_instance;
    };
    l.callableName = 'needRedraw';
    return l;
  }
  function ComposeLayer$setContent$lambda(this$0, $content) {
    return function () {
      this$0.l6e_1.q1x($content);
      return Unit_instance;
    };
  }
  function ComposeLayer(layer, platformContext, input) {
    this.g6e_1 = layer;
    this.h6e_1 = input;
    this.i6e_1 = false;
    this.j6e_1 = Density_0(1.0);
    this.k6e_1 = new ComponentImpl(this);
    this.g6e_1.n3f_1 = this.k6e_1;
    var tmp = this;
    var tmp0_coroutineContext = Dispatchers_getInstance().w10();
    var tmp1_composeSceneContext = new ComposeLayer$scene$1(platformContext);
    var tmp2_density = this.j6e_1;
    var tmp3_invalidate = SkiaLayer$needRedraw$ref(this.g6e_1);
    tmp.l6e_1 = MultiLayerComposeScene(tmp2_density, VOID, VOID, tmp0_coroutineContext, tmp1_composeSceneContext, tmp3_invalidate);
    this.m6e_1 = null;
  }
  protoOf(ComposeLayer).x6e = function (newDensity) {
    this.j6e_1 = newDensity;
    this.l6e_1.k5i(newDensity);
  };
  protoOf(ComposeLayer).y6e = function (width, height) {
    this.l6e_1.z6e(new IntRect(0, 0, width, height));
    this.g6e_1.e3h();
  };
  protoOf(ComposeLayer).q1x = function (content) {
    var tmp = this;
    tmp.m6e_1 = ComposeLayer$setContent$lambda(this, content);
    initContent(this);
  };
  function getScrollDelta(_this__u8e3s4) {
    // Inline function 'kotlin.takeIf' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    // Inline function 'androidx.compose.ui.native.getScrollDelta.<anonymous>' call
    if (_this__u8e3s4.j3e_1.equals(SkikoPointerEventKind_SCROLL_getInstance())) {
      tmp = _this__u8e3s4;
    } else {
      tmp = null;
    }
    var tmp0_safe_receiver = tmp;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.native.getScrollDelta.<anonymous>' call
      tmp_0 = Offset_0(tmp0_safe_receiver.k3e_1, tmp0_safe_receiver.l3e_1);
    }
    var tmp1_elvis_lhs = tmp_0;
    var tmp_1;
    var tmp_2 = tmp1_elvis_lhs;
    if ((tmp_2 == null ? null : new Offset(tmp_2)) == null) {
      tmp_1 = Companion_getInstance_2().v2v_1;
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    return tmp_1;
  }
  function currentMillis() {
    // Inline function 'kotlin.Long.div' call
    var tmp$ret$0 = currentNanoTime().y6() / 1000000.0;
    return numberToLong(tmp$ret$0);
  }
  function SortedSet(comparator) {
    this.v5j_1 = comparator;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.w5j_1 = ArrayList_init_$Create$();
  }
  protoOf(SortedSet).x5j = function () {
    return first(this.w5j_1);
  };
  protoOf(SortedSet).a1 = function (element) {
    var index = binarySearch(this.w5j_1, element, this.v5j_1);
    if (index < 0) {
      index = (-index | 0) - 1 | 0;
    }
    this.w5j_1.y1(index, element);
    return true;
  };
  protoOf(SortedSet).b1 = function (element) {
    var index = binarySearch(this.w5j_1, element, this.v5j_1);
    var found = 0 <= index ? index <= (this.w5j_1.m() - 1 | 0) : false;
    if (found) {
      this.w5j_1.m1(index);
    }
    return found;
  };
  protoOf(SortedSet).s = function (element) {
    var index = binarySearch(this.w5j_1, element, this.v5j_1);
    return (0 <= index ? index <= (this.w5j_1.m() - 1 | 0) : false) ? equals(this.w5j_1.n(index), element) : false;
  };
  protoOf(SortedSet).u = function () {
    return this.w5j_1.u();
  };
  function toPointerKeyboardModifiers(_this__u8e3s4) {
    var tmp0_isCtrlPressed = SkikoInputModifiers__has_impl_qg30o6(_this__u8e3s4.q3d_1, Companion_getInstance_9().m3d_1);
    var tmp1_isShiftPressed = SkikoInputModifiers__has_impl_qg30o6(_this__u8e3s4.q3d_1, Companion_getInstance_9().o3d_1);
    var tmp2_isAltPressed = SkikoInputModifiers__has_impl_qg30o6(_this__u8e3s4.q3d_1, Companion_getInstance_9().n3d_1);
    var tmp3_isMetaPressed = SkikoInputModifiers__has_impl_qg30o6(_this__u8e3s4.q3d_1, Companion_getInstance_9().l3d_1);
    return PointerKeyboardModifiers_0(tmp0_isCtrlPressed, tmp3_isMetaPressed, tmp2_isAltPressed, tmp1_isShiftPressed);
  }
  var buttonsFlags;
  function toSkikoEvent(_this__u8e3s4, kind, offsetX, offsetY) {
    // Inline function 'kotlin.collections.map' call
    var this_0 = asList(_this__u8e3s4.changedTouches);
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$_0(collectionSizeOrDefault(this_0, 10));
    var tmp0_iterator = this_0.o();
    while (tmp0_iterator.d1()) {
      var item = tmp0_iterator.f1();
      // Inline function 'androidx.compose.ui.events.toSkikoEvent.<anonymous>' call
      var x = item.clientX - offsetX;
      var y = item.clientY - offsetY;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var force = item.force;
      var tmp1_pressed;
      switch (kind.t9_1) {
        case 2:
        case 3:
          tmp1_pressed = true;
          break;
        default:
          tmp1_pressed = false;
          break;
      }
      var tmp2_device = SkikoPointerDevice_TOUCH_getInstance();
      var tmp3_id = toLong(item.identifier);
      var tmp$ret$2 = new SkikoPointer(tmp3_id, x, y, tmp1_pressed, tmp2_device, force);
      destination.a1(tmp$ret$2);
    }
    var pointers = destination;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination_0 = ArrayList_init_$Create$_0(collectionSizeOrDefault(pointers, 10));
    var tmp0_iterator_0 = pointers.o();
    while (tmp0_iterator_0.d1()) {
      var item_0 = tmp0_iterator_0.f1();
      // Inline function 'androidx.compose.ui.events.toSkikoEvent.<anonymous>' call
      var tmp$ret$5 = item_0.t3e_1;
      destination_0.a1(tmp$ret$5);
    }
    var tmp = average(destination_0);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(pointers, 10));
    var tmp0_iterator_1 = pointers.o();
    while (tmp0_iterator_1.d1()) {
      var item_1 = tmp0_iterator_1.f1();
      // Inline function 'androidx.compose.ui.events.toSkikoEvent.<anonymous>' call
      var tmp$ret$8 = item_1.u3e_1;
      destination_1.a1(tmp$ret$8);
    }
    var tmp_0 = average(destination_1);
    // Inline function 'kotlin.Long.div' call
    var tmp$ret$11 = currentNanoTime().y6() / 1000000.0;
    var tmp_1 = numberToLong(tmp$ret$11);
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return new SkikoPointerEvent(tmp, tmp_0, kind, VOID, VOID, VOID, VOID, VOID, tmp_1, pointers, _this__u8e3s4);
  }
  function toSkikoEvent_0(_this__u8e3s4, kind) {
    var tmp0_x = _this__u8e3s4.offsetX;
    var tmp1_y = _this__u8e3s4.offsetY;
    var tmp2_pressedButtons = toSkikoPressedMouseButtons(_this__u8e3s4, kind);
    var tmp3_button = toSkikoMouseButton(_this__u8e3s4);
    var tmp4_modifiers = toSkikoModifiers(_this__u8e3s4);
    var tmp5_timestamp = toLong(numberToInt(_this__u8e3s4.timeStamp));
    return new SkikoPointerEvent(tmp0_x, tmp1_y, kind, VOID, VOID, tmp2_pressedButtons, tmp3_button, tmp4_modifiers, tmp5_timestamp, VOID, _this__u8e3s4);
  }
  function toSkikoDragEvent(_this__u8e3s4) {
    var tmp0_x = _this__u8e3s4.offsetX;
    var tmp1_y = _this__u8e3s4.offsetY;
    var tmp2_pressedButtons = _SkikoMouseButtons___init__impl__kylsco(buttonsFlags);
    var tmp3_button = toSkikoMouseButton(_this__u8e3s4);
    var tmp4_modifiers = toSkikoModifiers(_this__u8e3s4);
    var tmp5_kind = SkikoPointerEventKind_DRAG_getInstance();
    var tmp6_timestamp = toLong(numberToInt(_this__u8e3s4.timeStamp));
    return new SkikoPointerEvent(tmp0_x, tmp1_y, tmp5_kind, VOID, VOID, tmp2_pressedButtons, tmp3_button, tmp4_modifiers, tmp6_timestamp, VOID, _this__u8e3s4);
  }
  function toSkikoScrollEvent(_this__u8e3s4) {
    var tmp0_x = _this__u8e3s4.offsetX;
    var tmp1_y = _this__u8e3s4.offsetY;
    var tmp2_deltaX = _this__u8e3s4.deltaX;
    var tmp3_deltaY = _this__u8e3s4.deltaY;
    var tmp4_pressedButtons = _SkikoMouseButtons___init__impl__kylsco(buttonsFlags);
    var tmp5_button = Companion_getInstance_10().v3d_1;
    var tmp6_modifiers = toSkikoModifiers(_this__u8e3s4);
    var tmp7_kind = SkikoPointerEventKind_SCROLL_getInstance();
    var tmp8_timestamp = toLong(numberToInt(_this__u8e3s4.timeStamp));
    return new SkikoPointerEvent(tmp0_x, tmp1_y, tmp7_kind, tmp2_deltaX, tmp3_deltaY, tmp4_pressedButtons, tmp5_button, tmp6_modifiers, tmp8_timestamp, VOID, _this__u8e3s4);
  }
  function toSkikoEvent_1(_this__u8e3s4, kind) {
    var skikoKey = toSkikoKey(_this__u8e3s4);
    return new SkikoKeyboardEvent(Companion_instance_1.o3h(skikoKey), toSkikoModifiers_0(_this__u8e3s4), kind, toLong(numberToInt(_this__u8e3s4.timeStamp)), _this__u8e3s4);
  }
  function toSkikoPressedMouseButtons(_this__u8e3s4, kind) {
    var button = _this__u8e3s4.button;
    if (kind.equals(SkikoPointerEventKind_DOWN_getInstance())) {
      buttonsFlags = buttonsFlags | getSkikoButtonValue(button);
      return _SkikoMouseButtons___init__impl__kylsco(buttonsFlags);
    }
    buttonsFlags = buttonsFlags ^ getSkikoButtonValue(button);
    return _SkikoMouseButtons___init__impl__kylsco(buttonsFlags);
  }
  function toSkikoMouseButton(event) {
    return _SkikoMouseButtons___init__impl__kylsco(getSkikoButtonValue(event.button));
  }
  function toSkikoModifiers(_this__u8e3s4) {
    var result = 0;
    if (_this__u8e3s4.altKey) {
      result = result | _SkikoInputModifiers___get_value__impl__13eq4a(Companion_getInstance_9().n3d_1);
    }
    if (_this__u8e3s4.shiftKey) {
      result = result | _SkikoInputModifiers___get_value__impl__13eq4a(Companion_getInstance_9().o3d_1);
    }
    if (_this__u8e3s4.ctrlKey) {
      result = result | _SkikoInputModifiers___get_value__impl__13eq4a(Companion_getInstance_9().m3d_1);
    }
    if (_this__u8e3s4.metaKey) {
      result = result | _SkikoInputModifiers___get_value__impl__13eq4a(Companion_getInstance_9().l3d_1);
    }
    return _SkikoInputModifiers___init__impl__z8g2zy(result);
  }
  function toSkikoKey(_this__u8e3s4) {
    var key = _this__u8e3s4.keyCode;
    var side = _this__u8e3s4.location;
    if (side === KeyboardEvent.DOM_KEY_LOCATION_RIGHT) {
      if ((key === SkikoKey_KEY_LEFT_CONTROL_getInstance().r3h_1 ? true : key === SkikoKey_KEY_LEFT_SHIFT_getInstance().r3h_1) ? true : key === SkikoKey_KEY_LEFT_META_getInstance().r3h_1)
        key = key | -2147483648;
    }
    return key;
  }
  function toSkikoModifiers_0(_this__u8e3s4) {
    var result = 0;
    if (_this__u8e3s4.altKey) {
      result = result | _SkikoInputModifiers___get_value__impl__13eq4a(Companion_getInstance_9().n3d_1);
    }
    if (_this__u8e3s4.shiftKey) {
      result = result | _SkikoInputModifiers___get_value__impl__13eq4a(Companion_getInstance_9().o3d_1);
    }
    if (_this__u8e3s4.ctrlKey) {
      result = result | _SkikoInputModifiers___get_value__impl__13eq4a(Companion_getInstance_9().m3d_1);
    }
    if (_this__u8e3s4.metaKey) {
      result = result | _SkikoInputModifiers___get_value__impl__13eq4a(Companion_getInstance_9().l3d_1);
    }
    return _SkikoInputModifiers___init__impl__z8g2zy(result);
  }
  function getSkikoButtonValue(button) {
    switch (button) {
      case 0:
        return _SkikoMouseButtons___get_value__impl__ltkvwc(Companion_getInstance_10().w3d_1);
      case 1:
        return _SkikoMouseButtons___get_value__impl__ltkvwc(Companion_getInstance_10().y3d_1);
      case 2:
        return _SkikoMouseButtons___get_value__impl__ltkvwc(Companion_getInstance_10().x3d_1);
      case 3:
        return _SkikoMouseButtons___get_value__impl__ltkvwc(Companion_getInstance_10().c3e_1);
      case 4:
        return _SkikoMouseButtons___get_value__impl__ltkvwc(Companion_getInstance_10().d3e_1);
      default:
        return 0;
    }
  }
  function get_pointerIconDefault() {
    _init_properties_PointerIcon_js_kt__2c6l6p();
    return pointerIconDefault;
  }
  var pointerIconDefault;
  function get_pointerIconCrosshair() {
    _init_properties_PointerIcon_js_kt__2c6l6p();
    return pointerIconCrosshair;
  }
  var pointerIconCrosshair;
  function get_pointerIconText() {
    _init_properties_PointerIcon_js_kt__2c6l6p();
    return pointerIconText;
  }
  var pointerIconText;
  function get_pointerIconHand() {
    _init_properties_PointerIcon_js_kt__2c6l6p();
    return pointerIconHand;
  }
  var pointerIconHand;
  function BrowserCursor(id) {
    this.a6f_1 = id;
  }
  protoOf(BrowserCursor).toString = function () {
    return 'BrowserCursor(id=' + this.a6f_1 + ')';
  };
  protoOf(BrowserCursor).hashCode = function () {
    return getStringHashCode(this.a6f_1);
  };
  protoOf(BrowserCursor).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof BrowserCursor))
      return false;
    var tmp0_other_with_cast = other instanceof BrowserCursor ? other : THROW_CCE();
    if (!(this.a6f_1 === tmp0_other_with_cast.a6f_1))
      return false;
    return true;
  };
  var properties_initialized_PointerIcon_js_kt_k6r2m5;
  function _init_properties_PointerIcon_js_kt__2c6l6p() {
    if (!properties_initialized_PointerIcon_js_kt_k6r2m5) {
      properties_initialized_PointerIcon_js_kt_k6r2m5 = true;
      pointerIconDefault = new BrowserCursor('default');
      pointerIconCrosshair = new BrowserCursor('crosshair');
      pointerIconText = new BrowserCursor('text');
      pointerIconHand = new BrowserCursor('pointer');
    }
  }
  function get_GlobalSnapshotManagerDispatcher() {
    _init_properties_GlobalSnapshotManager_js_kt__gpk241();
    return GlobalSnapshotManagerDispatcher;
  }
  var GlobalSnapshotManagerDispatcher;
  var properties_initialized_GlobalSnapshotManager_js_kt_9aar5f;
  function _init_properties_GlobalSnapshotManager_js_kt__gpk241() {
    if (!properties_initialized_GlobalSnapshotManager_js_kt_9aar5f) {
      properties_initialized_GlobalSnapshotManager_js_kt_9aar5f = true;
      GlobalSnapshotManagerDispatcher = Dispatchers_getInstance().w10();
    }
  }
  function JSTextInputService() {
    this.b6f_1 = null;
    this.c6f_1 = Empty_instance;
  }
  function simpleIdentityToString(obj, name) {
    var className = name == null ? '<object>' : name;
    return className + '@' + hashCode(obj);
  }
  var defaultCanvasElementId;
  function CanvasBasedWindow(title, canvasElementId, requestResize, applyDefaultStyles, content) {
    title = title === VOID ? null : title;
    canvasElementId = canvasElementId === VOID ? defaultCanvasElementId : canvasElementId;
    requestResize = requestResize === VOID ? null : requestResize;
    applyDefaultStyles = applyDefaultStyles === VOID ? true : applyDefaultStyles;
    content = content === VOID ? ComposableSingletons$ComposeWindow_jsKt_getInstance().d6f_1 : content;
    if (!(title == null)) {
      var tmp0_elvis_lhs = ensureNotNull(document.head).getElementsByTagName('title').item(0);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        // Inline function 'kotlin.also' call
        var this_0 = document.createElement('title');
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.window.CanvasBasedWindow.<anonymous>' call
        ensureNotNull(document.head).appendChild(this_0);
        tmp = this_0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var tmp_0 = tmp;
      var htmlTitleElement = tmp_0 instanceof HTMLTitleElement ? tmp_0 : THROW_CCE();
      htmlTitleElement.textContent = title;
    }
    if (applyDefaultStyles) {
      var tmp_1 = ensureNotNull(document.head);
      // Inline function 'kotlin.apply' call
      var tmp_2 = document.createElement('style');
      var this_1 = tmp_2 instanceof HTMLStyleElement ? tmp_2 : THROW_CCE();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.window.CanvasBasedWindow.<anonymous>' call
      this_1.type = 'text/css';
      this_1.appendChild(document.createTextNode('body { margin: 0; overflow: hidden; } #' + canvasElementId + ' { outline: none; }'));
      tmp_1.appendChild(this_1);
    }
    var tmp_3;
    if (!(requestResize == null)) {
      tmp_3 = requestResize;
    } else {
      Factory_getInstance();
      var channel = Channel(-1);
      var tmp_4 = window;
      tmp_4.addEventListener('resize', CanvasBasedWindow$lambda(channel));
      // Inline function 'kotlin.suspend' call
      tmp_3 = CanvasBasedWindow$slambda_0(channel, null);
    }
    var actualRequestResize = tmp_3;
    if (requestResize == null) {
      var tmp_5 = document.getElementById(canvasElementId);
      var tmp1_safe_receiver = tmp_5 instanceof HTMLCanvasElement ? tmp_5 : null;
      if (tmp1_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var tmp0_safe_receiver = document.documentElement;
        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.clientWidth;
        tmp1_safe_receiver.width = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
        var tmp2_safe_receiver = document.documentElement;
        var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.clientHeight;
        tmp1_safe_receiver.height = tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs;
      }
    }
    var composeWindow = {_v: null};
    composeWindow._v = new ComposeWindow(canvasElementId, ComposableLambda$invoke$ref_1(composableLambdaInstance(-2125398165, true, CanvasBasedWindow$lambda_0(content, actualRequestResize, composeWindow))));
  }
  function ComposableLambda$invoke$ref($boundThis) {
    return function (p0, p1) {
      return $boundThis.t1r(p0, p1);
    };
  }
  function ComposableSingletons$ComposeWindow_jsKt$lambda_1$lambda_4r7yee($composer, $changed) {
    var $composer_0 = $composer;
    sourceInformation($composer_0, 'C:ComposeWindow.js.kt#2oxthz');
    if (!(($changed & 11) === 2) ? true : !$composer_0.v1r()) {
      if (isTraceInProgress()) {
        traceEventStart(-230114670, $changed, -1, 'androidx.compose.ui.window.ComposableSingletons$ComposeWindow_jsKt.lambda-1.<anonymous> (ComposeWindow.js.kt:225)');
      }
      if (isTraceInProgress()) {
        traceEventEnd();
      }
    } else {
      $composer_0.m1m();
    }
    return Unit_instance;
  }
  function ComposableSingletons$ComposeWindow_jsKt() {
    ComposableSingletons$ComposeWindow_jsKt_instance = this;
    var tmp = this;
    tmp.d6f_1 = ComposableLambda$invoke$ref(composableLambdaInstance(-230114670, false, ComposableSingletons$ComposeWindow_jsKt$lambda_1$lambda_4r7yee));
  }
  var ComposableSingletons$ComposeWindow_jsKt_instance;
  function ComposableSingletons$ComposeWindow_jsKt_getInstance() {
    if (ComposableSingletons$ComposeWindow_jsKt_instance == null)
      new ComposableSingletons$ComposeWindow_jsKt();
    return ComposableSingletons$ComposeWindow_jsKt_instance;
  }
  function ComposeWindow$platformContext$1$viewConfiguration$1(this$0) {
    this.f6f_1 = this$0;
    this.e6f_1 = Companion_getInstance_37().g6f_1.d56();
  }
  protoOf(ComposeWindow$platformContext$1$viewConfiguration$1).z5o = function () {
    return this.e6f_1.z5o();
  };
  protoOf(ComposeWindow$platformContext$1$viewConfiguration$1).y5o = function () {
    return this.e6f_1.y5o();
  };
  protoOf(ComposeWindow$platformContext$1$viewConfiguration$1).u56 = function () {
    return this.e6f_1.u56();
  };
  protoOf(ComposeWindow$platformContext$1$viewConfiguration$1).a5p = function () {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.window.<no name provided>.<get-touchSlop>.<anonymous>' call
    var $this$with = this.f6f_1.h6f_1;
    // Inline function 'androidx.compose.ui.unit.dp' call
    var tmp$ret$0 = _Dp___init__impl__ms3zkb(18);
    return $this$with.h2x(tmp$ret$0);
  };
  function addTypedEvent(_this__u8e3s4, $this, type, handler) {
    _this__u8e3s4.addEventListener(type, ComposeWindow$addTypedEvent$lambda($this, handler));
  }
  function initEvents($this, canvas) {
    var offsetX = {_v: 0.0};
    var offsetY = {_v: 0.0};
    var isPointerPressed = {_v: false};
    addTypedEvent(canvas, $this, 'touchstart', ComposeWindow$initEvents$lambda(canvas, offsetX, offsetY));
    addTypedEvent(canvas, $this, 'touchmove', ComposeWindow$initEvents$lambda_0(offsetX, offsetY));
    addTypedEvent(canvas, $this, 'touchend', ComposeWindow$initEvents$lambda_1(offsetX, offsetY));
    addTypedEvent(canvas, $this, 'touchcancel', ComposeWindow$initEvents$lambda_2(offsetX, offsetY));
    addTypedEvent(canvas, $this, 'mousedown', ComposeWindow$initEvents$lambda_3(isPointerPressed));
    addTypedEvent(canvas, $this, 'mouseup', ComposeWindow$initEvents$lambda_4(isPointerPressed));
    addTypedEvent(canvas, $this, 'mousemove', ComposeWindow$initEvents$lambda_5(isPointerPressed));
    addTypedEvent(canvas, $this, 'wheel', ComposeWindow$initEvents$lambda_6);
    canvas.addEventListener('contextmenu', ComposeWindow$initEvents$lambda_7);
    addTypedEvent(canvas, $this, 'keydown', ComposeWindow$initEvents$lambda_8);
    addTypedEvent(canvas, $this, 'keyup', ComposeWindow$initEvents$lambda_9);
  }
  function ComposeWindow$platformContext$1(this$0, $canvasId) {
    this.r6f_1 = this$0;
    this.s6f_1 = $canvasId;
    this.o6f_1 = Companion_getInstance_37().g6f_1;
    this.p6f_1 = this$0.j6f_1;
    var tmp = this;
    tmp.q6f_1 = new ComposeWindow$platformContext$1$viewConfiguration$1(this$0);
  }
  protoOf(ComposeWindow$platformContext$1).x5y = function () {
    return this.o6f_1.x5y();
  };
  protoOf(ComposeWindow$platformContext$1).t6f = function () {
    return this.o6f_1.t6f();
  };
  protoOf(ComposeWindow$platformContext$1).u6f = function () {
    return this.o6f_1.u6f();
  };
  protoOf(ComposeWindow$platformContext$1).v6f = function () {
    return this.o6f_1.v6f();
  };
  protoOf(ComposeWindow$platformContext$1).a5z = function () {
    return this.o6f_1.a5z();
  };
  protoOf(ComposeWindow$platformContext$1).p4r = function () {
    return this.o6f_1.p4r();
  };
  protoOf(ComposeWindow$platformContext$1).g5z = function () {
    return this.r6f_1.i6f_1;
  };
  protoOf(ComposeWindow$platformContext$1).d5z = function () {
    return this.p6f_1;
  };
  protoOf(ComposeWindow$platformContext$1).d56 = function () {
    return this.q6f_1;
  };
  protoOf(ComposeWindow$platformContext$1).w6f = function (pointerIcon) {
    if (pointerIcon instanceof BrowserCursor) {
      setCursor(this.s6f_1, pointerIcon.a6f_1);
    }
  };
  function ComposeWindow$addTypedEvent$lambda(this$0, $handler) {
    return function (event) {
      var tmp0_safe_receiver = this$0.l6f_1.g6e_1;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n3f_1;
      if (tmp1_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        $handler(event instanceof Event ? event : THROW_CCE(), tmp1_safe_receiver);
      }
      return Unit_instance;
    };
  }
  function ComposeWindow$initEvents$lambda($canvas, $offsetX, $offsetY) {
    return function (event, skikoView) {
      event.preventDefault();
      // Inline function 'kotlin.apply' call
      var this_0 = $canvas.getBoundingClientRect();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.window.ComposeWindow.initEvents.<anonymous>.<anonymous>' call
      $offsetX._v = this_0.left;
      $offsetY._v = this_0.top;
      var skikoEvent = toSkikoEvent(event, SkikoPointerEventKind_DOWN_getInstance(), $offsetX._v, $offsetY._v);
      skikoView.g3f(skikoEvent);
      return Unit_instance;
    };
  }
  function ComposeWindow$initEvents$lambda_0($offsetX, $offsetY) {
    return function (event, skikoView) {
      event.preventDefault();
      skikoView.g3f(toSkikoEvent(event, SkikoPointerEventKind_MOVE_getInstance(), $offsetX._v, $offsetY._v));
      return Unit_instance;
    };
  }
  function ComposeWindow$initEvents$lambda_1($offsetX, $offsetY) {
    return function (event, skikoView) {
      event.preventDefault();
      skikoView.g3f(toSkikoEvent(event, SkikoPointerEventKind_UP_getInstance(), $offsetX._v, $offsetY._v));
      return Unit_instance;
    };
  }
  function ComposeWindow$initEvents$lambda_2($offsetX, $offsetY) {
    return function (event, skikoView) {
      event.preventDefault();
      skikoView.g3f(toSkikoEvent(event, SkikoPointerEventKind_UP_getInstance(), $offsetX._v, $offsetY._v));
      return Unit_instance;
    };
  }
  function ComposeWindow$initEvents$lambda_3($isPointerPressed) {
    return function (event, skikoView) {
      $isPointerPressed._v = true;
      skikoView.g3f(toSkikoEvent_0(event, SkikoPointerEventKind_DOWN_getInstance()));
      return Unit_instance;
    };
  }
  function ComposeWindow$initEvents$lambda_4($isPointerPressed) {
    return function (event, skikoView) {
      $isPointerPressed._v = false;
      skikoView.g3f(toSkikoEvent_0(event, SkikoPointerEventKind_UP_getInstance()));
      return Unit_instance;
    };
  }
  function ComposeWindow$initEvents$lambda_5($isPointerPressed) {
    return function (event, skikoView) {
      var tmp;
      if ($isPointerPressed._v) {
        skikoView.g3f(toSkikoDragEvent(event));
        tmp = Unit_instance;
      } else {
        skikoView.g3f(toSkikoEvent_0(event, SkikoPointerEventKind_MOVE_getInstance()));
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function ComposeWindow$initEvents$lambda_6(event, skikoView) {
    skikoView.g3f(toSkikoScrollEvent(event));
    return Unit_instance;
  }
  function ComposeWindow$initEvents$lambda_7(event) {
    event.preventDefault();
    return Unit_instance;
  }
  function ComposeWindow$initEvents$lambda_8(event, skikoView) {
    event.preventDefault();
    skikoView.f3f(toSkikoEvent_1(event, SkikoKeyboardEventKind_DOWN_getInstance()));
    return Unit_instance;
  }
  function ComposeWindow$initEvents$lambda_9(event, skikoView) {
    event.preventDefault();
    skikoView.f3f(toSkikoEvent_1(event, SkikoKeyboardEventKind_UP_getInstance()));
    return Unit_instance;
  }
  function ComposableLambda$invoke$ref_0($boundThis) {
    return function (p0, p1) {
      return $boundThis.t1r(p0, p1);
    };
  }
  function ComposeWindow$lambda(this$0, $content) {
    return function ($composer, $changed) {
      var $composer_0 = $composer;
      sourceInformation($composer_0, 'C183@6909L161:ComposeWindow.js.kt#2oxthz');
      var tmp;
      if (!(($changed & 11) === 2) ? true : !$composer_0.v1r()) {
        if (isTraceInProgress()) {
          traceEventStart(1705963352, $changed, -1, 'androidx.compose.ui.window.ComposeWindow.<anonymous> (ComposeWindow.js.kt:183)');
        }
        CompositionLocalProvider_0(get_LocalSystemTheme().z1y(this$0.m6f_1.e63().q2()), $content, $composer_0, 0);
        var tmp_0;
        if (isTraceInProgress()) {
          traceEventEnd();
          tmp_0 = Unit_instance;
        }
        tmp = tmp_0;
      } else {
        $composer_0.m1m();
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function ComposeWindow(canvasId, content) {
    this.h6f_1 = Density_0(window.devicePixelRatio, 1.0);
    var tmp = this;
    // Inline function 'kotlin.apply' call
    var this_0 = new WindowInfoImpl();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.window.ComposeWindow._windowInfo.<anonymous>' call
    this_0.a6g(true);
    tmp.i6f_1 = this_0;
    this.j6f_1 = new JSTextInputService();
    var tmp_0 = this;
    tmp_0.k6f_1 = new ComposeWindow$platformContext$1(this, canvasId);
    this.l6f_1 = new ComposeLayer(new SkiaLayer(), this.k6f_1, this.j6f_1.c6f_1);
    this.m6f_1 = getSystemThemeObserver(window);
    var tmp_1 = this;
    var tmp_2 = document.getElementById(canvasId);
    tmp_1.n6f_1 = tmp_2 instanceof HTMLCanvasElement ? tmp_2 : THROW_CCE();
    this.l6f_1.g6e_1.n3h(this.n6f_1);
    initEvents(this, this.n6f_1);
    this.n6f_1.setAttribute('tabindex', '0');
    this.l6f_1.g6e_1.e3h();
    this.i6f_1.b6g(IntSize(this.n6f_1.width, this.n6f_1.height));
    this.l6f_1.y6e(this.n6f_1.width, this.n6f_1.height);
    this.l6f_1.x6e(this.h6f_1);
    this.l6f_1.q1x(ComposableLambda$invoke$ref_0(composableLambdaInstance(1705963352, true, ComposeWindow$lambda(this, content))));
  }
  protoOf(ComposeWindow).l5y = function (newSize) {
    this.n6f_1.width = _IntSize___get_width__impl__d9yl4o(newSize);
    this.n6f_1.height = _IntSize___get_height__impl__prv63b(newSize);
    this.i6f_1.b6g(IntSize(this.n6f_1.width, this.n6f_1.height));
    this.l6f_1.g6e_1.n3h(this.n6f_1);
    this.l6f_1.y6e(this.n6f_1.width, this.n6f_1.height);
    this.l6f_1.g6e_1.e3h();
  };
  function setCursor(elementId, value) {
    return document.getElementById(elementId).style.cursor = value;
  }
  function CanvasBasedWindow$lambda($channel) {
    return function (_anonymous_parameter_0__qggqh8) {
      var tmp0_safe_receiver = document.documentElement;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.clientWidth;
      var w = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var tmp2_safe_receiver = document.documentElement;
      var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.clientHeight;
      var h = tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs;
      $channel.i16(new IntSize_0(IntSize(w, h)));
      return Unit_instance;
    };
  }
  function CanvasBasedWindow$slambda($channel, resultContinuation) {
    this.k6g_1 = $channel;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(CanvasBasedWindow$slambda).l6g = function ($completion) {
    var tmp = this.i48($completion);
    tmp.cc_1 = Unit_instance;
    tmp.dc_1 = null;
    var tmp_0 = tmp.mc();
    if (tmp_0 === get_COROUTINE_SUSPENDED())
      return tmp_0;
    return tmp_0;
  };
  protoOf(CanvasBasedWindow$slambda).j48 = function ($completion) {
    return this.l6g($completion);
  };
  protoOf(CanvasBasedWindow$slambda).mc = function () {
    var suspendResult = this.cc_1;
    $sm: do
      try {
        var tmp = this.ac_1;
        switch (tmp) {
          case 0:
            this.bc_1 = 2;
            this.ac_1 = 1;
            suspendResult = this.k6g_1.l16(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.dc_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.bc_1 === 2) {
          throw e;
        } else {
          this.ac_1 = this.bc_1;
          this.dc_1 = e;
        }
      }
     while (true);
  };
  protoOf(CanvasBasedWindow$slambda).i48 = function (completion) {
    return new CanvasBasedWindow$slambda(this.k6g_1, completion);
  };
  function CanvasBasedWindow$slambda_0($channel, resultContinuation) {
    var i = new CanvasBasedWindow$slambda($channel, resultContinuation);
    var l = function ($completion) {
      return i.l6g($completion);
    };
    l.$arity = 0;
    return l;
  }
  function ComposableLambda$invoke$ref_1($boundThis) {
    return function (p0, p1) {
      return $boundThis.t1r(p0, p1);
    };
  }
  function CanvasBasedWindow$lambda$slambda($actualRequestResize, $composeWindow, resultContinuation) {
    this.u6g_1 = $actualRequestResize;
    this.v6g_1 = $composeWindow;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(CanvasBasedWindow$lambda$slambda).j20 = function ($this$LaunchedEffect, $completion) {
    var tmp = this.k20($this$LaunchedEffect, $completion);
    tmp.cc_1 = Unit_instance;
    tmp.dc_1 = null;
    return tmp.mc();
  };
  protoOf(CanvasBasedWindow$lambda$slambda).yc = function (p1, $completion) {
    return this.j20((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(CanvasBasedWindow$lambda$slambda).mc = function () {
    var suspendResult = this.cc_1;
    $sm: do
      try {
        var tmp = this.ac_1;
        switch (tmp) {
          case 0:
            this.bc_1 = 5;
            this.ac_1 = 1;
            continue $sm;
          case 1:
            if (!get_isActive(this.w6g_1)) {
              this.ac_1 = 4;
              continue $sm;
            }

            this.ac_1 = 2;
            suspendResult = this.u6g_1(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.x6g_1 = suspendResult.h2y_1;
            var tmp0_safe_receiver = this.v6g_1._v;
            if (tmp0_safe_receiver == null)
              null;
            else {
              tmp0_safe_receiver.l5y(this.x6g_1);
            }

            this.ac_1 = 3;
            suspendResult = delay(new Long(100, 0), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.ac_1 = 1;
            continue $sm;
          case 4:
            return Unit_instance;
          case 5:
            throw this.dc_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.bc_1 === 5) {
          throw e;
        } else {
          this.ac_1 = this.bc_1;
          this.dc_1 = e;
        }
      }
     while (true);
  };
  protoOf(CanvasBasedWindow$lambda$slambda).k20 = function ($this$LaunchedEffect, completion) {
    var i = new CanvasBasedWindow$lambda$slambda(this.u6g_1, this.v6g_1, completion);
    i.w6g_1 = $this$LaunchedEffect;
    return i;
  };
  function CanvasBasedWindow$lambda$slambda_0($actualRequestResize, $composeWindow, resultContinuation) {
    var i = new CanvasBasedWindow$lambda$slambda($actualRequestResize, $composeWindow, resultContinuation);
    var l = function ($this$LaunchedEffect, $completion) {
      return i.j20($this$LaunchedEffect, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function CanvasBasedWindow$lambda_0($content, $actualRequestResize, $composeWindow) {
    return function ($composer, $changed) {
      var $composer_0 = $composer;
      sourceInformation($composer_0, 'C280@10252L9,281@10274L239:ComposeWindow.js.kt#2oxthz');
      var tmp;
      if (!(($changed & 11) === 2) ? true : !$composer_0.v1r()) {
        if (isTraceInProgress()) {
          traceEventStart(-2125398165, $changed, -1, 'androidx.compose.ui.window.CanvasBasedWindow.<anonymous> (ComposeWindow.js.kt:280)');
        }
        $content($composer_0, 0);
        LaunchedEffect(Unit_instance, CanvasBasedWindow$lambda$slambda_0($actualRequestResize, $composeWindow, null), $composer_0, 70);
        var tmp_0;
        if (isTraceInProgress()) {
          traceEventEnd();
          tmp_0 = Unit_instance;
        }
        tmp = tmp_0;
      } else {
        $composer_0.m1m();
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function get_LocalSystemTheme() {
    _init_properties_SystemTheme_kt__a9f6so();
    return LocalSystemTheme;
  }
  var LocalSystemTheme;
  var SystemTheme_Dark_instance;
  var SystemTheme_Light_instance;
  var SystemTheme_Unknown_instance;
  var SystemTheme_entriesInitialized;
  function SystemTheme_initEntries() {
    if (SystemTheme_entriesInitialized)
      return Unit_instance;
    SystemTheme_entriesInitialized = true;
    SystemTheme_Dark_instance = new SystemTheme('Dark', 0);
    SystemTheme_Light_instance = new SystemTheme('Light', 1);
    SystemTheme_Unknown_instance = new SystemTheme('Unknown', 2);
  }
  function SystemTheme(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function asComposeSystemTheme(_this__u8e3s4) {
    _init_properties_SystemTheme_kt__a9f6so();
    var tmp;
    switch (_this__u8e3s4.t9_1) {
      case 0:
        tmp = SystemTheme_Dark_getInstance();
        break;
      case 1:
        tmp = SystemTheme_Light_getInstance();
        break;
      case 2:
        tmp = SystemTheme_Unknown_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function LocalSystemTheme$lambda() {
    _init_properties_SystemTheme_kt__a9f6so();
    return asComposeSystemTheme(get_currentSystemTheme());
  }
  function SystemTheme_Dark_getInstance() {
    SystemTheme_initEntries();
    return SystemTheme_Dark_instance;
  }
  function SystemTheme_Light_getInstance() {
    SystemTheme_initEntries();
    return SystemTheme_Light_instance;
  }
  function SystemTheme_Unknown_getInstance() {
    SystemTheme_initEntries();
    return SystemTheme_Unknown_instance;
  }
  var properties_initialized_SystemTheme_kt_xc7ieu;
  function _init_properties_SystemTheme_kt__a9f6so() {
    if (!properties_initialized_SystemTheme_kt_xc7ieu) {
      properties_initialized_SystemTheme_kt_xc7ieu = true;
      LocalSystemTheme = staticCompositionLocalOf(LocalSystemTheme$lambda);
    }
  }
  function InternalPointerEvent_init_$Init$(changes, pointerInputEvent, $this) {
    InternalPointerEvent.call($this, pointerInputEvent.m53_1, changes, pointerInputEvent.p53_1, pointerInputEvent.q53_1, pointerInputEvent.r53_1, pointerInputEvent.s53_1);
    return $this;
  }
  function InternalPointerEvent_init_$Create$(changes, pointerInputEvent) {
    return InternalPointerEvent_init_$Init$(changes, pointerInputEvent, objectCreate(protoOf(InternalPointerEvent)));
  }
  function InternalPointerEvent(type, changes, buttons, keyboardModifiers, nativeEvent, button) {
    this.l4y_1 = type;
    this.m4y_1 = changes;
    this.n4y_1 = buttons;
    this.o4y_1 = keyboardModifiers;
    this.p4y_1 = nativeEvent;
    this.q4y_1 = button;
    this.r4y_1 = false;
  }
  protoOf(InternalPointerEvent).a50 = function (pointerId) {
    var tmp0_safe_receiver = this.m4y_1.ho(_PointerId___get_value__impl__odqw2d(pointerId));
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n4z_1;
    return equals(tmp == null ? null : new PointerType(tmp), new PointerType(Companion_getInstance_21().x50_1));
  };
  function _PointerButton___init__impl__7ge8a2(index) {
    return index;
  }
  function Companion_21() {
    Companion_instance_25 = this;
    this.y6g_1 = _PointerButton___init__impl__7ge8a2(0);
    this.z6g_1 = _PointerButton___init__impl__7ge8a2(1);
    this.a6h_1 = _PointerButton___init__impl__7ge8a2(2);
    this.b6h_1 = _PointerButton___init__impl__7ge8a2(3);
    this.c6h_1 = _PointerButton___init__impl__7ge8a2(4);
  }
  var Companion_instance_25;
  function Companion_getInstance_35() {
    if (Companion_instance_25 == null)
      new Companion_21();
    return Companion_instance_25;
  }
  function PointerButton__toString_impl_6o1u32($this) {
    return 'PointerButton(index=' + $this + ')';
  }
  function PointerButton__hashCode_impl_sf7qvx($this) {
    return $this;
  }
  function PointerButton__equals_impl_7hirj($this, other) {
    if (!(other instanceof PointerButton))
      return false;
    if (!($this === (other instanceof PointerButton ? other.d6h_1 : THROW_CCE())))
      return false;
    return true;
  }
  function PointerButton(index) {
    Companion_getInstance_35();
    this.d6h_1 = index;
  }
  protoOf(PointerButton).toString = function () {
    return PointerButton__toString_impl_6o1u32(this.d6h_1);
  };
  protoOf(PointerButton).hashCode = function () {
    return PointerButton__hashCode_impl_sf7qvx(this.d6h_1);
  };
  protoOf(PointerButton).equals = function (other) {
    return PointerButton__equals_impl_7hirj(this.d6h_1, other);
  };
  function calculatePointerEventType($this, changes) {
    if (changes.u()) {
      return Companion_getInstance_20().b50_1;
    }
    // Inline function 'androidx.compose.ui.util.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = changes.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = changes.n(index);
        // Inline function 'androidx.compose.ui.input.pointer.Companion.calculatePointerEventType.<anonymous>' call
        if (changedToUpIgnoreConsumed(item)) {
          return Companion_getInstance_20().d50_1;
        }
        if (changedToDownIgnoreConsumed(item)) {
          return Companion_getInstance_20().c50_1;
        }
      }
       while (inductionVariable <= last);
    return Companion_getInstance_20().e50_1;
  }
  function PointerEvent_init_$Init$(changes, internalPointerEvent, $this) {
    var tmp1_elvis_lhs = internalPointerEvent == null ? null : internalPointerEvent.n4y_1;
    var tmp;
    var tmp_0 = tmp1_elvis_lhs;
    if ((tmp_0 == null ? null : new PointerButtons(tmp_0)) == null) {
      tmp = _PointerButtons___init__impl__wq04zh(0);
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var tmp_1 = tmp;
    var tmp3_elvis_lhs = internalPointerEvent == null ? null : internalPointerEvent.o4y_1;
    var tmp_2;
    var tmp_3 = tmp3_elvis_lhs;
    if ((tmp_3 == null ? null : new PointerKeyboardModifiers(tmp_3)) == null) {
      tmp_2 = _PointerKeyboardModifiers___init__impl__bj99nt(0);
    } else {
      tmp_2 = tmp3_elvis_lhs;
    }
    var tmp_4 = tmp_2;
    var tmp5_elvis_lhs = internalPointerEvent == null ? null : internalPointerEvent.l4y_1;
    var tmp_5;
    var tmp_6 = tmp5_elvis_lhs;
    if ((tmp_6 == null ? null : new PointerEventType(tmp_6)) == null) {
      tmp_5 = Companion_getInstance_20().b50_1;
    } else {
      tmp_5 = tmp5_elvis_lhs;
    }
    var tmp_7 = tmp_5;
    var tmp_8 = internalPointerEvent == null ? null : internalPointerEvent.p4y_1;
    PointerEvent.call($this, changes, tmp_1, tmp_4, tmp_7, tmp_8, internalPointerEvent == null ? null : internalPointerEvent.q4y_1);
    return $this;
  }
  function PointerEvent_init_$Create$(changes, internalPointerEvent) {
    return PointerEvent_init_$Init$(changes, internalPointerEvent, objectCreate(protoOf(PointerEvent)));
  }
  function PointerEvent_init_$Init$_0(changes, $this) {
    PointerEvent.call($this, changes, _PointerButtons___init__impl__wq04zh(0), _PointerKeyboardModifiers___init__impl__bj99nt(0), calculatePointerEventType(Companion_instance_26, changes), null, null);
    return $this;
  }
  function PointerEvent_init_$Create$_0(changes) {
    return PointerEvent_init_$Init$_0(changes, objectCreate(protoOf(PointerEvent)));
  }
  function Companion_22() {
  }
  var Companion_instance_26;
  function Companion_getInstance_36() {
    return Companion_instance_26;
  }
  function PointerEvent(changes, buttons, keyboardModifiers, type, nativeEvent, button) {
    this.z4y_1 = changes;
    this.a4z_1 = buttons;
    this.b4z_1 = keyboardModifiers;
    this.c4z_1 = nativeEvent;
    this.d4z_1 = button;
    this.e4z_1 = type;
  }
  protoOf(PointerEvent).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof PointerEvent))
      THROW_CCE();
    if (!equals(this.z4y_1, other.z4y_1))
      return false;
    if (!(this.a4z_1 === other.a4z_1))
      return false;
    if (!(this.b4z_1 === other.b4z_1))
      return false;
    if (!equals(this.c4z_1, other.c4z_1))
      return false;
    var tmp = this.d4z_1;
    var tmp_0 = tmp == null ? null : new PointerButton(tmp);
    var tmp_1 = other.d4z_1;
    if (!equals(tmp_0, tmp_1 == null ? null : new PointerButton(tmp_1)))
      return false;
    if (!(this.e4z_1 === other.e4z_1))
      return false;
    return true;
  };
  protoOf(PointerEvent).hashCode = function () {
    var result = hashCode(this.z4y_1);
    result = imul(31, result) + PointerButtons__hashCode_impl_6w71xq(this.a4z_1) | 0;
    result = imul(31, result) + PointerKeyboardModifiers__hashCode_impl_5ylcsa(this.b4z_1) | 0;
    var tmp = imul(31, result);
    var tmp0_safe_receiver = this.c4z_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    result = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp2_safe_receiver = this.d4z_1;
    var tmp_1;
    var tmp_2 = tmp2_safe_receiver;
    if ((tmp_2 == null ? null : new PointerButton(tmp_2)) == null) {
      tmp_1 = null;
    } else {
      tmp_1 = PointerButton__hashCode_impl_sf7qvx(tmp2_safe_receiver);
    }
    var tmp3_elvis_lhs = tmp_1;
    result = tmp_0 + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    result = imul(31, result) + PointerEventType__hashCode_impl_p2f3az(this.e4z_1) | 0;
    return result;
  };
  protoOf(PointerEvent).toString = function () {
    var tmp = 'PointerEvent(changes=' + this.z4y_1 + (', buttons=' + new PointerButtons(this.a4z_1)) + (', keyboardModifiers=' + new PointerKeyboardModifiers(this.b4z_1)) + (', nativeEvent=' + toString_0(this.c4z_1));
    var tmp_0 = this.d4z_1;
    return tmp + (', button=' + (tmp_0 == null ? null : new PointerButton(tmp_0))) + (', type=' + new PointerEventType(this.e4z_1)) + ')';
  };
  function EmptyPointerKeyboardModifiers() {
    return PointerKeyboardModifiers_0();
  }
  function PointerButtons_0(isPrimaryPressed, isSecondaryPressed, isTertiaryPressed, isBackPressed, isForwardPressed) {
    isPrimaryPressed = isPrimaryPressed === VOID ? false : isPrimaryPressed;
    isSecondaryPressed = isSecondaryPressed === VOID ? false : isSecondaryPressed;
    isTertiaryPressed = isTertiaryPressed === VOID ? false : isTertiaryPressed;
    isBackPressed = isBackPressed === VOID ? false : isBackPressed;
    isForwardPressed = isForwardPressed === VOID ? false : isForwardPressed;
    var res = 0;
    if (isPrimaryPressed)
      res = res | 1;
    if (isSecondaryPressed)
      res = res | 2;
    if (isTertiaryPressed)
      res = res | 4;
    if (isBackPressed)
      res = res | 8;
    if (isForwardPressed)
      res = res | 16;
    return _PointerButtons___init__impl__wq04zh(res);
  }
  function PointerKeyboardModifiers_0(isCtrlPressed, isMetaPressed, isAltPressed, isShiftPressed, isAltGraphPressed, isSymPressed, isFunctionPressed, isCapsLockOn, isScrollLockOn, isNumLockOn) {
    isCtrlPressed = isCtrlPressed === VOID ? false : isCtrlPressed;
    isMetaPressed = isMetaPressed === VOID ? false : isMetaPressed;
    isAltPressed = isAltPressed === VOID ? false : isAltPressed;
    isShiftPressed = isShiftPressed === VOID ? false : isShiftPressed;
    isAltGraphPressed = isAltGraphPressed === VOID ? false : isAltGraphPressed;
    isSymPressed = isSymPressed === VOID ? false : isSymPressed;
    isFunctionPressed = isFunctionPressed === VOID ? false : isFunctionPressed;
    isCapsLockOn = isCapsLockOn === VOID ? false : isCapsLockOn;
    isScrollLockOn = isScrollLockOn === VOID ? false : isScrollLockOn;
    isNumLockOn = isNumLockOn === VOID ? false : isNumLockOn;
    var res = 0;
    if (isCtrlPressed)
      res = res | 1;
    if (isMetaPressed)
      res = res | 2;
    if (isAltPressed)
      res = res | 4;
    if (isShiftPressed)
      res = res | 32;
    if (isAltGraphPressed)
      res = res | 8;
    if (isSymPressed)
      res = res | 16;
    if (isFunctionPressed)
      res = res | 64;
    if (isCapsLockOn)
      res = res | 128;
    if (isScrollLockOn)
      res = res | 256;
    if (isNumLockOn)
      res = res | 512;
    return _PointerKeyboardModifiers___init__impl__bj99nt(res);
  }
  function toCompose(_this__u8e3s4) {
    switch (_this__u8e3s4.t9_1) {
      case 1:
        return Companion_getInstance_20().d50_1;
      case 2:
        return Companion_getInstance_20().c50_1;
      case 3:
        return Companion_getInstance_20().e50_1;
      case 4:
        return Companion_getInstance_20().e50_1;
      case 5:
        return Companion_getInstance_20().h50_1;
      case 6:
        return Companion_getInstance_20().f50_1;
      case 7:
        return Companion_getInstance_20().g50_1;
      default:
        return Companion_getInstance_20().b50_1;
    }
  }
  function toCompose_0(_this__u8e3s4) {
    switch (_this__u8e3s4.t9_1) {
      case 1:
        return Companion_getInstance_21().x50_1;
      case 2:
        return Companion_getInstance_21().w50_1;
      default:
        return Companion_getInstance_21().v50_1;
    }
  }
  function get_areAnyPressed(_this__u8e3s4) {
    return (((get_isPrimaryPressed(_this__u8e3s4) ? true : get_isSecondaryPressed(_this__u8e3s4)) ? true : get_isTertiaryPressed(_this__u8e3s4)) ? true : get_isBackPressed(_this__u8e3s4)) ? true : get_isForwardPressed(_this__u8e3s4);
  }
  function copyFor(_this__u8e3s4, button, pressed) {
    return button === Companion_getInstance_35().y6g_1 ? copy(_this__u8e3s4, pressed) : button === Companion_getInstance_35().z6g_1 ? copy(_this__u8e3s4, VOID, pressed) : button === Companion_getInstance_35().a6h_1 ? copy(_this__u8e3s4, VOID, VOID, pressed) : button === Companion_getInstance_35().c6h_1 ? copy(_this__u8e3s4, VOID, VOID, VOID, VOID, pressed) : button === Companion_getInstance_35().b6h_1 ? copy(_this__u8e3s4, VOID, VOID, VOID, pressed) : copy(_this__u8e3s4);
  }
  function get_isPrimaryPressed(_this__u8e3s4) {
    return !((_PointerButtons___get_packedValue__impl__z09y3b(_this__u8e3s4) & 1) === 0);
  }
  function get_isSecondaryPressed(_this__u8e3s4) {
    return !((_PointerButtons___get_packedValue__impl__z09y3b(_this__u8e3s4) & 2) === 0);
  }
  function get_isTertiaryPressed(_this__u8e3s4) {
    return !((_PointerButtons___get_packedValue__impl__z09y3b(_this__u8e3s4) & 4) === 0);
  }
  function get_isBackPressed(_this__u8e3s4) {
    return !((_PointerButtons___get_packedValue__impl__z09y3b(_this__u8e3s4) & 8) === 0);
  }
  function get_isForwardPressed(_this__u8e3s4) {
    return !((_PointerButtons___get_packedValue__impl__z09y3b(_this__u8e3s4) & 16) === 0);
  }
  function copy(_this__u8e3s4, isPrimaryPressed, isSecondaryPressed, isTertiaryPressed, isBackPressed, isForwardPressed) {
    isPrimaryPressed = isPrimaryPressed === VOID ? get_isPrimaryPressed(_this__u8e3s4) : isPrimaryPressed;
    isSecondaryPressed = isSecondaryPressed === VOID ? get_isSecondaryPressed(_this__u8e3s4) : isSecondaryPressed;
    isTertiaryPressed = isTertiaryPressed === VOID ? get_isTertiaryPressed(_this__u8e3s4) : isTertiaryPressed;
    isBackPressed = isBackPressed === VOID ? get_isBackPressed(_this__u8e3s4) : isBackPressed;
    isForwardPressed = isForwardPressed === VOID ? get_isForwardPressed(_this__u8e3s4) : isForwardPressed;
    return PointerButtons_0(isPrimaryPressed, isSecondaryPressed, isTertiaryPressed, isBackPressed, isForwardPressed);
  }
  function get_isShiftPressed_0(_this__u8e3s4) {
    return !((_PointerKeyboardModifiers___get_packedValue__impl__7vcep7(_this__u8e3s4) & 32) === 0);
  }
  function PointerInputEvent(eventType, uptime, pointers, buttons, keyboardModifiers, nativeEvent, button) {
    buttons = buttons === VOID ? _PointerButtons___init__impl__wq04zh(0) : buttons;
    keyboardModifiers = keyboardModifiers === VOID ? _PointerKeyboardModifiers___init__impl__bj99nt(0) : keyboardModifiers;
    nativeEvent = nativeEvent === VOID ? null : nativeEvent;
    button = button === VOID ? null : button;
    this.m53_1 = eventType;
    this.n53_1 = uptime;
    this.o53_1 = pointers;
    this.p53_1 = buttons;
    this.q53_1 = keyboardModifiers;
    this.r53_1 = nativeEvent;
    this.s53_1 = button;
  }
  protoOf(PointerInputEvent).e6h = function (eventType, uptime, pointers, buttons, keyboardModifiers, nativeEvent, button) {
    return new PointerInputEvent(eventType, uptime, pointers, buttons, keyboardModifiers, nativeEvent, button);
  };
  protoOf(PointerInputEvent).f6h = function (eventType, uptime, pointers, buttons, keyboardModifiers, nativeEvent, button, $super) {
    eventType = eventType === VOID ? this.m53_1 : eventType;
    uptime = uptime === VOID ? this.n53_1 : uptime;
    pointers = pointers === VOID ? this.o53_1 : pointers;
    buttons = buttons === VOID ? this.p53_1 : buttons;
    keyboardModifiers = keyboardModifiers === VOID ? this.q53_1 : keyboardModifiers;
    nativeEvent = nativeEvent === VOID ? this.r53_1 : nativeEvent;
    button = button === VOID ? this.s53_1 : button;
    var tmp;
    if ($super === VOID) {
      tmp = this.e6h(eventType, uptime, pointers, buttons, keyboardModifiers, nativeEvent, button);
    } else {
      var tmp_0 = $super.e6h;
      var tmp_1 = button;
      tmp = tmp_0.call(this, new PointerEventType(eventType), uptime, pointers, new PointerButtons(buttons), new PointerKeyboardModifiers(keyboardModifiers), nativeEvent, tmp_1 == null ? null : new PointerButton(tmp_1));
    }
    return tmp;
  };
  protoOf(PointerInputEvent).toString = function () {
    var tmp = this.n53_1.toString();
    var tmp_0 = toString_0(this.r53_1);
    var tmp_1 = this.s53_1;
    return 'PointerInputEvent(eventType=' + new PointerEventType(this.m53_1) + ', uptime=' + tmp + ', pointers=' + this.o53_1 + ', buttons=' + new PointerButtons(this.p53_1) + ', keyboardModifiers=' + new PointerKeyboardModifiers(this.q53_1) + ', nativeEvent=' + tmp_0 + ', button=' + (tmp_1 == null ? null : new PointerButton(tmp_1)) + ')';
  };
  protoOf(PointerInputEvent).hashCode = function () {
    var result = PointerEventType__hashCode_impl_p2f3az(this.m53_1);
    result = imul(result, 31) + this.n53_1.hashCode() | 0;
    result = imul(result, 31) + hashCode(this.o53_1) | 0;
    result = imul(result, 31) + PointerButtons__hashCode_impl_6w71xq(this.p53_1) | 0;
    result = imul(result, 31) + PointerKeyboardModifiers__hashCode_impl_5ylcsa(this.q53_1) | 0;
    result = imul(result, 31) + (this.r53_1 == null ? 0 : hashCode(this.r53_1)) | 0;
    var tmp = imul(result, 31);
    var tmp_0;
    var tmp_1 = this.s53_1;
    if ((tmp_1 == null ? null : new PointerButton(tmp_1)) == null) {
      tmp_0 = 0;
    } else {
      tmp_0 = PointerButton__hashCode_impl_sf7qvx(this.s53_1);
    }
    result = tmp + tmp_0 | 0;
    return result;
  };
  protoOf(PointerInputEvent).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PointerInputEvent))
      return false;
    var tmp0_other_with_cast = other instanceof PointerInputEvent ? other : THROW_CCE();
    if (!(this.m53_1 === tmp0_other_with_cast.m53_1))
      return false;
    if (!this.n53_1.equals(tmp0_other_with_cast.n53_1))
      return false;
    if (!equals(this.o53_1, tmp0_other_with_cast.o53_1))
      return false;
    if (!(this.p53_1 === tmp0_other_with_cast.p53_1))
      return false;
    if (!(this.q53_1 === tmp0_other_with_cast.q53_1))
      return false;
    if (!equals(this.r53_1, tmp0_other_with_cast.r53_1))
      return false;
    var tmp = this.s53_1;
    var tmp_0 = tmp == null ? null : new PointerButton(tmp);
    var tmp_1 = tmp0_other_with_cast.s53_1;
    if (!equals(tmp_0, tmp_1 == null ? null : new PointerButton(tmp_1)))
      return false;
    return true;
  };
  function sendSyntheticMove($this, pointersSourceEvent) {
    var tmp0_elvis_lhs = $this.h6h_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_instance;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var previousEvent = tmp;
    // Inline function 'kotlin.collections.associate' call
    var this_0 = pointersSourceEvent.o53_1;
    var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(this_0, 10)), 16);
    // Inline function 'kotlin.collections.associateTo' call
    var destination = LinkedHashMap_init_$Create$_0(capacity);
    var tmp0_iterator = this_0.o();
    while (tmp0_iterator.d1()) {
      var element = tmp0_iterator.f1();
      // Inline function 'kotlin.collections.plusAssign' call
      // Inline function 'androidx.compose.ui.input.pointer.SyntheticEventSender.sendSyntheticMove.<anonymous>' call
      var pair = to(new PointerId(element.k50_1), new Offset(element.n50_1));
      destination.n2(pair.qe_1, pair.re_1);
    }
    var idToPosition = destination;
    var tmp_0 = Companion_getInstance_20().e50_1;
    sendInternal($this, copySynthetic(previousEvent, $this, tmp_0, SyntheticEventSender$sendSyntheticMove$lambda($this, idToPosition)));
  }
  function sendMissingMoveForHover($this, currentEvent) {
    var tmp;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var this_0 = currentEvent.o53_1;
      var tmp_0;
      if (isInterface(this_0, Collection)) {
        tmp_0 = this_0.u();
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = this_0.o();
      while (tmp0_iterator.d1()) {
        var element = tmp0_iterator.f1();
        // Inline function 'androidx.compose.ui.input.pointer.SyntheticEventSender.sendMissingMoveForHover.<anonymous>' call
        if (element.r50_1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0) {
      tmp = isMoveEventMissing($this, $this.h6h_1, currentEvent);
    } else {
      tmp = false;
    }
    if (tmp) {
      sendSyntheticMove($this, currentEvent);
    }
  }
  function sendMissingReleases($this, currentEvent) {
    var tmp0_elvis_lhs = $this.h6h_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_instance;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var previousEvent = tmp;
    var previousPressed = pressedIds(previousEvent, $this);
    var currentPressed = pressedIds(currentEvent, $this);
    var newReleased = toList(minus_0(previousPressed, toSet(currentPressed)));
    var sendingAsUp = HashSet_init_$Create$_0(newReleased.m());
    var inductionVariable = newReleased.m() - 2 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        sendingAsUp.a1(newReleased.n(i));
        var tmp_0 = Companion_getInstance_20().d50_1;
        sendInternal($this, copySynthetic(previousEvent, $this, tmp_0, SyntheticEventSender$sendMissingReleases$lambda($this, sendingAsUp)));
      }
       while (0 <= inductionVariable);
  }
  function sendMissingPresses($this, currentEvent) {
    // Inline function 'kotlin.sequences.orEmpty' call
    var tmp0_safe_receiver = $this.h6h_1;
    var tmp0_elvis_lhs = tmp0_safe_receiver == null ? null : pressedIds(tmp0_safe_receiver, $this);
    var previousPressed = tmp0_elvis_lhs == null ? emptySequence() : tmp0_elvis_lhs;
    var currentPressed = pressedIds(currentEvent, $this);
    var newPressed = toList(minus_0(currentPressed, toSet(previousPressed)));
    var sendingAsDown = HashSet_init_$Create$_0(newPressed.m());
    var inductionVariable = 0;
    var last = newPressed.m() - 2 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        sendingAsDown.a1(newPressed.n(i));
        var tmp = Companion_getInstance_20().c50_1;
        sendInternal($this, copySynthetic(currentEvent, $this, tmp, SyntheticEventSender$sendMissingPresses$lambda($this, sendingAsDown)));
      }
       while (!(i === last));
  }
  function pressedIds(_this__u8e3s4, $this) {
    var tmp = asSequence(_this__u8e3s4.o53_1);
    var tmp_0 = filter(tmp, SyntheticEventSender$pressedIds$lambda);
    return map(tmp_0, SyntheticEventSender$pressedIds$lambda_0);
  }
  function sendInternal($this, event) {
    $this.g6h_1(event);
    $this.h6h_1 = event.f6h(VOID, VOID, VOID, VOID, VOID, null);
  }
  function isMoveEventMissing($this, previousEvent, currentEvent) {
    return !isMove(currentEvent, $this) ? !isSamePosition(currentEvent, $this, previousEvent) : false;
  }
  function isMove(_this__u8e3s4, $this) {
    return (_this__u8e3s4.m53_1 === Companion_getInstance_20().e50_1 ? true : _this__u8e3s4.m53_1 === Companion_getInstance_20().f50_1) ? true : _this__u8e3s4.m53_1 === Companion_getInstance_20().g50_1;
  }
  function isSamePosition(_this__u8e3s4, $this, previousEvent) {
    var tmp1_safe_receiver = previousEvent == null ? null : previousEvent.o53_1;
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.collections.associate' call
      var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(tmp1_safe_receiver, 10)), 16);
      // Inline function 'kotlin.collections.associateTo' call
      var destination = LinkedHashMap_init_$Create$_0(capacity);
      var tmp0_iterator = tmp1_safe_receiver.o();
      while (tmp0_iterator.d1()) {
        var element = tmp0_iterator.f1();
        // Inline function 'kotlin.collections.plusAssign' call
        // Inline function 'androidx.compose.ui.input.pointer.SyntheticEventSender.isSamePosition.<anonymous>' call
        var pair = to(new PointerId(element.k50_1), new Offset(element.n50_1));
        destination.n2(pair.qe_1, pair.re_1);
      }
      tmp = destination;
    }
    var previousIdToPosition = tmp;
    var tmp$ret$3;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var this_0 = _this__u8e3s4.o53_1;
      var tmp_0;
      if (isInterface(this_0, Collection)) {
        tmp_0 = this_0.u();
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp$ret$3 = true;
        break $l$block_0;
      }
      var tmp0_iterator_0 = this_0.o();
      while (tmp0_iterator_0.d1()) {
        var element_0 = tmp0_iterator_0.f1();
        // Inline function 'androidx.compose.ui.input.pointer.SyntheticEventSender.isSamePosition.<anonymous>' call
        var tmp_1;
        if (previousIdToPosition == null) {
          tmp_1 = null;
        } else {
          var tmp_2 = previousIdToPosition.x2(new PointerId(element_0.k50_1));
          tmp_1 = tmp_2 == null ? null : tmp_2.y2v_1;
        }
        var previousPosition = tmp_1;
        var tmp_3;
        var tmp_4 = previousPosition;
        if ((tmp_4 == null ? null : new Offset(tmp_4)) == null) {
          tmp_3 = true;
        } else {
          var tmp_5 = previousPosition;
          tmp_3 = equals(new Offset(element_0.n50_1), tmp_5 == null ? null : new Offset(tmp_5));
        }
        if (!tmp_3) {
          tmp$ret$3 = false;
          break $l$block_0;
        }
      }
      tmp$ret$3 = true;
    }
    return tmp$ret$3;
  }
  function copySynthetic(_this__u8e3s4, $this, type, copyPointer) {
    // Inline function 'kotlin.collections.map' call
    var this_0 = _this__u8e3s4.o53_1;
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$_0(collectionSizeOrDefault(this_0, 10));
    var tmp0_iterator = this_0.o();
    while (tmp0_iterator.d1()) {
      var item = tmp0_iterator.f1();
      destination.a1(copyPointer(item));
    }
    var tmp1_uptime = _this__u8e3s4.n53_1;
    var tmp2_buttons = _this__u8e3s4.p53_1;
    var tmp3_keyboardModifiers = _this__u8e3s4.q53_1;
    return new PointerInputEvent(type, tmp1_uptime, destination, tmp2_buttons, tmp3_keyboardModifiers, null, null);
  }
  function copySynthetic_0(_this__u8e3s4, $this, position, down) {
    var tmp0_id = _this__u8e3s4.k50_1;
    var tmp1_uptime = _this__u8e3s4.l50_1;
    var tmp2_pressure = _this__u8e3s4.p50_1;
    var tmp3_type = _this__u8e3s4.q50_1;
    var tmp4_issuesEnterExit = _this__u8e3s4.r50_1;
    var tmp5_scrollDelta = Offset_0(0.0, 0.0);
    var tmp6_historical = emptyList();
    return new PointerInputEventData(tmp0_id, tmp1_uptime, position, position, down, tmp2_pressure, tmp3_type, tmp4_issuesEnterExit, tmp6_historical, tmp5_scrollDelta, position);
  }
  function copySynthetic$default(_this__u8e3s4, $this, position, down, $super) {
    position = position === VOID ? _this__u8e3s4.n50_1 : position;
    down = down === VOID ? _this__u8e3s4.o50_1 : down;
    return copySynthetic_0(_this__u8e3s4, $this, position, down);
  }
  function SyntheticEventSender$sendSyntheticMove$lambda(this$0, $idToPosition) {
    return function (it) {
      var tmp = $idToPosition.x2(new PointerId(it.k50_1));
      var tmp0_elvis_lhs = tmp == null ? null : tmp.y2v_1;
      var tmp_0;
      var tmp_1 = tmp0_elvis_lhs;
      if ((tmp_1 == null ? null : new Offset(tmp_1)) == null) {
        tmp_0 = it.n50_1;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      return copySynthetic$default(it, this$0, tmp_0);
    };
  }
  function SyntheticEventSender$sendMissingReleases$lambda(this$0, $sendingAsUp) {
    return function (it) {
      return copySynthetic$default(it, this$0, VOID, !$sendingAsUp.s(new PointerId(it.k50_1)));
    };
  }
  function SyntheticEventSender$sendMissingPresses$lambda(this$0, $sendingAsDown) {
    return function (it) {
      return copySynthetic$default(it, this$0, VOID, $sendingAsDown.s(new PointerId(it.k50_1)));
    };
  }
  function SyntheticEventSender$pressedIds$lambda(it) {
    return it.o50_1;
  }
  function SyntheticEventSender$pressedIds$lambda_0(it) {
    return new PointerId(it.k50_1);
  }
  function SyntheticEventSender(send) {
    this.g6h_1 = send;
    this.h6h_1 = null;
    this.i6h_1 = false;
  }
  protoOf(SyntheticEventSender).a26 = function () {
    this.i6h_1 = false;
    this.h6h_1 = null;
  };
  protoOf(SyntheticEventSender).j6h = function (event) {
    sendMissingMoveForHover(this, event);
    sendMissingReleases(this, event);
    sendMissingPresses(this, event);
    sendInternal(this, event);
  };
  protoOf(SyntheticEventSender).k6h = function () {
    if (this.i6h_1) {
      this.i6h_1 = false;
      var tmp0_safe_receiver = this.h6h_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var tmp;
        var tmp$ret$1;
        $l$block: {
          // Inline function 'androidx.compose.ui.util.fastAny' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.ui.util.fastForEach' call
          var this_0 = tmp0_safe_receiver.o53_1;
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable = 0;
          var last = this_0.m() - 1 | 0;
          if (inductionVariable <= last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var item = this_0.n(index);
              // Inline function 'androidx.compose.ui.util.fastAny.<anonymous>' call
              // Inline function 'androidx.compose.ui.input.pointer.SyntheticEventSender.updatePointerPosition.<anonymous>.<anonymous>' call
              if (item.o50_1 ? true : item.q50_1 === Companion_getInstance_21().x50_1) {
                tmp$ret$1 = true;
                break $l$block;
              }
            }
             while (inductionVariable <= last);
          tmp$ret$1 = false;
        }
        if (tmp$ret$1) {
          sendSyntheticMove(this, tmp0_safe_receiver);
          tmp = Unit_instance;
        }
      }
    }
  };
  function RootNodeOwner$OwnerImpl$measureAndLayout$lambda($sendPointerUpdate, this$0) {
    return function () {
      var tmp;
      if ($sendPointerUpdate) {
        this$0.n6h_1.g6i();
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function RootNodeOwner$OwnerImpl$createLayer$lambda($invalidateParentLayer, this$0) {
    return function () {
      $invalidateParentLayer();
      this$0.m6h_1.m6i();
      return Unit_instance;
    };
  }
  function RootNodeOwner$OwnerImpl$createLayer$lambda_0(this$0) {
    return function () {
      this$0.a6i_1 = true;
      return Unit_instance;
    };
  }
  function _set__layoutDirection__9qttup($this, _set____db54di) {
    var this_0 = $this.u6h_1;
    _layoutDirection$factory();
    this_0.d1a(_set____db54di);
    return Unit_instance;
  }
  function _get__layoutDirection__w75z1n($this) {
    // Inline function 'androidx.compose.runtime.getValue' call
    var this_0 = $this.u6h_1;
    _layoutDirection$factory_0();
    return this_0.q2();
  }
  function clearInvalidObservations($this) {
    if ($this.a6i_1) {
      $this.w6h_1.n5z();
      $this.a6i_1 = false;
    }
  }
  function OwnerImpl($outer, layoutDirection, coroutineContext) {
    this.c6j_1 = $outer;
    this.n6i_1 = coroutineContext;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var this_0 = new LayoutNode();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.OwnerImpl.root.<anonymous>' call
    this_0.n5i(layoutDirection);
    this_0.m5i(RootMeasurePolicy_getInstance());
    this_0.j5i(this.c6j_1.p6h_1);
    tmp.o6i_1 = this_0;
    this.p6i_1 = new LayoutNodeDrawScope();
    this.q6i_1 = new DefaultHapticFeedback();
    this.r6i_1 = new PlatformClipboardManager();
    this.s6i_1 = new DefaultAccessibilityManager();
    this.t6i_1 = new AutofillTree();
    this.u6i_1 = new TextInputService(this.c6j_1.l6h_1.d5z());
    this.v6i_1 = new DelegatingSoftwareKeyboardController(this.u6i_1);
    this.w6i_1 = new PointerIconServiceImpl(this.c6j_1);
    this.x6i_1 = new FontLoader();
    this.y6i_1 = createFontFamilyResolver();
    this.z6i_1 = false;
    this.a6j_1 = new ModifierLocalManager(this);
    var tmp_0 = this;
    // Inline function 'androidx.compose.runtime.collection.mutableVectorOf' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp$ret$1 = fillArrayVal(Array(16), null);
    tmp_0.b6j_1 = new MutableVector(tmp$ret$1, 0);
  }
  protoOf(OwnerImpl).vo = function () {
    return this.n6i_1;
  };
  protoOf(OwnerImpl).q5a = function () {
    return this.o6i_1;
  };
  protoOf(OwnerImpl).i5r = function () {
    return this.p6i_1;
  };
  protoOf(OwnerImpl).w5y = function () {
    return this.q6i_1;
  };
  protoOf(OwnerImpl).x5y = function () {
    return this.c6j_1.l6h_1.x5y();
  };
  protoOf(OwnerImpl).y5y = function () {
    return this.r6i_1;
  };
  protoOf(OwnerImpl).z5y = function () {
    return this.s6i_1;
  };
  protoOf(OwnerImpl).a5z = function () {
    return this.c6j_1.l6h_1.a5z();
  };
  protoOf(OwnerImpl).b5z = function () {
    return this.t6i_1;
  };
  protoOf(OwnerImpl).c5z = function () {
    return null;
  };
  protoOf(OwnerImpl).g2x = function () {
    return this.c6j_1.g2x();
  };
  protoOf(OwnerImpl).d5z = function () {
    return this.u6i_1;
  };
  protoOf(OwnerImpl).e5z = function () {
    return this.v6i_1;
  };
  protoOf(OwnerImpl).f5z = function () {
    return this.w6i_1;
  };
  protoOf(OwnerImpl).l4n = function () {
    return this.c6j_1.o6h_1;
  };
  protoOf(OwnerImpl).g5z = function () {
    return this.c6j_1.l6h_1.g5z();
  };
  protoOf(OwnerImpl).h5z = function () {
    return this.x6i_1;
  };
  protoOf(OwnerImpl).i5z = function () {
    return this.y6i_1;
  };
  protoOf(OwnerImpl).x4o = function () {
    return _get__layoutDirection__w75z1n(this.c6j_1);
  };
  protoOf(OwnerImpl).g5n = function () {
    return this.z6i_1;
  };
  protoOf(OwnerImpl).j5f = function () {
    return this.a6j_1;
  };
  protoOf(OwnerImpl).u5g = function () {
    return this.c6j_1.w6h_1;
  };
  protoOf(OwnerImpl).d56 = function () {
    return this.c6j_1.l6h_1.d56();
  };
  protoOf(OwnerImpl).p4r = function () {
    return this.c6j_1.l6h_1.p4r();
  };
  protoOf(OwnerImpl).q5q = function (node) {
    return Unit_instance;
  };
  protoOf(OwnerImpl).t5q = function (node) {
    this.c6j_1.y6h_1.t5w(node);
    this.u5g().l2u(node);
    this.c6j_1.a6i_1 = true;
  };
  protoOf(OwnerImpl).k5z = function (sendPointerUpdate) {
    var tmp0_safe_receiver = this.c6j_1.d6j();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toConstraints(tmp0_safe_receiver);
    var tmp;
    var tmp_0 = tmp1_elvis_lhs;
    if ((tmp_0 == null ? null : new Constraints(tmp_0)) == null) {
      tmp = Constraints_0();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    updateRootConstraintsWithInfinityCheck(this.c6j_1.y6h_1, tmp);
    var rootNodeResized = this.c6j_1.y6h_1.o5w(RootNodeOwner$OwnerImpl$measureAndLayout$lambda(sendPointerUpdate, this.c6j_1));
    if (rootNodeResized) {
      this.c6j_1.m6h_1.m6i();
    }
    this.c6j_1.y6h_1.s5w();
  };
  protoOf(OwnerImpl).b5v = function (layoutNode, affectsLookahead) {
    this.c6j_1.y6h_1.b5v(layoutNode, affectsLookahead);
  };
  protoOf(OwnerImpl).p5s = function (layoutNode, affectsLookahead, forceRequest, scheduleMeasureAndLayout) {
    if (affectsLookahead) {
      if (this.c6j_1.y6h_1.h5w(layoutNode, forceRequest) ? scheduleMeasureAndLayout : false) {
        this.c6j_1.m6h_1.t5t();
      }
    } else if (this.c6j_1.y6h_1.i5w(layoutNode, forceRequest) ? scheduleMeasureAndLayout : false) {
      this.c6j_1.m6h_1.t5t();
    }
  };
  protoOf(OwnerImpl).s5s = function (layoutNode, affectsLookahead, forceRequest) {
    this.p5s(layoutNode, affectsLookahead, forceRequest, true);
  };
  protoOf(OwnerImpl).n5w = function (layoutNode) {
    this.c6j_1.y6h_1.n5w(layoutNode);
    this.c6j_1.m6h_1.t5t();
  };
  protoOf(OwnerImpl).o5y = function (drawBlock, invalidateParentLayer) {
    $l$block_0: {
      // Inline function 'androidx.compose.runtime.snapshots.Companion.withoutReadObservation' call
      // Inline function 'kotlin.contracts.contract' call
      var snapshot = Companion_instance_0.a2m();
      try {
        var tmp$ret$1;
        $l$block: {
          // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
          var previous = snapshot.y22();
          try {
            // Inline function 'androidx.compose.ui.node.OwnerImpl.createLayer.<anonymous>' call
            tmp$ret$1 = this.g2x();
            break $l$block;
          }finally {
            snapshot.z22(previous);
          }
        }
        break $l$block_0;
      }finally {
        snapshot.ss();
      }
    }
    var tmp = tmp$ret$1;
    var tmp_0 = RootNodeOwner$OwnerImpl$createLayer$lambda(invalidateParentLayer, this.c6j_1);
    return new RenderNodeLayer(tmp, tmp_0, drawBlock, RootNodeOwner$OwnerImpl$createLayer$lambda_0(this.c6j_1));
  };
  protoOf(OwnerImpl).k5f = function () {
    var tmp0_safe_receiver = this.c6j_1.l6h_1.v6f();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.e6j(this.c6j_1.r6h_1);
    }
  };
  protoOf(OwnerImpl).h5y = function (layoutNode) {
    var tmp0_safe_receiver = this.c6j_1.l6h_1.v6f();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.e6j(this.c6j_1.r6h_1);
    }
  };
  protoOf(OwnerImpl).l5z = function (keyEvent) {
    var tmp0_subject = get_key(keyEvent);
    return equals(tmp0_subject, Companion_getInstance_34().d65_1) ? get_isShiftPressed(keyEvent) ? Companion_getInstance_14().b4n_1 : Companion_getInstance_14().a4n_1 : equals(tmp0_subject, Companion_getInstance_34().q67_1) ? Companion_getInstance_14().g4n_1 : equals(tmp0_subject, Companion_getInstance_34().f67_1) ? Companion_getInstance_14().h4n_1 : null;
  };
  protoOf(OwnerImpl).j5z = function (localPosition) {
    var tmp0_safe_receiver = this.c6j_1.d6j();
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e2y();
    var tmp;
    var tmp_0 = tmp1_safe_receiver;
    if ((tmp_0 == null ? null : new IntOffset_0(tmp_0)) == null) {
      tmp = null;
    } else {
      // Inline function 'androidx.compose.ui.unit.toOffset' call
      tmp = Offset_0(_IntOffset___get_x__impl__qiqr5o(tmp1_safe_receiver), _IntOffset___get_y__impl__2avpwj(tmp1_safe_receiver));
    }
    var tmp2_elvis_lhs = tmp;
    var tmp_1;
    var tmp_2 = tmp2_elvis_lhs;
    if ((tmp_2 == null ? null : new Offset(tmp_2)) == null) {
      tmp_1 = Companion_getInstance_2().v2v_1;
    } else {
      tmp_1 = tmp2_elvis_lhs;
    }
    var offset = tmp_1;
    return Offset__plus_impl_c78cg0(localPosition, offset);
  };
  protoOf(OwnerImpl).m5z = function () {
    clearInvalidObservations(this.c6j_1);
    while (this.b6j_1.pn()) {
      var size = this.b6j_1.p1q_1;
      var inductionVariable = 0;
      if (inductionVariable < size)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
          var tmp = this.b6j_1.n1q_1[i];
          var listener = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
          this.b6j_1.v2g(i, null);
          if (listener == null)
            null;
          else
            listener();
        }
         while (inductionVariable < size);
      this.b6j_1.b2(0, size);
    }
  };
  protoOf(OwnerImpl).n4j = function (listener) {
    if (!this.b6j_1.fe(listener)) {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.plusAssign' call
      this.b6j_1.q1q(listener);
    }
  };
  protoOf(OwnerImpl).r5g = function (listener) {
    this.c6j_1.y6h_1.r5g(listener);
    this.c6j_1.m6h_1.t5t();
  };
  function PlatformRootForTestImpl($outer) {
    this.f6j_1 = $outer;
  }
  function PointerIconServiceImpl($outer) {
    this.h6j_1 = $outer;
    this.g6j_1 = null;
  }
  protoOf(PointerIconServiceImpl).o52 = function (value) {
    this.g6j_1 = value;
    var tmp0_elvis_lhs = this.g6j_1;
    this.h6j_1.l6h_1.w6f(tmp0_elvis_lhs == null ? Companion_getInstance_22().n51_1 : tmp0_elvis_lhs);
  };
  function RootNodeOwner$focusOwner$lambda(this$0) {
    return function (it) {
      this$0.q6h_1.n4j(it);
      return Unit_instance;
    };
  }
  function RootNodeOwner$rootModifier$lambda(this$0) {
    return function (it) {
      var focusDirection = this$0.q6h_1.l5z(it.z4w_1);
      var tmp;
      var tmp_0;
      var tmp_1 = focusDirection;
      if ((tmp_1 == null ? null : new FocusDirection(tmp_1)) == null) {
        tmp_0 = true;
      } else {
        tmp_0 = !(get_type(it.z4w_1) === Companion_getInstance_19().n4o_1);
      }
      if (tmp_0) {
        return false;
      }
      this$0.l6h_1.x5y().t6e(Companion_getInstance_18().x4w_1);
      return this$0.o6h_1.f4o(focusDirection);
    };
  }
  function RootNodeOwner(density, layoutDirection, bounds, coroutineContext, platformContext, snapshotInvalidationTracker, inputHandler) {
    this.l6h_1 = platformContext;
    this.m6h_1 = snapshotInvalidationTracker;
    this.n6h_1 = inputHandler;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var tmp_0 = this.l6h_1.t6f();
    var this_0 = new FocusOwnerImpl(tmp_0, RootNodeOwner$focusOwner$lambda(this));
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.node.RootNodeOwner.focusOwner.<anonymous>' call
    this_0.d4o_1 = layoutDirection;
    tmp.o6h_1 = this_0;
    var tmp_1 = this;
    var tmp_2 = EmptySemanticsElement_getInstance().j4i(this.o6h_1.w4o());
    tmp_1.p6h_1 = onKeyEvent(tmp_2, RootNodeOwner$rootModifier$lambda(this));
    this.q6h_1 = new OwnerImpl(this, layoutDirection, coroutineContext);
    this.r6h_1 = new SemanticsOwner(this.q6h_1.q5a());
    this.s6h_1 = mutableStateOf(bounds);
    this.t6h_1 = mutableStateOf(density);
    this.u6h_1 = mutableStateOf(layoutDirection);
    this.v6h_1 = new PlatformRootForTestImpl(this);
    this.w6h_1 = this.m6h_1.i6j();
    this.x6h_1 = new PointerInputEventProcessor(this.q6h_1.q5a());
    this.y6h_1 = new MeasureAndLayoutDelegate(this.q6h_1.q5a());
    this.z6h_1 = false;
    this.w6h_1.o5z();
    this.q6h_1.q5a().k5q(this.q6h_1);
    var tmp0_safe_receiver = this.l6h_1.u6f();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.j6j(this.v6h_1);
    }
    this.a6i_1 = false;
  }
  protoOf(RootNodeOwner).k6j = function (_set____db54di) {
    var this_0 = this.s6h_1;
    bounds$factory();
    this_0.d1a(_set____db54di);
    return Unit_instance;
  };
  protoOf(RootNodeOwner).d6j = function () {
    // Inline function 'androidx.compose.runtime.getValue' call
    var this_0 = this.s6h_1;
    bounds$factory_0();
    return this_0.q2();
  };
  protoOf(RootNodeOwner).k5i = function (_set____db54di) {
    var this_0 = this.t6h_1;
    density$factory();
    this_0.d1a(_set____db54di);
    return Unit_instance;
  };
  protoOf(RootNodeOwner).g2x = function () {
    // Inline function 'androidx.compose.runtime.getValue' call
    var this_0 = this.t6h_1;
    density$factory_0();
    return this_0.q2();
  };
  protoOf(RootNodeOwner).l6j = function () {
    this.q6h_1.k5z(true);
  };
  protoOf(RootNodeOwner).e5n = function (canvas) {
    this.q6h_1.q5a().e5n(canvas);
    clearInvalidObservations(this);
  };
  protoOf(RootNodeOwner).m6j = function (event) {
    var tmp = event.s53_1;
    if (!((tmp == null ? null : new PointerButton(tmp)) == null)) {
      this.l6h_1.x5y().t6e(Companion_getInstance_18().w4w_1);
    }
    var tmp_0;
    if (!(event.m53_1 === Companion_getInstance_20().g50_1)) {
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlin.collections.all' call
        var this_0 = event.o53_1;
        var tmp_1;
        if (isInterface(this_0, Collection)) {
          tmp_1 = this_0.u();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var tmp0_iterator = this_0.o();
        while (tmp0_iterator.d1()) {
          var element = tmp0_iterator.f1();
          // Inline function 'androidx.compose.ui.node.RootNodeOwner.onPointerInput.<anonymous>' call
          var positionInWindow = this.q6h_1.j5z(element.n50_1);
          var tmp0_safe_receiver = this.d6j();
          var tmp_2;
          if (tmp0_safe_receiver == null) {
            tmp_2 = null;
          } else {
            // Inline function 'androidx.compose.ui.unit.round' call
            // Inline function 'kotlin.math.roundToInt' call
            var this_1 = _Offset___get_x__impl__xvi35n(positionInWindow);
            var tmp_3 = roundToInt(this_1);
            // Inline function 'kotlin.math.roundToInt' call
            var this_2 = _Offset___get_y__impl__8bzhra(positionInWindow);
            var tmp$ret$2 = roundToInt(this_2);
            var tmp$ret$3 = IntOffset(tmp_3, tmp$ret$2);
            tmp_2 = tmp0_safe_receiver.f2y(tmp$ret$3);
          }
          var tmp1_elvis_lhs = tmp_2;
          if (!(tmp1_elvis_lhs == null ? true : tmp1_elvis_lhs)) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
        tmp$ret$0 = true;
      }
      tmp_0 = tmp$ret$0;
    } else {
      tmp_0 = false;
    }
    var isInBounds = tmp_0;
    this.x6h_1.a53(event, IdentityPositionCalculator_instance, isInBounds);
  };
  protoOf(RootNodeOwner).i4p = function (keyEvent) {
    return this.o6h_1.g4p(keyEvent);
  };
  function updateRootConstraintsWithInfinityCheck(_this__u8e3s4, constraints) {
    var maxWidth = _Constraints___get_hasBoundedWidth__impl__7hd0wr(constraints) ? _Constraints___get_maxWidth__impl__uuyqc(constraints) : 32766;
    var maxHeight = _Constraints___get_hasBoundedHeight__impl__bsh4rw(constraints) ? _Constraints___get_maxHeight__impl__dt3e8z(constraints) : 32766;
    _this__u8e3s4.k5w(Constraints_0(_Constraints___get_minWidth__impl__hi9lfi(constraints), maxWidth, _Constraints___get_minHeight__impl__ev4bgx(constraints), maxHeight));
  }
  function toConstraints(_this__u8e3s4) {
    return Constraints_0(VOID, _this__u8e3s4.e2w(), VOID, _this__u8e3s4.f2w());
  }
  function IdentityPositionCalculator() {
  }
  protoOf(IdentityPositionCalculator).t53 = function (positionOnScreen) {
    return positionOnScreen;
  };
  var IdentityPositionCalculator_instance;
  function IdentityPositionCalculator_getInstance() {
    return IdentityPositionCalculator_instance;
  }
  function bounds$factory() {
    return getPropertyCallableRef('bounds', 1, KMutableProperty1, function (receiver) {
      return receiver.d6j();
    }, function (receiver, value) {
      return receiver.k6j(value);
    });
  }
  function bounds$factory_0() {
    return getPropertyCallableRef('bounds', 1, KMutableProperty1, function (receiver) {
      return receiver.d6j();
    }, function (receiver, value) {
      return receiver.k6j(value);
    });
  }
  function density$factory() {
    return getPropertyCallableRef('density', 1, KMutableProperty1, function (receiver) {
      return receiver.g2x();
    }, function (receiver, value) {
      return receiver.k5i(value);
    });
  }
  function density$factory_0() {
    return getPropertyCallableRef('density', 1, KMutableProperty1, function (receiver) {
      return receiver.g2x();
    }, function (receiver, value) {
      return receiver.k5i(value);
    });
  }
  function _layoutDirection$factory() {
    return getPropertyCallableRef('_layoutDirection', 1, KMutableProperty1, function (receiver) {
      return _get__layoutDirection__w75z1n(receiver);
    }, function (receiver, value) {
      return _set__layoutDirection__9qttup(receiver, value);
    });
  }
  function _layoutDirection$factory_0() {
    return getPropertyCallableRef('_layoutDirection', 1, KMutableProperty1, function (receiver) {
      return _get__layoutDirection__w75z1n(receiver);
    }, function (receiver, value) {
      return _set__layoutDirection__9qttup(receiver, value);
    });
  }
  function _set_renderingThreadId__9b5jlg($this, _set____db54di) {
    // Inline function 'androidx.compose.ui.node.SnapshotInvalidationTracker.<set-renderingThreadId>.<set-renderingThreadId$delegate>' call
    $this.l6i_1 = _set____db54di;
    return Unit_instance;
  }
  function _get_renderingThreadId__cencow($this) {
    // Inline function 'kotlinx.atomicfu.atomicfu_getValue' call
    return $this.l6i_1;
  }
  function SnapshotInvalidationTracker$_init_$lambda_sbho5n() {
    return Unit_instance;
  }
  function SnapshotInvalidationTracker$snapshotObserver$lambda(this$0) {
    return function (command) {
      var tmp;
      if (equals(_get_renderingThreadId__cencow(this$0), getCurrentThreadId())) {
        tmp = command();
      } else {
        this$0.i6i_1.r6j(command);
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function SnapshotInvalidationTracker(invalidate) {
    var tmp;
    if (invalidate === VOID) {
      tmp = SnapshotInvalidationTracker$_init_$lambda_sbho5n;
    } else {
      tmp = invalidate;
    }
    invalidate = tmp;
    this.h6i_1 = invalidate;
    this.i6i_1 = new CommandList(this.h6i_1);
    this.j6i_1 = true;
    this.k6i_1 = true;
    this.l6i_1 = null;
  }
  protoOf(SnapshotInvalidationTracker).s6j = function () {
    return (this.j6i_1 ? true : this.k6i_1) ? true : this.i6i_1.t6j();
  };
  protoOf(SnapshotInvalidationTracker).t5t = function () {
    this.j6i_1 = true;
    this.h6i_1();
  };
  protoOf(SnapshotInvalidationTracker).u6j = function () {
    this.j6i_1 = false;
  };
  protoOf(SnapshotInvalidationTracker).m6i = function () {
    this.k6i_1 = true;
    this.h6i_1();
  };
  protoOf(SnapshotInvalidationTracker).v6j = function () {
    this.k6i_1 = false;
  };
  protoOf(SnapshotInvalidationTracker).i6j = function () {
    return new OwnerSnapshotObserver(SnapshotInvalidationTracker$snapshotObserver$lambda(this));
  };
  protoOf(SnapshotInvalidationTracker).w6j = function () {
    Companion_instance_0.v21();
    this.i6i_1.x6j();
  };
  function CommandList(onNewCommand) {
    this.n6j_1 = onNewCommand;
    this.o6j_1 = createSynchronizedObject();
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.p6j_1 = ArrayList_init_$Create$();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_0.q6j_1 = ArrayList_init_$Create$();
  }
  protoOf(CommandList).t6j = function () {
    // Inline function 'androidx.compose.ui.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.o6j_1;
    // Inline function 'androidx.compose.ui.node.CommandList.<get-hasCommands>.<anonymous>' call
    // Inline function 'kotlin.collections.isNotEmpty' call
    return !this.p6j_1.u();
  };
  protoOf(CommandList).r6j = function (command) {
    // Inline function 'androidx.compose.ui.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.o6j_1;
    // Inline function 'androidx.compose.ui.node.CommandList.add.<anonymous>' call
    this.p6j_1.a1(command);
    this.n6j_1();
  };
  protoOf(CommandList).x6j = function () {
    // Inline function 'androidx.compose.ui.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.o6j_1;
    this.q6j_1.g1(this.p6j_1);
    this.p6j_1.h1();
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = this.q6j_1.o();
    while (tmp0_iterator.d1()) {
      var element = tmp0_iterator.f1();
      // Inline function 'androidx.compose.ui.node.CommandList.perform.<anonymous>' call
      element();
    }
    this.q6j_1.h1();
  };
  function AtomicInt(value) {
    this.b60_1 = value;
  }
  protoOf(AtomicInt).c60 = function (delta) {
    // Inline function 'kotlinx.atomicfu.atomicfu_addAndGet' call
    // Inline function 'androidx.compose.ui.platform.AtomicInt.addAndGet.<set-delegate>' call
    this.b60_1 = this.b60_1 + delta | 0;
    return this.b60_1;
  };
  function DefaultAccessibilityManager() {
  }
  function DefaultHapticFeedback() {
  }
  function DefaultUiApplier(root) {
    AbstractApplier.call(this, root);
  }
  protoOf(DefaultUiApplier).b6k = function (index, instance) {
  };
  protoOf(DefaultUiApplier).s1f = function (index, instance) {
    return this.b6k(index, instance instanceof LayoutNode ? instance : THROW_CCE());
  };
  protoOf(DefaultUiApplier).c6k = function (index, instance) {
    this.n1f().j5q(index, instance);
  };
  protoOf(DefaultUiApplier).t1f = function (index, instance) {
    return this.c6k(index, instance instanceof LayoutNode ? instance : THROW_CCE());
  };
  protoOf(DefaultUiApplier).u1f = function (index, count) {
    this.n1f().l5q(index, count);
  };
  protoOf(DefaultUiApplier).v1f = function (from, to, count) {
    this.n1f().v1f(from, to, count);
  };
  protoOf(DefaultUiApplier).e1g = function () {
    this.z1f_1.u5b();
  };
  protoOf(DefaultUiApplier).p1f = function () {
    protoOf(AbstractApplier).p1f.call(this);
    var tmp0_safe_receiver = this.z1f_1.n4k_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.m5z();
    }
  };
  function FlushCoroutineDispatcher$dispatch$slambda$lambda(this$0, $block) {
    return function () {
      // Inline function 'androidx.compose.ui.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this$0.h6k_1;
      // Inline function 'androidx.compose.ui.platform.FlushCoroutineDispatcher.dispatch.<anonymous>.<anonymous>.<anonymous>' call
      var isTaskAlive = this$0.f6k_1.b1($block);
      var tmp;
      if (isTaskAlive) {
        $block.ku();
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda$lambda(this$0, $block) {
    return function () {
      // Inline function 'androidx.compose.ui.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this$0.h6k_1;
      // Inline function 'androidx.compose.ui.platform.FlushCoroutineDispatcher.scheduleResumeAfterDelay.<anonymous>.<anonymous>.<anonymous>' call
      var isTaskAlive = this$0.g6k_1.b1($block);
      var tmp;
      if (isTaskAlive) {
        $block.ku();
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function performRun($this, body) {
    // Inline function 'androidx.compose.ui.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.k6k_1;
    var tmp;
    try {
      $this.j6k_1 = true;
      tmp = body();
    }finally {
      $this.j6k_1 = false;
    }
    return tmp;
  }
  function FlushCoroutineDispatcher$dispatch$slambda(this$0, $block, resultContinuation) {
    this.t6k_1 = this$0;
    this.u6k_1 = $block;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(FlushCoroutineDispatcher$dispatch$slambda).j20 = function ($this$launch, $completion) {
    var tmp = this.k20($this$launch, $completion);
    tmp.cc_1 = Unit_instance;
    tmp.dc_1 = null;
    return tmp.mc();
  };
  protoOf(FlushCoroutineDispatcher$dispatch$slambda).yc = function (p1, $completion) {
    return this.j20((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(FlushCoroutineDispatcher$dispatch$slambda).mc = function () {
    var suspendResult = this.cc_1;
    $sm: do
      try {
        var tmp = this.ac_1;
        if (tmp === 0) {
          this.bc_1 = 1;
          performRun(this.t6k_1, FlushCoroutineDispatcher$dispatch$slambda$lambda(this.t6k_1, this.u6k_1));
          return Unit_instance;
        } else if (tmp === 1) {
          throw this.dc_1;
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  };
  protoOf(FlushCoroutineDispatcher$dispatch$slambda).k20 = function ($this$launch, completion) {
    var i = new FlushCoroutineDispatcher$dispatch$slambda(this.t6k_1, this.u6k_1, completion);
    i.v6k_1 = $this$launch;
    return i;
  };
  function FlushCoroutineDispatcher$dispatch$slambda_0(this$0, $block, resultContinuation) {
    var i = new FlushCoroutineDispatcher$dispatch$slambda(this$0, $block, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.j20($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function FlushCoroutineDispatcher$flush$lambda(this$0) {
    return function () {
      while (true) {
        // Inline function 'androidx.compose.ui.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        this$0.h6k_1;
        if (this$0.f6k_1.u())
          return Unit_instance;
        this$0.i6k_1.g1(this$0.f6k_1);
        this$0.f6k_1.h1();
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator = this$0.i6k_1.o();
        while (tmp0_iterator.d1()) {
          var element = tmp0_iterator.f1();
          element.ku();
        }
        this$0.i6k_1.h1();
      }
      return Unit_instance;
    };
  }
  function _no_name_provided__qut3iv($continuation) {
    this.w6k_1 = $continuation;
  }
  protoOf(_no_name_provided__qut3iv).ku = function () {
    // Inline function 'androidx.compose.ui.platform.FlushCoroutineDispatcher.scheduleResumeAfterDelay.<anonymous>' call
    this.w6k_1.is(Unit_instance, null);
  };
  function FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda($timeMillis, this$0, $block, resultContinuation) {
    this.f6l_1 = $timeMillis;
    this.g6l_1 = this$0;
    this.h6l_1 = $block;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda).j20 = function ($this$launch, $completion) {
    var tmp = this.k20($this$launch, $completion);
    tmp.cc_1 = Unit_instance;
    tmp.dc_1 = null;
    return tmp.mc();
  };
  protoOf(FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda).yc = function (p1, $completion) {
    return this.j20((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda).mc = function () {
    var suspendResult = this.cc_1;
    $sm: do
      try {
        var tmp = this.ac_1;
        switch (tmp) {
          case 0:
            this.bc_1 = 5;
            this.ac_1 = 1;
            continue $sm;
          case 1:
            this.bc_1 = 4;
            this.ac_1 = 2;
            suspendResult = delay(this.f6l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.j6l_1 = suspendResult;
            this.bc_1 = 5;
            this.ac_1 = 3;
            continue $sm;
          case 3:
            this.bc_1 = 5;
            performRun(this.g6l_1, FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda$lambda(this.g6l_1, this.h6l_1));
            return Unit_instance;
          case 4:
            this.bc_1 = 5;
            var t = this.dc_1;
            performRun(this.g6l_1, FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda$lambda(this.g6l_1, this.h6l_1));
            throw t;
          case 5:
            throw this.dc_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.bc_1 === 5) {
          throw e;
        } else {
          this.ac_1 = this.bc_1;
          this.dc_1 = e;
        }
      }
     while (true);
  };
  protoOf(FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda).k20 = function ($this$launch, completion) {
    var i = new FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda(this.f6l_1, this.g6l_1, this.h6l_1, completion);
    i.i6l_1 = $this$launch;
    return i;
  };
  function FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda_0($timeMillis, this$0, $block, resultContinuation) {
    var i = new FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda($timeMillis, this$0, $block, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.j20($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function FlushCoroutineDispatcher$scheduleResumeAfterDelay$lambda($job) {
    return function (it) {
      $job.eq();
      return Unit_instance;
    };
  }
  function FlushCoroutineDispatcher(scope) {
    CoroutineDispatcher.call(this);
    this.e6k_1 = CoroutineScope(scope.vo().wf(Key_instance));
    var tmp = this;
    // Inline function 'kotlin.collections.mutableSetOf' call
    tmp.f6k_1 = LinkedHashSet_init_$Create$();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableSetOf' call
    tmp_0.g6k_1 = LinkedHashSet_init_$Create$();
    this.h6k_1 = createSynchronizedObject();
    var tmp_1 = this;
    // Inline function 'kotlin.collections.mutableSetOf' call
    tmp_1.i6k_1 = LinkedHashSet_init_$Create$();
    this.j6k_1 = false;
    this.k6k_1 = createSynchronizedObject();
  }
  protoOf(FlushCoroutineDispatcher).kv = function (context, block) {
    // Inline function 'androidx.compose.ui.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.h6k_1;
    // Inline function 'androidx.compose.ui.platform.FlushCoroutineDispatcher.dispatch.<anonymous>' call
    this.f6k_1.a1(block);
    launch(this.e6k_1, VOID, VOID, FlushCoroutineDispatcher$dispatch$slambda_0(this, block, null));
  };
  protoOf(FlushCoroutineDispatcher).p6 = function () {
    return performRun(this, FlushCoroutineDispatcher$flush$lambda(this));
  };
  protoOf(FlushCoroutineDispatcher).qv = function (timeMillis, continuation) {
    // Inline function 'kotlinx.coroutines.Runnable' call
    var block = new _no_name_provided__qut3iv(continuation);
    // Inline function 'androidx.compose.ui.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.h6k_1;
    // Inline function 'androidx.compose.ui.platform.FlushCoroutineDispatcher.scheduleResumeAfterDelay.<anonymous>' call
    this.g6k_1.a1(block);
    var job = launch(this.e6k_1, VOID, VOID, FlushCoroutineDispatcher$scheduleResumeAfterDelay$slambda_0(timeMillis, this, block, null));
    continuation.gs(FlushCoroutineDispatcher$scheduleResumeAfterDelay$lambda(job));
  };
  function GlobalSnapshotManager$ensureStarted$slambda($channel, resultContinuation) {
    this.s6l_1 = $channel;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(GlobalSnapshotManager$ensureStarted$slambda).j20 = function ($this$launch, $completion) {
    var tmp = this.k20($this$launch, $completion);
    tmp.cc_1 = Unit_instance;
    tmp.dc_1 = null;
    return tmp.mc();
  };
  protoOf(GlobalSnapshotManager$ensureStarted$slambda).yc = function (p1, $completion) {
    return this.j20((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(GlobalSnapshotManager$ensureStarted$slambda).mc = function () {
    var suspendResult = this.cc_1;
    $sm: do
      try {
        var tmp = this.ac_1;
        switch (tmp) {
          case 0:
            this.bc_1 = 10;
            var tmp_0 = this;
            tmp_0.u6l_1 = this.s6l_1;
            this.ac_1 = 1;
            continue $sm;
          case 1:
            var tmp_1 = this;
            tmp_1.w6l_1 = this.u6l_1;
            this.x6l_1 = null;
            this.ac_1 = 2;
            continue $sm;
          case 2:
            this.ac_1 = 3;
            continue $sm;
          case 3:
            this.bc_1 = 9;
            this.bc_1 = 8;
            var tmp_2 = this;
            tmp_2.z6l_1 = this.w6l_1;
            this.a6m_1 = this.z6l_1.o();
            this.ac_1 = 4;
            continue $sm;
          case 4:
            this.ac_1 = 5;
            suspendResult = this.a6m_1.c15(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            if (!suspendResult) {
              this.ac_1 = 6;
              continue $sm;
            }

            var e = this.a6m_1.f1();
            l$ret$1: do {
              if (equals(GlobalSnapshotManager_instance.c6m_1, 1)) {
                GlobalSnapshotManager_instance.c6m_1 = 0;
                break l$ret$1;
              } else {
                break l$ret$1;
              }
            }
             while (false);
            Companion_instance_0.v21();
            this.ac_1 = 4;
            continue $sm;
          case 6:
            this.y6l_1 = Unit_instance;
            this.bc_1 = 10;
            this.ac_1 = 7;
            var tmp_3 = this;
            continue $sm;
          case 7:
            this.bc_1 = 10;
            var tmp_4 = this;
            cancelConsumed(this.w6l_1, this.x6l_1);
            tmp_4.v6l_1 = Unit_instance;
            this.ac_1 = 12;
            continue $sm;
          case 8:
            this.bc_1 = 9;
            var tmp_5 = this.dc_1;
            if (tmp_5 instanceof Error) {
              var e_0 = this.dc_1;
              var tmp_6 = this;
              this.x6l_1 = e_0;
              throw e_0;
            } else {
              throw this.dc_1;
            }

          case 9:
            this.bc_1 = 10;
            var t = this.dc_1;
            cancelConsumed(this.w6l_1, this.x6l_1);
            throw t;
          case 10:
            throw this.dc_1;
          case 11:
            this.bc_1 = 10;
            cancelConsumed(this.w6l_1, this.x6l_1);
            if (false) {
              this.ac_1 = 1;
              continue $sm;
            }

            this.ac_1 = 12;
            continue $sm;
          case 12:
            return Unit_instance;
        }
      } catch ($p) {
        var e_1 = $p;
        if (this.bc_1 === 10) {
          throw e_1;
        } else {
          this.ac_1 = this.bc_1;
          this.dc_1 = e_1;
        }
      }
     while (true);
  };
  protoOf(GlobalSnapshotManager$ensureStarted$slambda).k20 = function ($this$launch, completion) {
    var i = new GlobalSnapshotManager$ensureStarted$slambda(this.s6l_1, completion);
    i.t6l_1 = $this$launch;
    return i;
  };
  function GlobalSnapshotManager$ensureStarted$slambda_0($channel, resultContinuation) {
    var i = new GlobalSnapshotManager$ensureStarted$slambda($channel, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.j20($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function GlobalSnapshotManager$ensureStarted$lambda($channel) {
    return function (it) {
      var tmp;
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlinx.atomicfu.atomicfu_compareAndSet' call
        if (equals(GlobalSnapshotManager_instance.c6m_1, 0)) {
          // Inline function 'androidx.compose.ui.platform.GlobalSnapshotManager.ensureStarted.<anonymous>.<set-sent>' call
          GlobalSnapshotManager_instance.c6m_1 = 1;
          tmp$ret$0 = true;
          break $l$block_0;
        } else {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      if (tmp$ret$0) {
        $channel.i16(Unit_instance);
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function GlobalSnapshotManager() {
    this.b6m_1 = 0;
    this.c6m_1 = 0;
  }
  protoOf(GlobalSnapshotManager).d6m = function () {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlinx.atomicfu.atomicfu_compareAndSet' call
      if (equals(this.b6m_1, 0)) {
        // Inline function 'androidx.compose.ui.platform.GlobalSnapshotManager.ensureStarted.<set-started>' call
        this.b6m_1 = 1;
        tmp$ret$0 = true;
        break $l$block_0;
      } else {
        tmp$ret$0 = false;
        break $l$block_0;
      }
    }
    if (tmp$ret$0) {
      var channel = Channel(1);
      var tmp = CoroutineScope(get_GlobalSnapshotManagerDispatcher());
      launch(tmp, VOID, VOID, GlobalSnapshotManager$ensureStarted$slambda_0(channel, null));
      var tmp_0 = Companion_instance_0;
      tmp_0.b2m(GlobalSnapshotManager$ensureStarted$lambda(channel));
    }
  };
  var GlobalSnapshotManager_instance;
  function GlobalSnapshotManager_getInstance() {
    return GlobalSnapshotManager_instance;
  }
  function createOutline($this) {
    return $this.g6m_1.a3o(toSize_0($this.f6m_1), $this.h6m_1, $this.e6m_1);
  }
  function OutlineCache(density, size, shape, layoutDirection) {
    this.e6m_1 = density;
    this.f6m_1 = size;
    this.g6m_1 = shape;
    this.h6m_1 = layoutDirection;
    this.i6m_1 = createOutline(this);
  }
  protoOf(OutlineCache).k5i = function (value) {
    if (!equals(value, this.e6m_1)) {
      this.e6m_1 = value;
      this.i6m_1 = createOutline(this);
    }
  };
  protoOf(OutlineCache).j6m = function (value) {
    if (!equals(value, this.f6m_1)) {
      this.f6m_1 = value;
      this.i6m_1 = createOutline(this);
    }
  };
  protoOf(OutlineCache).k4u = function (value) {
    if (!equals(value, this.g6m_1)) {
      this.g6m_1 = value;
      this.i6m_1 = createOutline(this);
    }
  };
  protoOf(OutlineCache).n5i = function (value) {
    if (!value.equals(this.h6m_1)) {
      this.h6m_1 = value;
      this.i6m_1 = createOutline(this);
    }
  };
  function PlatformClipboardManager() {
    this.k6m_1 = new ClipboardManager();
  }
  function PlatformContext$Companion$Empty$1() {
    var tmp = this;
    // Inline function 'kotlin.apply' call
    var this_0 = new WindowInfoImpl();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.platform.<no name provided>.windowInfo.<anonymous>' call
    this_0.a6g(true);
    tmp.l6m_1 = this_0;
    this.m6m_1 = new DefaultInputModeManager();
  }
  protoOf(PlatformContext$Companion$Empty$1).g5z = function () {
    return this.l6m_1;
  };
  protoOf(PlatformContext$Companion$Empty$1).x5y = function () {
    return this.m6m_1;
  };
  function Companion_23() {
    Companion_instance_27 = this;
    var tmp = this;
    tmp.g6f_1 = new PlatformContext$Companion$Empty$1();
  }
  var Companion_instance_27;
  function Companion_getInstance_37() {
    if (Companion_instance_27 == null)
      new Companion_23();
    return Companion_instance_27;
  }
  function PlatformContext() {
  }
  function EmptyViewConfiguration() {
    EmptyViewConfiguration_instance = this;
    this.n6m_1 = new Long(500, 0);
    this.o6m_1 = new Long(300, 0);
    this.p6m_1 = new Long(40, 0);
    this.q6m_1 = 18.0;
  }
  protoOf(EmptyViewConfiguration).y5o = function () {
    return this.n6m_1;
  };
  protoOf(EmptyViewConfiguration).z5o = function () {
    return this.o6m_1;
  };
  protoOf(EmptyViewConfiguration).a5p = function () {
    return this.q6m_1;
  };
  var EmptyViewConfiguration_instance;
  function EmptyViewConfiguration_getInstance() {
    if (EmptyViewConfiguration_instance == null)
      new EmptyViewConfiguration();
    return EmptyViewConfiguration_instance;
  }
  function EmptyPlatformTextInputService() {
  }
  var EmptyPlatformTextInputService_instance;
  function EmptyPlatformTextInputService_getInstance() {
    return EmptyPlatformTextInputService_instance;
  }
  function EmptyTextToolbar() {
    EmptyTextToolbar_instance = this;
    this.r6m_1 = TextToolbarStatus_Hidden_getInstance();
  }
  var EmptyTextToolbar_instance;
  function EmptyTextToolbar_getInstance() {
    if (EmptyTextToolbar_instance == null)
      new EmptyTextToolbar();
    return EmptyTextToolbar_instance;
  }
  function EmptyFocusManager() {
  }
  protoOf(EmptyFocusManager).k4o = function (force) {
    return Unit_instance;
  };
  protoOf(EmptyFocusManager).f4o = function (focusDirection) {
    return false;
  };
  var EmptyFocusManager_instance;
  function EmptyFocusManager_getInstance() {
    return EmptyFocusManager_instance;
  }
  function DefaultInputModeManager(initialInputMode) {
    initialInputMode = initialInputMode === VOID ? Companion_getInstance_18().x4w_1 : initialInputMode;
    this.s6m_1 = mutableStateOf(new InputMode(initialInputMode));
  }
  protoOf(DefaultInputModeManager).t6m = function (_set____db54di) {
    var this_0 = this.s6m_1;
    inputMode$factory();
    var value = new InputMode(_set____db54di);
    this_0.d1a(value);
    return Unit_instance;
  };
  protoOf(DefaultInputModeManager).u6e = function () {
    // Inline function 'androidx.compose.runtime.getValue' call
    var this_0 = this.s6m_1;
    inputMode$factory_0();
    return this_0.q2().y4w_1;
  };
  protoOf(DefaultInputModeManager).t6e = function (inputMode) {
    var tmp;
    if (inputMode === Companion_getInstance_18().w4w_1 ? true : inputMode === Companion_getInstance_18().x4w_1) {
      this.t6m(inputMode);
      tmp = true;
    } else {
      tmp = false;
    }
    return tmp;
  };
  function inputMode$factory() {
    return getPropertyCallableRef('inputMode', 1, KMutableProperty1, function (receiver) {
      return new InputMode(receiver.u6e());
    }, function (receiver, value) {
      return receiver.t6m(value.y4w_1);
    });
  }
  function inputMode$factory_0() {
    return getPropertyCallableRef('inputMode', 1, KMutableProperty1, function (receiver) {
      return new InputMode(receiver.u6e());
    }, function (receiver, value) {
      return receiver.t6m(value.y4w_1);
    });
  }
  function PlatformUriHandler() {
    URIManager.call(this);
  }
  function _get_inverseMatrix__z2089s($this) {
    // Inline function 'kotlin.apply' call
    var this_0 = new Matrix(_Matrix___init__impl__q3kp4w());
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.platform.RenderNodeLayer.<get-inverseMatrix>.<anonymous>' call
    var $this$apply = this_0.w3m_1;
    invertTo($this.b6n_1, $this$apply);
    return this_0.w3m_1;
  }
  function updateMatrix($this) {
    var pivotX = _TransformOrigin___get_pivotFractionX__impl__a9pmci($this.f6n_1) * _IntSize___get_width__impl__d9yl4o($this.y6m_1);
    var pivotY = _TransformOrigin___get_pivotFractionY__impl__ijwupp($this.f6n_1) * _IntSize___get_height__impl__prv63b($this.y6m_1);
    Matrix__reset_impl_4l49i7($this.b6n_1);
    Matrix__translate$default_impl_10t8ql($this.b6n_1, -pivotX, -pivotY);
    // Inline function 'kotlin.apply' call
    var this_0 = new Matrix(_Matrix___init__impl__q3kp4w());
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.platform.RenderNodeLayer.updateMatrix.<anonymous>' call
    var $this$apply = this_0.w3m_1;
    Matrix__rotateZ_impl_2g2pf5($this$apply, $this.k6n_1);
    Matrix__rotateY_impl_2x4btc($this$apply, $this.j6n_1);
    Matrix__rotateX_impl_3e5y7j($this$apply, $this.i6n_1);
    Matrix__scale$default_impl_snaws9($this$apply, $this.m6n_1, $this.n6n_1);
    var tmp$ret$0 = this_0.w3m_1;
    Matrix__timesAssign_impl_oas521($this.b6n_1, tmp$ret$0);
    var tmp;
    // Inline function 'androidx.compose.ui.platform.isZero' call
    // Inline function 'kotlin.math.abs' call
    var x = $this.i6n_1;
    if (!(Math.abs(x) <= _get_NON_ZERO_EPSILON_$accessor$8tc5j6_ks97pj())) {
      tmp = true;
    } else {
      // Inline function 'androidx.compose.ui.platform.isZero' call
      // Inline function 'kotlin.math.abs' call
      var x_0 = $this.j6n_1;
      tmp = !(Math.abs(x_0) <= _get_NON_ZERO_EPSILON_$accessor$8tc5j6_ks97pj());
    }
    if (tmp) {
      // Inline function 'kotlin.apply' call
      var this_1 = new Matrix(_Matrix___init__impl__q3kp4w());
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.platform.RenderNodeLayer.updateMatrix.<anonymous>' call
      var $this$apply_0 = this_1.w3m_1;
      var depth = $this.l6n_1 * 72.0;
      // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
      var v = -1.0 / depth;
      _Matrix___get_values__impl__fblr7b($this$apply_0)[imul(2, 4) + 3 | 0] = v;
      var tmp$ret$5 = this_1.w3m_1;
      Matrix__timesAssign_impl_oas521($this.b6n_1, tmp$ret$5);
    }
    // Inline function 'kotlin.apply' call
    var this_2 = new Matrix(_Matrix___init__impl__q3kp4w());
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.platform.RenderNodeLayer.updateMatrix.<anonymous>' call
    var $this$apply_1 = this_2.w3m_1;
    Matrix__translate$default_impl_10t8ql($this$apply_1, pivotX + $this.g6n_1, pivotY + $this.h6n_1);
    var tmp$ret$6 = this_2.w3m_1;
    Matrix__timesAssign_impl_oas521($this.b6n_1, tmp$ret$6);
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var this_3 = $this.b6n_1;
    _Matrix___get_values__impl__fblr7b(this_3)[imul(2, 4) + 0 | 0] = 0.0;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var this_4 = $this.b6n_1;
    _Matrix___get_values__impl__fblr7b(this_4)[imul(2, 4) + 1 | 0] = 0.0;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var this_5 = $this.b6n_1;
    _Matrix___get_values__impl__fblr7b(this_5)[imul(2, 4) + 3 | 0] = 0.0;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var this_6 = $this.b6n_1;
    _Matrix___get_values__impl__fblr7b(this_6)[imul(0, 4) + 2 | 0] = 0.0;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var this_7 = $this.b6n_1;
    _Matrix___get_values__impl__fblr7b(this_7)[imul(1, 4) + 2 | 0] = 0.0;
    // Inline function 'androidx.compose.ui.graphics.Matrix.set' call
    var this_8 = $this.b6n_1;
    _Matrix___get_values__impl__fblr7b(this_8)[imul(3, 4) + 2 | 0] = 0.0;
  }
  function performDrawLayer($this, canvas, bounds) {
    if ($this.o6n_1 > 0.0) {
      if ($this.r6n_1 > 0.0) {
        $this.w6n(canvas);
      }
      if ($this.p6n_1) {
        canvas.x3i();
        var outline = $this.a6n_1.i6m_1;
        if (outline instanceof Rectangle) {
          canvas.e3j(outline.k3n_1);
        } else {
          if (outline instanceof Rounded) {
            clipRoundRect$default(canvas, $this, outline.s5z_1);
          } else {
            if (outline instanceof Generic) {
              canvas.i3j(outline.r5z_1);
            }
          }
        }
      }
      var currentRenderEffect = $this.q6n_1;
      var requiresLayer = (($this.o6n_1 < 1.0 ? !($this.u6n_1 === Companion_getInstance_16().y4r_1) : false) ? true : !(currentRenderEffect == null)) ? true : $this.u6n_1 === Companion_getInstance_16().x4r_1;
      if (requiresLayer) {
        // Inline function 'kotlin.apply' call
        var this_0 = Paint();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.platform.RenderNodeLayer.performDrawLayer.<anonymous>' call
        this_0.b3v($this.o6n_1);
        var tmp = this_0.a3v();
        tmp.q35(currentRenderEffect == null ? null : currentRenderEffect.y6n());
        canvas.z3i(bounds, this_0);
      } else {
        canvas.x3i();
      }
      var tmp_0;
      if ($this.u6n_1 === Companion_getInstance_16().y4r_1) {
        tmp_0 = $this.o6n_1;
      } else {
        tmp_0 = 1.0;
      }
      set_alphaMultiplier(canvas, tmp_0);
      $this.w6m_1(canvas);
      canvas.y3i();
      if ($this.p6n_1) {
        canvas.y3i();
      }
    }
  }
  function clipRoundRect(_this__u8e3s4, $this, rect, clipOp) {
    var antiAlias = true;
    get_nativeCanvas(_this__u8e3s4).k30(toSkiaRRect(rect), toSkia(clipOp, $this), antiAlias);
  }
  function clipRoundRect$default(_this__u8e3s4, $this, rect, clipOp, $super) {
    clipOp = clipOp === VOID ? Companion_getInstance_11().g3j_1 : clipOp;
    return clipRoundRect(_this__u8e3s4, $this, rect, clipOp);
  }
  function toSkia(_this__u8e3s4, $this) {
    return _this__u8e3s4 === Companion_getInstance_11().f3j_1 ? ClipMode_DIFFERENCE_getInstance() : _this__u8e3s4 === Companion_getInstance_11().g3j_1 ? ClipMode_INTERSECT_getInstance() : ClipMode_INTERSECT_getInstance();
  }
  function RenderNodeLayer$_init_$lambda_s68y0e() {
    return Unit_instance;
  }
  function RenderNodeLayer(density, invalidateParentLayer, drawBlock, onDestroy) {
    var tmp;
    if (onDestroy === VOID) {
      tmp = RenderNodeLayer$_init_$lambda_s68y0e;
    } else {
      tmp = onDestroy;
    }
    onDestroy = tmp;
    this.u6m_1 = density;
    this.v6m_1 = invalidateParentLayer;
    this.w6m_1 = drawBlock;
    this.x6m_1 = onDestroy;
    this.y6m_1 = Companion_getInstance_3().g2y_1;
    this.z6m_1 = Companion_getInstance_4().w2x_1;
    this.a6n_1 = new OutlineCache(this.u6m_1, this.y6m_1, get_RectangleShape(), LayoutDirection_Ltr_getInstance());
    this.b6n_1 = _Matrix___init__impl__q3kp4w();
    this.c6n_1 = PictureRecorder_init_$Create$();
    this.d6n_1 = null;
    this.e6n_1 = false;
    this.f6n_1 = Companion_getInstance_17().a4s_1;
    this.g6n_1 = 0.0;
    this.h6n_1 = 0.0;
    this.i6n_1 = 0.0;
    this.j6n_1 = 0.0;
    this.k6n_1 = 0.0;
    this.l6n_1 = get_DefaultCameraDistance();
    this.m6n_1 = 1.0;
    this.n6n_1 = 1.0;
    this.o6n_1 = 1.0;
    this.p6n_1 = false;
    this.q6n_1 = null;
    this.r6n_1 = 0.0;
    this.s6n_1 = get_DefaultShadowColor();
    this.t6n_1 = get_DefaultShadowColor();
    this.u6n_1 = Companion_getInstance_16().w4r_1;
    this.v6n_1 = 0;
  }
  protoOf(RenderNodeLayer).n5y = function () {
    var tmp0_safe_receiver = this.d6n_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.y1k();
    }
    this.c6n_1.y1k();
    this.e6n_1 = true;
    this.x6m_1();
  };
  protoOf(RenderNodeLayer).l5y = function (size) {
    if (!equals(size, this.y6m_1)) {
      this.y6m_1 = size;
      this.a6n_1.j6m(size);
      updateMatrix(this);
      this.n1y();
    }
  };
  protoOf(RenderNodeLayer).g5y = function (position) {
    if (!equals(position, this.z6m_1)) {
      this.z6m_1 = position;
      this.v6m_1();
    }
  };
  protoOf(RenderNodeLayer).p5y = function (point, inverse) {
    var tmp;
    if (inverse) {
      tmp = _get_inverseMatrix__z2089s(this);
    } else {
      tmp = this.b6n_1;
    }
    return Matrix__map_impl_7meu7m(tmp, point);
  };
  protoOf(RenderNodeLayer).k5y = function (rect, inverse) {
    var tmp;
    if (inverse) {
      tmp = _get_inverseMatrix__z2089s(this);
    } else {
      tmp = this.b6n_1;
    }
    Matrix__map_impl_7meu7m_0(tmp, rect);
  };
  protoOf(RenderNodeLayer).q5y = function (position) {
    if (!this.p6n_1) {
      return true;
    }
    var x = _Offset___get_x__impl__xvi35n(position);
    var y = _Offset___get_y__impl__8bzhra(position);
    if (this.a6n_1.g6m_1 === get_RectangleShape()) {
      return ((0.0 <= x ? x < _IntSize___get_width__impl__d9yl4o(this.y6m_1) : false) ? 0.0 <= y : false) ? y < _IntSize___get_height__impl__prv63b(this.y6m_1) : false;
    }
    return isInOutline(this.a6n_1.i6m_1, x, y);
  };
  protoOf(RenderNodeLayer).j5y = function (scope, layoutDirection, density) {
    var maybeChangedFields = scope.j4v_1 | this.v6n_1;
    this.f6n_1 = scope.w4v_1;
    this.g6n_1 = scope.n4v_1;
    this.h6n_1 = scope.o4v_1;
    this.i6n_1 = scope.s4v_1;
    this.j6n_1 = scope.t4v_1;
    this.k6n_1 = scope.u4v_1;
    var tmp = this;
    // Inline function 'kotlin.math.max' call
    var a = scope.v4v_1;
    tmp.l6n_1 = Math.max(a, 0.001);
    this.m6n_1 = scope.k4v_1;
    this.n6n_1 = scope.l4v_1;
    this.o6n_1 = scope.m4v_1;
    this.p6n_1 = scope.y4v_1;
    this.r6n_1 = scope.p4v_1;
    this.u6m_1 = density;
    this.q6n_1 = scope.c4w_1;
    this.s6n_1 = scope.q4v_1;
    this.t6n_1 = scope.r4v_1;
    this.u6n_1 = scope.z4v_1;
    this.a6n_1.k4u(scope.x4v_1);
    this.a6n_1.n5i(layoutDirection);
    this.a6n_1.k5i(density);
    if (!((maybeChangedFields & 7963) === 0)) {
      updateMatrix(this);
    }
    this.n1y();
    this.v6n_1 = scope.j4v_1;
  };
  protoOf(RenderNodeLayer).n1y = function () {
    if (!this.e6n_1 ? !(this.d6n_1 == null) : false) {
      var tmp0_safe_receiver = this.d6n_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.y1k();
      }
      this.d6n_1 = null;
      this.v6m_1();
    }
  };
  protoOf(RenderNodeLayer).m5y = function (canvas) {
    if (this.d6n_1 == null) {
      var bounds = toRect_0(toSize_0(this.y6m_1));
      var pictureCanvas = this.c6n_1.x36(Companion_instance_2.g37(-1.073741824E9, -1.073741824E9, 1.073741823E9, 1.073741823E9));
      performDrawLayer(this, asComposeCanvas(pictureCanvas), bounds);
      this.d6n_1 = this.c6n_1.y36();
    }
    canvas.x3i();
    canvas.b3j(this.b6n_1);
    canvas.a3j(_IntOffset___get_x__impl__qiqr5o(this.z6m_1), _IntOffset___get_y__impl__2avpwj(this.z6m_1));
    get_nativeCanvas(canvas).f30(ensureNotNull(this.d6n_1), null, null);
    canvas.y3i();
  };
  protoOf(RenderNodeLayer).w6n = function (canvas) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = this.u6m_1;
    var outline = this.a6n_1.i6m_1;
    var tmp;
    if (outline instanceof Rectangle) {
      // Inline function 'kotlin.apply' call
      var this_0 = Path();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.platform.RenderNodeLayer.drawShadow.<anonymous>.<anonymous>' call
      this_0.n3n(outline.k3n_1);
      tmp = this_0;
    } else {
      if (outline instanceof Rounded) {
        // Inline function 'kotlin.apply' call
        var this_1 = Path();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.platform.RenderNodeLayer.drawShadow.<anonymous>.<anonymous>' call
        this_1.o3n(outline.s5z_1);
        tmp = this_1;
      } else {
        if (outline instanceof Generic) {
          tmp = outline.r5z_1;
        } else {
          return Unit_instance;
        }
      }
    }
    var path = tmp;
    var zParams = new Point3(0.0, 0.0, this.r6n_1);
    // Inline function 'androidx.compose.ui.unit.dp' call
    var tmp$ret$2 = _Dp___init__impl__ms3zkb(300);
    var tmp_0 = -$this$with.h2x(tmp$ret$2);
    // Inline function 'androidx.compose.ui.unit.dp' call
    var tmp$ret$3 = _Dp___init__impl__ms3zkb(600);
    var lightPos = new Point3(0.0, tmp_0, $this$with.h2x(tmp$ret$3));
    // Inline function 'androidx.compose.ui.unit.dp' call
    var tmp$ret$4 = _Dp___init__impl__ms3zkb(800);
    var lightRad = $this$with.h2x(tmp$ret$4);
    var ambientAlpha = 0.039 * this.o6n_1;
    var spotAlpha = 0.19 * this.o6n_1;
    var ambientColor = Color__copy$default_impl_ectz3s(this.s6n_1, ambientAlpha);
    var spotColor = Color__copy$default_impl_ectz3s(this.t6n_1, spotAlpha);
    ShadowUtils_getInstance().h37(get_nativeCanvas(canvas), asSkiaPath(path), zParams, lightPos, lightRad, toArgb(ambientColor), toArgb(spotColor), this.o6n_1 < 1.0, false);
    return Unit_instance;
  };
  function _get_NON_ZERO_EPSILON_$accessor$8tc5j6_ks97pj() {
    return 0.001;
  }
  function Companion_24() {
    Companion_instance_28 = this;
    this.z6n_1 = mutableStateOf(new PointerKeyboardModifiers(EmptyPointerKeyboardModifiers()));
  }
  var Companion_instance_28;
  function Companion_getInstance_38() {
    if (Companion_instance_28 == null)
      new Companion_24();
    return Companion_instance_28;
  }
  function WindowInfoImpl() {
    Companion_getInstance_38();
    this.x6f_1 = mutableStateOf(false);
    this.y6f_1 = Companion_getInstance_38().z6n_1;
    this.z6f_1 = mutableStateOf(new IntSize_0(Companion_getInstance_3().g2y_1));
  }
  protoOf(WindowInfoImpl).a6g = function (_set____db54di) {
    var this_0 = this.x6f_1;
    isWindowFocused$factory();
    this_0.d1a(_set____db54di);
    return Unit_instance;
  };
  protoOf(WindowInfoImpl).a6o = function () {
    // Inline function 'androidx.compose.runtime.getValue' call
    var this_0 = this.x6f_1;
    isWindowFocused$factory_0();
    return this_0.q2();
  };
  protoOf(WindowInfoImpl).b6g = function (_set____db54di) {
    var this_0 = this.z6f_1;
    containerSize$factory();
    var value = new IntSize_0(_set____db54di);
    this_0.d1a(value);
    return Unit_instance;
  };
  protoOf(WindowInfoImpl).b6o = function () {
    // Inline function 'androidx.compose.runtime.getValue' call
    var this_0 = this.z6f_1;
    containerSize$factory_0();
    return this_0.q2().h2y_1;
  };
  function isWindowFocused$factory() {
    return getPropertyCallableRef('isWindowFocused', 1, KMutableProperty1, function (receiver) {
      return receiver.a6o();
    }, function (receiver, value) {
      return receiver.a6g(value);
    });
  }
  function isWindowFocused$factory_0() {
    return getPropertyCallableRef('isWindowFocused', 1, KMutableProperty1, function (receiver) {
      return receiver.a6o();
    }, function (receiver, value) {
      return receiver.a6g(value);
    });
  }
  function containerSize$factory() {
    return getPropertyCallableRef('containerSize', 1, KMutableProperty1, function (receiver) {
      return new IntSize_0(receiver.b6o());
    }, function (receiver, value) {
      return receiver.b6g(value.h2y_1);
    });
  }
  function containerSize$factory_0() {
    return getPropertyCallableRef('containerSize', 1, KMutableProperty1, function (receiver) {
      return new IntSize_0(receiver.b6o());
    }, function (receiver, value) {
      return receiver.b6g(value.h2y_1);
    });
  }
  function setContent(_this__u8e3s4, parent, getCompositionLocalContext, content) {
    var tmp;
    if (getCompositionLocalContext === VOID) {
      tmp = setContent$lambda;
    } else {
      tmp = getCompositionLocalContext;
    }
    getCompositionLocalContext = tmp;
    var composition = Composition(new DefaultUiApplier(_this__u8e3s4.q6h_1.q5a()), parent);
    composition.q1x(ComposableLambda$invoke$ref_2(composableLambdaInstance(803837429, true, setContent$lambda_0(getCompositionLocalContext, _this__u8e3s4, content))));
    return composition;
  }
  function provide(_this__u8e3s4, content, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0 = $composer_0.c1u(-1909678799);
    sourceInformation($composer_0, 'C(provide):Wrapper.skiko.kt#itgzvw');
    var $dirty = $changed;
    if (($changed & 14) === 0)
      $dirty = $dirty | ($composer_0.s1j(_this__u8e3s4) ? 4 : 2);
    if (($changed & 112) === 0)
      $dirty = $dirty | ($composer_0.z1s(content) ? 32 : 16);
    if (!(($dirty & 91) === 18) ? true : !$composer_0.v1r()) {
      if (isTraceInProgress()) {
        traceEventStart(-1909678799, $dirty, -1, 'androidx.compose.ui.platform.provide (Wrapper.skiko.kt:59)');
      }
      if (!(_this__u8e3s4 == null)) {
        $composer_0.a1s(592372731);
        sourceInformation($composer_0, '61@2436L49');
        CompositionLocalProvider_1(_this__u8e3s4, content, $composer_0, 14 & $dirty | 112 & $dirty);
        $composer_0.b1s();
      } else {
        $composer_0.a1s(592372802);
        sourceInformation($composer_0, '63@2507L9');
        content($composer_0, 14 & $dirty >> 3);
        $composer_0.b1s();
      }
      if (isTraceInProgress()) {
        traceEventEnd();
      }
    } else {
      $composer_0.m1m();
    }
    var tmp0_safe_receiver = $composer_0.d1u();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.c1z(provide$lambda(_this__u8e3s4, content, $changed));
    }
  }
  function setContent$lambda() {
    return null;
  }
  function ComposableLambda$invoke$ref_2($boundThis) {
    return function (p0, p1) {
      return $boundThis.t1r(p0, p1);
    };
  }
  function setContent$lambda$lambda($this_setContent, $content) {
    return function ($composer, $changed) {
      var $composer_0 = $composer;
      sourceInformation($composer_0, 'C50@2187L33,48@2095L174:Wrapper.skiko.kt#itgzvw');
      var tmp;
      if (!(($changed & 11) === 2) ? true : !$composer_0.v1r()) {
        if (isTraceInProgress()) {
          traceEventStart(1984296607, $changed, -1, 'androidx.compose.ui.platform.setContent.<anonymous>.<anonymous> (Wrapper.skiko.kt:48)');
        }
        $composer_0.a1s(-384021708);
        sourceInformation($composer_0, 'CC(remember):Wrapper.skiko.kt#9igjgp');
        // Inline function 'androidx.compose.runtime.cache' call
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
        var it = $composer_0.m1t();
        var tmp_0;
        if (false ? true : it === Companion_getInstance_12().s1m_1) {
          // Inline function 'androidx.compose.ui.platform.setContent.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          var value = new PlatformUriHandler();
          $composer_0.s1t(value);
          tmp_0 = value;
        } else {
          tmp_0 = it;
        }
        var tmp_1 = tmp_0;
        var tmp0_group = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
        $composer_0.b1s();
        ProvideCommonCompositionLocals($this_setContent.q6h_1, tmp0_group, $content, $composer_0, 48);
        var tmp_2;
        if (isTraceInProgress()) {
          traceEventEnd();
          tmp_2 = Unit_instance;
        }
        tmp = tmp_2;
      } else {
        $composer_0.m1m();
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function ComposableLambda$invoke$ref_3($boundThis) {
    return function (p0, p1) {
      return $boundThis.t1r(p0, p1);
    };
  }
  function setContent$lambda_0($getCompositionLocalContext, $this_setContent, $content) {
    return function ($composer, $changed) {
      var $composer_0 = $composer;
      sourceInformation($composer_0, 'C47@2073L206:Wrapper.skiko.kt#itgzvw');
      var tmp;
      if (!(($changed & 11) === 2) ? true : !$composer_0.v1r()) {
        if (isTraceInProgress()) {
          traceEventStart(803837429, $changed, -1, 'androidx.compose.ui.platform.setContent.<anonymous> (Wrapper.skiko.kt:47)');
        }
        var tmp_0 = $getCompositionLocalContext();
        // Inline function 'kotlin.run' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.ui.platform.setContent.<anonymous>.<anonymous>' call
        var tmp_1 = $composer_0;
        var dispatchReceiver = composableLambda(tmp_1, 1984296607, true, setContent$lambda$lambda($this_setContent, $content));
        // Inline function 'androidx.compose.runtime.remember' call
        var $composer_1 = $composer_0;
        $composer_1.a1s(1157296644);
        sourceInformation($composer_1, 'CC(remember)P(1):Composables.kt#9igjgp');
        // Inline function 'androidx.compose.runtime.cache' call
        var invalid = $composer_1.s1j(dispatchReceiver);
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
        var it = $composer_1.m1t();
        var tmp_2;
        if (invalid ? true : it === Companion_getInstance_12().s1m_1) {
          // Inline function 'androidx.compose.ui.platform.setContent.<anonymous>.<anonymous>.<anonymous>' call
          var value = ComposableLambda$invoke$ref_3(dispatchReceiver);
          $composer_1.s1t(value);
          tmp_2 = value;
        } else {
          tmp_2 = it;
        }
        var tmp_3 = tmp_2;
        var tmp0 = (tmp_3 == null ? true : !(tmp_3 == null)) ? tmp_3 : THROW_CCE();
        $composer_1.b1s();
        provide(tmp_0, tmp0, $composer_0, 48);
        var tmp_4;
        if (isTraceInProgress()) {
          traceEventEnd();
          tmp_4 = Unit_instance;
        }
        tmp = tmp_4;
      } else {
        $composer_0.m1m();
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function provide$lambda($this_provide, $content, $$changed) {
    return function ($composer, $force) {
      provide($this_provide, $content, $composer, updateChangedFlags($$changed | 1));
      return Unit_instance;
    };
  }
  function get_platformContext_0(_this__u8e3s4) {
    if (!(_this__u8e3s4 instanceof BaseComposeScene))
      THROW_CCE();
    return _this__u8e3s4.c6o_1.w6e();
  }
  function doLayout($this) {
    $this.e6o_1.u6j();
    $this.l6j();
  }
  function BaseComposeScene$invalidateIfNeeded$ref($boundThis) {
    var l = function () {
      $boundThis.o6o();
      return Unit_instance;
    };
    l.callableName = 'invalidateIfNeeded';
    return l;
  }
  function BaseComposeScene$doLayout$ref($boundThis) {
    var l = function () {
      doLayout($boundThis);
      return Unit_instance;
    };
    l.callableName = 'doLayout';
    return l;
  }
  function BaseComposeScene$processPointerInputEvent$ref($boundThis) {
    var l = function (p0) {
      $boundThis.p6o(p0);
      return Unit_instance;
    };
    l.callableName = 'processPointerInputEvent';
    return l;
  }
  function BaseComposeScene$processKeyEvent$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.q6o(p0.z4w_1);
    };
    l.callableName = 'processKeyEvent';
    return l;
  }
  function BaseComposeScene$invalidateIfNeeded$ref_0($boundThis) {
    var l = function () {
      $boundThis.o6o();
      return Unit_instance;
    };
    l.callableName = 'invalidateIfNeeded';
    return l;
  }
  function ComposableLambda$invoke$ref_4($boundThis) {
    return function (p0, p1) {
      return $boundThis.t1r(p0, p1);
    };
  }
  function BaseComposeScene$setContent$lambda(this$0, $content) {
    return function ($composer, $changed) {
      var $composer_0 = $composer;
      sourceInformation($composer_0, 'C138@5558L122:BaseComposeScene.skiko.kt#bazzlf');
      var tmp;
      if (!(($changed & 11) === 2) ? true : !$composer_0.v1r()) {
        if (isTraceInProgress()) {
          traceEventStart(-1451471672, $changed, -1, 'androidx.compose.ui.scene.BaseComposeScene.setContent.<anonymous>.<anonymous> (BaseComposeScene.skiko.kt:138)');
        }
        CompositionLocalProvider_0(get_LocalComposeScene().z1y(this$0), $content, $composer_0, 0);
        var tmp_0;
        if (isTraceInProgress()) {
          traceEventEnd();
          tmp_0 = Unit_instance;
        }
        tmp = tmp_0;
      } else {
        $composer_0.m1m();
        tmp = Unit_instance;
      }
      return Unit_instance;
    };
  }
  function BaseComposeScene(coroutineContext, composeSceneContext, invalidate) {
    this.c6o_1 = composeSceneContext;
    this.d6o_1 = invalidate;
    var tmp = this;
    tmp.e6o_1 = new SnapshotInvalidationTracker(BaseComposeScene$invalidateIfNeeded$ref(this));
    var tmp_0 = this;
    var tmp_1 = BaseComposeScene$doLayout$ref(this);
    var tmp_2 = BaseComposeScene$processPointerInputEvent$ref(this);
    tmp_0.f6o_1 = new ComposeSceneInputHandler(tmp_1, tmp_2, BaseComposeScene$processKeyEvent$ref(this));
    var tmp_3 = this;
    tmp_3.g6o_1 = new BroadcastFrameClock(BaseComposeScene$invalidateIfNeeded$ref_0(this));
    this.h6o_1 = new ComposeSceneRecomposer(coroutineContext, [this.g6o_1]);
    this.i6o_1 = null;
    this.j6o_1 = false;
    this.k6o_1 = false;
    this.l6o_1 = true;
    this.m6o_1 = mutableStateOf(null);
    this.n6o_1 = lastKnownPointerPosition$factory(this.f6o_1);
    GlobalSnapshotManager_instance.d6m();
  }
  protoOf(BaseComposeScene).r6o = function () {
    return this.h6o_1.r6o();
  };
  protoOf(BaseComposeScene).o6o = function () {
    this.l6o_1 = (this.g6o_1.n1g() ? true : this.e6o_1.s6j()) ? true : this.f6o_1.s6j();
    if (((this.l6o_1 ? !this.k6o_1 : false) ? !this.j6o_1 : false) ? !(this.i6o_1 == null) : false) {
      this.d6o_1();
    }
  };
  protoOf(BaseComposeScene).x6o = function (_set____db54di) {
    var this_0 = this.m6o_1;
    compositionLocalContext$factory();
    this_0.d1a(_set____db54di);
    return Unit_instance;
  };
  protoOf(BaseComposeScene).y6o = function () {
    // Inline function 'androidx.compose.runtime.getValue' call
    var this_0 = this.m6o_1;
    compositionLocalContext$factory_0();
    return this_0.q2();
  };
  protoOf(BaseComposeScene).q1x = function (content) {
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.j6o_1) {
      // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
      var message = 'ComposeScene is closed';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.k6o_1 = true;
    // Inline function 'kotlin.also' call
    try {
      this.e6o_1.w6j();
      // Inline function 'androidx.compose.ui.node.SnapshotInvalidationTracker.performSnapshotChangesSynchronously' call
      var this_0 = this.e6o_1;
      var tmp;
      try {
        _set_renderingThreadId__9b5jlg(this_0, getCurrentThreadId());
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!!this.j6o_1) {
          // Inline function 'androidx.compose.ui.scene.BaseComposeScene.setContent.<anonymous>.<anonymous>' call
          var message_0 = 'ComposeScene is closed';
          throw IllegalStateException_init_$Create$(toString(message_0));
        }
        this.f6o_1.z6o();
        this.h6o_1.a6p();
        var tmp0_safe_receiver = this.i6o_1;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.ss();
        }
        var tmp_0 = this;
        tmp_0.i6o_1 = this.b6p(ComposableLambda$invoke$ref_4(composableLambdaInstance(-1451471672, true, BaseComposeScene$setContent$lambda(this, content))));
        this.h6o_1.a6p();
        tmp = Unit_instance;
      }finally {
        _set_renderingThreadId__9b5jlg(this_0, null);
      }
    }finally {
      this.k6o_1 = false;
    }
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
    this.o6o();
    return Unit_instance;
  };
  protoOf(BaseComposeScene).r6e = function (canvas, nanoTime) {
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.j6o_1) {
      // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
      var message = 'ComposeScene is closed';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.k6o_1 = true;
    // Inline function 'kotlin.also' call
    try {
      this.e6o_1.w6j();
      // Inline function 'androidx.compose.ui.node.SnapshotInvalidationTracker.performSnapshotChangesSynchronously' call
      var this_0 = this.e6o_1;
      var tmp;
      try {
        _set_renderingThreadId__9b5jlg(this_0, getCurrentThreadId());
        this.h6o_1.a6p();
        this.g6o_1.o1g(nanoTime);
        doLayout(this);
        this.h6o_1.c6p();
        this.f6o_1.k6h();
        this.e6o_1.v6j();
        this.e5n(canvas);
        tmp = Unit_instance;
      }finally {
        _set_renderingThreadId__9b5jlg(this_0, null);
      }
    }finally {
      this.k6o_1 = false;
    }
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
    this.o6o();
    return Unit_instance;
  };
  protoOf(BaseComposeScene).d6p = function (eventType, position, scrollDelta, timeMillis, type, buttons, keyboardModifiers, nativeEvent, button) {
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.j6o_1) {
      // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
      var message = 'ComposeScene is closed';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.k6o_1 = true;
    // Inline function 'kotlin.also' call
    try {
      this.e6o_1.w6j();
      // Inline function 'androidx.compose.ui.node.SnapshotInvalidationTracker.performSnapshotChangesSynchronously' call
      var this_0 = this.e6o_1;
      var tmp;
      try {
        _set_renderingThreadId__9b5jlg(this_0, getCurrentThreadId());
        this.f6o_1.e6p(eventType, position, scrollDelta, timeMillis, type, buttons, keyboardModifiers, nativeEvent, button);
        tmp = Unit_instance;
      }finally {
        _set_renderingThreadId__9b5jlg(this_0, null);
      }
    }finally {
      this.k6o_1 = false;
    }
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
    this.o6o();
    return Unit_instance;
  };
  protoOf(BaseComposeScene).f6p = function (eventType, pointers, buttons, keyboardModifiers, scrollDelta, timeMillis, nativeEvent, button) {
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.j6o_1) {
      // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
      var message = 'ComposeScene is closed';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.k6o_1 = true;
    // Inline function 'kotlin.also' call
    try {
      this.e6o_1.w6j();
      // Inline function 'androidx.compose.ui.node.SnapshotInvalidationTracker.performSnapshotChangesSynchronously' call
      var this_0 = this.e6o_1;
      var tmp;
      try {
        _set_renderingThreadId__9b5jlg(this_0, getCurrentThreadId());
        this.f6o_1.g6p(eventType, pointers, buttons, keyboardModifiers, scrollDelta, timeMillis, nativeEvent, button);
        tmp = Unit_instance;
      }finally {
        _set_renderingThreadId__9b5jlg(this_0, null);
      }
    }finally {
      this.k6o_1 = false;
    }
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
    this.o6o();
    return Unit_instance;
  };
  protoOf(BaseComposeScene).s6e = function (keyEvent) {
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.j6o_1) {
      // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
      var message = 'ComposeScene is closed';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.k6o_1 = true;
    // Inline function 'kotlin.also' call
    var tmp;
    try {
      this.e6o_1.w6j();
      // Inline function 'androidx.compose.ui.node.SnapshotInvalidationTracker.performSnapshotChangesSynchronously' call
      var this_0 = this.e6o_1;
      var tmp_0;
      try {
        _set_renderingThreadId__9b5jlg(this_0, getCurrentThreadId());
        // Inline function 'androidx.compose.ui.scene.BaseComposeScene.sendKeyEvent.<anonymous>' call
        tmp_0 = this.f6o_1.i4p(keyEvent);
      }finally {
        _set_renderingThreadId__9b5jlg(this_0, null);
      }
      tmp = tmp_0;
    }finally {
      this.k6o_1 = false;
    }
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.ui.scene.BaseComposeScene.postponeInvalidation.<anonymous>' call
    this.o6o();
    return tmp;
  };
  function get_semanticsOwnerListener_0(_this__u8e3s4) {
    return _this__u8e3s4.c6o_1.w6e().v6f();
  }
  function lastKnownPointerPosition$factory($b0) {
    return getPropertyCallableRef('lastKnownPointerPosition', 0, KProperty0, function () {
      var tmp = $b0.h6p();
      return tmp == null ? null : new Offset(tmp);
    }, null);
  }
  function compositionLocalContext$factory() {
    return getPropertyCallableRef('compositionLocalContext', 1, KMutableProperty1, function (receiver) {
      return receiver.y6o();
    }, function (receiver, value) {
      return receiver.x6o(value);
    });
  }
  function compositionLocalContext$factory_0() {
    return getPropertyCallableRef('compositionLocalContext', 1, KMutableProperty1, function (receiver) {
      return receiver.y6o();
    }, function (receiver, value) {
      return receiver.x6o(value);
    });
  }
  function get_LocalComposeScene() {
    _init_properties_ComposeScene_skiko_kt__5e2gu9();
    return LocalComposeScene;
  }
  var LocalComposeScene;
  function ComposeScene() {
  }
  function currentTimeForEvent() {
    _init_properties_ComposeScene_skiko_kt__5e2gu9();
    // Inline function 'kotlin.Long.div' call
    var tmp$ret$0 = currentNanoTime().y6() / 1000000.0;
    return numberToLong(tmp$ret$0);
  }
  function LocalComposeScene$lambda() {
    _init_properties_ComposeScene_skiko_kt__5e2gu9();
    return null;
  }
  var properties_initialized_ComposeScene_skiko_kt_ips5q5;
  function _init_properties_ComposeScene_skiko_kt__5e2gu9() {
    if (!properties_initialized_ComposeScene_skiko_kt_ips5q5) {
      properties_initialized_ComposeScene_skiko_kt_ips5q5 = true;
      LocalComposeScene = staticCompositionLocalOf(LocalComposeScene$lambda);
    }
  }
  function ComposeSceneContext$Companion$Empty$1() {
  }
  function Companion_25() {
    Companion_instance_29 = this;
    var tmp = this;
    tmp.i6p_1 = new ComposeSceneContext$Companion$Empty$1();
  }
  var Companion_instance_29;
  function Companion_getInstance_39() {
    if (Companion_instance_29 == null)
      new Companion_25();
    return Companion_instance_29;
  }
  function ComposeSceneContext() {
  }
  function updatePointerPositions($this, event) {
    var tmp0_iterator = event.o53_1.o();
    while (tmp0_iterator.d1()) {
      var pointer = tmp0_iterator.f1();
      if ((pointer.q50_1 === Companion_getInstance_21().x50_1 ? !(event.m53_1 === Companion_getInstance_20().g50_1) : false) ? true : pointer.o50_1) {
        // Inline function 'kotlin.collections.set' call
        var this_0 = $this.e6i_1;
        var key = new PointerId(pointer.k50_1);
        var value = new Offset(pointer.n50_1);
        this_0.n2(key, value);
      }
    }
    // Inline function 'kotlin.collections.iterator' call
    var iterator = $this.e6i_1.m2().o();
    $l$loop: while (iterator.d1()) {
      var pointerId = iterator.f1().p2().m51_1;
      // Inline function 'kotlin.collections.find' call
      var this_1 = event.o53_1;
      var tmp$ret$2;
      $l$block: {
        // Inline function 'kotlin.collections.firstOrNull' call
        var tmp0_iterator_0 = this_1.o();
        while (tmp0_iterator_0.d1()) {
          var element = tmp0_iterator_0.f1();
          // Inline function 'androidx.compose.ui.scene.ComposeSceneInputHandler.updatePointerPositions.<anonymous>' call
          if (equals(element.k50_1, pointerId)) {
            tmp$ret$2 = element;
            break $l$block;
          }
        }
        tmp$ret$2 = null;
      }
      var tmp1_elvis_lhs = tmp$ret$2;
      var tmp;
      if (tmp1_elvis_lhs == null) {
        continue $l$loop;
      } else {
        tmp = tmp1_elvis_lhs;
      }
      var pointer_0 = tmp;
      if ((!(pointer_0.q50_1 === Companion_getInstance_21().x50_1) ? !pointer_0.o50_1 : false) ? true : pointer_0.q50_1 === Companion_getInstance_21().x50_1 ? event.m53_1 === Companion_getInstance_20().g50_1 : false) {
        iterator.e1();
      }
    }
  }
  function ComposeSceneInputHandler(prepareForPointerInputEvent, processPointerInputEvent, processKeyEvent) {
    this.b6i_1 = prepareForPointerInputEvent;
    this.c6i_1 = processKeyEvent;
    this.d6i_1 = new DefaultPointerStateTracker();
    this.e6i_1 = mutableStateMapOf();
    this.f6i_1 = new SyntheticEventSender(processPointerInputEvent);
  }
  protoOf(ComposeSceneInputHandler).h6p = function () {
    var tmp = firstOrNull_0(this.e6i_1.t2r_1);
    return tmp == null ? null : tmp.y2v_1;
  };
  protoOf(ComposeSceneInputHandler).s6j = function () {
    return this.f6i_1.i6h_1;
  };
  protoOf(ComposeSceneInputHandler).e6p = function (eventType, position, scrollDelta, timeMillis, type, buttons, keyboardModifiers, nativeEvent, button) {
    this.d6i_1.l6p(button, eventType);
    var tmp;
    var tmp_0 = buttons;
    if ((tmp_0 == null ? null : new PointerButtons(tmp_0)) == null) {
      tmp = this.d6i_1.j6p_1;
    } else {
      tmp = buttons;
    }
    var actualButtons = tmp;
    var tmp_1;
    var tmp_2 = keyboardModifiers;
    if ((tmp_2 == null ? null : new PointerKeyboardModifiers(tmp_2)) == null) {
      tmp_1 = this.d6i_1.k6p_1;
    } else {
      tmp_1 = keyboardModifiers;
    }
    var actualKeyboardModifiers = tmp_1;
    this.g6p(eventType, listOf(new ComposeScenePointer(_PointerId___init__impl__w2urwh(new Long(0, 0)), position, get_areAnyPressed(actualButtons), type)), actualButtons, actualKeyboardModifiers, scrollDelta, timeMillis, nativeEvent, button);
  };
  protoOf(ComposeSceneInputHandler).g6p = function (eventType, pointers, buttons, keyboardModifiers, scrollDelta, timeMillis, nativeEvent, button) {
    var event = PointerInputEvent_0(eventType, pointers, timeMillis, nativeEvent, scrollDelta, buttons, keyboardModifiers, button);
    this.b6i_1();
    this.k6h();
    this.f6i_1.j6h(event);
    updatePointerPositions(this, event);
  };
  protoOf(ComposeSceneInputHandler).i4p = function (keyEvent) {
    this.d6i_1.m6p(keyEvent);
    return this.c6i_1(new KeyEvent(keyEvent));
  };
  protoOf(ComposeSceneInputHandler).k6h = function () {
    this.f6i_1.k6h();
  };
  protoOf(ComposeSceneInputHandler).z6o = function () {
    this.f6i_1.a26();
  };
  protoOf(ComposeSceneInputHandler).g6i = function () {
    this.f6i_1.i6h_1 = true;
  };
  function DefaultPointerStateTracker() {
    this.j6p_1 = PointerButtons_0();
    this.k6p_1 = PointerKeyboardModifiers_0();
  }
  protoOf(DefaultPointerStateTracker).l6p = function (button, eventType) {
    if (eventType === Companion_getInstance_20().c50_1) {
      var tmp = this;
      var tmp_0 = this.j6p_1;
      var tmp_1;
      var tmp_2 = button;
      if ((tmp_2 == null ? null : new PointerButton(tmp_2)) == null) {
        tmp_1 = Companion_getInstance_35().y6g_1;
      } else {
        tmp_1 = button;
      }
      tmp.j6p_1 = copyFor(tmp_0, tmp_1, true);
    } else if (eventType === Companion_getInstance_20().d50_1) {
      var tmp_3 = this;
      var tmp_4 = this.j6p_1;
      var tmp_5;
      var tmp_6 = button;
      if ((tmp_6 == null ? null : new PointerButton(tmp_6)) == null) {
        tmp_5 = Companion_getInstance_35().y6g_1;
      } else {
        tmp_5 = button;
      }
      tmp_3.j6p_1 = copyFor(tmp_4, tmp_5, false);
    }
  };
  protoOf(DefaultPointerStateTracker).m6p = function (keyEvent) {
    this.k6p_1 = toPointerKeyboardModifiers(_KeyEvent___get_nativeKeyEvent__impl__py13j5(keyEvent));
  };
  function ComposeScenePointer(id, position, pressed, type, pressure, historical) {
    type = type === VOID ? Companion_getInstance_21().x50_1 : type;
    pressure = pressure === VOID ? 1.0 : pressure;
    historical = historical === VOID ? emptyList() : historical;
    this.n6p_1 = id;
    this.o6p_1 = position;
    this.p6p_1 = pressed;
    this.q6p_1 = type;
    this.r6p_1 = pressure;
    this.s6p_1 = historical;
  }
  protoOf(ComposeScenePointer).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof ComposeScenePointer))
      THROW_CCE();
    if (!equals(this.o6p_1, other.o6p_1))
      return false;
    if (!(this.p6p_1 === other.p6p_1))
      return false;
    if (!(this.q6p_1 === other.q6p_1))
      return false;
    if (!equals(this.n6p_1, other.n6p_1))
      return false;
    if (!(this.r6p_1 === other.r6p_1))
      return false;
    return true;
  };
  protoOf(ComposeScenePointer).hashCode = function () {
    var result = Offset__hashCode_impl_hbql41(this.o6p_1);
    result = imul(31, result) + getBooleanHashCode(this.p6p_1) | 0;
    result = imul(31, result) + PointerType__hashCode_impl_d0afh7(this.q6p_1) | 0;
    result = imul(31, result) + PointerId__hashCode_impl_vobdra(this.n6p_1) | 0;
    result = imul(31, result) + getNumberHashCode(this.r6p_1) | 0;
    return result;
  };
  protoOf(ComposeScenePointer).toString = function () {
    return 'Pointer(position=' + new Offset(this.o6p_1) + ', pressed=' + this.p6p_1 + ', type=' + new PointerType(this.q6p_1) + ', id=' + new PointerId(this.n6p_1) + ', pressure=' + this.r6p_1 + ')';
  };
  function PointerInputEvent_0(eventType, pointers, timeMillis, nativeEvent, scrollDelta, buttons, keyboardModifiers, changedButton) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$_0(collectionSizeOrDefault(pointers, 10));
    var tmp0_iterator = pointers.o();
    while (tmp0_iterator.d1()) {
      var item = tmp0_iterator.f1();
      // Inline function 'androidx.compose.ui.scene.PointerInputEvent.<anonymous>' call
      var tmp$ret$0 = new PointerInputEventData(item.n6p_1, timeMillis, item.o6p_1, item.o6p_1, item.p6p_1, item.r6p_1, item.q6p_1, item.q6p_1 === Companion_getInstance_21().x50_1, item.s6p_1, scrollDelta, item.o6p_1);
      destination.a1(tmp$ret$0);
    }
    return new PointerInputEvent(eventType, timeMillis, destination, buttons, keyboardModifiers, nativeEvent, changedButton);
  }
  function ComposeSceneRecomposer$slambda(this$0, resultContinuation) {
    this.b6q_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(ComposeSceneRecomposer$slambda).j20 = function ($this$launch, $completion) {
    var tmp = this.k20($this$launch, $completion);
    tmp.cc_1 = Unit_instance;
    tmp.dc_1 = null;
    return tmp.mc();
  };
  protoOf(ComposeSceneRecomposer$slambda).yc = function (p1, $completion) {
    return this.j20((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(ComposeSceneRecomposer$slambda).mc = function () {
    var suspendResult = this.cc_1;
    $sm: do
      try {
        var tmp = this.ac_1;
        switch (tmp) {
          case 0:
            this.bc_1 = 2;
            this.ac_1 = 1;
            suspendResult = this.b6q_1.w6o_1.y24(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_instance;
          case 2:
            throw this.dc_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.bc_1 === 2) {
          throw e;
        } else {
          this.ac_1 = this.bc_1;
          this.dc_1 = e;
        }
      }
     while (true);
  };
  protoOf(ComposeSceneRecomposer$slambda).k20 = function ($this$launch, completion) {
    var i = new ComposeSceneRecomposer$slambda(this.b6q_1, completion);
    i.c6q_1 = $this$launch;
    return i;
  };
  function ComposeSceneRecomposer$slambda_0(this$0, resultContinuation) {
    var i = new ComposeSceneRecomposer$slambda(this$0, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.j20($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function ComposeSceneRecomposer(coroutineContext, elements) {
    this.s6o_1 = Job();
    this.t6o_1 = CoroutineScope(coroutineContext.yf(this.s6o_1));
    this.u6o_1 = new FlushCoroutineDispatcher(this.t6o_1);
    this.v6o_1 = new FlushCoroutineDispatcher(this.t6o_1);
    this.w6o_1 = new Recomposer(coroutineContext.yf(this.s6o_1).yf(this.u6o_1));
    var context = this.v6o_1;
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      context = context.yf(element);
    }
    var tmp = context;
    var tmp_0 = CoroutineStart_UNDISPATCHED_getInstance();
    launch(this.t6o_1, tmp, tmp_0, ComposeSceneRecomposer$slambda_0(this, null));
  }
  protoOf(ComposeSceneRecomposer).r6o = function () {
    return this.w6o_1;
  };
  protoOf(ComposeSceneRecomposer).a6p = function () {
    this.v6o_1.p6();
  };
  protoOf(ComposeSceneRecomposer).c6p = function () {
    this.u6o_1.p6();
  };
  function MultiLayerComposeScene(density, layoutDirection, boundsInWindow, coroutineContext, composeSceneContext, invalidate) {
    density = density === VOID ? Density_0(1.0) : density;
    layoutDirection = layoutDirection === VOID ? LayoutDirection_Ltr_getInstance() : layoutDirection;
    boundsInWindow = boundsInWindow === VOID ? null : boundsInWindow;
    coroutineContext = coroutineContext === VOID ? Dispatchers_getInstance().t10_1 : coroutineContext;
    composeSceneContext = composeSceneContext === VOID ? Companion_getInstance_39().i6p_1 : composeSceneContext;
    var tmp;
    if (invalidate === VOID) {
      tmp = MultiLayerComposeScene$lambda;
    } else {
      tmp = invalidate;
    }
    invalidate = tmp;
    return new MultiLayerComposeSceneImpl(density, layoutDirection, boundsInWindow, coroutineContext, composeSceneContext, invalidate);
  }
  function _get_focusOwner__4gvhzk($this) {
    return _get_focusedOwner__o339sf($this.e6q_1).o6h_1;
  }
  function _get_focusedOwner__o339sf($this) {
    var tmp0_safe_receiver = $this.z6q_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d6r_1;
    return tmp1_elvis_lhs == null ? $this.r6q_1 : tmp1_elvis_lhs;
  }
  function hoveredOwner($this, event) {
    var position = first(event.o53_1).n50_1;
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.lastOrNull' call
      var this_0 = $this.w6q_1;
      var iterator = this_0.q(this_0.m());
      while (iterator.s1()) {
        var element = iterator.t1();
        // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.hoveredOwner.<anonymous>' call
        if (element.p6r(position)) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    var tmp0_safe_receiver = tmp$ret$1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d6r_1;
    return tmp1_elvis_lhs == null ? $this.r6q_1 : tmp1_elvis_lhs;
  }
  function isInteractive($this, owner) {
    if (owner == null ? true : $this.z6q_1 == null) {
      return true;
    }
    if (equals(owner, $this.r6q_1)) {
      return false;
    }
    var tmp0_iterator = $this.w6q_1.o();
    while (tmp0_iterator.d1()) {
      var layer = tmp0_iterator.f1();
      if (equals(layer, $this.z6q_1)) {
        return true;
      }
      if (equals(layer.d6r_1, owner)) {
        return false;
      }
    }
    return true;
  }
  function processPress($this, event) {
    var currentGestureOwner = $this.a6r_1;
    if (!(currentGestureOwner == null)) {
      currentGestureOwner.m6j(event);
      return Unit_instance;
    }
    var position = first(event.o53_1).n50_1;
    // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.forEachLayerReversed' call
    var this_0 = $this.x6q_1;
    var tmp;
    if (this_0.u()) {
      tmp = this_0;
    } else {
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp = ArrayList_init_$Create$();
    }
    var copy = tmp;
    this_0.q6r_1(copy);
    var tmp_0;
    try {
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = copy.m() - 1 | 0;
      var tmp_1;
      if (0 <= inductionVariable) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var item = copy.n(index);
          // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.processPress.<anonymous>' call
          if (item.p6r(position)) {
            item.d6r_1.m6j(event);
            $this.a6r_1 = item.d6r_1;
            return Unit_instance;
          }
          item.s6r(event);
          if (equals(item, $this.z6q_1)) {
            return Unit_instance;
          }
        }
         while (0 <= inductionVariable);
        tmp_1 = Unit_instance;
      }
      tmp_0 = tmp_1;
    }finally {
      copy.h1();
    }
    $this.r6q_1.m6j(event);
    $this.a6r_1 = $this.r6q_1;
  }
  function processRelease($this, event) {
    var tmp0_safe_receiver = $this.a6r_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.m6j(event);
    }
    if (!get_isGestureInProgress(event)) {
      var owner = hoveredOwner($this, event);
      if (isInteractive($this, owner)) {
        processHover($this, event, owner);
      } else if ($this.a6r_1 == null) {
        var tmp1_safe_receiver = $this.z6q_1;
        if (tmp1_safe_receiver == null)
          null;
        else {
          tmp1_safe_receiver.s6r(event);
        }
      }
    }
  }
  function processMove($this, event) {
    var owner = get_isGestureInProgress(event) ? $this.a6r_1 : event.m53_1 === Companion_getInstance_20().g50_1 ? null : hoveredOwner($this, event);
    if (!isInteractive($this, owner)) {
      owner = null;
    }
    if (processHover($this, event, owner)) {
      return Unit_instance;
    }
    var tmp0_safe_receiver = owner;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.m6j(event.f6h(Companion_getInstance_20().e50_1));
    }
  }
  function processHover($this, event, owner) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'androidx.compose.ui.util.fastAny' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.util.fastForEach' call
      var this_0 = event.o53_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.n(index);
          // Inline function 'androidx.compose.ui.util.fastAny.<anonymous>' call
          // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.processHover.<anonymous>' call
          if (!(item.q50_1 === Companion_getInstance_21().x50_1)) {
            tmp$ret$1 = true;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = false;
    }
    if (tmp$ret$1) {
      return false;
    }
    if (equals(owner, $this.b6r_1)) {
      return false;
    }
    var tmp0_safe_receiver = $this.b6r_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.m6j(event.f6h(Companion_getInstance_20().g50_1));
    }
    if (owner == null)
      null;
    else {
      owner.m6j(event.f6h(Companion_getInstance_20().f50_1));
    }
    $this.b6r_1 = owner;
    return true;
  }
  function processScroll($this, event) {
    var owner = hoveredOwner($this, event);
    if (isInteractive($this, owner)) {
      owner.m6j(event);
    }
  }
  function onOwnerAppended($this, owner) {
    if ($this.v6q_1.d6q_1) {
      owner.o6h_1.y4o();
    } else {
      owner.o6h_1.a4p();
    }
    var tmp0_safe_receiver = get_semanticsOwnerListener_0($this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.t6r(owner.r6h_1);
    }
  }
  function ComposeSceneFocusManagerImpl($outer) {
    this.e6q_1 = $outer;
    this.d6q_1 = true;
  }
  protoOf(ComposeSceneFocusManagerImpl).k4o = function (force) {
    return _get_focusOwner__4gvhzk(this).k4o(force);
  };
  protoOf(ComposeSceneFocusManagerImpl).f4o = function (focusDirection) {
    return _get_focusOwner__4gvhzk(this).f4o(focusDirection);
  };
  function MultiLayerComposeSceneImpl$_init_$lambda_wthv0n() {
    return Unit_instance;
  }
  function MultiLayerComposeSceneImpl$_layersCopyCache$lambda(this$0) {
    return function (it) {
      it.g1(this$0.w6q_1);
      return Unit_instance;
    };
  }
  function MultiLayerComposeSceneImpl$_ownersCopyCache$lambda(this$0) {
    return function (it) {
      it.a1(this$0.r6q_1);
      var tmp0_iterator = this$0.w6q_1.o();
      while (tmp0_iterator.d1()) {
        var layer = tmp0_iterator.f1();
        it.a1(layer.d6r_1);
      }
      return Unit_instance;
    };
  }
  function MultiLayerComposeSceneImpl$createComposition$lambda(this$0) {
    return function () {
      return this$0.y6o();
    };
  }
  function MultiLayerComposeSceneImpl(density, layoutDirection, boundsInWindow, coroutineContext, composeSceneContext, invalidate) {
    var tmp;
    if (invalidate === VOID) {
      tmp = MultiLayerComposeSceneImpl$_init_$lambda_wthv0n;
    } else {
      tmp = invalidate;
    }
    invalidate = tmp;
    BaseComposeScene.call(this, coroutineContext, composeSceneContext, invalidate);
    this.r6q_1 = new RootNodeOwner(density, layoutDirection, boundsInWindow, this.r6o().z1r(), composeSceneContext.w6e(), this.e6o_1, this.f6o_1);
    this.s6q_1 = density;
    this.t6q_1 = layoutDirection;
    this.u6q_1 = boundsInWindow;
    this.v6q_1 = new ComposeSceneFocusManagerImpl(this);
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_0.w6q_1 = ArrayList_init_$Create$();
    var tmp_1 = this;
    tmp_1.x6q_1 = new CopiedList(MultiLayerComposeSceneImpl$_layersCopyCache$lambda(this));
    var tmp_2 = this;
    tmp_2.y6q_1 = new CopiedList(MultiLayerComposeSceneImpl$_ownersCopyCache$lambda(this));
    this.z6q_1 = null;
    this.a6r_1 = null;
    this.b6r_1 = null;
    onOwnerAppended(this, this.r6q_1);
  }
  protoOf(MultiLayerComposeSceneImpl).k5i = function (value) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.j6o_1) {
      // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.<set-density>.<anonymous>' call
      var message = 'ComposeScene is closed';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.s6q_1 = value;
    this.r6q_1.k5i(value);
  };
  protoOf(MultiLayerComposeSceneImpl).z6e = function (value) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.j6o_1) {
      // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.<set-boundsInWindow>.<anonymous>' call
      var message = 'ComposeScene is closed';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(value == null ? true : _IntSize___get_width__impl__d9yl4o(value.d2y()) >= 0 ? _IntSize___get_height__impl__prv63b(value.d2y()) >= 0 : false)) {
      // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.<set-boundsInWindow>.<anonymous>' call
      var message_0 = 'Size of ComposeScene cannot be negative';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    this.u6q_1 = value;
    this.r6q_1.k6j(value);
    // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.forEachLayer' call
    var this_0 = this.x6q_1;
    var tmp;
    if (this_0.u()) {
      tmp = this_0;
    } else {
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp = ArrayList_init_$Create$();
    }
    var copy = tmp;
    this_0.q6r_1(copy);
    var tmp_0;
    try {
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = copy.m() - 1 | 0;
      var tmp_1;
      if (inductionVariable <= last) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = copy.n(index);
          // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.<set-boundsInWindow>.<anonymous>' call
          item.d6r_1.k6j(value);
        }
         while (inductionVariable <= last);
        tmp_1 = Unit_instance;
      }
      tmp_0 = tmp_1;
    }finally {
      copy.h1();
    }
  };
  protoOf(MultiLayerComposeSceneImpl).b6p = function (content) {
    var tmp = this.r6o();
    return setContent(this.r6q_1, tmp, MultiLayerComposeSceneImpl$createComposition$lambda(this), content);
  };
  protoOf(MultiLayerComposeSceneImpl).p6o = function (event) {
    var tmp0_subject = event.m53_1;
    if (tmp0_subject === Companion_getInstance_20().c50_1) {
      processPress(this, event);
    } else if (tmp0_subject === Companion_getInstance_20().d50_1) {
      processRelease(this, event);
    } else if (tmp0_subject === Companion_getInstance_20().e50_1) {
      processMove(this, event);
    } else if (tmp0_subject === Companion_getInstance_20().f50_1) {
      processMove(this, event);
    } else if (tmp0_subject === Companion_getInstance_20().g50_1) {
      processMove(this, event);
    } else if (tmp0_subject === Companion_getInstance_20().h50_1) {
      processScroll(this, event);
    }
    if (!get_isGestureInProgress(event)) {
      this.a6r_1 = null;
    }
  };
  protoOf(MultiLayerComposeSceneImpl).q6o = function (keyEvent) {
    return _get_focusedOwner__o339sf(this).i4p(keyEvent);
  };
  protoOf(MultiLayerComposeSceneImpl).l6j = function () {
    // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.forEachOwner' call
    var this_0 = this.y6q_1;
    var tmp;
    if (this_0.u()) {
      tmp = this_0;
    } else {
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp = ArrayList_init_$Create$();
    }
    var copy = tmp;
    this_0.q6r_1(copy);
    var tmp_0;
    try {
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = copy.m() - 1 | 0;
      var tmp_1;
      if (inductionVariable <= last) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = copy.n(index);
          // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.measureAndLayout.<anonymous>' call
          item.l6j();
        }
         while (inductionVariable <= last);
        tmp_1 = Unit_instance;
      }
      tmp_0 = tmp_1;
    }finally {
      copy.h1();
    }
  };
  protoOf(MultiLayerComposeSceneImpl).e5n = function (canvas) {
    // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.forEachOwner' call
    var this_0 = this.y6q_1;
    var tmp;
    if (this_0.u()) {
      tmp = this_0;
    } else {
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp = ArrayList_init_$Create$();
    }
    var copy = tmp;
    this_0.q6r_1(copy);
    var tmp_0;
    try {
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = copy.m() - 1 | 0;
      var tmp_1;
      if (inductionVariable <= last) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = copy.n(index);
          // Inline function 'androidx.compose.ui.scene.MultiLayerComposeSceneImpl.draw.<anonymous>' call
          item.e5n(canvas);
        }
         while (inductionVariable <= last);
        tmp_1 = Unit_instance;
      }
      tmp_0 = tmp_1;
    }finally {
      copy.h1();
    }
  };
  function CopiedList(populate) {
    this.q6r_1 = populate;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.r6r_1 = ArrayList_init_$Create$();
  }
  protoOf(CopiedList).m = function () {
    return this.r6r_1.m();
  };
  protoOf(CopiedList).q1q = function (element) {
    return this.r6r_1.a1(element);
  };
  protoOf(CopiedList).a1 = function (element) {
    return this.q1q((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(CopiedList).r2g = function (index, element) {
    this.r6r_1.y1(index, element);
  };
  protoOf(CopiedList).y1 = function (index, element) {
    return this.r2g(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(CopiedList).s2g = function (index, elements) {
    return this.r6r_1.a2(index, elements);
  };
  protoOf(CopiedList).a2 = function (index, elements) {
    return this.s2g(index, elements);
  };
  protoOf(CopiedList).t2g = function (elements) {
    return this.r6r_1.g1(elements);
  };
  protoOf(CopiedList).g1 = function (elements) {
    return this.t2g(elements);
  };
  protoOf(CopiedList).h1 = function () {
    this.r6r_1.h1();
  };
  protoOf(CopiedList).fe = function (element) {
    return this.r6r_1.s(element);
  };
  protoOf(CopiedList).s = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.fe((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(CopiedList).ge = function (elements) {
    return this.r6r_1.t(elements);
  };
  protoOf(CopiedList).t = function (elements) {
    return this.ge(elements);
  };
  protoOf(CopiedList).n = function (index) {
    return this.r6r_1.n(index);
  };
  protoOf(CopiedList).q2g = function (element) {
    return this.r6r_1.p(element);
  };
  protoOf(CopiedList).p = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.q2g((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(CopiedList).u = function () {
    return this.r6r_1.u();
  };
  protoOf(CopiedList).o = function () {
    return this.r6r_1.o();
  };
  protoOf(CopiedList).q = function (index) {
    return this.r6r_1.q(index);
  };
  protoOf(CopiedList).u2g = function (element) {
    return this.r6r_1.b1(element);
  };
  protoOf(CopiedList).b1 = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.u2g((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(CopiedList).m1 = function (index) {
    return this.r6r_1.m1(index);
  };
  protoOf(CopiedList).v2g = function (index, element) {
    return this.r6r_1.z(index, element);
  };
  protoOf(CopiedList).z = function (index, element) {
    return this.v2g(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(CopiedList).r = function (fromIndex, toIndex) {
    return this.r6r_1.r(fromIndex, toIndex);
  };
  function get_isGestureInProgress(_this__u8e3s4) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'androidx.compose.ui.util.fastAny' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.ui.util.fastForEach' call
      var this_0 = _this__u8e3s4.o53_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.n(index);
          // Inline function 'androidx.compose.ui.util.fastAny.<anonymous>' call
          // Inline function 'androidx.compose.ui.scene.<get-isGestureInProgress>.<anonymous>' call
          if (item.o50_1) {
            tmp$ret$1 = true;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  }
  function isMainAction(_this__u8e3s4) {
    var tmp;
    var tmp_0 = _this__u8e3s4.s53_1;
    if (equals(tmp_0 == null ? null : new PointerButton(tmp_0), new PointerButton(Companion_getInstance_35().y6g_1))) {
      tmp = true;
    } else {
      var tmp_1;
      var tmp_2 = _this__u8e3s4.s53_1;
      if ((tmp_2 == null ? null : new PointerButton(tmp_2)) == null) {
        tmp_1 = _this__u8e3s4.o53_1.m() === 1;
      } else {
        tmp_1 = false;
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function MultiLayerComposeScene$lambda() {
    return Unit_instance;
  }
  function boundsInWindow$factory() {
    return getPropertyCallableRef('boundsInWindow', 1, KMutableProperty1, function (receiver) {
      return receiver.u6r();
    }, function (receiver, value) {
      return receiver.v6r(value);
    });
  }
  function boundsInWindow$factory_0() {
    return getPropertyCallableRef('boundsInWindow', 1, KMutableProperty1, function (receiver) {
      return receiver.u6r();
    }, function (receiver, value) {
      return receiver.v6r(value);
    });
  }
  function throwUnsupportedError($this) {
    throw UnsupportedOperationException_init_$Create$('InteropViewFactoryHolder cannot be used because interoperability views are not supported on this platform.');
  }
  //region block: post-declaration
  protoOf(ComposedModifier).n4i = foldIn;
  protoOf(ComposedModifier).o4i = all;
  protoOf(ComposedModifier).j4i = then;
  protoOf(CombinedModifier).j4i = then;
  protoOf(ModifierNodeElement).n4i = foldIn;
  protoOf(ModifierNodeElement).o4i = all;
  protoOf(ModifierNodeElement).j4i = then;
  protoOf(FocusTargetNode).m4q = get_providedValues;
  protoOf(FocusTargetNode).i4q = get_current;
  protoOf(ReusableGraphicsLayerScope).h2x = toPx;
  protoOf(ReusableGraphicsLayerScope).i2x = toPx_0;
  protoOf(ReusableGraphicsLayerScope).m2x = toDp;
  protoOf(ReusableGraphicsLayerScope).n2x = toSize;
  protoOf(PointerHoverIconModifierNode).q52 = interceptOutOfBoundsChildEvents;
  protoOf(PointerHoverIconModifierNode).r52 = sharePointerInputWithSiblings;
  protoOf(PointerHoverIconModifierNode).s52 = onDensityChange;
  protoOf(PointerHoverIconModifierNode).t52 = onViewConfigurationChange;
  protoOf(PointerEventHandlerCoroutine).h56 = awaitPointerEvent$default;
  protoOf(SuspendingPointerInputModifierNodeImpl).q52 = interceptOutOfBoundsChildEvents;
  protoOf(SuspendingPointerInputModifierNodeImpl).r52 = sharePointerInputWithSiblings;
  protoOf(SuspendingPointerInputModifierNodeImpl).h2x = toPx;
  protoOf(SuspendingPointerInputModifierNodeImpl).i2x = toPx_0;
  protoOf(SuspendingPointerInputModifierNodeImpl).m2x = toDp;
  protoOf(SuspendingPointerInputModifierNodeImpl).n2x = toSize;
  protoOf(BackwardsCompatNode).t5h = get_shouldClearDescendantSemantics;
  protoOf(BackwardsCompatNode).u5h = get_shouldMergeDescendantSemantics;
  protoOf(BackwardsCompatNode).s52 = onDensityChange;
  protoOf(BackwardsCompatNode).t52 = onViewConfigurationChange;
  protoOf(LookaheadCapablePlaceable).z4u = layout$default;
  protoOf(LookaheadCapablePlaceable).h2x = toPx;
  protoOf(LookaheadCapablePlaceable).i2x = toPx_0;
  protoOf(LookaheadCapablePlaceable).m2x = toDp;
  protoOf(LookaheadCapablePlaceable).n2x = toSize;
  protoOf(LayoutNodeDrawScope).b3u = drawPath$default;
  protoOf(CanFocusChecker).f13 = get_next;
  protoOf(CanFocusChecker).k4p = get_previous;
  protoOf(CanFocusChecker).l4p = get_up;
  protoOf(CanFocusChecker).m4p = get_down;
  protoOf(CanFocusChecker).n4p = get_left;
  protoOf(CanFocusChecker).o4p = get_right;
  protoOf(CanFocusChecker).tg = get_start;
  protoOf(CanFocusChecker).p4p = get_end;
  protoOf(CanFocusChecker).q4p = get_enter;
  protoOf(CanFocusChecker).r4p = get_exit;
  protoOf(EmptySemanticsModifier).t5h = get_shouldClearDescendantSemantics;
  protoOf(EmptySemanticsModifier).u5h = get_shouldMergeDescendantSemantics;
  protoOf(OwnerImpl).x5u = forceMeasureTheSubtree$default;
  protoOf(OwnerImpl).m5s = onRequestMeasure$default;
  protoOf(OwnerImpl).q5s = onRequestRelayout$default;
  protoOf(OwnerImpl).p5r = get_placementScope;
  protoOf(FlushCoroutineDispatcher).rv = invokeOnTimeout;
  protoOf(PlatformContext$Companion$Empty$1).d56 = get_viewConfiguration;
  protoOf(PlatformContext$Companion$Empty$1).d5z = get_textInputService;
  protoOf(PlatformContext$Companion$Empty$1).a5z = get_textToolbar;
  protoOf(PlatformContext$Companion$Empty$1).w6f = setPointerIcon;
  protoOf(PlatformContext$Companion$Empty$1).t6f = get_parentFocusManager;
  protoOf(PlatformContext$Companion$Empty$1).p4r = requestFocus;
  protoOf(PlatformContext$Companion$Empty$1).u6f = get_rootForTestListener;
  protoOf(PlatformContext$Companion$Empty$1).v6f = get_semanticsOwnerListener;
  protoOf(EmptyViewConfiguration).u56 = get_minimumTouchTargetSize;
  protoOf(BaseComposeScene).q6e = sendPointerEvent$default;
  protoOf(BaseComposeScene).p6e = sendPointerEvent$default_0;
  protoOf(ComposeSceneContext$Companion$Empty$1).w6e = get_platformContext;
  //endregion
  //region block: init
  Companion_instance_3 = new Companion();
  FocusableChildrenComparator_instance = new FocusableChildrenComparator();
  DefaultCameraDistance = 8.0;
  Fields_instance = new Fields();
  Companion_instance_13 = new Companion_9();
  Companion_instance_17 = new Companion_13();
  MaxLayoutDimension = 16777215;
  Nodes_instance = new Nodes();
  CanFocusChecker_instance = new CanFocusChecker();
  DepthComparator_instance = new DepthComparator();
  Companion_instance_22 = new Companion_18();
  Companion_instance_23 = new Companion_19();
  DefaultCacheSize = 8;
  buttonsFlags = 0;
  defaultCanvasElementId = 'ComposeTarget';
  Companion_instance_26 = new Companion_22();
  IdentityPositionCalculator_instance = new IdentityPositionCalculator();
  GlobalSnapshotManager_instance = new GlobalSnapshotManager();
  EmptyPlatformTextInputService_instance = new EmptyPlatformTextInputService();
  EmptyFocusManager_instance = new EmptyFocusManager();
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = graphicsLayer;
  _.$_$.b = AwaitPointerEventScope;
  _.$_$.c = PointerEventTimeoutCancellationException;
  _.$_$.d = PointerInputScope;
  _.$_$.e = changedToDownIgnoreConsumed;
  _.$_$.f = changedToUpIgnoreConsumed;
  _.$_$.g = changedToUp;
  _.$_$.h = isOutOfBounds_0;
  _.$_$.i = get_isPrimaryPressed;
  _.$_$.j = get_isShiftPressed_0;
  _.$_$.k = pointerHoverIcon;
  _.$_$.l = pointerInput;
  _.$_$.m = positionChangedIgnoreConsumed;
  _.$_$.n = positionChange;
  _.$_$.o = get_FirstBaseline;
  _.$_$.p = get_LastBaseline;
  _.$_$.q = DelegatingNode;
  _.$_$.r = onMeasureResultChanged;
  _.$_$.s = DrawModifierNode;
  _.$_$.t = GlobalPositionAwareModifierNode;
  _.$_$.u = LayoutModifierNode;
  _.$_$.v = ModifierNodeElement;
  _.$_$.w = get_shouldClearDescendantSemantics;
  _.$_$.x = get_shouldMergeDescendantSemantics;
  _.$_$.y = SemanticsModifierNode;
  _.$_$.z = invalidateDraw;
  _.$_$.a1 = invalidateLayer;
  _.$_$.b1 = invalidateMeasurement;
  _.$_$.c1 = invalidateSemantics;
  _.$_$.d1 = get_LocalFontFamilyResolver;
  _.$_$.e1 = clearTextSubstitution;
  _.$_$.f1 = getTextLayoutResult;
  _.$_$.g1 = set_isShowingTextSubstitution;
  _.$_$.h1 = setTextSubstitution;
  _.$_$.i1 = showTextSubstitution;
  _.$_$.j1 = set_text;
  _.$_$.k1 = set_textSubstitution;
  _.$_$.l1 = CanvasBasedWindow;
  _.$_$.m1 = get_LocalSystemTheme;
  _.$_$.n1 = Node;
  _.$_$.o1 = composed;
  _.$_$.p1 = materialize;
  _.$_$.q1 = PointerEventPass_Final_getInstance;
  _.$_$.r1 = PointerEventPass_Main_getInstance;
  _.$_$.s1 = SystemTheme_Dark_getInstance;
  _.$_$.t1 = Companion_getInstance_22;
  _.$_$.u1 = Companion_getInstance_21;
  _.$_$.v1 = Companion_getInstance_25;
  _.$_$.w1 = Companion_instance_3;
  //endregion
  return _;
}));

//# sourceMappingURL=compose-multiplatform-core-compose-ui-ui.js.map
