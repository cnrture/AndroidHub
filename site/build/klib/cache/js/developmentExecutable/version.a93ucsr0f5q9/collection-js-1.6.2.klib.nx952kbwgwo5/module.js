(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', './kotlin-kotlin-stdlib.js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('./kotlin-kotlin-stdlib.js'));
  else {
    if (typeof this['kotlin-kotlin-stdlib'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-collection-collection'. Its dependency 'kotlin-kotlin-stdlib' was not found. Please, check whether 'kotlin-kotlin-stdlib' is loaded prior to 'compose-multiplatform-core-collection-collection'.");
    }
    root['compose-multiplatform-core-collection-collection'] = factory(typeof this['compose-multiplatform-core-collection-collection'] === 'undefined' ? {} : this['compose-multiplatform-core-collection-collection'], this['kotlin-kotlin-stdlib']);
  }
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var clz32 = Math.clz32;
  var longArray = kotlin_kotlin.$_$.hb;
  var fill = kotlin_kotlin.$_$.u6;
  var Long = kotlin_kotlin.$_$.le;
  var getNumberHashCode = kotlin_kotlin.$_$.la;
  var toLong = kotlin_kotlin.$_$.qb;
  var countTrailingZeroBits = kotlin_kotlin.$_$.if;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.d3;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.e3;
  var ulongCompare = kotlin_kotlin.$_$.wf;
  var VOID = kotlin_kotlin.$_$.e;
  var toString = kotlin_kotlin.$_$.rb;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var protoOf = kotlin_kotlin.$_$.ob;
  var Unit_getInstance = kotlin_kotlin.$_$.l4;
  var classMeta = kotlin_kotlin.$_$.ea;
  var setMetadataFor = kotlin_kotlin.$_$.pb;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.w1;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.d1;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.f2;
  var until = kotlin_kotlin.$_$.ac;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.t1;
  var arrayCopy = kotlin_kotlin.$_$.r5;
  var copyOf = kotlin_kotlin.$_$.m6;
  var sort = kotlin_kotlin.$_$.m8;
  var sortDescending = kotlin_kotlin.$_$.g8;
  var fillArrayVal = kotlin_kotlin.$_$.ia;
  var THROW_CCE = kotlin_kotlin.$_$.re;
  var equals = kotlin_kotlin.$_$.ha;
  var fill_0 = kotlin_kotlin.$_$.v6;
  var hashCode = kotlin_kotlin.$_$.oa;
  var copyOf_0 = kotlin_kotlin.$_$.o6;
  var sort_0 = kotlin_kotlin.$_$.l8;
  var sortDescending_0 = kotlin_kotlin.$_$.i8;
  var copyOf_1 = kotlin_kotlin.$_$.h6;
  var sort_1 = kotlin_kotlin.$_$.n8;
  var sortDescending_1 = kotlin_kotlin.$_$.h8;
  var toString_0 = kotlin_kotlin.$_$.uf;
  var MutableListIterator = kotlin_kotlin.$_$.i5;
  var MutableList = kotlin_kotlin.$_$.j5;
  var checkIndexOverflow = kotlin_kotlin.$_$.z5;
  var copyOf_2 = kotlin_kotlin.$_$.n6;
  var indexOf = kotlin_kotlin.$_$.b7;
  var contains = kotlin_kotlin.$_$.b6;
  var contains_0 = kotlin_kotlin.$_$.ic;
  var CoroutineImpl = kotlin_kotlin.$_$.q9;
  var SequenceScope = kotlin_kotlin.$_$.hc;
  var numberRangeToNumber = kotlin_kotlin.$_$.ib;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.b9;
  var iterator = kotlin_kotlin.$_$.jc;
  var MutableIterator = kotlin_kotlin.$_$.h5;
  var Collection = kotlin_kotlin.$_$.v4;
  var isInterface = kotlin_kotlin.$_$.za;
  var MutableEntry = kotlin_kotlin.$_$.k5;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.a2;
  var MutableSet = kotlin_kotlin.$_$.m5;
  var MutableCollection = kotlin_kotlin.$_$.g5;
  var MutableMap = kotlin_kotlin.$_$.l5;
  var Entry = kotlin_kotlin.$_$.e5;
  var Set = kotlin_kotlin.$_$.o5;
  var Map = kotlin_kotlin.$_$.f5;
  var longArrayOf = kotlin_kotlin.$_$.gb;
  var SuspendFunction1 = kotlin_kotlin.$_$.r9;
  //endregion
  //region block: pre-declaration
  setMetadataFor(FloatFloatMap, 'FloatFloatMap', classMeta);
  setMetadataFor(MutableFloatFloatMap, 'MutableFloatFloatMap', classMeta, FloatFloatMap, VOID, MutableFloatFloatMap);
  setMetadataFor(FloatIntMap, 'FloatIntMap', classMeta);
  setMetadataFor(MutableFloatIntMap, 'MutableFloatIntMap', classMeta, FloatIntMap, VOID, MutableFloatIntMap);
  setMetadataFor(FloatList, 'FloatList', classMeta);
  setMetadataFor(MutableFloatList, 'MutableFloatList', classMeta, FloatList, VOID, MutableFloatList);
  setMetadataFor(FloatLongMap, 'FloatLongMap', classMeta);
  setMetadataFor(MutableFloatLongMap, 'MutableFloatLongMap', classMeta, FloatLongMap, VOID, MutableFloatLongMap);
  setMetadataFor(FloatObjectMap, 'FloatObjectMap', classMeta);
  setMetadataFor(MutableFloatObjectMap, 'MutableFloatObjectMap', classMeta, FloatObjectMap, VOID, MutableFloatObjectMap);
  setMetadataFor(FloatSet, 'FloatSet', classMeta);
  setMetadataFor(MutableFloatSet, 'MutableFloatSet', classMeta, FloatSet, VOID, MutableFloatSet);
  setMetadataFor(IntFloatMap, 'IntFloatMap', classMeta);
  setMetadataFor(MutableIntFloatMap, 'MutableIntFloatMap', classMeta, IntFloatMap, VOID, MutableIntFloatMap);
  setMetadataFor(IntIntMap, 'IntIntMap', classMeta);
  setMetadataFor(MutableIntIntMap, 'MutableIntIntMap', classMeta, IntIntMap, VOID, MutableIntIntMap);
  setMetadataFor(IntList, 'IntList', classMeta);
  setMetadataFor(MutableIntList, 'MutableIntList', classMeta, IntList, VOID, MutableIntList);
  setMetadataFor(IntLongMap, 'IntLongMap', classMeta);
  setMetadataFor(MutableIntLongMap, 'MutableIntLongMap', classMeta, IntLongMap, VOID, MutableIntLongMap);
  setMetadataFor(IntObjectMap, 'IntObjectMap', classMeta);
  setMetadataFor(MutableIntObjectMap, 'MutableIntObjectMap', classMeta, IntObjectMap, VOID, MutableIntObjectMap);
  setMetadataFor(IntSet, 'IntSet', classMeta);
  setMetadataFor(MutableIntSet, 'MutableIntSet', classMeta, IntSet, VOID, MutableIntSet);
  setMetadataFor(LongFloatMap, 'LongFloatMap', classMeta);
  setMetadataFor(MutableLongFloatMap, 'MutableLongFloatMap', classMeta, LongFloatMap, VOID, MutableLongFloatMap);
  setMetadataFor(LongIntMap, 'LongIntMap', classMeta);
  setMetadataFor(MutableLongIntMap, 'MutableLongIntMap', classMeta, LongIntMap, VOID, MutableLongIntMap);
  setMetadataFor(LongList, 'LongList', classMeta);
  setMetadataFor(MutableLongList, 'MutableLongList', classMeta, LongList, VOID, MutableLongList);
  setMetadataFor(LongLongMap, 'LongLongMap', classMeta);
  setMetadataFor(MutableLongLongMap, 'MutableLongLongMap', classMeta, LongLongMap, VOID, MutableLongLongMap);
  setMetadataFor(LongObjectMap, 'LongObjectMap', classMeta);
  setMetadataFor(MutableLongObjectMap, 'MutableLongObjectMap', classMeta, LongObjectMap, VOID, MutableLongObjectMap);
  setMetadataFor(LongSet, 'LongSet', classMeta);
  setMetadataFor(MutableLongSet, 'MutableLongSet', classMeta, LongSet, VOID, MutableLongSet);
  setMetadataFor(ObjectFloatMap, 'ObjectFloatMap', classMeta);
  setMetadataFor(MutableObjectFloatMap, 'MutableObjectFloatMap', classMeta, ObjectFloatMap, VOID, MutableObjectFloatMap);
  setMetadataFor(ObjectIntMap, 'ObjectIntMap', classMeta);
  setMetadataFor(MutableObjectIntMap, 'MutableObjectIntMap', classMeta, ObjectIntMap, VOID, MutableObjectIntMap);
  setMetadataFor(ObjectList, 'ObjectList', classMeta);
  setMetadataFor(MutableObjectListIterator, 'MutableObjectListIterator', classMeta, VOID, [MutableListIterator]);
  setMetadataFor(ObjectListMutableList, 'ObjectListMutableList', classMeta, VOID, [MutableList]);
  setMetadataFor(SubList, 'SubList', classMeta, VOID, [MutableList]);
  setMetadataFor(MutableObjectList, 'MutableObjectList', classMeta, ObjectList, VOID, MutableObjectList);
  setMetadataFor(ObjectLongMap, 'ObjectLongMap', classMeta);
  setMetadataFor(MutableObjectLongMap, 'MutableObjectLongMap', classMeta, ObjectLongMap, VOID, MutableObjectLongMap);
  setMetadataFor(MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa, 'MutableScatterMap$MutableMapWrapper$<get-entries>$o$iterator$o$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(MutableScatterMap$MutableMapWrapper$entries$1$iterator$1, VOID, classMeta, VOID, [MutableIterator]);
  setMetadataFor(MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4, 'MutableScatterMap$MutableMapWrapper$<get-keys>$o$iterator$o$iterator$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(MutableScatterMap$MutableMapWrapper$keys$1$iterator$1, VOID, classMeta, VOID, [MutableIterator]);
  setMetadataFor(MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu, 'MutableScatterMap$MutableMapWrapper$<get-values>$o$iterator$o$iterator$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(MutableScatterMap$MutableMapWrapper$values$1$iterator$1, VOID, classMeta, VOID, [MutableIterator]);
  setMetadataFor(MutableScatterMap$MutableMapWrapper$entries$1, VOID, classMeta, VOID, [MutableSet]);
  setMetadataFor(MutableScatterMap$MutableMapWrapper$keys$1, VOID, classMeta, VOID, [MutableSet]);
  setMetadataFor(MutableScatterMap$MutableMapWrapper$values$1, VOID, classMeta, VOID, [MutableCollection]);
  setMetadataFor(MapWrapper, 'MapWrapper', classMeta, VOID, [Map]);
  setMetadataFor(MutableMapWrapper, 'MutableMapWrapper', classMeta, MapWrapper, [MapWrapper, MutableMap]);
  setMetadataFor(ScatterMap, 'ScatterMap', classMeta);
  setMetadataFor(MutableScatterMap, 'MutableScatterMap', classMeta, ScatterMap, VOID, MutableScatterMap);
  setMetadataFor(ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd, 'ScatterMap$MapWrapper$<get-entries>$o$iterator$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj, 'ScatterMap$MapWrapper$<get-keys>$o$iterator$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil, 'ScatterMap$MapWrapper$<get-values>$o$iterator$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(ScatterMap$MapWrapper$entries$1, VOID, classMeta, VOID, [Set]);
  setMetadataFor(ScatterMap$MapWrapper$keys$1, VOID, classMeta, VOID, [Set]);
  setMetadataFor(ScatterMap$MapWrapper$values$1, VOID, classMeta, VOID, [Collection]);
  setMetadataFor(MutableMapEntry, 'MutableMapEntry', classMeta, VOID, [MutableEntry]);
  setMetadataFor(MapEntry, 'MapEntry', classMeta, VOID, [Entry]);
  setMetadataFor(ScatterSet$SetWrapper$iterator$slambda, 'ScatterSet$SetWrapper$iterator$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(SetWrapper, 'SetWrapper', classMeta, VOID, [Set]);
  setMetadataFor(ScatterSet, 'ScatterSet', classMeta);
  setMetadataFor(MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda, 'MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(MutableScatterSet$MutableSetWrapper$iterator$1, VOID, classMeta, VOID, [MutableIterator]);
  setMetadataFor(MutableSetWrapper, 'MutableSetWrapper', classMeta, SetWrapper, [SetWrapper, MutableSet]);
  setMetadataFor(MutableScatterSet, 'MutableScatterSet', classMeta, ScatterSet, VOID, MutableScatterSet);
  //endregion
  function get_EmptyFloatFloatMap() {
    _init_properties_FloatFloatMap_kt__wu8nze();
    return EmptyFloatFloatMap;
  }
  var EmptyFloatFloatMap;
  function _set_growthLimit__kpjhht($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata($this, newCapacity);
    $this.keys_1 = new Float32Array(newCapacity);
    $this.values_1 = new Float32Array(newCapacity);
  }
  function initializeMetadata($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableFloatFloatMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth($this);
  }
  function initializeGrowth($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findInsertIndex($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage($this);
      index_0 = findFirstAvailableSlot($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableFloatFloatMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(getNumberHashCode(previousKey), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableFloatFloatMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableFloatFloatMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    FloatFloatMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableFloatFloatMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableFloatFloatMap).getOrPut_8tyvjn_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    var tmp;
    if (index < 0) {
      var defValue = defaultValue();
      this.put_f4wlj3_k$(key, defValue);
      tmp = defValue;
    } else {
      tmp = this.values_1[index];
    }
    return tmp;
  };
  protoOf(MutableFloatFloatMap).set_wlteky_k$ = function (key, value) {
    var index = findInsertIndex(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableFloatFloatMap).put_f4wlj3_k$ = function (key, value) {
    this.set_wlteky_k$(key, value);
  };
  protoOf(MutableFloatFloatMap).put_fkgpfb_k$ = function (key, value, default_0) {
    var index = findInsertIndex(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableFloatFloatMap).putAll_w7aq8h_k$ = function (from) {
    // Inline function 'androidx.collection.FloatFloatMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatFloatMap.putAll.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  this.set_wlteky_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatFloatMap).plusAssign_b9kf08_k$ = function (from) {
    return this.putAll_w7aq8h_k$(from);
  };
  protoOf(MutableFloatFloatMap).remove_9ovulg_k$ = function (key) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableFloatFloatMap).remove_s21gu4_k$ = function (key, value) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index >= 0) {
      if (this.values_1[index] === value) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableFloatFloatMap).removeIf_hk4nh6_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableFloatFloatMap.removeIf.<anonymous>' call
                  if (predicate(this.keys_1[index], this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatFloatMap).minusAssign_kpy14n_k$ = function (key) {
    this.remove_9ovulg_k$(key);
  };
  protoOf(MutableFloatFloatMap).minusAssign_qjavyv_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_9ovulg_k$(key);
    }
  };
  protoOf(MutableFloatFloatMap).minusAssign_nwjyou_k$ = function (keys) {
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatFloatMap.minusAssign.<anonymous>' call
                  var key = k[index];
                  this.remove_9ovulg_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatFloatMap).minusAssign_r3zaw4_k$ = function (keys) {
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableFloatFloatMap.minusAssign.<anonymous>' call
        var key = content[i];
        this.remove_9ovulg_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableFloatFloatMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableFloatFloatMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  };
  protoOf(MutableFloatFloatMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth(this);
  };
  protoOf(MutableFloatFloatMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function FloatFloatMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyFloatArray();
    this.values_1 = get_EmptyFloatArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(FloatFloatMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(FloatFloatMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(FloatFloatMap).set_keys_73aert_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(FloatFloatMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(FloatFloatMap).set_values_6hpnyh_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(FloatFloatMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(FloatFloatMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(FloatFloatMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatFloatMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatFloatMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(FloatFloatMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatFloatMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatFloatMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatFloatMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatFloatMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatFloatMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatFloatMap).get_vg8leq_k$ = function (key) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('Cannot find value for key ' + key);
    }
    return this.values_1[index];
  };
  protoOf(FloatFloatMap).getOrDefault_j768fc_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(FloatFloatMap).getOrElse_371zbl_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index < 0) {
      return defaultValue();
    }
    return this.values_1[index];
  };
  protoOf(FloatFloatMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(FloatFloatMap).forEach_g8t2wg_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                  block(k[index], v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatFloatMap).forEachKey_ywsc97_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatFloatMap).forEachValue_mpu6t5_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatFloatMap).all_uwj6qe_k$ = function (predicate) {
    // Inline function 'androidx.collection.FloatFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatFloatMap.all.<anonymous>' call
                  if (!predicate(k[index], v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatFloatMap).any_x731nj_k$ = function (predicate) {
    // Inline function 'androidx.collection.FloatFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatFloatMap.any.<anonymous>' call
                  if (predicate(k[index], v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(FloatFloatMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(FloatFloatMap).count_3x95bw_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.FloatFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatFloatMap.count.<anonymous>' call
                  if (predicate(k[index], v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(FloatFloatMap).contains_8bpbll_k$ = function (key) {
    return this.findKeyIndex_axj6ng_k$(key) >= 0;
  };
  protoOf(FloatFloatMap).containsKey_rx8nyg_k$ = function (key) {
    return this.findKeyIndex_axj6ng_k$(key) >= 0;
  };
  protoOf(FloatFloatMap).containsValue_xffl2_k$ = function (value) {
    // Inline function 'androidx.collection.FloatFloatMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.FloatFloatMap.containsValue.<anonymous>' call
                  if (value === v[index])
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(FloatFloatMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatFloatMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatFloatMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_g7wmaq_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_g7wmaq_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatFloatMap).joinToString$default_rgi548_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(FloatFloatMap).joinToString_1g6jjl_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatFloatMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatFloatMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatFloatMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.FloatFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatFloatMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  hash = hash + (getNumberHashCode(key) ^ getNumberHashCode(value)) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(FloatFloatMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof FloatFloatMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.FloatFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatFloatMap.equals.<anonymous>' call
                  var key = k[index];
                  if (!(v[index] === other.get_vg8leq_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatFloatMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.FloatFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatFloatMap.toString.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  s.append_g7wmaq_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_g7wmaq_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(FloatFloatMap).findKeyIndex_axj6ng_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_FloatFloatMap_kt_ekhjec;
  function _init_properties_FloatFloatMap_kt__wu8nze() {
    if (!properties_initialized_FloatFloatMap_kt_ekhjec) {
      properties_initialized_FloatFloatMap_kt_ekhjec = true;
      EmptyFloatFloatMap = new MutableFloatFloatMap(0);
    }
  }
  function get_EmptyFloatIntMap() {
    _init_properties_FloatIntMap_kt__5eh06v();
    return EmptyFloatIntMap;
  }
  var EmptyFloatIntMap;
  function _set_growthLimit__kpjhht_0($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_0($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_0($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_0($this, newCapacity);
    $this.keys_1 = new Float32Array(newCapacity);
    $this.values_1 = new Int32Array(newCapacity);
  }
  function initializeMetadata_0($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableFloatIntMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_0($this);
  }
  function initializeGrowth_0($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findInsertIndex_0($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_0($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_0($this);
      index_0 = findFirstAvailableSlot_0($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableFloatIntMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_0($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_0($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_0($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_0($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_0($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_0($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(getNumberHashCode(previousKey), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_0($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableFloatIntMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_0($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableFloatIntMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    FloatIntMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableFloatIntMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_0(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableFloatIntMap).getOrPut_z5wb34_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    var tmp;
    if (index < 0) {
      var defValue = defaultValue();
      this.put_h5i8gv_k$(key, defValue);
      tmp = defValue;
    } else {
      tmp = this.values_1[index];
    }
    return tmp;
  };
  protoOf(MutableFloatIntMap).set_c1jgge_k$ = function (key, value) {
    var index = findInsertIndex_0(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableFloatIntMap).put_h5i8gv_k$ = function (key, value) {
    this.set_c1jgge_k$(key, value);
  };
  protoOf(MutableFloatIntMap).put_1ahjrd_k$ = function (key, value, default_0) {
    var index = findInsertIndex_0(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableFloatIntMap).putAll_s93gg2_k$ = function (from) {
    // Inline function 'androidx.collection.FloatIntMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatIntMap.putAll.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  this.set_c1jgge_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatIntMap).plusAssign_wnpswb_k$ = function (from) {
    return this.putAll_s93gg2_k$(from);
  };
  protoOf(MutableFloatIntMap).remove_9ovulg_k$ = function (key) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableFloatIntMap).remove_cn24rg_k$ = function (key, value) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index >= 0) {
      if (this.values_1[index] === value) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableFloatIntMap).removeIf_5sie31_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableFloatIntMap.removeIf.<anonymous>' call
                  if (predicate(this.keys_1[index], this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatIntMap).minusAssign_kpy14n_k$ = function (key) {
    this.remove_9ovulg_k$(key);
  };
  protoOf(MutableFloatIntMap).minusAssign_qjavyv_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_9ovulg_k$(key);
    }
  };
  protoOf(MutableFloatIntMap).minusAssign_nwjyou_k$ = function (keys) {
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatIntMap.minusAssign.<anonymous>' call
                  var key = k[index];
                  this.remove_9ovulg_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatIntMap).minusAssign_r3zaw4_k$ = function (keys) {
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableFloatIntMap.minusAssign.<anonymous>' call
        var key = content[i];
        this.remove_9ovulg_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableFloatIntMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableFloatIntMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  };
  protoOf(MutableFloatIntMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_0(this);
  };
  protoOf(MutableFloatIntMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_0(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function FloatIntMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyFloatArray();
    this.values_1 = get_EmptyIntArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(FloatIntMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(FloatIntMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(FloatIntMap).set_keys_73aert_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(FloatIntMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(FloatIntMap).set_values_sv2zhg_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(FloatIntMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(FloatIntMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(FloatIntMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatIntMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatIntMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(FloatIntMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatIntMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatIntMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatIntMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatIntMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatIntMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatIntMap).get_vg8leq_k$ = function (key) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('Cannot find value for key ' + key);
    }
    return this.values_1[index];
  };
  protoOf(FloatIntMap).getOrDefault_9y7h88_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(FloatIntMap).getOrElse_63puqk_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index < 0) {
      return defaultValue();
    }
    return this.values_1[index];
  };
  protoOf(FloatIntMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(FloatIntMap).forEach_b0a8t9_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                  block(k[index], v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatIntMap).forEachKey_ywsc97_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatIntMap).forEachValue_e6u2sa_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatIntMap).all_mreear_k$ = function (predicate) {
    // Inline function 'androidx.collection.FloatIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatIntMap.all.<anonymous>' call
                  if (!predicate(k[index], v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatIntMap).any_vhfjgy_k$ = function (predicate) {
    // Inline function 'androidx.collection.FloatIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatIntMap.any.<anonymous>' call
                  if (predicate(k[index], v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(FloatIntMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(FloatIntMap).count_ab2dsh_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.FloatIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatIntMap.count.<anonymous>' call
                  if (predicate(k[index], v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(FloatIntMap).contains_8bpbll_k$ = function (key) {
    return this.findKeyIndex_axj6ng_k$(key) >= 0;
  };
  protoOf(FloatIntMap).containsKey_rx8nyg_k$ = function (key) {
    return this.findKeyIndex_axj6ng_k$(key) >= 0;
  };
  protoOf(FloatIntMap).containsValue_6h54sm_k$ = function (value) {
    // Inline function 'androidx.collection.FloatIntMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.FloatIntMap.containsValue.<anonymous>' call
                  if (value === v[index])
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(FloatIntMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatIntMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatIntMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_g7wmaq_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_uppzia_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatIntMap).joinToString$default_2rx31h_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(FloatIntMap).joinToString_30hmk_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatIntMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatIntMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatIntMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.FloatIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatIntMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  hash = hash + (getNumberHashCode(key) ^ value) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(FloatIntMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof FloatIntMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.FloatIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatIntMap.equals.<anonymous>' call
                  var key = k[index];
                  if (!(v[index] === other.get_vg8leq_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatIntMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.FloatIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatIntMap.toString.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  s.append_g7wmaq_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_uppzia_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(FloatIntMap).findKeyIndex_axj6ng_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_FloatIntMap_kt_3e86x3;
  function _init_properties_FloatIntMap_kt__5eh06v() {
    if (!properties_initialized_FloatIntMap_kt_3e86x3) {
      properties_initialized_FloatIntMap_kt_3e86x3 = true;
      EmptyFloatIntMap = new MutableFloatIntMap(0);
    }
  }
  function get_EmptyFloatList() {
    _init_properties_FloatList_kt__s6qs6g();
    return EmptyFloatList;
  }
  var EmptyFloatList;
  function FloatList(initialCapacity) {
    var tmp = this;
    var tmp_0;
    if (initialCapacity === 0) {
      tmp_0 = get_EmptyFloatArray();
    } else {
      tmp_0 = new Float32Array(initialCapacity);
    }
    tmp.content_1 = tmp_0;
    this._size_1 = 0;
  }
  protoOf(FloatList).set_content_m1btqs_k$ = function (_set____db54di) {
    this.content_1 = _set____db54di;
  };
  protoOf(FloatList).get_content_h02jrk_k$ = function () {
    return this.content_1;
  };
  protoOf(FloatList).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(FloatList).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatList).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatList).get_lastIndex_tk4gr1_k$ = function () {
    return this._size_1 - 1 | 0;
  };
  protoOf(FloatList).get_indices_xelk8u_k$ = function () {
    return until(0, this._size_1);
  };
  protoOf(FloatList).none_20lko_k$ = function () {
    return this.isEmpty_y1axqb_k$();
  };
  protoOf(FloatList).any_22ng_k$ = function () {
    return this.isNotEmpty_cjxbwk_k$();
  };
  protoOf(FloatList).any_24qdlv_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.FloatList.any.<anonymous>' call
        if (predicate(content[i])) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(FloatList).reversedAny_ez6lyz_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.FloatList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.FloatList.reversedAny.<anonymous>' call
        if (predicate(content[i])) {
          return true;
        }
      }
       while (0 <= inductionVariable);
    return false;
  };
  protoOf(FloatList).contains_8bpbll_k$ = function (element) {
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.FloatList.contains.<anonymous>' call
        if (content[i] === element) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(FloatList).containsAll_g62rfz_k$ = function (elements) {
    // Inline function 'androidx.collection.FloatList.indices' call
    var progression = until(0, elements._size_1);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!this.contains_8bpbll_k$(elements.get_c1px32_k$(i)))
          return false;
      }
       while (!(i === last));
    return true;
  };
  protoOf(FloatList).count_1kgzrj_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatList).count_dqmm3k_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var count = 0;
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.FloatList.count.<anonymous>' call
        if (predicate(content[i])) {
          count = count + 1 | 0;
        }
      }
       while (inductionVariable < last);
    return count;
  };
  protoOf(FloatList).first_1m0hio_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('FloatList is empty.');
    }
    return this.content_1[0];
  };
  protoOf(FloatList).first_jm3fhb_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.FloatList.first.<anonymous>' call
        var item = content[i];
        if (predicate(item))
          return item;
      }
       while (inductionVariable < last);
    throw NoSuchElementException_init_$Create$('FloatList contains no element matching the predicate.');
  };
  protoOf(FloatList).fold_ir9rxx_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.FloatList.fold.<anonymous>' call
        acc = operation(acc, content[i]);
      }
       while (inductionVariable < last);
    return acc;
  };
  protoOf(FloatList).foldIndexed_thc5ed_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.FloatList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.FloatList.foldIndexed.<anonymous>' call
        acc = operation(i, acc, content[i]);
      }
       while (inductionVariable < last);
    return acc;
  };
  protoOf(FloatList).foldRight_z8gf1j_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.FloatList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.FloatList.foldRight.<anonymous>' call
        acc = operation(content[i], acc);
      }
       while (0 <= inductionVariable);
    return acc;
  };
  protoOf(FloatList).foldRightIndexed_ynzscn_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.FloatList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.FloatList.foldRightIndexed.<anonymous>' call
        acc = operation(i, content[i], acc);
      }
       while (0 <= inductionVariable);
    return acc;
  };
  protoOf(FloatList).forEach_w91iwm_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        block(content[i]);
      }
       while (inductionVariable < last);
  };
  protoOf(FloatList).forEachIndexed_fmu3b4_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        block(i, content[i]);
      }
       while (inductionVariable < last);
  };
  protoOf(FloatList).forEachReversed_6n2w7o_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        block(content[i]);
      }
       while (0 <= inductionVariable);
  };
  protoOf(FloatList).forEachReversedIndexed_1qub8e_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        block(i, content[i]);
      }
       while (0 <= inductionVariable);
  };
  protoOf(FloatList).get_c1px32_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.FloatList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    return this.content_1[index];
  };
  protoOf(FloatList).elementAt_i1qdw7_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.FloatList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    return this.content_1[index];
  };
  protoOf(FloatList).elementAtOrElse_lv3oil_k$ = function (index, defaultValue) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      return defaultValue(index);
    }
    return this.content_1[index];
  };
  protoOf(FloatList).indexOf_p3nhjj_k$ = function (element) {
    // Inline function 'androidx.collection.FloatList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.FloatList.indexOf.<anonymous>' call
        if (element === content[i]) {
          return i;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(FloatList).indexOfFirst_wr7dx4_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.FloatList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.FloatList.indexOfFirst.<anonymous>' call
        if (predicate(content[i])) {
          return i;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(FloatList).indexOfLast_6ziifk_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.FloatList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.FloatList.indexOfLast.<anonymous>' call
        if (predicate(content[i])) {
          return i;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  };
  protoOf(FloatList).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatList).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatList).last_1z1cm_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('FloatList is empty.');
    }
    var tmp = this.content_1;
    // Inline function 'androidx.collection.FloatList.lastIndex' call
    return tmp[this._size_1 - 1 | 0];
  };
  protoOf(FloatList).last_3v92ih_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.FloatList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.FloatList.last.<anonymous>' call
        var item = content[i];
        if (predicate(item)) {
          return item;
        }
      }
       while (0 <= inductionVariable);
    throw NoSuchElementException_init_$Create$('FloatList contains no element matching the predicate.');
  };
  protoOf(FloatList).lastIndexOf_pknb9h_k$ = function (element) {
    // Inline function 'androidx.collection.FloatList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.FloatList.lastIndexOf.<anonymous>' call
        if (content[i] === element) {
          return i;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  };
  protoOf(FloatList).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatList.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      // Inline function 'androidx.collection.FloatList.forEachIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content = this.content_1;
      var inductionVariable = 0;
      var last = this._size_1;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.collection.FloatList.joinToString.<anonymous>.<anonymous>' call
          var element = content[i];
          if (i === limit) {
            this_0.append_jgojdo_k$(truncated);
            break $l$block;
          }
          if (!(i === 0)) {
            this_0.append_jgojdo_k$(separator);
          }
          this_0.append_g7wmaq_k$(element);
        }
         while (inductionVariable < last);
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatList).joinToString$default_esgz4m_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(FloatList).joinToString_vly60f_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatList.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      // Inline function 'androidx.collection.FloatList.forEachIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content = this.content_1;
      var inductionVariable = 0;
      var last = this._size_1;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.collection.FloatList.joinToString.<anonymous>.<anonymous>' call
          var element = content[i];
          if (i === limit) {
            this_0.append_jgojdo_k$(truncated);
            break $l$block;
          }
          if (!(i === 0)) {
            this_0.append_jgojdo_k$(separator);
          }
          this_0.append_jgojdo_k$(transform(element));
        }
         while (inductionVariable < last);
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatList).hashCode = function () {
    var hashCode = 0;
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.FloatList.hashCode.<anonymous>' call
        var element = content[i];
        hashCode = hashCode + imul(31, getNumberHashCode(element)) | 0;
      }
       while (inductionVariable < last);
    return hashCode;
  };
  protoOf(FloatList).equals = function (other) {
    var tmp;
    if (!(other instanceof FloatList)) {
      tmp = true;
    } else {
      tmp = !(other._size_1 === this._size_1);
    }
    if (tmp) {
      return false;
    }
    var content = this.content_1;
    var otherContent = other.content_1;
    // Inline function 'androidx.collection.FloatList.indices' call
    var progression = until(0, this._size_1);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!(content[i] === otherContent[i])) {
          return false;
        }
      }
       while (!(i === last));
    return true;
  };
  protoOf(FloatList).toString = function () {
    return this.joinToString$default_esgz4m_k$(VOID, '[', ']');
  };
  function MutableFloatList(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? 16 : initialCapacity;
    FloatList.call(this, initialCapacity);
  }
  protoOf(MutableFloatList).get_capacity_wxbgcd_k$ = function () {
    return this.content_1.length;
  };
  protoOf(MutableFloatList).add_9nou6h_k$ = function (element) {
    this.ensureCapacity_wr7980_k$(this._size_1 + 1 | 0);
    this.content_1[this._size_1] = element;
    this._size_1 = this._size_1 + 1 | 0;
    return true;
  };
  protoOf(MutableFloatList).add_k0i7ch_k$ = function (index, element) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    this.ensureCapacity_wr7980_k$(this._size_1 + 1 | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + 1 | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, destinationOffset, index, endIndex);
    }
    content[index] = element;
    this._size_1 = this._size_1 + 1 | 0;
  };
  protoOf(MutableFloatList).addAll_e3iiyo_k$ = function (index, elements) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    // Inline function 'kotlin.collections.isEmpty' call
    if (elements.length === 0)
      return false;
    this.ensureCapacity_wr7980_k$(this._size_1 + elements.length | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements.length | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.copyInto' call
    var endIndex_0 = elements.length;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp_0 = elements;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp_0, content, index, 0, endIndex_0);
    this._size_1 = this._size_1 + elements.length | 0;
    return true;
  };
  protoOf(MutableFloatList).addAll_prgcvv_k$ = function (index, elements) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    if (elements.isEmpty_y1axqb_k$())
      return false;
    this.ensureCapacity_wr7980_k$(this._size_1 + elements._size_1 | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements._size_1 | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = elements.content_1;
    var endIndex_0 = elements._size_1;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp_0 = this_0;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp_0, content, index, 0, endIndex_0);
    this._size_1 = this._size_1 + elements._size_1 | 0;
    return true;
  };
  protoOf(MutableFloatList).addAll_hydd77_k$ = function (elements) {
    return this.addAll_prgcvv_k$(this._size_1, elements);
  };
  protoOf(MutableFloatList).addAll_grw5eg_k$ = function (elements) {
    return this.addAll_e3iiyo_k$(this._size_1, elements);
  };
  protoOf(MutableFloatList).plusAssign_33wbk6_k$ = function (elements) {
    this.addAll_prgcvv_k$(this._size_1, elements);
  };
  protoOf(MutableFloatList).plusAssign_2l4if3_k$ = function (elements) {
    this.addAll_e3iiyo_k$(this._size_1, elements);
  };
  protoOf(MutableFloatList).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
  };
  protoOf(MutableFloatList).trim_d6sije_k$ = function (minCapacity) {
    // Inline function 'kotlin.comparisons.maxOf' call
    var b = this._size_1;
    var minSize = Math.max(minCapacity, b);
    // Inline function 'androidx.collection.MutableFloatList.capacity' call
    if (this.content_1.length > minSize) {
      this.content_1 = copyOf(this.content_1, minSize);
    }
  };
  protoOf(MutableFloatList).trim$default_texcki_k$ = function (minCapacity, $super) {
    minCapacity = minCapacity === VOID ? this._size_1 : minCapacity;
    var tmp;
    if ($super === VOID) {
      this.trim_d6sije_k$(minCapacity);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.trim_d6sije_k$.call(this, minCapacity);
    }
    return tmp;
  };
  protoOf(MutableFloatList).ensureCapacity_wr7980_k$ = function (capacity) {
    var oldContent = this.content_1;
    if (oldContent.length < capacity) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = imul(oldContent.length, 3) / 2 | 0;
      var newSize = Math.max(capacity, b);
      this.content_1 = copyOf(oldContent, newSize);
    }
  };
  protoOf(MutableFloatList).plusAssign_xjcc2p_k$ = function (element) {
    this.add_9nou6h_k$(element);
  };
  protoOf(MutableFloatList).minusAssign_kpy14n_k$ = function (element) {
    this.remove_koj5v8_k$(element);
  };
  protoOf(MutableFloatList).remove_koj5v8_k$ = function (element) {
    var index = this.indexOf_p3nhjj_k$(element);
    if (index >= 0) {
      this.removeAt_6niowx_k$(index);
      return true;
    }
    return false;
  };
  protoOf(MutableFloatList).removeAll_h0d8vv_k$ = function (elements) {
    var initialSize = this._size_1;
    var inductionVariable = 0;
    var last = elements.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.remove_koj5v8_k$(elements[i]);
      }
       while (inductionVariable <= last);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableFloatList).removeAll_pobfxy_k$ = function (elements) {
    var initialSize = this._size_1;
    var inductionVariable = 0;
    // Inline function 'androidx.collection.FloatList.lastIndex' call
    var last = elements._size_1 - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.remove_koj5v8_k$(elements.get_c1px32_k$(i));
      }
       while (!(i === last));
    return !(initialSize === this._size_1);
  };
  protoOf(MutableFloatList).minusAssign_qjavyv_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableFloatList.minusAssign.<anonymous>' call
      this.remove_koj5v8_k$(element);
    }
  };
  protoOf(MutableFloatList).minusAssign_r3zaw4_k$ = function (elements) {
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = elements.content_1;
    var inductionVariable = 0;
    var last = elements._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableFloatList.minusAssign.<anonymous>' call
        var element = content[i];
        this.remove_koj5v8_k$(element);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableFloatList).removeAt_6niowx_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.FloatList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    var content = this.content_1;
    var item = content[index];
    // Inline function 'androidx.collection.FloatList.lastIndex' call
    if (!(index === (this._size_1 - 1 | 0))) {
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex = index + 1 | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, index, startIndex, endIndex);
    }
    this._size_1 = this._size_1 - 1 | 0;
    return item;
  };
  protoOf(MutableFloatList).removeRange_sm1kzt_k$ = function (start, end) {
    if (!(0 <= start ? start <= this._size_1 : false) ? true : !(0 <= end ? end <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Start (' + start + ') and end (' + end + ') must be in 0..' + this._size_1);
    }
    if (end < start) {
      throw IllegalArgumentException_init_$Create$('Start (' + start + ') is more than end (' + end + ')');
    }
    if (!(end === start)) {
      if (end < this._size_1) {
        // Inline function 'kotlin.collections.copyInto' call
        var this_0 = this.content_1;
        var destination = this.content_1;
        var endIndex = this._size_1;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var tmp = this_0;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        arrayCopy(tmp, destination, start, end, endIndex);
      }
      this._size_1 = this._size_1 - (end - start | 0) | 0;
    }
  };
  protoOf(MutableFloatList).retainAll_8371ks_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.FloatList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var item = content[i];
        var tmp$ret$2;
        $l$block: {
          // Inline function 'kotlin.collections.indexOfFirst' call
          var inductionVariable_0 = 0;
          var last = elements.length - 1 | 0;
          if (inductionVariable_0 <= last)
            do {
              var index = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.MutableFloatList.retainAll.<anonymous>' call
              if (elements[index] === item) {
                tmp$ret$2 = index;
                break $l$block;
              }
            }
             while (inductionVariable_0 <= last);
          tmp$ret$2 = -1;
        }
        if (tmp$ret$2 < 0) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableFloatList).retainAll_x0vs09_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.FloatList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var item = content[i];
        if (!elements.contains_8bpbll_k$(item)) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableFloatList).set_g2yi9q_k$ = function (index, element) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.FloatList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('set index ' + index + ' must be between 0 .. ' + tmp$ret$0);
    }
    var content = this.content_1;
    var old = content[index];
    content[index] = element;
    return old;
  };
  protoOf(MutableFloatList).sort_6ihik2_k$ = function () {
    sort(this.content_1, 0, this._size_1);
  };
  protoOf(MutableFloatList).sortDescending_e29tp6_k$ = function () {
    sortDescending(this.content_1, 0, this._size_1);
  };
  var properties_initialized_FloatList_kt_39m4ga;
  function _init_properties_FloatList_kt__s6qs6g() {
    if (!properties_initialized_FloatList_kt_39m4ga) {
      properties_initialized_FloatList_kt_39m4ga = true;
      EmptyFloatList = new MutableFloatList(0);
    }
  }
  function get_EmptyFloatLongMap() {
    _init_properties_FloatLongMap_kt__66kaos();
    return EmptyFloatLongMap;
  }
  var EmptyFloatLongMap;
  function _set_growthLimit__kpjhht_1($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_1($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_1($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_1($this, newCapacity);
    $this.keys_1 = new Float32Array(newCapacity);
    $this.values_1 = longArray(newCapacity);
  }
  function initializeMetadata_1($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableFloatLongMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_1($this);
  }
  function initializeGrowth_1($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findInsertIndex_1($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_1($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_1($this);
      index_0 = findFirstAvailableSlot_1($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableFloatLongMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_1($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_1($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_1($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_1($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_1($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_1($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(getNumberHashCode(previousKey), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_1($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableFloatLongMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_1($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableFloatLongMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    FloatLongMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableFloatLongMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_1(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableFloatLongMap).getOrPut_gtwtr6_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    var tmp;
    if (index < 0) {
      var defValue = defaultValue();
      this.put_blrfat_k$(key, defValue);
      tmp = defValue;
    } else {
      tmp = this.values_1[index];
    }
    return tmp;
  };
  protoOf(MutableFloatLongMap).set_bp2ryg_k$ = function (key, value) {
    var index = findInsertIndex_1(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableFloatLongMap).put_blrfat_k$ = function (key, value) {
    this.set_bp2ryg_k$(key, value);
  };
  protoOf(MutableFloatLongMap).put_p628p5_k$ = function (key, value, default_0) {
    var index = findInsertIndex_1(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableFloatLongMap).putAll_gaoind_k$ = function (from) {
    // Inline function 'androidx.collection.FloatLongMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatLongMap.putAll.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  this.set_bp2ryg_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatLongMap).plusAssign_lrnwlu_k$ = function (from) {
    return this.putAll_gaoind_k$(from);
  };
  protoOf(MutableFloatLongMap).remove_9ovulg_k$ = function (key) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableFloatLongMap).remove_t2p7ui_k$ = function (key, value) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index >= 0) {
      if (this.values_1[index].equals(value)) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableFloatLongMap).removeIf_azwx7j_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableFloatLongMap.removeIf.<anonymous>' call
                  if (predicate(this.keys_1[index], this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatLongMap).minusAssign_kpy14n_k$ = function (key) {
    this.remove_9ovulg_k$(key);
  };
  protoOf(MutableFloatLongMap).minusAssign_qjavyv_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_9ovulg_k$(key);
    }
  };
  protoOf(MutableFloatLongMap).minusAssign_nwjyou_k$ = function (keys) {
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatLongMap.minusAssign.<anonymous>' call
                  var key = k[index];
                  this.remove_9ovulg_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatLongMap).minusAssign_r3zaw4_k$ = function (keys) {
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableFloatLongMap.minusAssign.<anonymous>' call
        var key = content[i];
        this.remove_9ovulg_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableFloatLongMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableFloatLongMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  };
  protoOf(MutableFloatLongMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_1(this);
  };
  protoOf(MutableFloatLongMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_1(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function FloatLongMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyFloatArray();
    this.values_1 = get_EmptyLongArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(FloatLongMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(FloatLongMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(FloatLongMap).set_keys_73aert_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(FloatLongMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(FloatLongMap).set_values_h45qot_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(FloatLongMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(FloatLongMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(FloatLongMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatLongMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatLongMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(FloatLongMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatLongMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatLongMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatLongMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatLongMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatLongMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatLongMap).get_vg8leq_k$ = function (key) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('Cannot find value for key ' + key);
    }
    return this.values_1[index];
  };
  protoOf(FloatLongMap).getOrDefault_do6l42_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(FloatLongMap).getOrElse_voalcq_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_axj6ng_k$(key);
    if (index < 0) {
      return defaultValue();
    }
    return this.values_1[index];
  };
  protoOf(FloatLongMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(FloatLongMap).forEach_qp80dj_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                  block(k[index], v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatLongMap).forEachKey_ywsc97_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatLongMap).forEachValue_qhpe6o_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatLongMap).all_bc6ea9_k$ = function (predicate) {
    // Inline function 'androidx.collection.FloatLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatLongMap.all.<anonymous>' call
                  if (!predicate(k[index], v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatLongMap).any_yh3mue_k$ = function (predicate) {
    // Inline function 'androidx.collection.FloatLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatLongMap.any.<anonymous>' call
                  if (predicate(k[index], v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(FloatLongMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(FloatLongMap).count_jklrkt_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.FloatLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatLongMap.count.<anonymous>' call
                  if (predicate(k[index], v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(FloatLongMap).contains_8bpbll_k$ = function (key) {
    return this.findKeyIndex_axj6ng_k$(key) >= 0;
  };
  protoOf(FloatLongMap).containsKey_rx8nyg_k$ = function (key) {
    return this.findKeyIndex_axj6ng_k$(key) >= 0;
  };
  protoOf(FloatLongMap).containsValue_38h4m4_k$ = function (value) {
    // Inline function 'androidx.collection.FloatLongMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.FloatLongMap.containsValue.<anonymous>' call
                  var v_0 = v[index];
                  if (value.equals(v_0))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(FloatLongMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatLongMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatLongMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_g7wmaq_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_8gl4h8_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatLongMap).joinToString$default_wg7tcg_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(FloatLongMap).joinToString_cidulw_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatLongMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatLongMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatLongMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.FloatLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatLongMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  hash = hash + (getNumberHashCode(key) ^ value.hashCode()) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(FloatLongMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof FloatLongMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.FloatLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatLongMap.equals.<anonymous>' call
                  var key = k[index];
                  if (!v[index].equals(other.get_vg8leq_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatLongMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.FloatLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatLongMap.toString.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  s.append_g7wmaq_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_8gl4h8_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(FloatLongMap).findKeyIndex_axj6ng_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_FloatLongMap_kt_jhy45i;
  function _init_properties_FloatLongMap_kt__66kaos() {
    if (!properties_initialized_FloatLongMap_kt_jhy45i) {
      properties_initialized_FloatLongMap_kt_jhy45i = true;
      EmptyFloatLongMap = new MutableFloatLongMap(0);
    }
  }
  function get_EmptyFloatObjectMap() {
    _init_properties_FloatObjectMap_kt__652we9();
    return EmptyFloatObjectMap;
  }
  var EmptyFloatObjectMap;
  function _set_growthLimit__kpjhht_2($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_2($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_2($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_2($this, newCapacity);
    $this.keys_1 = new Float32Array(newCapacity);
    var tmp_0 = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_0.values_1 = fillArrayVal(Array(newCapacity), null);
  }
  function initializeMetadata_2($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableFloatObjectMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_2($this);
  }
  function initializeGrowth_2($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findAbsoluteInsertIndex($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_2($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_2($this);
      index_0 = findFirstAvailableSlot_2($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableFloatObjectMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return index_0;
  }
  function findFirstAvailableSlot_2($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_2($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_2($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_2($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_2($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_2($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(getNumberHashCode(previousKey), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_2($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableFloatObjectMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_2($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableFloatObjectMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    FloatObjectMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableFloatObjectMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_2(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableFloatObjectMap).getOrPut_3ai6i_k$ = function (key, defaultValue) {
    var tmp0_elvis_lhs = this.get_vg8leq_k$(key);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = defaultValue();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableFloatObjectMap.getOrPut.<anonymous>' call
      this.set_ass8ah_k$(key, this_0);
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(MutableFloatObjectMap).set_ass8ah_k$ = function (key, value) {
    var index = findAbsoluteInsertIndex(this, key);
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableFloatObjectMap).put_dxpy9o_k$ = function (key, value) {
    var index = findAbsoluteInsertIndex(this, key);
    var oldValue = this.values_1[index];
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return (oldValue == null ? true : !(oldValue == null)) ? oldValue : THROW_CCE();
  };
  protoOf(MutableFloatObjectMap).putAll_ugc9l4_k$ = function (from) {
    // Inline function 'androidx.collection.FloatObjectMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatObjectMap.putAll.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.set_ass8ah_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatObjectMap).plusAssign_tvsp0v_k$ = function (from) {
    return this.putAll_ugc9l4_k$(from);
  };
  protoOf(MutableFloatObjectMap).remove_koj5v8_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      return this.removeValueAt_lclkw8_k$(index_0);
    }
    return null;
  };
  protoOf(MutableFloatObjectMap).remove_vhvyx_k$ = function (key, value) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      if (equals(this.values_1[index_0], value)) {
        this.removeValueAt_lclkw8_k$(index_0);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableFloatObjectMap).removeIf_gjs1it_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableFloatObjectMap.removeIf.<anonymous>' call
                  var tmp = this.keys_1[index];
                  var tmp_0 = this.values_1[index];
                  if (predicate(tmp, (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE())) {
                    this.removeValueAt_lclkw8_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatObjectMap).minusAssign_kpy14n_k$ = function (key) {
    this.remove_koj5v8_k$(key);
  };
  protoOf(MutableFloatObjectMap).minusAssign_qjavyv_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_koj5v8_k$(key);
    }
  };
  protoOf(MutableFloatObjectMap).minusAssign_nwjyou_k$ = function (keys) {
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatObjectMap.minusAssign.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatObjectMap.minusAssign' call
                  var key = k[index];
                  this.remove_koj5v8_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatObjectMap).minusAssign_r3zaw4_k$ = function (keys) {
    // Inline function 'androidx.collection.FloatList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableFloatObjectMap.minusAssign.<anonymous>' call
        // Inline function 'androidx.collection.MutableFloatObjectMap.minusAssign' call
        var key = content[i];
        this.remove_koj5v8_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableFloatObjectMap).removeValueAt_lclkw8_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableFloatObjectMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var oldValue = this.values_1[index];
    this.values_1[index] = null;
    return (oldValue == null ? true : !(oldValue == null)) ? oldValue : THROW_CCE();
  };
  protoOf(MutableFloatObjectMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    fill_0(this.values_1, null, 0, this._capacity_1);
    initializeGrowth_2(this);
  };
  protoOf(MutableFloatObjectMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_2(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function FloatObjectMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyFloatArray();
    this.values_1 = get_EMPTY_OBJECTS();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(FloatObjectMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(FloatObjectMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(FloatObjectMap).set_keys_73aert_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(FloatObjectMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(FloatObjectMap).set_values_y0cw4b_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(FloatObjectMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(FloatObjectMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(FloatObjectMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatObjectMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatObjectMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(FloatObjectMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatObjectMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatObjectMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatObjectMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatObjectMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatObjectMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatObjectMap).get_vg8leq_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    var tmp_0;
    if (index_0 >= 0) {
      var tmp_1 = this.values_1[index_0];
      tmp_0 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
    } else {
      tmp_0 = null;
    }
    return tmp_0;
  };
  protoOf(FloatObjectMap).getOrDefault_rfqojn_k$ = function (key, defaultValue) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      var tmp_0 = this.values_1[index_0];
      return (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    }
    return defaultValue;
  };
  protoOf(FloatObjectMap).getOrElse_mwxauy_k$ = function (key, defaultValue) {
    var tmp0_elvis_lhs = this.get_vg8leq_k$(key);
    return tmp0_elvis_lhs == null ? defaultValue() : tmp0_elvis_lhs;
  };
  protoOf(FloatObjectMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(FloatObjectMap).forEach_f447o3_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                  var tmp = k[index];
                  var tmp_0 = v[index];
                  block(tmp, (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatObjectMap).forEachKey_ywsc97_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatObjectMap).forEachValue_h2meh0_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEachValue.<anonymous>' call
                  var tmp = v[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatObjectMap).all_uwmdej_k$ = function (predicate) {
    // Inline function 'androidx.collection.FloatObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatObjectMap.all.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  if (!predicate(key, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatObjectMap).any_rz7iwq_k$ = function (predicate) {
    // Inline function 'androidx.collection.FloatObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatObjectMap.any.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  if (predicate(key, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(FloatObjectMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(FloatObjectMap).count_nkhvux_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.FloatObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatObjectMap.count.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  if (predicate(key, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(FloatObjectMap).contains_8bpbll_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    return tmp$ret$9 >= 0;
  };
  protoOf(FloatObjectMap).containsKey_rx8nyg_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    return tmp$ret$9 >= 0;
  };
  protoOf(FloatObjectMap).containsValue_yf2ykl_k$ = function (value) {
    // Inline function 'androidx.collection.FloatObjectMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.FloatObjectMap.containsValue.<anonymous>' call
                  var tmp = v[index];
                  var v_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (equals(value, v_0))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(FloatObjectMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatObjectMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatObjectMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var tmp = v[index_0];
                    var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_g7wmaq_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_t8pm91_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatObjectMap).joinToString$default_m2tqyz_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(FloatObjectMap).joinToString_r6giq0_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatObjectMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatObjectMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var tmp = v[index_0];
                    var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatObjectMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.FloatObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatObjectMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = hash;
                  var tmp_1 = getNumberHashCode(key);
                  // Inline function 'kotlin.hashCode' call
                  var tmp1_elvis_lhs = value == null ? null : hashCode(value);
                  hash = tmp_0 + (tmp_1 ^ (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs)) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(FloatObjectMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof FloatObjectMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.FloatObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatObjectMap.equals.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (value == null) {
                    if (!(other.get_vg8leq_k$(key) == null) ? true : !other.containsKey_rx8nyg_k$(key)) {
                      return false;
                    }
                  } else if (!equals(value, other.get_vg8leq_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatObjectMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.FloatObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatObjectMap.toString.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  s.append_g7wmaq_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_t8pm91_k$(value === this ? '(this)' : value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(FloatObjectMap).findKeyIndex_axj6ng_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(key), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_FloatObjectMap_kt_r6mp8d;
  function _init_properties_FloatObjectMap_kt__652we9() {
    if (!properties_initialized_FloatObjectMap_kt_r6mp8d) {
      properties_initialized_FloatObjectMap_kt_r6mp8d = true;
      EmptyFloatObjectMap = new MutableFloatObjectMap(0);
    }
  }
  function get_EmptyFloatSet() {
    _init_properties_FloatSet_kt__ctp8je();
    return EmptyFloatSet;
  }
  var EmptyFloatSet;
  function get_EmptyFloatArray() {
    _init_properties_FloatSet_kt__ctp8je();
    return EmptyFloatArray;
  }
  var EmptyFloatArray;
  function FloatSet() {
    this.metadata_1 = get_EmptyGroup();
    this.elements_1 = get_EmptyFloatArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(FloatSet).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(FloatSet).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(FloatSet).set_elements_f0tpuc_k$ = function (_set____db54di) {
    this.elements_1 = _set____db54di;
  };
  protoOf(FloatSet).get_elements_vxwh8g_k$ = function () {
    return this.elements_1;
  };
  protoOf(FloatSet).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(FloatSet).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatSet).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(FloatSet).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(FloatSet).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatSet).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatSet).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatSet).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatSet).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(FloatSet).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(FloatSet).first_1m0hio_k$ = function () {
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatSet.first.<anonymous>' call
                  return k[index];
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    throw NoSuchElementException_init_$Create$('The FloatSet is empty');
  };
  protoOf(FloatSet).first_jm3fhb_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatSet.first.<anonymous>' call
                  var it = k[index];
                  if (predicate(it))
                    return it;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    throw NoSuchElementException_init_$Create$('Could not find a match');
  };
  protoOf(FloatSet).forEachIndex_oi22yj_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(FloatSet).forEach_w91iwm_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(FloatSet).all_5m7e7m_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatSet.all.<anonymous>' call
                  if (!predicate(k[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatSet).any_24qdlv_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatSet.any.<anonymous>' call
                  if (predicate(k[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(FloatSet).count_1kgzrj_k$ = function () {
    return this._size_1;
  };
  protoOf(FloatSet).count_dqmm3k_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var count = 0;
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatSet.count.<anonymous>' call
                  if (predicate(k[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(FloatSet).contains_8bpbll_k$ = function (element) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(getNumberHashCode(element), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.elements_1[index] === element) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    return tmp$ret$9 >= 0;
  };
  protoOf(FloatSet).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatSet.forEach' call
      // Inline function 'kotlin.contracts.contract' call
      var k = this.elements_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatSet.forEachIndex' call
        // Inline function 'kotlin.contracts.contract' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatSet.joinToString.<anonymous>.<anonymous>' call
                    var element = k[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_g7wmaq_k$(element);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatSet).joinToString$default_egwb2_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(FloatSet).joinToString_vly60f_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.FloatSet.forEach' call
      // Inline function 'kotlin.contracts.contract' call
      var k = this.elements_1;
      $l$block_0: {
        // Inline function 'androidx.collection.FloatSet.forEachIndex' call
        // Inline function 'kotlin.contracts.contract' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.FloatSet.joinToString.<anonymous>.<anonymous>' call
                    var element = k[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(element));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(FloatSet).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatSet.hashCode.<anonymous>' call
                  var element = k[index];
                  hash = hash + getNumberHashCode(element) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(FloatSet).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof FloatSet)) {
      return false;
    }
    if (!(other._size_1 === this._size_1)) {
      return false;
    }
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.FloatSet.equals.<anonymous>' call
                  var element = k[index];
                  if (!other.contains_8bpbll_k$(element)) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(FloatSet).toString = function () {
    return this.joinToString$default_egwb2_k$(VOID, '[', ']');
  };
  protoOf(FloatSet).findElementIndex_3vt6k7_k$ = function (element) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(element), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.elements_1[index] === element) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  function hash(k) {
    _init_properties_FloatSet_kt__ctp8je();
    var hash = imul(getNumberHashCode(k), get_MurmurHashC1());
    return hash ^ hash << 16;
  }
  function _set_growthLimit__kpjhht_3($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_3($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_3($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_3($this, newCapacity);
    $this.elements_1 = new Float32Array(newCapacity);
  }
  function initializeMetadata_3($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableFloatSet.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_3($this);
  }
  function initializeGrowth_3($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function removeElementAt($this, index) {
    $this._size_1 = $this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableFloatSet.writeMetadata' call
    var value = get_Deleted();
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function findAbsoluteInsertIndex_0($this, element) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(getNumberHashCode(element), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.elements_1[index] === element) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_3($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_3($this);
      index_0 = findFirstAvailableSlot_3($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableFloatSet.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return index_0;
  }
  function findFirstAvailableSlot_3($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_3($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_3($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_3($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_3($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousElements = $this.elements_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_3($this, newCapacity);
    var newElements = $this.elements_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousElement = previousElements[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(getNumberHashCode(previousElement), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_3($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableFloatSet.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newElements[index] = previousElement;
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_3($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableFloatSet(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    FloatSet.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableFloatSet.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_3(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableFloatSet).add_9nou6h_k$ = function (element) {
    var oldSize = this._size_1;
    var index = findAbsoluteInsertIndex_0(this, element);
    this.elements_1[index] = element;
    return !(this._size_1 === oldSize);
  };
  protoOf(MutableFloatSet).plusAssign_xjcc2p_k$ = function (element) {
    var index = findAbsoluteInsertIndex_0(this, element);
    this.elements_1[index] = element;
  };
  protoOf(MutableFloatSet).addAll_grw5eg_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_2l4if3_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableFloatSet).plusAssign_2l4if3_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableFloatSet.plusAssign.<anonymous>' call
      this.plusAssign_xjcc2p_k$(element);
    }
  };
  protoOf(MutableFloatSet).addAll_at03x_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_rtkci4_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableFloatSet).plusAssign_rtkci4_k$ = function (elements) {
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatSet.plusAssign.<anonymous>' call
                  var element = k[index];
                  this.plusAssign_xjcc2p_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatSet).remove_koj5v8_k$ = function (element) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(getNumberHashCode(element), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.elements_1[index] === element) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    var exists = index_0 >= 0;
    if (exists) {
      removeElementAt(this, index_0);
    }
    return exists;
  };
  protoOf(MutableFloatSet).minusAssign_kpy14n_k$ = function (element) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(getNumberHashCode(element), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.elements_1[index] === element) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      removeElementAt(this, index_0);
    }
  };
  protoOf(MutableFloatSet).removeAll_h0d8vv_k$ = function (elements) {
    var oldSize = this._size_1;
    this.minusAssign_qjavyv_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableFloatSet).minusAssign_qjavyv_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableFloatSet.minusAssign.<anonymous>' call
      this.minusAssign_kpy14n_k$(element);
    }
  };
  protoOf(MutableFloatSet).removeAll_rg0dio_k$ = function (elements) {
    var oldSize = this._size_1;
    this.minusAssign_nwjyou_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableFloatSet).minusAssign_nwjyou_k$ = function (elements) {
    // Inline function 'androidx.collection.FloatSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.FloatSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.FloatSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableFloatSet.minusAssign.<anonymous>' call
                  var element = k[index];
                  this.minusAssign_kpy14n_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableFloatSet).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_3(this);
  };
  protoOf(MutableFloatSet).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_3(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  var properties_initialized_FloatSet_kt_ocjrs8;
  function _init_properties_FloatSet_kt__ctp8je() {
    if (!properties_initialized_FloatSet_kt_ocjrs8) {
      properties_initialized_FloatSet_kt_ocjrs8 = true;
      EmptyFloatSet = new MutableFloatSet(0);
      EmptyFloatArray = new Float32Array(0);
    }
  }
  function get_EmptyIntFloatMap() {
    _init_properties_IntFloatMap_kt__csq08z();
    return EmptyIntFloatMap;
  }
  var EmptyIntFloatMap;
  function _set_growthLimit__kpjhht_4($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_4($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_4($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_4($this, newCapacity);
    $this.keys_1 = new Int32Array(newCapacity);
    $this.values_1 = new Float32Array(newCapacity);
  }
  function initializeMetadata_4($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableIntFloatMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_4($this);
  }
  function initializeGrowth_4($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findInsertIndex_2($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_4($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_4($this);
      index_0 = findFirstAvailableSlot_4($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableIntFloatMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_4($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_4($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_4($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_4($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_4($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_4($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousKey, get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_4($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableIntFloatMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_4($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableIntFloatMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    IntFloatMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableIntFloatMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_4(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableIntFloatMap).getOrPut_po64dp_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    var tmp;
    if (index < 0) {
      var defValue = defaultValue();
      this.put_xlw5gf_k$(key, defValue);
      tmp = defValue;
    } else {
      tmp = this.values_1[index];
    }
    return tmp;
  };
  protoOf(MutableIntFloatMap).set_4eugj6_k$ = function (key, value) {
    var index = findInsertIndex_2(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableIntFloatMap).put_xlw5gf_k$ = function (key, value) {
    this.set_4eugj6_k$(key, value);
  };
  protoOf(MutableIntFloatMap).put_y5j2hj_k$ = function (key, value, default_0) {
    var index = findInsertIndex_2(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableIntFloatMap).putAll_27bqo4_k$ = function (from) {
    // Inline function 'androidx.collection.IntFloatMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntFloatMap.putAll.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  this.set_4eugj6_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntFloatMap).plusAssign_27als5_k$ = function (from) {
    return this.putAll_27bqo4_k$(from);
  };
  protoOf(MutableIntFloatMap).remove_v58o70_k$ = function (key) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableIntFloatMap).remove_6kx6sk_k$ = function (key, value) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index >= 0) {
      if (this.values_1[index] === value) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableIntFloatMap).removeIf_pbbnyf_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableIntFloatMap.removeIf.<anonymous>' call
                  if (predicate(this.keys_1[index], this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntFloatMap).minusAssign_p980fd_k$ = function (key) {
    this.remove_v58o70_k$(key);
  };
  protoOf(MutableIntFloatMap).minusAssign_1x9pmk_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_v58o70_k$(key);
    }
  };
  protoOf(MutableIntFloatMap).minusAssign_dscwcr_k$ = function (keys) {
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntFloatMap.minusAssign.<anonymous>' call
                  var key = k[index];
                  this.remove_v58o70_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntFloatMap).minusAssign_efhykv_k$ = function (keys) {
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableIntFloatMap.minusAssign.<anonymous>' call
        var key = content[i];
        this.remove_v58o70_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableIntFloatMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableIntFloatMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  };
  protoOf(MutableIntFloatMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_4(this);
  };
  protoOf(MutableIntFloatMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_4(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function IntFloatMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyIntArray();
    this.values_1 = get_EmptyFloatArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(IntFloatMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(IntFloatMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(IntFloatMap).set_keys_378ebu_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(IntFloatMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(IntFloatMap).set_values_6hpnyh_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(IntFloatMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(IntFloatMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(IntFloatMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntFloatMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntFloatMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(IntFloatMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(IntFloatMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(IntFloatMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntFloatMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntFloatMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntFloatMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntFloatMap).get_c1px32_k$ = function (key) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('Cannot find value for key ' + key);
    }
    return this.values_1[index];
  };
  protoOf(IntFloatMap).getOrDefault_99rubs_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(IntFloatMap).getOrElse_kwau41_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index < 0) {
      return defaultValue();
    }
    return this.values_1[index];
  };
  protoOf(IntFloatMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(IntFloatMap).forEach_h5ejml_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                  block(k[index], v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntFloatMap).forEachKey_5mqltk_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntFloatMap).forEachValue_mpu6t5_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntFloatMap).all_6y3hp3_k$ = function (predicate) {
    // Inline function 'androidx.collection.IntFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntFloatMap.all.<anonymous>' call
                  if (!predicate(k[index], v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntFloatMap).any_9u6mic_k$ = function (predicate) {
    // Inline function 'androidx.collection.IntFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntFloatMap.any.<anonymous>' call
                  if (predicate(k[index], v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(IntFloatMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(IntFloatMap).count_jefi7d_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.IntFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntFloatMap.count.<anonymous>' call
                  if (predicate(k[index], v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(IntFloatMap).contains_7q95ev_k$ = function (key) {
    return this.findKeyIndex_3d2jlg_k$(key) >= 0;
  };
  protoOf(IntFloatMap).containsKey_qwmoa0_k$ = function (key) {
    return this.findKeyIndex_3d2jlg_k$(key) >= 0;
  };
  protoOf(IntFloatMap).containsValue_xffl2_k$ = function (value) {
    // Inline function 'androidx.collection.IntFloatMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.IntFloatMap.containsValue.<anonymous>' call
                  if (value === v[index])
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(IntFloatMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntFloatMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntFloatMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_uppzia_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_g7wmaq_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntFloatMap).joinToString$default_ul9x9n_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(IntFloatMap).joinToString_utg2te_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntFloatMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntFloatMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntFloatMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.IntFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntFloatMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  hash = hash + (key ^ getNumberHashCode(value)) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(IntFloatMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof IntFloatMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.IntFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntFloatMap.equals.<anonymous>' call
                  var key = k[index];
                  if (!(v[index] === other.get_c1px32_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntFloatMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.IntFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.IntFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntFloatMap.toString.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  s.append_uppzia_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_g7wmaq_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(IntFloatMap).findKeyIndex_3d2jlg_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_IntFloatMap_kt_7e2f5t;
  function _init_properties_IntFloatMap_kt__csq08z() {
    if (!properties_initialized_IntFloatMap_kt_7e2f5t) {
      properties_initialized_IntFloatMap_kt_7e2f5t = true;
      EmptyIntFloatMap = new MutableIntFloatMap(0);
    }
  }
  function get_EmptyIntIntMap() {
    _init_properties_IntIntMap_kt__7n90ay();
    return EmptyIntIntMap;
  }
  var EmptyIntIntMap;
  function _set_growthLimit__kpjhht_5($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_5($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_5($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_5($this, newCapacity);
    $this.keys_1 = new Int32Array(newCapacity);
    $this.values_1 = new Int32Array(newCapacity);
  }
  function initializeMetadata_5($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableIntIntMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_5($this);
  }
  function initializeGrowth_5($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findInsertIndex_3($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_5($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_5($this);
      index_0 = findFirstAvailableSlot_5($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableIntIntMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_5($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_5($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_5($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_5($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_5($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_5($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousKey, get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_5($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableIntIntMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_5($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableIntIntMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    IntIntMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableIntIntMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_5(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableIntIntMap).getOrPut_5k9000_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    var tmp;
    if (index < 0) {
      var defValue = defaultValue();
      this.put_xdiuin_k$(key, defValue);
      tmp = defValue;
    } else {
      tmp = this.values_1[index];
    }
    return tmp;
  };
  protoOf(MutableIntIntMap).set_g707pu_k$ = function (key, value) {
    var index = findInsertIndex_3(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableIntIntMap).put_xdiuin_k$ = function (key, value) {
    this.set_g707pu_k$(key, value);
  };
  protoOf(MutableIntIntMap).put_pl30yx_k$ = function (key, value, default_0) {
    var index = findInsertIndex_3(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableIntIntMap).putAll_z5okb3_k$ = function (from) {
    // Inline function 'androidx.collection.IntIntMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntIntMap.putAll.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  this.set_g707pu_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntIntMap).plusAssign_aikwvc_k$ = function (from) {
    return this.putAll_z5okb3_k$(from);
  };
  protoOf(MutableIntIntMap).remove_v58o70_k$ = function (key) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableIntIntMap).remove_i3tv9g_k$ = function (key, value) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index >= 0) {
      if (this.values_1[index] === value) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableIntIntMap).removeIf_17zdty_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableIntIntMap.removeIf.<anonymous>' call
                  if (predicate(this.keys_1[index], this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntIntMap).minusAssign_p980fd_k$ = function (key) {
    this.remove_v58o70_k$(key);
  };
  protoOf(MutableIntIntMap).minusAssign_1x9pmk_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_v58o70_k$(key);
    }
  };
  protoOf(MutableIntIntMap).minusAssign_dscwcr_k$ = function (keys) {
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntIntMap.minusAssign.<anonymous>' call
                  var key = k[index];
                  this.remove_v58o70_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntIntMap).minusAssign_efhykv_k$ = function (keys) {
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableIntIntMap.minusAssign.<anonymous>' call
        var key = content[i];
        this.remove_v58o70_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableIntIntMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableIntIntMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  };
  protoOf(MutableIntIntMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_5(this);
  };
  protoOf(MutableIntIntMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_5(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function IntIntMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyIntArray();
    this.values_1 = get_EmptyIntArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(IntIntMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(IntIntMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(IntIntMap).set_keys_378ebu_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(IntIntMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(IntIntMap).set_values_sv2zhg_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(IntIntMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(IntIntMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(IntIntMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntIntMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntIntMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(IntIntMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(IntIntMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(IntIntMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntIntMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntIntMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntIntMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntIntMap).get_c1px32_k$ = function (key) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('Cannot find value for key ' + key);
    }
    return this.values_1[index];
  };
  protoOf(IntIntMap).getOrDefault_ypsjl4_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(IntIntMap).getOrElse_sq80sk_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index < 0) {
      return defaultValue();
    }
    return this.values_1[index];
  };
  protoOf(IntIntMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(IntIntMap).forEach_iyeqkw_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                  block(k[index], v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntIntMap).forEachKey_5mqltk_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntIntMap).forEachValue_e6u2sa_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntIntMap).all_aixoja_k$ = function (predicate) {
    // Inline function 'androidx.collection.IntIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntIntMap.all.<anonymous>' call
                  if (!predicate(k[index], v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntIntMap).any_kis8ap_k$ = function (predicate) {
    // Inline function 'androidx.collection.IntIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntIntMap.any.<anonymous>' call
                  if (predicate(k[index], v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(IntIntMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(IntIntMap).count_3b47fg_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.IntIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntIntMap.count.<anonymous>' call
                  if (predicate(k[index], v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(IntIntMap).contains_7q95ev_k$ = function (key) {
    return this.findKeyIndex_3d2jlg_k$(key) >= 0;
  };
  protoOf(IntIntMap).containsKey_qwmoa0_k$ = function (key) {
    return this.findKeyIndex_3d2jlg_k$(key) >= 0;
  };
  protoOf(IntIntMap).containsValue_6h54sm_k$ = function (value) {
    // Inline function 'androidx.collection.IntIntMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.IntIntMap.containsValue.<anonymous>' call
                  if (value === v[index])
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(IntIntMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntIntMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntIntMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_uppzia_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_uppzia_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntIntMap).joinToString$default_n976o8_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(IntIntMap).joinToString_r63usv_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntIntMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntIntMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntIntMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.IntIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntIntMap.hashCode.<anonymous>' call
                  hash = hash + (k[index] ^ v[index]) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(IntIntMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof IntIntMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.IntIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntIntMap.equals.<anonymous>' call
                  var key = k[index];
                  if (!(v[index] === other.get_c1px32_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntIntMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.IntIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.IntIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntIntMap.toString.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  s.append_uppzia_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_uppzia_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(IntIntMap).findKeyIndex_3d2jlg_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_IntIntMap_kt_jyvqp8;
  function _init_properties_IntIntMap_kt__7n90ay() {
    if (!properties_initialized_IntIntMap_kt_jyvqp8) {
      properties_initialized_IntIntMap_kt_jyvqp8 = true;
      EmptyIntIntMap = new MutableIntIntMap(0);
    }
  }
  function get_EmptyIntList() {
    _init_properties_IntList_kt__6yao5();
    return EmptyIntList;
  }
  var EmptyIntList;
  function IntList(initialCapacity) {
    var tmp = this;
    var tmp_0;
    if (initialCapacity === 0) {
      tmp_0 = get_EmptyIntArray();
    } else {
      tmp_0 = new Int32Array(initialCapacity);
    }
    tmp.content_1 = tmp_0;
    this._size_1 = 0;
  }
  protoOf(IntList).set_content_i6bmm9_k$ = function (_set____db54di) {
    this.content_1 = _set____db54di;
  };
  protoOf(IntList).get_content_h02jrk_k$ = function () {
    return this.content_1;
  };
  protoOf(IntList).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(IntList).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(IntList).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(IntList).get_lastIndex_tk4gr1_k$ = function () {
    return this._size_1 - 1 | 0;
  };
  protoOf(IntList).get_indices_xelk8u_k$ = function () {
    return until(0, this._size_1);
  };
  protoOf(IntList).none_20lko_k$ = function () {
    return this.isEmpty_y1axqb_k$();
  };
  protoOf(IntList).any_22ng_k$ = function () {
    return this.isNotEmpty_cjxbwk_k$();
  };
  protoOf(IntList).any_5266a8_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.IntList.any.<anonymous>' call
        if (predicate(content[i])) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(IntList).reversedAny_4piacu_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.IntList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.IntList.reversedAny.<anonymous>' call
        if (predicate(content[i])) {
          return true;
        }
      }
       while (0 <= inductionVariable);
    return false;
  };
  protoOf(IntList).contains_7q95ev_k$ = function (element) {
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.IntList.contains.<anonymous>' call
        if (content[i] === element) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(IntList).containsAll_7dnko2_k$ = function (elements) {
    // Inline function 'androidx.collection.IntList.indices' call
    var progression = until(0, elements._size_1);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!this.contains_7q95ev_k$(elements.get_c1px32_k$(i)))
          return false;
      }
       while (!(i === last));
    return true;
  };
  protoOf(IntList).count_1kgzrj_k$ = function () {
    return this._size_1;
  };
  protoOf(IntList).count_x0kxjn_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var count = 0;
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.IntList.count.<anonymous>' call
        if (predicate(content[i])) {
          count = count + 1 | 0;
        }
      }
       while (inductionVariable < last);
    return count;
  };
  protoOf(IntList).first_1m0hio_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('IntList is empty.');
    }
    return this.content_1[0];
  };
  protoOf(IntList).first_yy0ub0_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.IntList.first.<anonymous>' call
        var item = content[i];
        if (predicate(item))
          return item;
      }
       while (inductionVariable < last);
    throw NoSuchElementException_init_$Create$('IntList contains no element matching the predicate.');
  };
  protoOf(IntList).fold_bxvu60_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.IntList.fold.<anonymous>' call
        acc = operation(acc, content[i]);
      }
       while (inductionVariable < last);
    return acc;
  };
  protoOf(IntList).foldIndexed_nwjo48_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.IntList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.IntList.foldIndexed.<anonymous>' call
        acc = operation(i, acc, content[i]);
      }
       while (inductionVariable < last);
    return acc;
  };
  protoOf(IntList).foldRight_6krku2_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.IntList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.IntList.foldRight.<anonymous>' call
        acc = operation(content[i], acc);
      }
       while (0 <= inductionVariable);
    return acc;
  };
  protoOf(IntList).foldRightIndexed_i95xsq_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.IntList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.IntList.foldRightIndexed.<anonymous>' call
        acc = operation(i, content[i], acc);
      }
       while (0 <= inductionVariable);
    return acc;
  };
  protoOf(IntList).forEach_mbzzxf_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        block(content[i]);
      }
       while (inductionVariable < last);
  };
  protoOf(IntList).forEachIndexed_vc07e5_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        block(i, content[i]);
      }
       while (inductionVariable < last);
  };
  protoOf(IntList).forEachReversed_lxqi0x_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        block(content[i]);
      }
       while (0 <= inductionVariable);
  };
  protoOf(IntList).forEachReversedIndexed_o1ios5_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        block(i, content[i]);
      }
       while (0 <= inductionVariable);
  };
  protoOf(IntList).get_c1px32_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.IntList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    return this.content_1[index];
  };
  protoOf(IntList).elementAt_i1qdw7_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.IntList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    return this.content_1[index];
  };
  protoOf(IntList).elementAtOrElse_vrzgay_k$ = function (index, defaultValue) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      return defaultValue(index);
    }
    return this.content_1[index];
  };
  protoOf(IntList).indexOf_h7efip_k$ = function (element) {
    // Inline function 'androidx.collection.IntList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.IntList.indexOf.<anonymous>' call
        if (element === content[i]) {
          return i;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(IntList).indexOfFirst_b8bycr_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.IntList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.IntList.indexOfFirst.<anonymous>' call
        if (predicate(content[i])) {
          return i;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(IntList).indexOfLast_uhuwcj_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.IntList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.IntList.indexOfLast.<anonymous>' call
        if (predicate(content[i])) {
          return i;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  };
  protoOf(IntList).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntList).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntList).last_1z1cm_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('IntList is empty.');
    }
    var tmp = this.content_1;
    // Inline function 'androidx.collection.IntList.lastIndex' call
    return tmp[this._size_1 - 1 | 0];
  };
  protoOf(IntList).last_m4rrqy_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.IntList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.IntList.last.<anonymous>' call
        var item = content[i];
        if (predicate(item)) {
          return item;
        }
      }
       while (0 <= inductionVariable);
    throw NoSuchElementException_init_$Create$('IntList contains no element matching the predicate.');
  };
  protoOf(IntList).lastIndexOf_r2wvdn_k$ = function (element) {
    // Inline function 'androidx.collection.IntList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.IntList.lastIndexOf.<anonymous>' call
        if (content[i] === element) {
          return i;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  };
  protoOf(IntList).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntList.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      // Inline function 'androidx.collection.IntList.forEachIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content = this.content_1;
      var inductionVariable = 0;
      var last = this._size_1;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.collection.IntList.joinToString.<anonymous>.<anonymous>' call
          var element = content[i];
          if (i === limit) {
            this_0.append_jgojdo_k$(truncated);
            break $l$block;
          }
          if (!(i === 0)) {
            this_0.append_jgojdo_k$(separator);
          }
          this_0.append_uppzia_k$(element);
        }
         while (inductionVariable < last);
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntList).joinToString$default_588pk9_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(IntList).joinToString_egr8se_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntList.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      // Inline function 'androidx.collection.IntList.forEachIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content = this.content_1;
      var inductionVariable = 0;
      var last = this._size_1;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.collection.IntList.joinToString.<anonymous>.<anonymous>' call
          var element = content[i];
          if (i === limit) {
            this_0.append_jgojdo_k$(truncated);
            break $l$block;
          }
          if (!(i === 0)) {
            this_0.append_jgojdo_k$(separator);
          }
          this_0.append_jgojdo_k$(transform(element));
        }
         while (inductionVariable < last);
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntList).hashCode = function () {
    var hashCode = 0;
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.IntList.hashCode.<anonymous>' call
        var element = content[i];
        hashCode = hashCode + imul(31, element) | 0;
      }
       while (inductionVariable < last);
    return hashCode;
  };
  protoOf(IntList).equals = function (other) {
    var tmp;
    if (!(other instanceof IntList)) {
      tmp = true;
    } else {
      tmp = !(other._size_1 === this._size_1);
    }
    if (tmp) {
      return false;
    }
    var content = this.content_1;
    var otherContent = other.content_1;
    // Inline function 'androidx.collection.IntList.indices' call
    var progression = until(0, this._size_1);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!(content[i] === otherContent[i])) {
          return false;
        }
      }
       while (!(i === last));
    return true;
  };
  protoOf(IntList).toString = function () {
    return this.joinToString$default_588pk9_k$(VOID, '[', ']');
  };
  function MutableIntList(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? 16 : initialCapacity;
    IntList.call(this, initialCapacity);
  }
  protoOf(MutableIntList).get_capacity_wxbgcd_k$ = function () {
    return this.content_1.length;
  };
  protoOf(MutableIntList).add_lnluon_k$ = function (element) {
    this.ensureCapacity_wr7980_k$(this._size_1 + 1 | 0);
    this.content_1[this._size_1] = element;
    this._size_1 = this._size_1 + 1 | 0;
    return true;
  };
  protoOf(MutableIntList).add_6jazo1_k$ = function (index, element) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    this.ensureCapacity_wr7980_k$(this._size_1 + 1 | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + 1 | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, destinationOffset, index, endIndex);
    }
    content[index] = element;
    this._size_1 = this._size_1 + 1 | 0;
  };
  protoOf(MutableIntList).addAll_m07kb7_k$ = function (index, elements) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    // Inline function 'kotlin.collections.isEmpty' call
    if (elements.length === 0)
      return false;
    this.ensureCapacity_wr7980_k$(this._size_1 + elements.length | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements.length | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.copyInto' call
    var endIndex_0 = elements.length;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp_0 = elements;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp_0, content, index, 0, endIndex_0);
    this._size_1 = this._size_1 + elements.length | 0;
    return true;
  };
  protoOf(MutableIntList).addAll_4nyko_k$ = function (index, elements) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    if (elements.isEmpty_y1axqb_k$())
      return false;
    this.ensureCapacity_wr7980_k$(this._size_1 + elements._size_1 | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements._size_1 | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = elements.content_1;
    var endIndex_0 = elements._size_1;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp_0 = this_0;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp_0, content, index, 0, endIndex_0);
    this._size_1 = this._size_1 + elements._size_1 | 0;
    return true;
  };
  protoOf(MutableIntList).addAll_u21600_k$ = function (elements) {
    return this.addAll_4nyko_k$(this._size_1, elements);
  };
  protoOf(MutableIntList).addAll_k6ueej_k$ = function (elements) {
    return this.addAll_m07kb7_k$(this._size_1, elements);
  };
  protoOf(MutableIntList).plusAssign_jmw5dl_k$ = function (elements) {
    this.addAll_4nyko_k$(this._size_1, elements);
  };
  protoOf(MutableIntList).plusAssign_tg7l76_k$ = function (elements) {
    this.addAll_m07kb7_k$(this._size_1, elements);
  };
  protoOf(MutableIntList).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
  };
  protoOf(MutableIntList).trim_d6sije_k$ = function (minCapacity) {
    // Inline function 'kotlin.comparisons.maxOf' call
    var b = this._size_1;
    var minSize = Math.max(minCapacity, b);
    // Inline function 'androidx.collection.MutableIntList.capacity' call
    if (this.content_1.length > minSize) {
      this.content_1 = copyOf_0(this.content_1, minSize);
    }
  };
  protoOf(MutableIntList).trim$default_qw456q_k$ = function (minCapacity, $super) {
    minCapacity = minCapacity === VOID ? this._size_1 : minCapacity;
    var tmp;
    if ($super === VOID) {
      this.trim_d6sije_k$(minCapacity);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.trim_d6sije_k$.call(this, minCapacity);
    }
    return tmp;
  };
  protoOf(MutableIntList).ensureCapacity_wr7980_k$ = function (capacity) {
    var oldContent = this.content_1;
    if (oldContent.length < capacity) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = imul(oldContent.length, 3) / 2 | 0;
      var newSize = Math.max(capacity, b);
      this.content_1 = copyOf_0(oldContent, newSize);
    }
  };
  protoOf(MutableIntList).plusAssign_8mmvnl_k$ = function (element) {
    this.add_lnluon_k$(element);
  };
  protoOf(MutableIntList).minusAssign_p980fd_k$ = function (element) {
    this.remove_cqondg_k$(element);
  };
  protoOf(MutableIntList).remove_cqondg_k$ = function (element) {
    var index = this.indexOf_h7efip_k$(element);
    if (index >= 0) {
      this.removeAt_6niowx_k$(index);
      return true;
    }
    return false;
  };
  protoOf(MutableIntList).removeAll_dm18ge_k$ = function (elements) {
    var initialSize = this._size_1;
    var inductionVariable = 0;
    var last = elements.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.remove_cqondg_k$(elements[i]);
      }
       while (inductionVariable <= last);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableIntList).removeAll_x7eblp_k$ = function (elements) {
    var initialSize = this._size_1;
    var inductionVariable = 0;
    // Inline function 'androidx.collection.IntList.lastIndex' call
    var last = elements._size_1 - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.remove_cqondg_k$(elements.get_c1px32_k$(i));
      }
       while (!(i === last));
    return !(initialSize === this._size_1);
  };
  protoOf(MutableIntList).minusAssign_1x9pmk_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableIntList.minusAssign.<anonymous>' call
      this.remove_cqondg_k$(element);
    }
  };
  protoOf(MutableIntList).minusAssign_efhykv_k$ = function (elements) {
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = elements.content_1;
    var inductionVariable = 0;
    var last = elements._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableIntList.minusAssign.<anonymous>' call
        var element = content[i];
        this.remove_cqondg_k$(element);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableIntList).removeAt_6niowx_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.IntList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    var content = this.content_1;
    var item = content[index];
    // Inline function 'androidx.collection.IntList.lastIndex' call
    if (!(index === (this._size_1 - 1 | 0))) {
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex = index + 1 | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, index, startIndex, endIndex);
    }
    this._size_1 = this._size_1 - 1 | 0;
    return item;
  };
  protoOf(MutableIntList).removeRange_sm1kzt_k$ = function (start, end) {
    if (!(0 <= start ? start <= this._size_1 : false) ? true : !(0 <= end ? end <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Start (' + start + ') and end (' + end + ') must be in 0..' + this._size_1);
    }
    if (end < start) {
      throw IllegalArgumentException_init_$Create$('Start (' + start + ') is more than end (' + end + ')');
    }
    if (!(end === start)) {
      if (end < this._size_1) {
        // Inline function 'kotlin.collections.copyInto' call
        var this_0 = this.content_1;
        var destination = this.content_1;
        var endIndex = this._size_1;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var tmp = this_0;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        arrayCopy(tmp, destination, start, end, endIndex);
      }
      this._size_1 = this._size_1 - (end - start | 0) | 0;
    }
  };
  protoOf(MutableIntList).retainAll_e6skdt_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.IntList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var item = content[i];
        var tmp$ret$2;
        $l$block: {
          // Inline function 'kotlin.collections.indexOfFirst' call
          var inductionVariable_0 = 0;
          var last = elements.length - 1 | 0;
          if (inductionVariable_0 <= last)
            do {
              var index = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.MutableIntList.retainAll.<anonymous>' call
              if (elements[index] === item) {
                tmp$ret$2 = index;
                break $l$block;
              }
            }
             while (inductionVariable_0 <= last);
          tmp$ret$2 = -1;
        }
        if (tmp$ret$2 < 0) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableIntList).retainAll_ly33es_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.IntList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var item = content[i];
        if (!elements.contains_7q95ev_k$(item)) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableIntList).set_tq3pjy_k$ = function (index, element) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.IntList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('set index ' + index + ' must be between 0 .. ' + tmp$ret$0);
    }
    var content = this.content_1;
    var old = content[index];
    content[index] = element;
    return old;
  };
  protoOf(MutableIntList).sort_6ihik2_k$ = function () {
    sort_0(this.content_1, 0, this._size_1);
  };
  protoOf(MutableIntList).sortDescending_e29tp6_k$ = function () {
    sortDescending_0(this.content_1, 0, this._size_1);
  };
  var properties_initialized_IntList_kt_cw8sw3;
  function _init_properties_IntList_kt__6yao5() {
    if (!properties_initialized_IntList_kt_cw8sw3) {
      properties_initialized_IntList_kt_cw8sw3 = true;
      EmptyIntList = new MutableIntList(0);
    }
  }
  function get_EmptyIntLongMap() {
    _init_properties_IntLongMap_kt__7nk95b();
    return EmptyIntLongMap;
  }
  var EmptyIntLongMap;
  function _set_growthLimit__kpjhht_6($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_6($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_6($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_6($this, newCapacity);
    $this.keys_1 = new Int32Array(newCapacity);
    $this.values_1 = longArray(newCapacity);
  }
  function initializeMetadata_6($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableIntLongMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_6($this);
  }
  function initializeGrowth_6($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findInsertIndex_4($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_6($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_6($this);
      index_0 = findFirstAvailableSlot_6($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableIntLongMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_6($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_6($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_6($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_6($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_6($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_6($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousKey, get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_6($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableIntLongMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_6($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableIntLongMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    IntLongMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableIntLongMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_6(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableIntLongMap).getOrPut_mlazr6_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    var tmp;
    if (index < 0) {
      var defValue = defaultValue();
      this.put_p6o1t7_k$(key, defValue);
      tmp = defValue;
    } else {
      tmp = this.values_1[index];
    }
    return tmp;
  };
  protoOf(MutableIntLongMap).set_e163hk_k$ = function (key, value) {
    var index = findInsertIndex_4(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableIntLongMap).put_p6o1t7_k$ = function (key, value) {
    this.set_e163hk_k$(key, value);
  };
  protoOf(MutableIntLongMap).put_mhl5p3_k$ = function (key, value, default_0) {
    var index = findInsertIndex_4(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableIntLongMap).putAll_fbucuu_k$ = function (from) {
    // Inline function 'androidx.collection.IntLongMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntLongMap.putAll.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  this.set_e163hk_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntLongMap).plusAssign_alr1vj_k$ = function (from) {
    return this.putAll_fbucuu_k$(from);
  };
  protoOf(MutableIntLongMap).remove_v58o70_k$ = function (key) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableIntLongMap).remove_s031ui_k$ = function (key, value) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index >= 0) {
      if (this.values_1[index].equals(value)) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableIntLongMap).removeIf_6ny1qq_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableIntLongMap.removeIf.<anonymous>' call
                  if (predicate(this.keys_1[index], this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntLongMap).minusAssign_p980fd_k$ = function (key) {
    this.remove_v58o70_k$(key);
  };
  protoOf(MutableIntLongMap).minusAssign_1x9pmk_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_v58o70_k$(key);
    }
  };
  protoOf(MutableIntLongMap).minusAssign_dscwcr_k$ = function (keys) {
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntLongMap.minusAssign.<anonymous>' call
                  var key = k[index];
                  this.remove_v58o70_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntLongMap).minusAssign_efhykv_k$ = function (keys) {
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableIntLongMap.minusAssign.<anonymous>' call
        var key = content[i];
        this.remove_v58o70_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableIntLongMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableIntLongMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  };
  protoOf(MutableIntLongMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_6(this);
  };
  protoOf(MutableIntLongMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_6(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function IntLongMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyIntArray();
    this.values_1 = get_EmptyLongArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(IntLongMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(IntLongMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(IntLongMap).set_keys_378ebu_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(IntLongMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(IntLongMap).set_values_h45qot_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(IntLongMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(IntLongMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(IntLongMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntLongMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntLongMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(IntLongMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(IntLongMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(IntLongMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntLongMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntLongMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntLongMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntLongMap).get_c1px32_k$ = function (key) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('Cannot find value for key ' + key);
    }
    return this.values_1[index];
  };
  protoOf(IntLongMap).getOrDefault_8ce0u6_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(IntLongMap).getOrElse_p1c4sm_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_3d2jlg_k$(key);
    if (index < 0) {
      return defaultValue();
    }
    return this.values_1[index];
  };
  protoOf(IntLongMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(IntLongMap).forEach_6lb4hy_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                  block(k[index], v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntLongMap).forEachKey_5mqltk_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntLongMap).forEachValue_qhpe6o_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntLongMap).all_csnihu_k$ = function (predicate) {
    // Inline function 'androidx.collection.IntLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntLongMap.all.<anonymous>' call
                  if (!predicate(k[index], v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntLongMap).any_cy7a7n_k$ = function (predicate) {
    // Inline function 'androidx.collection.IntLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntLongMap.any.<anonymous>' call
                  if (predicate(k[index], v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(IntLongMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(IntLongMap).count_fhlpjk_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.IntLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntLongMap.count.<anonymous>' call
                  if (predicate(k[index], v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(IntLongMap).contains_7q95ev_k$ = function (key) {
    return this.findKeyIndex_3d2jlg_k$(key) >= 0;
  };
  protoOf(IntLongMap).containsKey_qwmoa0_k$ = function (key) {
    return this.findKeyIndex_3d2jlg_k$(key) >= 0;
  };
  protoOf(IntLongMap).containsValue_38h4m4_k$ = function (value) {
    // Inline function 'androidx.collection.IntLongMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.IntLongMap.containsValue.<anonymous>' call
                  var v_0 = v[index];
                  if (value.equals(v_0))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(IntLongMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntLongMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntLongMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_uppzia_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_8gl4h8_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntLongMap).joinToString$default_6ts1y5_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(IntLongMap).joinToString_72gnz_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntLongMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntLongMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntLongMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.IntLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntLongMap.hashCode.<anonymous>' call
                  hash = hash + (k[index] ^ v[index].hashCode()) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(IntLongMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof IntLongMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.IntLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntLongMap.equals.<anonymous>' call
                  var key = k[index];
                  if (!v[index].equals(other.get_c1px32_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntLongMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.IntLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.IntLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntLongMap.toString.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  s.append_uppzia_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_8gl4h8_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(IntLongMap).findKeyIndex_3d2jlg_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_IntLongMap_kt_xh7ilv;
  function _init_properties_IntLongMap_kt__7nk95b() {
    if (!properties_initialized_IntLongMap_kt_xh7ilv) {
      properties_initialized_IntLongMap_kt_xh7ilv = true;
      EmptyIntLongMap = new MutableIntLongMap(0);
    }
  }
  function get_EmptyIntObjectMap() {
    _init_properties_IntObjectMap_kt__bzh4pa();
    return EmptyIntObjectMap;
  }
  var EmptyIntObjectMap;
  function _set_growthLimit__kpjhht_7($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_7($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_7($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_7($this, newCapacity);
    $this.keys_1 = new Int32Array(newCapacity);
    var tmp_0 = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_0.values_1 = fillArrayVal(Array(newCapacity), null);
  }
  function initializeMetadata_7($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableIntObjectMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_7($this);
  }
  function initializeGrowth_7($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findAbsoluteInsertIndex_1($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_7($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_7($this);
      index_0 = findFirstAvailableSlot_7($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableIntObjectMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return index_0;
  }
  function findFirstAvailableSlot_7($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_7($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_7($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_7($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_7($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_7($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousKey, get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_7($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableIntObjectMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_7($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableIntObjectMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    IntObjectMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableIntObjectMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_7(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableIntObjectMap).getOrPut_ezstre_k$ = function (key, defaultValue) {
    var tmp0_elvis_lhs = this.get_c1px32_k$(key);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = defaultValue();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableIntObjectMap.getOrPut.<anonymous>' call
      this.set_hupg49_k$(key, this_0);
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(MutableIntObjectMap).set_hupg49_k$ = function (key, value) {
    var index = findAbsoluteInsertIndex_1(this, key);
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableIntObjectMap).put_s638d8_k$ = function (key, value) {
    var index = findAbsoluteInsertIndex_1(this, key);
    var oldValue = this.values_1[index];
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return (oldValue == null ? true : !(oldValue == null)) ? oldValue : THROW_CCE();
  };
  protoOf(MutableIntObjectMap).putAll_qjybu3_k$ = function (from) {
    // Inline function 'androidx.collection.IntObjectMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntObjectMap.putAll.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.set_hupg49_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntObjectMap).plusAssign_jiro82_k$ = function (from) {
    return this.putAll_qjybu3_k$(from);
  };
  protoOf(MutableIntObjectMap).remove_cqondg_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      return this.removeValueAt_lclkw8_k$(index_0);
    }
    return null;
  };
  protoOf(MutableIntObjectMap).remove_pof9dl_k$ = function (key, value) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      if (equals(this.values_1[index_0], value)) {
        this.removeValueAt_lclkw8_k$(index_0);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableIntObjectMap).removeIf_ax6lha_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableIntObjectMap.removeIf.<anonymous>' call
                  var tmp = this.keys_1[index];
                  var tmp_0 = this.values_1[index];
                  if (predicate(tmp, (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE())) {
                    this.removeValueAt_lclkw8_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntObjectMap).minusAssign_p980fd_k$ = function (key) {
    this.remove_cqondg_k$(key);
  };
  protoOf(MutableIntObjectMap).minusAssign_1x9pmk_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_cqondg_k$(key);
    }
  };
  protoOf(MutableIntObjectMap).minusAssign_dscwcr_k$ = function (keys) {
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntObjectMap.minusAssign.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntObjectMap.minusAssign' call
                  var key = k[index];
                  this.remove_cqondg_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntObjectMap).minusAssign_efhykv_k$ = function (keys) {
    // Inline function 'androidx.collection.IntList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableIntObjectMap.minusAssign.<anonymous>' call
        // Inline function 'androidx.collection.MutableIntObjectMap.minusAssign' call
        var key = content[i];
        this.remove_cqondg_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableIntObjectMap).removeValueAt_lclkw8_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableIntObjectMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var oldValue = this.values_1[index];
    this.values_1[index] = null;
    return (oldValue == null ? true : !(oldValue == null)) ? oldValue : THROW_CCE();
  };
  protoOf(MutableIntObjectMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    fill_0(this.values_1, null, 0, this._capacity_1);
    initializeGrowth_7(this);
  };
  protoOf(MutableIntObjectMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_7(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function IntObjectMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyIntArray();
    this.values_1 = get_EMPTY_OBJECTS();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(IntObjectMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(IntObjectMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(IntObjectMap).set_keys_378ebu_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(IntObjectMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(IntObjectMap).set_values_y0cw4b_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(IntObjectMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(IntObjectMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(IntObjectMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntObjectMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntObjectMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(IntObjectMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(IntObjectMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(IntObjectMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntObjectMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntObjectMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntObjectMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntObjectMap).get_c1px32_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    var tmp_0;
    if (index_0 >= 0) {
      var tmp_1 = this.values_1[index_0];
      tmp_0 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
    } else {
      tmp_0 = null;
    }
    return tmp_0;
  };
  protoOf(IntObjectMap).getOrDefault_41ki3n_k$ = function (key, defaultValue) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      var tmp_0 = this.values_1[index_0];
      return (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    }
    return defaultValue;
  };
  protoOf(IntObjectMap).getOrElse_sbxmoq_k$ = function (key, defaultValue) {
    var tmp0_elvis_lhs = this.get_c1px32_k$(key);
    return tmp0_elvis_lhs == null ? defaultValue() : tmp0_elvis_lhs;
  };
  protoOf(IntObjectMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(IntObjectMap).forEach_y36yau_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                  var tmp = k[index];
                  var tmp_0 = v[index];
                  block(tmp, (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntObjectMap).forEachKey_5mqltk_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntObjectMap).forEachValue_h2meh0_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEachValue.<anonymous>' call
                  var tmp = v[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntObjectMap).all_jy2fda_k$ = function (predicate) {
    // Inline function 'androidx.collection.IntObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntObjectMap.all.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  if (!predicate(key, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntObjectMap).any_c74njt_k$ = function (predicate) {
    // Inline function 'androidx.collection.IntObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntObjectMap.any.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  if (predicate(key, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(IntObjectMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(IntObjectMap).count_s2hn98_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.IntObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntObjectMap.count.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  if (predicate(key, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(IntObjectMap).contains_7q95ev_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    return tmp$ret$9 >= 0;
  };
  protoOf(IntObjectMap).containsKey_qwmoa0_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index] === key) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    return tmp$ret$9 >= 0;
  };
  protoOf(IntObjectMap).containsValue_yf2ykl_k$ = function (value) {
    // Inline function 'androidx.collection.IntObjectMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.IntObjectMap.containsValue.<anonymous>' call
                  var tmp = v[index];
                  var v_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (equals(value, v_0))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(IntObjectMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntObjectMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntObjectMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var tmp = v[index_0];
                    var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_uppzia_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_t8pm91_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntObjectMap).joinToString$default_hai1bs_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(IntObjectMap).joinToString_os5ssr_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntObjectMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntObjectMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var tmp = v[index_0];
                    var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntObjectMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.IntObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntObjectMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var tmp_0 = hash;
                  var tmp_1 = key;
                  // Inline function 'kotlin.hashCode' call
                  var tmp0_safe_receiver = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
                  hash = tmp_0 + (tmp_1 ^ (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs)) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(IntObjectMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof IntObjectMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.IntObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntObjectMap.equals.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (value == null) {
                    if (!(other.get_c1px32_k$(key) == null) ? true : !other.containsKey_qwmoa0_k$(key)) {
                      return false;
                    }
                  } else if (!equals(value, other.get_c1px32_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntObjectMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.IntObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.IntObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.IntObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntObjectMap.toString.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  s.append_uppzia_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_t8pm91_k$(value === this ? '(this)' : value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(IntObjectMap).findKeyIndex_3d2jlg_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index] === key) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_IntObjectMap_kt_hqy7tc;
  function _init_properties_IntObjectMap_kt__bzh4pa() {
    if (!properties_initialized_IntObjectMap_kt_hqy7tc) {
      properties_initialized_IntObjectMap_kt_hqy7tc = true;
      EmptyIntObjectMap = new MutableIntObjectMap(0);
    }
  }
  function get_EmptyIntSet() {
    _init_properties_IntSet_kt__km4dgt();
    return EmptyIntSet;
  }
  var EmptyIntSet;
  function get_EmptyIntArray() {
    _init_properties_IntSet_kt__km4dgt();
    return EmptyIntArray;
  }
  var EmptyIntArray;
  function IntSet() {
    this.metadata_1 = get_EmptyGroup();
    this.elements_1 = get_EmptyIntArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(IntSet).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(IntSet).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(IntSet).set_elements_gie861_k$ = function (_set____db54di) {
    this.elements_1 = _set____db54di;
  };
  protoOf(IntSet).get_elements_vxwh8g_k$ = function () {
    return this.elements_1;
  };
  protoOf(IntSet).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(IntSet).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntSet).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(IntSet).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(IntSet).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(IntSet).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(IntSet).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntSet).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntSet).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(IntSet).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(IntSet).first_1m0hio_k$ = function () {
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntSet.first.<anonymous>' call
                  return k[index];
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    throw NoSuchElementException_init_$Create$('The IntSet is empty');
  };
  protoOf(IntSet).first_yy0ub0_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntSet.first.<anonymous>' call
                  var it = k[index];
                  if (predicate(it))
                    return it;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    throw NoSuchElementException_init_$Create$('Could not find a match');
  };
  protoOf(IntSet).forEachIndex_oi22yj_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(IntSet).forEach_mbzzxf_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(IntSet).all_6ubmp1_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntSet.all.<anonymous>' call
                  if (!predicate(k[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntSet).any_5266a8_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntSet.any.<anonymous>' call
                  if (predicate(k[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(IntSet).count_1kgzrj_k$ = function () {
    return this._size_1;
  };
  protoOf(IntSet).count_x0kxjn_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var count = 0;
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntSet.count.<anonymous>' call
                  if (predicate(k[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(IntSet).contains_7q95ev_k$ = function (element) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(element, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.elements_1[index] === element) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    return tmp$ret$9 >= 0;
  };
  protoOf(IntSet).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntSet.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntSet.forEach' call
      // Inline function 'kotlin.contracts.contract' call
      var k = this.elements_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntSet.forEachIndex' call
        // Inline function 'kotlin.contracts.contract' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntSet.joinToString.<anonymous>.<anonymous>' call
                    var element = k[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_uppzia_k$(element);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntSet).joinToString$default_aqv3pb_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(IntSet).joinToString_egr8se_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.IntSet.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.IntSet.forEach' call
      // Inline function 'kotlin.contracts.contract' call
      var k = this.elements_1;
      $l$block_0: {
        // Inline function 'androidx.collection.IntSet.forEachIndex' call
        // Inline function 'kotlin.contracts.contract' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.IntSet.joinToString.<anonymous>.<anonymous>' call
                    var element = k[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(element));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(IntSet).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntSet.hashCode.<anonymous>' call
                  hash = hash + k[index] | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(IntSet).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof IntSet)) {
      return false;
    }
    if (!(other._size_1 === this._size_1)) {
      return false;
    }
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.IntSet.equals.<anonymous>' call
                  var element = k[index];
                  if (!other.contains_7q95ev_k$(element)) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(IntSet).toString = function () {
    return this.joinToString$default_aqv3pb_k$(VOID, '[', ']');
  };
  protoOf(IntSet).findElementIndex_xtn40n_k$ = function (element) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(element, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.elements_1[index] === element) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  function hash_0(k) {
    _init_properties_IntSet_kt__km4dgt();
    var hash = imul(k, get_MurmurHashC1());
    return hash ^ hash << 16;
  }
  function _set_growthLimit__kpjhht_8($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_8($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_8($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_8($this, newCapacity);
    $this.elements_1 = new Int32Array(newCapacity);
  }
  function initializeMetadata_8($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableIntSet.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_8($this);
  }
  function initializeGrowth_8($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function removeElementAt_0($this, index) {
    $this._size_1 = $this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableIntSet.writeMetadata' call
    var value = get_Deleted();
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function findAbsoluteInsertIndex_2($this, element) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(element, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.elements_1[index] === element) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_8($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_8($this);
      index_0 = findFirstAvailableSlot_8($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableIntSet.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return index_0;
  }
  function findFirstAvailableSlot_8($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_8($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_8($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_8($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_8($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousElements = $this.elements_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_8($this, newCapacity);
    var newElements = $this.elements_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousElement = previousElements[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousElement, get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_8($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableIntSet.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newElements[index] = previousElement;
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_8($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableIntSet(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    IntSet.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableIntSet.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_8(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableIntSet).add_lnluon_k$ = function (element) {
    var oldSize = this._size_1;
    var index = findAbsoluteInsertIndex_2(this, element);
    this.elements_1[index] = element;
    return !(this._size_1 === oldSize);
  };
  protoOf(MutableIntSet).plusAssign_8mmvnl_k$ = function (element) {
    var index = findAbsoluteInsertIndex_2(this, element);
    this.elements_1[index] = element;
  };
  protoOf(MutableIntSet).addAll_k6ueej_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_tg7l76_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableIntSet).plusAssign_tg7l76_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableIntSet.plusAssign.<anonymous>' call
      this.plusAssign_8mmvnl_k$(element);
    }
  };
  protoOf(MutableIntSet).addAll_ya2bqy_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_i4f6n3_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableIntSet).plusAssign_i4f6n3_k$ = function (elements) {
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntSet.plusAssign.<anonymous>' call
                  var element = k[index];
                  this.plusAssign_8mmvnl_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntSet).remove_cqondg_k$ = function (element) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(element, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.elements_1[index] === element) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    var exists = index_0 >= 0;
    if (exists) {
      removeElementAt_0(this, index_0);
    }
    return exists;
  };
  protoOf(MutableIntSet).minusAssign_p980fd_k$ = function (element) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(element, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.elements_1[index] === element) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      removeElementAt_0(this, index_0);
    }
  };
  protoOf(MutableIntSet).removeAll_dm18ge_k$ = function (elements) {
    var oldSize = this._size_1;
    this.minusAssign_1x9pmk_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableIntSet).minusAssign_1x9pmk_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableIntSet.minusAssign.<anonymous>' call
      this.minusAssign_p980fd_k$(element);
    }
  };
  protoOf(MutableIntSet).removeAll_ov3bzx_k$ = function (elements) {
    var oldSize = this._size_1;
    this.minusAssign_dscwcr_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableIntSet).minusAssign_dscwcr_k$ = function (elements) {
    // Inline function 'androidx.collection.IntSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.IntSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.IntSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableIntSet.minusAssign.<anonymous>' call
                  var element = k[index];
                  this.minusAssign_p980fd_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableIntSet).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_8(this);
  };
  protoOf(MutableIntSet).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_8(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  var properties_initialized_IntSet_kt_za7tcl;
  function _init_properties_IntSet_kt__km4dgt() {
    if (!properties_initialized_IntSet_kt_za7tcl) {
      properties_initialized_IntSet_kt_za7tcl = true;
      EmptyIntSet = new MutableIntSet(0);
      EmptyIntArray = new Int32Array(0);
    }
  }
  function get_EmptyLongFloatMap() {
    _init_properties_LongFloatMap_kt__4kf8f8();
    return EmptyLongFloatMap;
  }
  var EmptyLongFloatMap;
  function _set_growthLimit__kpjhht_9($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_9($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_9($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_9($this, newCapacity);
    $this.keys_1 = longArray(newCapacity);
    $this.values_1 = new Float32Array(newCapacity);
  }
  function initializeMetadata_9($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableLongFloatMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_9($this);
  }
  function initializeGrowth_9($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findInsertIndex_5($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index].equals(key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_9($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_9($this);
      index_0 = findFirstAvailableSlot_9($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableLongFloatMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_9($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_9($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_9($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_9($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_9($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_9($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousKey.hashCode(), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_9($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableLongFloatMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_9($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableLongFloatMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    LongFloatMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableLongFloatMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_9(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableLongFloatMap).getOrPut_tw2jpf_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    var tmp;
    if (index < 0) {
      var defValue = defaultValue();
      this.put_9fdcax_k$(key, defValue);
      tmp = defValue;
    } else {
      tmp = this.values_1[index];
    }
    return tmp;
  };
  protoOf(MutableLongFloatMap).set_9iooyk_k$ = function (key, value) {
    var index = findInsertIndex_5(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableLongFloatMap).put_9fdcax_k$ = function (key, value) {
    this.set_9iooyk_k$(key, value);
  };
  protoOf(MutableLongFloatMap).put_shq4qn_k$ = function (key, value, default_0) {
    var index = findInsertIndex_5(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableLongFloatMap).putAll_u407j5_k$ = function (from) {
    // Inline function 'androidx.collection.LongFloatMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongFloatMap.putAll.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  this.set_9iooyk_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongFloatMap).plusAssign_zg4ghi_k$ = function (from) {
    return this.putAll_u407j5_k$(from);
  };
  protoOf(MutableLongFloatMap).remove_k3yns6_k$ = function (key) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableLongFloatMap).remove_coqszy_k$ = function (key, value) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index >= 0) {
      if (this.values_1[index] === value) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableLongFloatMap).removeIf_duxiu5_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableLongFloatMap.removeIf.<anonymous>' call
                  if (predicate(this.keys_1[index], this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongFloatMap).minusAssign_elja0x_k$ = function (key) {
    this.remove_k3yns6_k$(key);
  };
  protoOf(MutableLongFloatMap).minusAssign_dwb62r_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_k3yns6_k$(key);
    }
  };
  protoOf(MutableLongFloatMap).minusAssign_l8y4g8_k$ = function (keys) {
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongFloatMap.minusAssign.<anonymous>' call
                  var key = k[index];
                  this.remove_k3yns6_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongFloatMap).minusAssign_wmfrn6_k$ = function (keys) {
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableLongFloatMap.minusAssign.<anonymous>' call
        var key = content[i];
        this.remove_k3yns6_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableLongFloatMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableLongFloatMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  };
  protoOf(MutableLongFloatMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_9(this);
  };
  protoOf(MutableLongFloatMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_9(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function LongFloatMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyLongArray();
    this.values_1 = get_EmptyFloatArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(LongFloatMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(LongFloatMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(LongFloatMap).set_keys_hjxm4r_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(LongFloatMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(LongFloatMap).set_values_6hpnyh_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(LongFloatMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(LongFloatMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(LongFloatMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongFloatMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongFloatMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(LongFloatMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(LongFloatMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(LongFloatMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongFloatMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongFloatMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongFloatMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongFloatMap).get_ugtq3c_k$ = function (key) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('Cannot find value for key ' + key.toString());
    }
    return this.values_1[index];
  };
  protoOf(LongFloatMap).getOrDefault_u24zym_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(LongFloatMap).getOrElse_c2v1x5_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index < 0) {
      return defaultValue();
    }
    return this.values_1[index];
  };
  protoOf(LongFloatMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(LongFloatMap).forEach_86opcl_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                  block(k[index], v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongFloatMap).forEachKey_jq7cta_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongFloatMap).forEachValue_mpu6t5_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongFloatMap).all_isfatp_k$ = function (predicate) {
    // Inline function 'androidx.collection.LongFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongFloatMap.all.<anonymous>' call
                  if (!predicate(k[index], v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongFloatMap).any_t3rila_k$ = function (predicate) {
    // Inline function 'androidx.collection.LongFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongFloatMap.any.<anonymous>' call
                  if (predicate(k[index], v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(LongFloatMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(LongFloatMap).count_c4cv1d_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.LongFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongFloatMap.count.<anonymous>' call
                  if (predicate(k[index], v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(LongFloatMap).contains_aa6tld_k$ = function (key) {
    return this.findKeyIndex_56hnvi_k$(key) >= 0;
  };
  protoOf(LongFloatMap).containsKey_sk2ur2_k$ = function (key) {
    return this.findKeyIndex_56hnvi_k$(key) >= 0;
  };
  protoOf(LongFloatMap).containsValue_xffl2_k$ = function (value) {
    // Inline function 'androidx.collection.LongFloatMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.LongFloatMap.containsValue.<anonymous>' call
                  if (value === v[index])
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(LongFloatMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongFloatMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongFloatMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_8gl4h8_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_g7wmaq_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongFloatMap).joinToString$default_vt191k_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(LongFloatMap).joinToString_oiji4w_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongFloatMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongFloatMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongFloatMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.LongFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongFloatMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  hash = hash + (key.hashCode() ^ getNumberHashCode(value)) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(LongFloatMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LongFloatMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.LongFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongFloatMap.equals.<anonymous>' call
                  var key = k[index];
                  if (!(v[index] === other.get_ugtq3c_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongFloatMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.LongFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.LongFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongFloatMap.toString.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  s.append_8gl4h8_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_g7wmaq_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(LongFloatMap).findKeyIndex_56hnvi_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index].equals(key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_LongFloatMap_kt_5p5any;
  function _init_properties_LongFloatMap_kt__4kf8f8() {
    if (!properties_initialized_LongFloatMap_kt_5p5any) {
      properties_initialized_LongFloatMap_kt_5p5any = true;
      EmptyLongFloatMap = new MutableLongFloatMap(0);
    }
  }
  function get_EmptyLongIntMap() {
    _init_properties_LongIntMap_kt__k42y1();
    return EmptyLongIntMap;
  }
  var EmptyLongIntMap;
  function _set_growthLimit__kpjhht_10($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_10($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_10($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_10($this, newCapacity);
    $this.keys_1 = longArray(newCapacity);
    $this.values_1 = new Int32Array(newCapacity);
  }
  function initializeMetadata_10($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableLongIntMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_10($this);
  }
  function initializeGrowth_10($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findInsertIndex_6($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index].equals(key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_10($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_10($this);
      index_0 = findFirstAvailableSlot_10($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableLongIntMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_10($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_10($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_10($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_10($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_10($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_10($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousKey.hashCode(), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_10($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableLongIntMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_10($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableLongIntMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    LongIntMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableLongIntMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_10(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableLongIntMap).getOrPut_bwxezu_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    var tmp;
    if (index < 0) {
      var defValue = defaultValue();
      this.put_vzrvft_k$(key, defValue);
      tmp = defValue;
    } else {
      tmp = this.values_1[index];
    }
    return tmp;
  };
  protoOf(MutableLongIntMap).set_6hyrg_k$ = function (key, value) {
    var index = findInsertIndex_6(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableLongIntMap).put_vzrvft_k$ = function (key, value) {
    this.set_6hyrg_k$(key, value);
  };
  protoOf(MutableLongIntMap).put_pq1u9t_k$ = function (key, value, default_0) {
    var index = findInsertIndex_6(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableLongIntMap).putAll_81bkcu_k$ = function (from) {
    // Inline function 'androidx.collection.LongIntMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongIntMap.putAll.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  this.set_6hyrg_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongIntMap).plusAssign_3b89dj_k$ = function (from) {
    return this.putAll_81bkcu_k$(from);
  };
  protoOf(MutableLongIntMap).remove_k3yns6_k$ = function (key) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableLongIntMap).remove_rxyhua_k$ = function (key, value) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index >= 0) {
      if (this.values_1[index] === value) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableLongIntMap).removeIf_mmg31m_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableLongIntMap.removeIf.<anonymous>' call
                  if (predicate(this.keys_1[index], this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongIntMap).minusAssign_elja0x_k$ = function (key) {
    this.remove_k3yns6_k$(key);
  };
  protoOf(MutableLongIntMap).minusAssign_dwb62r_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_k3yns6_k$(key);
    }
  };
  protoOf(MutableLongIntMap).minusAssign_l8y4g8_k$ = function (keys) {
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongIntMap.minusAssign.<anonymous>' call
                  var key = k[index];
                  this.remove_k3yns6_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongIntMap).minusAssign_wmfrn6_k$ = function (keys) {
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableLongIntMap.minusAssign.<anonymous>' call
        var key = content[i];
        this.remove_k3yns6_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableLongIntMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableLongIntMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  };
  protoOf(MutableLongIntMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_10(this);
  };
  protoOf(MutableLongIntMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_10(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function LongIntMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyLongArray();
    this.values_1 = get_EmptyIntArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(LongIntMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(LongIntMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(LongIntMap).set_keys_hjxm4r_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(LongIntMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(LongIntMap).set_values_sv2zhg_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(LongIntMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(LongIntMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(LongIntMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongIntMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongIntMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(LongIntMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(LongIntMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(LongIntMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongIntMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongIntMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongIntMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongIntMap).get_ugtq3c_k$ = function (key) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('Cannot find value for key ' + key.toString());
    }
    return this.values_1[index];
  };
  protoOf(LongIntMap).getOrDefault_nfgj4i_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(LongIntMap).getOrElse_gosp9i_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index < 0) {
      return defaultValue();
    }
    return this.values_1[index];
  };
  protoOf(LongIntMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(LongIntMap).forEach_aic2ta_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                  block(k[index], v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongIntMap).forEachKey_jq7cta_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongIntMap).forEachValue_e6u2sa_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongIntMap).all_rfso12_k$ = function (predicate) {
    // Inline function 'androidx.collection.LongIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongIntMap.all.<anonymous>' call
                  if (!predicate(k[index], v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongIntMap).any_1oxvbl_k$ = function (predicate) {
    // Inline function 'androidx.collection.LongIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongIntMap.any.<anonymous>' call
                  if (predicate(k[index], v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(LongIntMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(LongIntMap).count_u4qv2s_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.LongIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongIntMap.count.<anonymous>' call
                  if (predicate(k[index], v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(LongIntMap).contains_aa6tld_k$ = function (key) {
    return this.findKeyIndex_56hnvi_k$(key) >= 0;
  };
  protoOf(LongIntMap).containsKey_sk2ur2_k$ = function (key) {
    return this.findKeyIndex_56hnvi_k$(key) >= 0;
  };
  protoOf(LongIntMap).containsValue_6h54sm_k$ = function (value) {
    // Inline function 'androidx.collection.LongIntMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.LongIntMap.containsValue.<anonymous>' call
                  if (value === v[index])
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(LongIntMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongIntMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongIntMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_8gl4h8_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_uppzia_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongIntMap).joinToString$default_ii8wet_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(LongIntMap).joinToString_obxyg3_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongIntMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongIntMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongIntMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.LongIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongIntMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  hash = hash + (key.hashCode() ^ value) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(LongIntMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LongIntMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.LongIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongIntMap.equals.<anonymous>' call
                  var key = k[index];
                  if (!(v[index] === other.get_ugtq3c_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongIntMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.LongIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.LongIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongIntMap.toString.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  s.append_8gl4h8_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_uppzia_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(LongIntMap).findKeyIndex_56hnvi_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index].equals(key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_LongIntMap_kt_ls11w5;
  function _init_properties_LongIntMap_kt__k42y1() {
    if (!properties_initialized_LongIntMap_kt_ls11w5) {
      properties_initialized_LongIntMap_kt_ls11w5 = true;
      EmptyLongIntMap = new MutableLongIntMap(0);
    }
  }
  function get_EmptyLongList() {
    _init_properties_LongList_kt__n6r5ba();
    return EmptyLongList;
  }
  var EmptyLongList;
  function LongList(initialCapacity) {
    var tmp = this;
    var tmp_0;
    if (initialCapacity === 0) {
      tmp_0 = get_EmptyLongArray();
    } else {
      tmp_0 = longArray(initialCapacity);
    }
    tmp.content_1 = tmp_0;
    this._size_1 = 0;
  }
  protoOf(LongList).set_content_u2y49s_k$ = function (_set____db54di) {
    this.content_1 = _set____db54di;
  };
  protoOf(LongList).get_content_h02jrk_k$ = function () {
    return this.content_1;
  };
  protoOf(LongList).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(LongList).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(LongList).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(LongList).get_lastIndex_tk4gr1_k$ = function () {
    return this._size_1 - 1 | 0;
  };
  protoOf(LongList).get_indices_xelk8u_k$ = function () {
    return until(0, this._size_1);
  };
  protoOf(LongList).none_20lko_k$ = function () {
    return this.isEmpty_y1axqb_k$();
  };
  protoOf(LongList).any_22ng_k$ = function () {
    return this.isNotEmpty_cjxbwk_k$();
  };
  protoOf(LongList).any_18tbxg_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.LongList.any.<anonymous>' call
        if (predicate(content[i])) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(LongList).reversedAny_c5dtoi_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.LongList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.LongList.reversedAny.<anonymous>' call
        if (predicate(content[i])) {
          return true;
        }
      }
       while (0 <= inductionVariable);
    return false;
  };
  protoOf(LongList).contains_aa6tld_k$ = function (element) {
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.LongList.contains.<anonymous>' call
        if (content[i].equals(element)) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(LongList).containsAll_bv7wdd_k$ = function (elements) {
    // Inline function 'androidx.collection.LongList.indices' call
    var progression = until(0, elements._size_1);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!this.contains_aa6tld_k$(elements.get_c1px32_k$(i)))
          return false;
      }
       while (!(i === last));
    return true;
  };
  protoOf(LongList).count_1kgzrj_k$ = function () {
    return this._size_1;
  };
  protoOf(LongList).count_d0jhh5_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var count = 0;
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.LongList.count.<anonymous>' call
        if (predicate(content[i])) {
          count = count + 1 | 0;
        }
      }
       while (inductionVariable < last);
    return count;
  };
  protoOf(LongList).first_1m0hio_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('LongList is empty.');
    }
    return this.content_1[0];
  };
  protoOf(LongList).first_xvxwmg_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.LongList.first.<anonymous>' call
        var item = content[i];
        if (predicate(item))
          return item;
      }
       while (inductionVariable < last);
    throw NoSuchElementException_init_$Create$('LongList contains no element matching the predicate.');
  };
  protoOf(LongList).fold_he6s02_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.LongList.fold.<anonymous>' call
        acc = operation(acc, content[i]);
      }
       while (inductionVariable < last);
    return acc;
  };
  protoOf(LongList).foldIndexed_1p89eq_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.LongList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.LongList.foldIndexed.<anonymous>' call
        acc = operation(i, acc, content[i]);
      }
       while (inductionVariable < last);
    return acc;
  };
  protoOf(LongList).foldRight_rwgkh0_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.LongList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.LongList.foldRight.<anonymous>' call
        acc = operation(content[i], acc);
      }
       while (0 <= inductionVariable);
    return acc;
  };
  protoOf(LongList).foldRightIndexed_l1nohw_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.LongList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.LongList.foldRightIndexed.<anonymous>' call
        acc = operation(i, content[i], acc);
      }
       while (0 <= inductionVariable);
    return acc;
  };
  protoOf(LongList).forEach_urlxnx_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        block(content[i]);
      }
       while (inductionVariable < last);
  };
  protoOf(LongList).forEachIndexed_z58bt5_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        block(i, content[i]);
      }
       while (inductionVariable < last);
  };
  protoOf(LongList).forEachReversed_rzbpbp_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        block(content[i]);
      }
       while (0 <= inductionVariable);
  };
  protoOf(LongList).forEachReversedIndexed_n8nxt7_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        block(i, content[i]);
      }
       while (0 <= inductionVariable);
  };
  protoOf(LongList).get_c1px32_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.LongList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    return this.content_1[index];
  };
  protoOf(LongList).elementAt_i1qdw7_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.LongList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    return this.content_1[index];
  };
  protoOf(LongList).elementAtOrElse_h49miw_k$ = function (index, defaultValue) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      return defaultValue(index);
    }
    return this.content_1[index];
  };
  protoOf(LongList).indexOf_p1ql2z_k$ = function (element) {
    // Inline function 'androidx.collection.LongList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.LongList.indexOf.<anonymous>' call
        var item = content[i];
        if (element.equals(item)) {
          return i;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(LongList).indexOfFirst_n16bof_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.LongList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.LongList.indexOfFirst.<anonymous>' call
        if (predicate(content[i])) {
          return i;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(LongList).indexOfLast_5x8ibt_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.LongList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.LongList.indexOfLast.<anonymous>' call
        if (predicate(content[i])) {
          return i;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  };
  protoOf(LongList).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongList).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongList).last_1z1cm_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('LongList is empty.');
    }
    var tmp = this.content_1;
    // Inline function 'androidx.collection.LongList.lastIndex' call
    return tmp[this._size_1 - 1 | 0];
  };
  protoOf(LongList).last_urzrn6_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.LongList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.LongList.last.<anonymous>' call
        var item = content[i];
        if (predicate(item)) {
          return item;
        }
      }
       while (0 <= inductionVariable);
    throw NoSuchElementException_init_$Create$('LongList contains no element matching the predicate.');
  };
  protoOf(LongList).lastIndexOf_2w3ekb_k$ = function (element) {
    // Inline function 'androidx.collection.LongList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.LongList.lastIndexOf.<anonymous>' call
        if (content[i].equals(element)) {
          return i;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  };
  protoOf(LongList).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongList.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      // Inline function 'androidx.collection.LongList.forEachIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content = this.content_1;
      var inductionVariable = 0;
      var last = this._size_1;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.collection.LongList.joinToString.<anonymous>.<anonymous>' call
          var element = content[i];
          if (i === limit) {
            this_0.append_jgojdo_k$(truncated);
            break $l$block;
          }
          if (!(i === 0)) {
            this_0.append_jgojdo_k$(separator);
          }
          this_0.append_8gl4h8_k$(element);
        }
         while (inductionVariable < last);
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongList).joinToString$default_f9x4my_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(LongList).joinToString_w5qws2_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongList.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      // Inline function 'androidx.collection.LongList.forEachIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content = this.content_1;
      var inductionVariable = 0;
      var last = this._size_1;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.collection.LongList.joinToString.<anonymous>.<anonymous>' call
          var element = content[i];
          if (i === limit) {
            this_0.append_jgojdo_k$(truncated);
            break $l$block;
          }
          if (!(i === 0)) {
            this_0.append_jgojdo_k$(separator);
          }
          this_0.append_jgojdo_k$(transform(element));
        }
         while (inductionVariable < last);
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongList).hashCode = function () {
    var hashCode = 0;
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.LongList.hashCode.<anonymous>' call
        var element = content[i];
        hashCode = hashCode + imul(31, element.hashCode()) | 0;
      }
       while (inductionVariable < last);
    return hashCode;
  };
  protoOf(LongList).equals = function (other) {
    var tmp;
    if (!(other instanceof LongList)) {
      tmp = true;
    } else {
      tmp = !(other._size_1 === this._size_1);
    }
    if (tmp) {
      return false;
    }
    var content = this.content_1;
    var otherContent = other.content_1;
    // Inline function 'androidx.collection.LongList.indices' call
    var progression = until(0, this._size_1);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!content[i].equals(otherContent[i])) {
          return false;
        }
      }
       while (!(i === last));
    return true;
  };
  protoOf(LongList).toString = function () {
    return this.joinToString$default_f9x4my_k$(VOID, '[', ']');
  };
  function MutableLongList(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? 16 : initialCapacity;
    LongList.call(this, initialCapacity);
  }
  protoOf(MutableLongList).get_capacity_wxbgcd_k$ = function () {
    return this.content_1.length;
  };
  protoOf(MutableLongList).add_tgozn1_k$ = function (element) {
    this.ensureCapacity_wr7980_k$(this._size_1 + 1 | 0);
    this.content_1[this._size_1] = element;
    this._size_1 = this._size_1 + 1 | 0;
    return true;
  };
  protoOf(MutableLongList).add_xminx5_k$ = function (index, element) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    this.ensureCapacity_wr7980_k$(this._size_1 + 1 | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + 1 | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, destinationOffset, index, endIndex);
    }
    content[index] = element;
    this._size_1 = this._size_1 + 1 | 0;
  };
  protoOf(MutableLongList).addAll_ohojn0_k$ = function (index, elements) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    // Inline function 'kotlin.collections.isEmpty' call
    if (elements.length === 0)
      return false;
    this.ensureCapacity_wr7980_k$(this._size_1 + elements.length | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements.length | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.copyInto' call
    var endIndex_0 = elements.length;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp_0 = elements;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp_0, content, index, 0, endIndex_0);
    this._size_1 = this._size_1 + elements.length | 0;
    return true;
  };
  protoOf(MutableLongList).addAll_vjtayf_k$ = function (index, elements) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    if (elements.isEmpty_y1axqb_k$())
      return false;
    this.ensureCapacity_wr7980_k$(this._size_1 + elements._size_1 | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements._size_1 | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = elements.content_1;
    var endIndex_0 = elements._size_1;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp_0 = this_0;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp_0, content, index, 0, endIndex_0);
    this._size_1 = this._size_1 + elements._size_1 | 0;
    return true;
  };
  protoOf(MutableLongList).addAll_z5e2ht_k$ = function (elements) {
    return this.addAll_vjtayf_k$(this._size_1, elements);
  };
  protoOf(MutableLongList).addAll_vsnjho_k$ = function (elements) {
    return this.addAll_ohojn0_k$(this._size_1, elements);
  };
  protoOf(MutableLongList).plusAssign_j3ojjs_k$ = function (elements) {
    this.addAll_vjtayf_k$(this._size_1, elements);
  };
  protoOf(MutableLongList).plusAssign_eu4p4d_k$ = function (elements) {
    this.addAll_ohojn0_k$(this._size_1, elements);
  };
  protoOf(MutableLongList).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
  };
  protoOf(MutableLongList).trim_d6sije_k$ = function (minCapacity) {
    // Inline function 'kotlin.comparisons.maxOf' call
    var b = this._size_1;
    var minSize = Math.max(minCapacity, b);
    // Inline function 'androidx.collection.MutableLongList.capacity' call
    if (this.content_1.length > minSize) {
      this.content_1 = copyOf_1(this.content_1, minSize);
    }
  };
  protoOf(MutableLongList).trim$default_zi3smu_k$ = function (minCapacity, $super) {
    minCapacity = minCapacity === VOID ? this._size_1 : minCapacity;
    var tmp;
    if ($super === VOID) {
      this.trim_d6sije_k$(minCapacity);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.trim_d6sije_k$.call(this, minCapacity);
    }
    return tmp;
  };
  protoOf(MutableLongList).ensureCapacity_wr7980_k$ = function (capacity) {
    var oldContent = this.content_1;
    if (oldContent.length < capacity) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = imul(oldContent.length, 3) / 2 | 0;
      var newSize = Math.max(capacity, b);
      this.content_1 = copyOf_1(oldContent, newSize);
    }
  };
  protoOf(MutableLongList).plusAssign_p5ji1h_k$ = function (element) {
    this.add_tgozn1_k$(element);
  };
  protoOf(MutableLongList).minusAssign_elja0x_k$ = function (element) {
    this.remove_do4l5i_k$(element);
  };
  protoOf(MutableLongList).remove_do4l5i_k$ = function (element) {
    var index = this.indexOf_p1ql2z_k$(element);
    if (index >= 0) {
      this.removeAt_6niowx_k$(index);
      return true;
    }
    return false;
  };
  protoOf(MutableLongList).removeAll_mmfhyn_k$ = function (elements) {
    var initialSize = this._size_1;
    var inductionVariable = 0;
    var last = elements.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.remove_do4l5i_k$(elements[i]);
      }
       while (inductionVariable <= last);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableLongList).removeAll_7ekov8_k$ = function (elements) {
    var initialSize = this._size_1;
    var inductionVariable = 0;
    // Inline function 'androidx.collection.LongList.lastIndex' call
    var last = elements._size_1 - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.remove_do4l5i_k$(elements.get_c1px32_k$(i));
      }
       while (!(i === last));
    return !(initialSize === this._size_1);
  };
  protoOf(MutableLongList).minusAssign_dwb62r_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableLongList.minusAssign.<anonymous>' call
      this.remove_do4l5i_k$(element);
    }
  };
  protoOf(MutableLongList).minusAssign_wmfrn6_k$ = function (elements) {
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = elements.content_1;
    var inductionVariable = 0;
    var last = elements._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableLongList.minusAssign.<anonymous>' call
        var element = content[i];
        this.remove_do4l5i_k$(element);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableLongList).removeAt_6niowx_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.LongList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    var content = this.content_1;
    var item = content[index];
    // Inline function 'androidx.collection.LongList.lastIndex' call
    if (!(index === (this._size_1 - 1 | 0))) {
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex = index + 1 | 0;
      var endIndex = this._size_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = content;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, content, index, startIndex, endIndex);
    }
    this._size_1 = this._size_1 - 1 | 0;
    return item;
  };
  protoOf(MutableLongList).removeRange_sm1kzt_k$ = function (start, end) {
    if (!(0 <= start ? start <= this._size_1 : false) ? true : !(0 <= end ? end <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Start (' + start + ') and end (' + end + ') must be in 0..' + this._size_1);
    }
    if (end < start) {
      throw IllegalArgumentException_init_$Create$('Start (' + start + ') is more than end (' + end + ')');
    }
    if (!(end === start)) {
      if (end < this._size_1) {
        // Inline function 'kotlin.collections.copyInto' call
        var this_0 = this.content_1;
        var destination = this.content_1;
        var endIndex = this._size_1;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var tmp = this_0;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        arrayCopy(tmp, destination, start, end, endIndex);
      }
      this._size_1 = this._size_1 - (end - start | 0) | 0;
    }
  };
  protoOf(MutableLongList).retainAll_w2qo9c_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.LongList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var item = content[i];
        var tmp$ret$2;
        $l$block: {
          // Inline function 'kotlin.collections.indexOfFirst' call
          var inductionVariable_0 = 0;
          var last = elements.length - 1 | 0;
          if (inductionVariable_0 <= last)
            do {
              var index = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.MutableLongList.retainAll.<anonymous>' call
              if (elements[index].equals(item)) {
                tmp$ret$2 = index;
                break $l$block;
              }
            }
             while (inductionVariable_0 <= last);
          tmp$ret$2 = -1;
        }
        if (tmp$ret$2 < 0) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableLongList).retainAll_2fa2v9_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.LongList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var item = content[i];
        if (!elements.contains_aa6tld_k$(item)) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableLongList).set_iylvco_k$ = function (index, element) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.LongList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('set index ' + index + ' must be between 0 .. ' + tmp$ret$0);
    }
    var content = this.content_1;
    var old = content[index];
    content[index] = element;
    return old;
  };
  protoOf(MutableLongList).sort_6ihik2_k$ = function () {
    sort_1(this.content_1, 0, this._size_1);
  };
  protoOf(MutableLongList).sortDescending_e29tp6_k$ = function () {
    sortDescending_1(this.content_1, 0, this._size_1);
  };
  var properties_initialized_LongList_kt_ht4ce4;
  function _init_properties_LongList_kt__n6r5ba() {
    if (!properties_initialized_LongList_kt_ht4ce4) {
      properties_initialized_LongList_kt_ht4ce4 = true;
      EmptyLongList = new MutableLongList(0);
    }
  }
  function get_EmptyLongLongMap() {
    _init_properties_LongLongMap_kt__e9gtce();
    return EmptyLongLongMap;
  }
  var EmptyLongLongMap;
  function _set_growthLimit__kpjhht_11($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_11($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_11($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_11($this, newCapacity);
    $this.keys_1 = longArray(newCapacity);
    $this.values_1 = longArray(newCapacity);
  }
  function initializeMetadata_11($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableLongLongMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_11($this);
  }
  function initializeGrowth_11($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findInsertIndex_7($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index].equals(key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_11($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_11($this);
      index_0 = findFirstAvailableSlot_11($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableLongLongMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_11($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_11($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_11($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_11($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_11($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_11($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousKey.hashCode(), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_11($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableLongLongMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_11($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableLongLongMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    LongLongMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableLongLongMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_11(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableLongLongMap).getOrPut_6ezqoo_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    var tmp;
    if (index < 0) {
      var defValue = defaultValue();
      this.put_3mlewx_k$(key, defValue);
      tmp = defValue;
    } else {
      tmp = this.values_1[index];
    }
    return tmp;
  };
  protoOf(MutableLongLongMap).set_wtn3u6_k$ = function (key, value) {
    var index = findInsertIndex_7(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableLongLongMap).put_3mlewx_k$ = function (key, value) {
    this.set_wtn3u6_k$(key, value);
  };
  protoOf(MutableLongLongMap).put_yaassh_k$ = function (key, value, default_0) {
    var index = findInsertIndex_7(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableLongLongMap).putAll_4rtbx5_k$ = function (from) {
    // Inline function 'androidx.collection.LongLongMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongLongMap.putAll.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  this.set_wtn3u6_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongLongMap).plusAssign_d6zgw_k$ = function (from) {
    return this.putAll_4rtbx5_k$(from);
  };
  protoOf(MutableLongLongMap).remove_k3yns6_k$ = function (key) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableLongLongMap).remove_qj3g3o_k$ = function (key, value) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index >= 0) {
      if (this.values_1[index].equals(value)) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableLongLongMap).removeIf_hif62y_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableLongLongMap.removeIf.<anonymous>' call
                  if (predicate(this.keys_1[index], this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongLongMap).minusAssign_elja0x_k$ = function (key) {
    this.remove_k3yns6_k$(key);
  };
  protoOf(MutableLongLongMap).minusAssign_dwb62r_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_k3yns6_k$(key);
    }
  };
  protoOf(MutableLongLongMap).minusAssign_l8y4g8_k$ = function (keys) {
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongLongMap.minusAssign.<anonymous>' call
                  var key = k[index];
                  this.remove_k3yns6_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongLongMap).minusAssign_wmfrn6_k$ = function (keys) {
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableLongLongMap.minusAssign.<anonymous>' call
        var key = content[i];
        this.remove_k3yns6_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableLongLongMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableLongLongMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  };
  protoOf(MutableLongLongMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_11(this);
  };
  protoOf(MutableLongLongMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_11(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function LongLongMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyLongArray();
    this.values_1 = get_EmptyLongArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(LongLongMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(LongLongMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(LongLongMap).set_keys_hjxm4r_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(LongLongMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(LongLongMap).set_values_h45qot_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(LongLongMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(LongLongMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(LongLongMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongLongMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongLongMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(LongLongMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(LongLongMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(LongLongMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongLongMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongLongMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongLongMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongLongMap).get_ugtq3c_k$ = function (key) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('Cannot find value for key ' + key.toString());
    }
    return this.values_1[index];
  };
  protoOf(LongLongMap).getOrDefault_t7y3mw_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(LongLongMap).getOrElse_ccph24_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_56hnvi_k$(key);
    if (index < 0) {
      return defaultValue();
    }
    return this.values_1[index];
  };
  protoOf(LongLongMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(LongLongMap).forEach_gkoiz8_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                  block(k[index], v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongLongMap).forEachKey_jq7cta_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongLongMap).forEachValue_qhpe6o_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongLongMap).all_htklkq_k$ = function (predicate) {
    // Inline function 'androidx.collection.LongLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongLongMap.all.<anonymous>' call
                  if (!predicate(k[index], v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongLongMap).any_ylups5_k$ = function (predicate) {
    // Inline function 'androidx.collection.LongLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongLongMap.any.<anonymous>' call
                  if (predicate(k[index], v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(LongLongMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(LongLongMap).count_5d8l2g_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.LongLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongLongMap.count.<anonymous>' call
                  if (predicate(k[index], v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(LongLongMap).contains_aa6tld_k$ = function (key) {
    return this.findKeyIndex_56hnvi_k$(key) >= 0;
  };
  protoOf(LongLongMap).containsKey_sk2ur2_k$ = function (key) {
    return this.findKeyIndex_56hnvi_k$(key) >= 0;
  };
  protoOf(LongLongMap).containsValue_38h4m4_k$ = function (value) {
    // Inline function 'androidx.collection.LongLongMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.LongLongMap.containsValue.<anonymous>' call
                  var v_0 = v[index];
                  if (value.equals(v_0))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(LongLongMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongLongMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongLongMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_8gl4h8_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_8gl4h8_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongLongMap).joinToString$default_mwlq00_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(LongLongMap).joinToString_y25fwt_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongLongMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongLongMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongLongMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.LongLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongLongMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  hash = hash + (key.hashCode() ^ value.hashCode()) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(LongLongMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LongLongMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.LongLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongLongMap.equals.<anonymous>' call
                  var key = k[index];
                  if (!v[index].equals(other.get_ugtq3c_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongLongMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.LongLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.LongLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongLongMap.toString.<anonymous>' call
                  var key = k[index];
                  var value = v[index];
                  s.append_8gl4h8_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_8gl4h8_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(LongLongMap).findKeyIndex_56hnvi_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index].equals(key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_LongLongMap_kt_huzvro;
  function _init_properties_LongLongMap_kt__e9gtce() {
    if (!properties_initialized_LongLongMap_kt_huzvro) {
      properties_initialized_LongLongMap_kt_huzvro = true;
      EmptyLongLongMap = new MutableLongLongMap(0);
    }
  }
  function get_EmptyLongObjectMap() {
    _init_properties_LongObjectMap_kt__gzp4kx();
    return EmptyLongObjectMap;
  }
  var EmptyLongObjectMap;
  function _set_growthLimit__kpjhht_12($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_12($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_12($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_12($this, newCapacity);
    $this.keys_1 = longArray(newCapacity);
    var tmp_0 = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_0.values_1 = fillArrayVal(Array(newCapacity), null);
  }
  function initializeMetadata_12($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableLongObjectMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_12($this);
  }
  function initializeGrowth_12($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findAbsoluteInsertIndex_3($this, key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.keys_1[index].equals(key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_12($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_12($this);
      index_0 = findFirstAvailableSlot_12($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableLongObjectMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return index_0;
  }
  function findFirstAvailableSlot_12($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_12($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_12($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_12($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_12($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_12($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousKey.hashCode(), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_12($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableLongObjectMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_12($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableLongObjectMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    LongObjectMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableLongObjectMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_12(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableLongObjectMap).getOrPut_34e6uk_k$ = function (key, defaultValue) {
    var tmp0_elvis_lhs = this.get_ugtq3c_k$(key);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = defaultValue();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableLongObjectMap.getOrPut.<anonymous>' call
      this.set_r09enj_k$(key, this_0);
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(MutableLongObjectMap).set_r09enj_k$ = function (key, value) {
    var index = findAbsoluteInsertIndex_3(this, key);
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableLongObjectMap).put_64zbwu_k$ = function (key, value) {
    var index = findAbsoluteInsertIndex_3(this, key);
    var oldValue = this.values_1[index];
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return (oldValue == null ? true : !(oldValue == null)) ? oldValue : THROW_CCE();
  };
  protoOf(MutableLongObjectMap).putAll_eqsxu0_k$ = function (from) {
    // Inline function 'androidx.collection.LongObjectMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongObjectMap.putAll.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.set_r09enj_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongObjectMap).plusAssign_9tersh_k$ = function (from) {
    return this.putAll_eqsxu0_k$(from);
  };
  protoOf(MutableLongObjectMap).remove_do4l5i_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key.hashCode(), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index].equals(key)) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      return this.removeValueAt_lclkw8_k$(index_0);
    }
    return null;
  };
  protoOf(MutableLongObjectMap).remove_rugzj1_k$ = function (key, value) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key.hashCode(), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index].equals(key)) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      if (equals(this.values_1[index_0], value)) {
        this.removeValueAt_lclkw8_k$(index_0);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableLongObjectMap).removeIf_ayrgke_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableLongObjectMap.removeIf.<anonymous>' call
                  var tmp = this.keys_1[index];
                  var tmp_0 = this.values_1[index];
                  if (predicate(tmp, (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE())) {
                    this.removeValueAt_lclkw8_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongObjectMap).minusAssign_elja0x_k$ = function (key) {
    this.remove_do4l5i_k$(key);
  };
  protoOf(MutableLongObjectMap).minusAssign_dwb62r_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_do4l5i_k$(key);
    }
  };
  protoOf(MutableLongObjectMap).minusAssign_l8y4g8_k$ = function (keys) {
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongObjectMap.minusAssign.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongObjectMap.minusAssign' call
                  var key = k[index];
                  this.remove_do4l5i_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongObjectMap).minusAssign_wmfrn6_k$ = function (keys) {
    // Inline function 'androidx.collection.LongList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableLongObjectMap.minusAssign.<anonymous>' call
        // Inline function 'androidx.collection.MutableLongObjectMap.minusAssign' call
        var key = content[i];
        this.remove_do4l5i_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableLongObjectMap).removeValueAt_lclkw8_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableLongObjectMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var oldValue = this.values_1[index];
    this.values_1[index] = null;
    return (oldValue == null ? true : !(oldValue == null)) ? oldValue : THROW_CCE();
  };
  protoOf(MutableLongObjectMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    fill_0(this.values_1, null, 0, this._capacity_1);
    initializeGrowth_12(this);
  };
  protoOf(MutableLongObjectMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_12(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function LongObjectMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EmptyLongArray();
    this.values_1 = get_EMPTY_OBJECTS();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(LongObjectMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(LongObjectMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(LongObjectMap).set_keys_hjxm4r_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(LongObjectMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(LongObjectMap).set_values_y0cw4b_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(LongObjectMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(LongObjectMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(LongObjectMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongObjectMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongObjectMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(LongObjectMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(LongObjectMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(LongObjectMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongObjectMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongObjectMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongObjectMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongObjectMap).get_ugtq3c_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key.hashCode(), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index].equals(key)) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    var tmp_0;
    if (index_0 >= 0) {
      var tmp_1 = this.values_1[index_0];
      tmp_0 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
    } else {
      tmp_0 = null;
    }
    return tmp_0;
  };
  protoOf(LongObjectMap).getOrDefault_yq8ls7_k$ = function (key, defaultValue) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key.hashCode(), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index].equals(key)) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      var tmp_0 = this.values_1[index_0];
      return (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    }
    return defaultValue;
  };
  protoOf(LongObjectMap).getOrElse_f9n3e8_k$ = function (key, defaultValue) {
    var tmp0_elvis_lhs = this.get_ugtq3c_k$(key);
    return tmp0_elvis_lhs == null ? defaultValue() : tmp0_elvis_lhs;
  };
  protoOf(LongObjectMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(LongObjectMap).forEach_insjyw_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                  var tmp = k[index];
                  var tmp_0 = v[index];
                  block(tmp, (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongObjectMap).forEachKey_jq7cta_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEachKey.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongObjectMap).forEachValue_h2meh0_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEachValue.<anonymous>' call
                  var tmp = v[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongObjectMap).all_li881e_k$ = function (predicate) {
    // Inline function 'androidx.collection.LongObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongObjectMap.all.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  if (!predicate(key, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongObjectMap).any_5likex_k$ = function (predicate) {
    // Inline function 'androidx.collection.LongObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongObjectMap.any.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  if (predicate(key, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(LongObjectMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(LongObjectMap).count_at47cs_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.LongObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongObjectMap.count.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  if (predicate(key, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(LongObjectMap).contains_aa6tld_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key.hashCode(), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index].equals(key)) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    return tmp$ret$9 >= 0;
  };
  protoOf(LongObjectMap).containsKey_sk2ur2_k$ = function (key) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(key.hashCode(), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.keys_1[index].equals(key)) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    return tmp$ret$9 >= 0;
  };
  protoOf(LongObjectMap).containsValue_yf2ykl_k$ = function (value) {
    // Inline function 'androidx.collection.LongObjectMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.LongObjectMap.containsValue.<anonymous>' call
                  var tmp = v[index];
                  var v_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (equals(value, v_0))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(LongObjectMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongObjectMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongObjectMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var tmp = v[index_0];
                    var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_8gl4h8_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_t8pm91_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongObjectMap).joinToString$default_m3pzrv_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(LongObjectMap).joinToString_1a18qh_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongObjectMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongObjectMap.joinToString.<anonymous>.<anonymous>' call
                    var key = k[index_0];
                    var tmp = v[index_0];
                    var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongObjectMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.LongObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongObjectMap.hashCode.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = hash;
                  var tmp_1 = key.hashCode();
                  // Inline function 'kotlin.hashCode' call
                  var tmp1_elvis_lhs = value == null ? null : hashCode(value);
                  hash = tmp_0 + (tmp_1 ^ (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs)) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(LongObjectMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LongObjectMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    // Inline function 'androidx.collection.LongObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongObjectMap.equals.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (value == null) {
                    if (!(other.get_ugtq3c_k$(key) == null) ? true : !other.containsKey_sk2ur2_k$(key)) {
                      return false;
                    }
                  } else if (!equals(value, other.get_ugtq3c_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongObjectMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.LongObjectMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.LongObjectMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.LongObjectMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongObjectMap.toString.<anonymous>' call
                  var key = k[index];
                  var tmp = v[index];
                  var value = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  s.append_8gl4h8_k$(key);
                  s.append_22ad7x_k$('=');
                  s.append_t8pm91_k$(value === this ? '(this)' : value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(LongObjectMap).findKeyIndex_56hnvi_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(key.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.keys_1[index].equals(key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_LongObjectMap_kt_wv4qxd;
  function _init_properties_LongObjectMap_kt__gzp4kx() {
    if (!properties_initialized_LongObjectMap_kt_wv4qxd) {
      properties_initialized_LongObjectMap_kt_wv4qxd = true;
      EmptyLongObjectMap = new MutableLongObjectMap(0);
    }
  }
  function get_EmptyLongSet() {
    _init_properties_LongSet_kt__wt9fxo();
    return EmptyLongSet;
  }
  var EmptyLongSet;
  function get_EmptyLongArray() {
    _init_properties_LongSet_kt__wt9fxo();
    return EmptyLongArray;
  }
  var EmptyLongArray;
  function LongSet() {
    this.metadata_1 = get_EmptyGroup();
    this.elements_1 = get_EmptyLongArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(LongSet).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(LongSet).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(LongSet).set_elements_anli9k_k$ = function (_set____db54di) {
    this.elements_1 = _set____db54di;
  };
  protoOf(LongSet).get_elements_vxwh8g_k$ = function () {
    return this.elements_1;
  };
  protoOf(LongSet).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(LongSet).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongSet).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(LongSet).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(LongSet).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(LongSet).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(LongSet).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongSet).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongSet).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(LongSet).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(LongSet).first_1m0hio_k$ = function () {
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongSet.first.<anonymous>' call
                  return k[index];
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    throw NoSuchElementException_init_$Create$('The LongSet is empty');
  };
  protoOf(LongSet).first_xvxwmg_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongSet.first.<anonymous>' call
                  var it = k[index];
                  if (predicate(it))
                    return it;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    throw NoSuchElementException_init_$Create$('Could not find a match');
  };
  protoOf(LongSet).forEachIndex_oi22yj_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(LongSet).forEach_urlxnx_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  block(k[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(LongSet).all_h1895l_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongSet.all.<anonymous>' call
                  if (!predicate(k[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongSet).any_18tbxg_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongSet.any.<anonymous>' call
                  if (predicate(k[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(LongSet).count_1kgzrj_k$ = function () {
    return this._size_1;
  };
  protoOf(LongSet).count_d0jhh5_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var count = 0;
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongSet.count.<anonymous>' call
                  if (predicate(k[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(LongSet).contains_aa6tld_k$ = function (element) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(element.hashCode(), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.elements_1[index].equals(element)) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    return tmp$ret$9 >= 0;
  };
  protoOf(LongSet).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongSet.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongSet.forEach' call
      // Inline function 'kotlin.contracts.contract' call
      var k = this.elements_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongSet.forEachIndex' call
        // Inline function 'kotlin.contracts.contract' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongSet.joinToString.<anonymous>.<anonymous>' call
                    var element = k[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_8gl4h8_k$(element);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongSet).joinToString$default_5i2s5e_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(LongSet).joinToString_w5qws2_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.LongSet.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.LongSet.forEach' call
      // Inline function 'kotlin.contracts.contract' call
      var k = this.elements_1;
      $l$block_0: {
        // Inline function 'androidx.collection.LongSet.forEachIndex' call
        // Inline function 'kotlin.contracts.contract' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.LongSet.joinToString.<anonymous>.<anonymous>' call
                    var element = k[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(element));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(LongSet).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongSet.hashCode.<anonymous>' call
                  hash = hash + k[index].hashCode() | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(LongSet).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LongSet)) {
      return false;
    }
    if (!(other._size_1 === this._size_1)) {
      return false;
    }
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.LongSet.equals.<anonymous>' call
                  var element = k[index];
                  if (!other.contains_aa6tld_k$(element)) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(LongSet).toString = function () {
    return this.joinToString$default_5i2s5e_k$(VOID, '[', ']');
  };
  protoOf(LongSet).findElementIndex_ct47nl_k$ = function (element) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(element.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (this.elements_1[index].equals(element)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  function hash_1(k) {
    _init_properties_LongSet_kt__wt9fxo();
    var hash = imul(k.hashCode(), get_MurmurHashC1());
    return hash ^ hash << 16;
  }
  function _set_growthLimit__kpjhht_13($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_13($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_13($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_13($this, newCapacity);
    $this.elements_1 = longArray(newCapacity);
  }
  function initializeMetadata_13($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableLongSet.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_13($this);
  }
  function initializeGrowth_13($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function removeElementAt_1($this, index) {
    $this._size_1 = $this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableLongSet.writeMetadata' call
    var value = get_Deleted();
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function findAbsoluteInsertIndex_4($this, element) {
    // Inline function 'androidx.collection.hash' call
    var hash = imul(element.hashCode(), get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$4);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if ($this.elements_1[index].equals(element)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_13($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_13($this);
      index_0 = findFirstAvailableSlot_13($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableLongSet.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return index_0;
  }
  function findFirstAvailableSlot_13($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_13($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_13($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_13($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_13($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousElements = $this.elements_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_13($this, newCapacity);
    var newElements = $this.elements_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousElement = previousElements[i];
          // Inline function 'androidx.collection.hash' call
          var hash = imul(previousElement.hashCode(), get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$3 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_13($this, tmp$ret$3);
          // Inline function 'androidx.collection.MutableLongSet.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$4 = hash_0 & 127;
          var value = toLong(tmp$ret$4);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newElements[index] = previousElement;
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_13($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableLongSet(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    LongSet.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableLongSet.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_13(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableLongSet).add_tgozn1_k$ = function (element) {
    var oldSize = this._size_1;
    var index = findAbsoluteInsertIndex_4(this, element);
    this.elements_1[index] = element;
    return !(this._size_1 === oldSize);
  };
  protoOf(MutableLongSet).plusAssign_p5ji1h_k$ = function (element) {
    var index = findAbsoluteInsertIndex_4(this, element);
    this.elements_1[index] = element;
  };
  protoOf(MutableLongSet).addAll_vsnjho_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_eu4p4d_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableLongSet).plusAssign_eu4p4d_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableLongSet.plusAssign.<anonymous>' call
      this.plusAssign_p5ji1h_k$(element);
    }
  };
  protoOf(MutableLongSet).addAll_freexl_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_qgcb8y_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableLongSet).plusAssign_qgcb8y_k$ = function (elements) {
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongSet.plusAssign.<anonymous>' call
                  var element = k[index];
                  this.plusAssign_p5ji1h_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongSet).remove_do4l5i_k$ = function (element) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(element.hashCode(), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.elements_1[index].equals(element)) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    var exists = index_0 >= 0;
    if (exists) {
      removeElementAt_1(this, index_0);
    }
    return exists;
  };
  protoOf(MutableLongSet).minusAssign_elja0x_k$ = function (element) {
    var tmp$ret$9;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      var hash = imul(element.hashCode(), get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$4 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$4);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (this.elements_1[index].equals(element)) {
            tmp$ret$9 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$9 = -1;
    }
    var index_0 = tmp$ret$9;
    if (index_0 >= 0) {
      removeElementAt_1(this, index_0);
    }
  };
  protoOf(MutableLongSet).removeAll_mmfhyn_k$ = function (elements) {
    var oldSize = this._size_1;
    this.minusAssign_dwb62r_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableLongSet).minusAssign_dwb62r_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableLongSet.minusAssign.<anonymous>' call
      this.minusAssign_elja0x_k$(element);
    }
  };
  protoOf(MutableLongSet).removeAll_7zpuk6_k$ = function (elements) {
    var oldSize = this._size_1;
    this.minusAssign_l8y4g8_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableLongSet).minusAssign_l8y4g8_k$ = function (elements) {
    // Inline function 'androidx.collection.LongSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.LongSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.LongSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableLongSet.minusAssign.<anonymous>' call
                  var element = k[index];
                  this.minusAssign_elja0x_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableLongSet).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    initializeGrowth_13(this);
  };
  protoOf(MutableLongSet).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_13(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  var properties_initialized_LongSet_kt_r3x9iu;
  function _init_properties_LongSet_kt__wt9fxo() {
    if (!properties_initialized_LongSet_kt_r3x9iu) {
      properties_initialized_LongSet_kt_r3x9iu = true;
      EmptyLongSet = new MutableLongSet(0);
      EmptyLongArray = longArray(0);
    }
  }
  function get_DELETED() {
    _init_properties_LongSparseArray_kt__ucg8tx();
    return DELETED;
  }
  var DELETED;
  var properties_initialized_LongSparseArray_kt_xmlmcz;
  function _init_properties_LongSparseArray_kt__ucg8tx() {
    if (!properties_initialized_LongSparseArray_kt_xmlmcz) {
      properties_initialized_LongSparseArray_kt_xmlmcz = true;
      DELETED = new Object();
    }
  }
  function get_EmptyObjectFloatMap() {
    _init_properties_ObjectFloatMap_kt__1ozl3z();
    return EmptyObjectFloatMap;
  }
  var EmptyObjectFloatMap;
  function _set_growthLimit__kpjhht_14($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_14($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_14($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_14($this, newCapacity);
    var tmp_0 = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_0.keys_1 = fillArrayVal(Array(newCapacity), null);
    $this.values_1 = new Float32Array(newCapacity);
  }
  function initializeMetadata_14($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableObjectFloatMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_14($this);
  }
  function initializeGrowth_14($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findIndex($this, key) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals($this.keys_1[index], key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_14($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_14($this);
      index_0 = findFirstAvailableSlot_14($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableObjectFloatMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_14($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_14($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_14($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_14($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_14($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_14($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          // Inline function 'kotlin.hashCode' call
          var tmp1_elvis_lhs = previousKey == null ? null : hashCode(previousKey);
          var tmp$ret$2 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
          var hash = imul(tmp$ret$2, get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$4 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_14($this, tmp$ret$4);
          // Inline function 'androidx.collection.MutableObjectFloatMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$5 = hash_0 & 127;
          var value = toLong(tmp$ret$5);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_14($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableObjectFloatMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    ObjectFloatMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableObjectFloatMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_14(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableObjectFloatMap).getOrPut_2z8l1z_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    var value = defaultValue();
    this.set_5v4xb2_k$(key, value);
    return value;
  };
  protoOf(MutableObjectFloatMap).set_5v4xb2_k$ = function (key, value) {
    var index = findIndex(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableObjectFloatMap).put_xy26c1_k$ = function (key, value) {
    this.set_5v4xb2_k$(key, value);
  };
  protoOf(MutableObjectFloatMap).put_z3b0jb_k$ = function (key, value, default_0) {
    var index = findIndex(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableObjectFloatMap).putAll_89r8gr_k$ = function (from) {
    // Inline function 'androidx.collection.ObjectFloatMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableObjectFloatMap.putAll.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var value = v[index];
                  this.set_5v4xb2_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectFloatMap).plusAssign_iyqbtw_k$ = function (from) {
    return this.putAll_89r8gr_k$(from);
  };
  protoOf(MutableObjectFloatMap).remove_cykeqk_k$ = function (key) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableObjectFloatMap).remove_r9sgvo_k$ = function (key, value) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      if (this.values_1[index] === value) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableObjectFloatMap).removeIf_28cwam_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableObjectFloatMap.removeIf.<anonymous>' call
                  var tmp = this.keys_1[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectFloatMap).minusAssign_5p857b_k$ = function (key) {
    this.remove_cykeqk_k$(key);
  };
  protoOf(MutableObjectFloatMap).minusAssign_te3e0y_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_cykeqk_k$(key);
    }
  };
  protoOf(MutableObjectFloatMap).minusAssign_p29mci_k$ = function (keys) {
    var tmp0_iterator = keys.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var key = tmp0_iterator.next_20eer_k$();
      this.remove_cykeqk_k$(key);
    }
  };
  protoOf(MutableObjectFloatMap).minusAssign_wf4ptc_k$ = function (keys) {
    var tmp0_iterator = keys.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var key = tmp0_iterator.next_20eer_k$();
      this.remove_cykeqk_k$(key);
    }
  };
  protoOf(MutableObjectFloatMap).minusAssign_1a3j3h_k$ = function (keys) {
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableObjectFloatMap.minusAssign.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.remove_cykeqk_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectFloatMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableObjectFloatMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    this.keys_1[index] = null;
  };
  protoOf(MutableObjectFloatMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    fill_0(this.keys_1, null, 0, this._capacity_1);
    initializeGrowth_14(this);
  };
  protoOf(MutableObjectFloatMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_14(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function ObjectFloatMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EMPTY_OBJECTS();
    this.values_1 = get_EmptyFloatArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(ObjectFloatMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(ObjectFloatMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(ObjectFloatMap).set_keys_dii73h_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(ObjectFloatMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(ObjectFloatMap).set_values_6hpnyh_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(ObjectFloatMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(ObjectFloatMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(ObjectFloatMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ObjectFloatMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ObjectFloatMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(ObjectFloatMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(ObjectFloatMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(ObjectFloatMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ObjectFloatMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ObjectFloatMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ObjectFloatMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ObjectFloatMap).get_wei43m_k$ = function (key) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('There is no key ' + key + ' in the map');
    }
    return this.values_1[index];
  };
  protoOf(ObjectFloatMap).getOrDefault_11g3mw_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(ObjectFloatMap).getOrElse_il538l_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue();
  };
  protoOf(ObjectFloatMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(ObjectFloatMap).forEach_3pq016_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                  var tmp = k[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ObjectFloatMap).forEachKey_til62r_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEachKey.<anonymous>' call
                  var tmp = k[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ObjectFloatMap).forEachValue_mpu6t5_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ObjectFloatMap).all_545o4u_k$ = function (predicate) {
    // Inline function 'androidx.collection.ObjectFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectFloatMap.all.<anonymous>' call
                  var tmp = k[index];
                  if (!predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ObjectFloatMap).any_714hj1_k$ = function (predicate) {
    // Inline function 'androidx.collection.ObjectFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectFloatMap.any.<anonymous>' call
                  var tmp = k[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(ObjectFloatMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(ObjectFloatMap).count_cga5og_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.ObjectFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectFloatMap.count.<anonymous>' call
                  var tmp = k[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(ObjectFloatMap).contains_vbgn2f_k$ = function (key) {
    return this.findKeyIndex_dzbr78_k$(key) >= 0;
  };
  protoOf(ObjectFloatMap).containsKey_aw81wo_k$ = function (key) {
    return this.findKeyIndex_dzbr78_k$(key) >= 0;
  };
  protoOf(ObjectFloatMap).containsValue_xffl2_k$ = function (value) {
    // Inline function 'androidx.collection.ObjectFloatMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectFloatMap.containsValue.<anonymous>' call
                  if (value === v[index])
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(ObjectFloatMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.ObjectFloatMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.ObjectFloatMap.joinToString.<anonymous>.<anonymous>' call
                    var tmp = k[index_0];
                    var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_t8pm91_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_g7wmaq_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(ObjectFloatMap).joinToString$default_o8zvhw_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(ObjectFloatMap).joinToString_9xyf3l_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.ObjectFloatMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.ObjectFloatMap.joinToString.<anonymous>.<anonymous>' call
                    var tmp = k[index_0];
                    var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(ObjectFloatMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.ObjectFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectFloatMap.hashCode.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var value = v[index];
                  var tmp_0 = hash;
                  // Inline function 'kotlin.hashCode' call
                  var tmp1_elvis_lhs = key == null ? null : hashCode(key);
                  hash = tmp_0 + ((tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) ^ getNumberHashCode(value)) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(ObjectFloatMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof ObjectFloatMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    var o = other instanceof ObjectFloatMap ? other : THROW_CCE();
    // Inline function 'androidx.collection.ObjectFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectFloatMap.equals.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (!(v[index] === o.get_wei43m_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ObjectFloatMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.ObjectFloatMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectFloatMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectFloatMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectFloatMap.toString.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var value = v[index];
                  s.append_t8pm91_k$(key === this ? '(this)' : key);
                  s.append_22ad7x_k$('=');
                  s.append_g7wmaq_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(ObjectFloatMap).findKeyIndex_dzbr78_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals(this.keys_1[index], key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_ObjectFloatMap_kt_44laan;
  function _init_properties_ObjectFloatMap_kt__1ozl3z() {
    if (!properties_initialized_ObjectFloatMap_kt_44laan) {
      properties_initialized_ObjectFloatMap_kt_44laan = true;
      EmptyObjectFloatMap = new MutableObjectFloatMap(0);
    }
  }
  function get_EmptyObjectIntMap() {
    _init_properties_ObjectIntMap_kt__tjeyss();
    return EmptyObjectIntMap;
  }
  var EmptyObjectIntMap;
  function _set_growthLimit__kpjhht_15($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_15($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_15($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_15($this, newCapacity);
    var tmp_0 = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_0.keys_1 = fillArrayVal(Array(newCapacity), null);
    $this.values_1 = new Int32Array(newCapacity);
  }
  function initializeMetadata_15($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableObjectIntMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_15($this);
  }
  function initializeGrowth_15($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findIndex_0($this, key) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals($this.keys_1[index], key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_15($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_15($this);
      index_0 = findFirstAvailableSlot_15($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableObjectIntMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_15($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_15($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_15($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_15($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_15($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_15($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          // Inline function 'kotlin.hashCode' call
          var tmp1_elvis_lhs = previousKey == null ? null : hashCode(previousKey);
          var tmp$ret$2 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
          var hash = imul(tmp$ret$2, get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$4 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_15($this, tmp$ret$4);
          // Inline function 'androidx.collection.MutableObjectIntMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$5 = hash_0 & 127;
          var value = toLong(tmp$ret$5);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_15($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableObjectIntMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    ObjectIntMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableObjectIntMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_15(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableObjectIntMap).getOrPut_63y6is_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    var value = defaultValue();
    this.set_km8a66_k$(key, value);
    return value;
  };
  protoOf(MutableObjectIntMap).set_km8a66_k$ = function (key, value) {
    var index = findIndex_0(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableObjectIntMap).put_38ofzl_k$ = function (key, value) {
    this.set_km8a66_k$(key, value);
  };
  protoOf(MutableObjectIntMap).put_nnx0tz_k$ = function (key, value, default_0) {
    var index = findIndex_0(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableObjectIntMap).putAll_b2qh48_k$ = function (from) {
    // Inline function 'androidx.collection.ObjectIntMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableObjectIntMap.putAll.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var value = v[index];
                  this.set_km8a66_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectIntMap).plusAssign_i3x4q9_k$ = function (from) {
    return this.putAll_b2qh48_k$(from);
  };
  protoOf(MutableObjectIntMap).remove_cykeqk_k$ = function (key) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableObjectIntMap).remove_amcuj8_k$ = function (key, value) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      if (this.values_1[index] === value) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableObjectIntMap).removeIf_psvbed_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableObjectIntMap.removeIf.<anonymous>' call
                  var tmp = this.keys_1[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectIntMap).minusAssign_5p857b_k$ = function (key) {
    this.remove_cykeqk_k$(key);
  };
  protoOf(MutableObjectIntMap).minusAssign_te3e0y_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_cykeqk_k$(key);
    }
  };
  protoOf(MutableObjectIntMap).minusAssign_p29mci_k$ = function (keys) {
    var tmp0_iterator = keys.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var key = tmp0_iterator.next_20eer_k$();
      this.remove_cykeqk_k$(key);
    }
  };
  protoOf(MutableObjectIntMap).minusAssign_wf4ptc_k$ = function (keys) {
    var tmp0_iterator = keys.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var key = tmp0_iterator.next_20eer_k$();
      this.remove_cykeqk_k$(key);
    }
  };
  protoOf(MutableObjectIntMap).minusAssign_1a3j3h_k$ = function (keys) {
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableObjectIntMap.minusAssign.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.remove_cykeqk_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectIntMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableObjectIntMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    this.keys_1[index] = null;
  };
  protoOf(MutableObjectIntMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    fill_0(this.keys_1, null, 0, this._capacity_1);
    initializeGrowth_15(this);
  };
  protoOf(MutableObjectIntMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_15(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function ObjectIntMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EMPTY_OBJECTS();
    this.values_1 = get_EmptyIntArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(ObjectIntMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(ObjectIntMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(ObjectIntMap).set_keys_dii73h_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(ObjectIntMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(ObjectIntMap).set_values_sv2zhg_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(ObjectIntMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(ObjectIntMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(ObjectIntMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ObjectIntMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ObjectIntMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(ObjectIntMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(ObjectIntMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(ObjectIntMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ObjectIntMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ObjectIntMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ObjectIntMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ObjectIntMap).get_wei43m_k$ = function (key) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('There is no key ' + key + ' in the map');
    }
    return this.values_1[index];
  };
  protoOf(ObjectIntMap).getOrDefault_j3mwy0_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(ObjectIntMap).getOrElse_1tkn20_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue();
  };
  protoOf(ObjectIntMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(ObjectIntMap).forEach_vd5gcd_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                  var tmp = k[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ObjectIntMap).forEachKey_til62r_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEachKey.<anonymous>' call
                  var tmp = k[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ObjectIntMap).forEachValue_e6u2sa_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ObjectIntMap).all_g89xff_k$ = function (predicate) {
    // Inline function 'androidx.collection.ObjectIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectIntMap.all.<anonymous>' call
                  var tmp = k[index];
                  if (!predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ObjectIntMap).any_nz7p8w_k$ = function (predicate) {
    // Inline function 'androidx.collection.ObjectIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectIntMap.any.<anonymous>' call
                  var tmp = k[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(ObjectIntMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(ObjectIntMap).count_83upjh_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.ObjectIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectIntMap.count.<anonymous>' call
                  var tmp = k[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(ObjectIntMap).contains_vbgn2f_k$ = function (key) {
    return this.findKeyIndex_dzbr78_k$(key) >= 0;
  };
  protoOf(ObjectIntMap).containsKey_aw81wo_k$ = function (key) {
    return this.findKeyIndex_dzbr78_k$(key) >= 0;
  };
  protoOf(ObjectIntMap).containsValue_6h54sm_k$ = function (value) {
    // Inline function 'androidx.collection.ObjectIntMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectIntMap.containsValue.<anonymous>' call
                  if (value === v[index])
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(ObjectIntMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.ObjectIntMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.ObjectIntMap.joinToString.<anonymous>.<anonymous>' call
                    var tmp = k[index_0];
                    var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_t8pm91_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_uppzia_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(ObjectIntMap).joinToString$default_qtf74v_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(ObjectIntMap).joinToString_hf6u3m_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.ObjectIntMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.ObjectIntMap.joinToString.<anonymous>.<anonymous>' call
                    var tmp = k[index_0];
                    var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(ObjectIntMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.ObjectIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectIntMap.hashCode.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = hash;
                  // Inline function 'kotlin.hashCode' call
                  var tmp1_elvis_lhs = key == null ? null : hashCode(key);
                  hash = tmp_0 + ((tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) ^ v[index]) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(ObjectIntMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof ObjectIntMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    var o = other instanceof ObjectIntMap ? other : THROW_CCE();
    // Inline function 'androidx.collection.ObjectIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectIntMap.equals.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (!(v[index] === o.get_wei43m_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ObjectIntMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.ObjectIntMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectIntMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectIntMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectIntMap.toString.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var value = v[index];
                  s.append_t8pm91_k$(key === this ? '(this)' : key);
                  s.append_22ad7x_k$('=');
                  s.append_uppzia_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(ObjectIntMap).findKeyIndex_dzbr78_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals(this.keys_1[index], key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_ObjectIntMap_kt_ycqxma;
  function _init_properties_ObjectIntMap_kt__tjeyss() {
    if (!properties_initialized_ObjectIntMap_kt_ycqxma) {
      properties_initialized_ObjectIntMap_kt_ycqxma = true;
      EmptyObjectIntMap = new MutableObjectIntMap(0);
    }
  }
  function get_EmptyArray() {
    _init_properties_ObjectList_kt__fnapct();
    return EmptyArray;
  }
  var EmptyArray;
  function get_EmptyObjectList() {
    _init_properties_ObjectList_kt__fnapct();
    return EmptyObjectList;
  }
  var EmptyObjectList;
  function ObjectList$toString$lambda(this$0) {
    return function (element) {
      var tmp;
      if (element === this$0) {
        tmp = '(this)';
      } else {
        tmp = toString_0(element);
      }
      return tmp;
    };
  }
  function ObjectList(initialCapacity) {
    var tmp = this;
    var tmp_0;
    if (initialCapacity === 0) {
      tmp_0 = get_EmptyArray();
    } else {
      // Inline function 'kotlin.arrayOfNulls' call
      tmp_0 = fillArrayVal(Array(initialCapacity), null);
    }
    tmp.content_1 = tmp_0;
    this._size_1 = 0;
  }
  protoOf(ObjectList).set_content_dfgtbs_k$ = function (_set____db54di) {
    this.content_1 = _set____db54di;
  };
  protoOf(ObjectList).get_content_h02jrk_k$ = function () {
    return this.content_1;
  };
  protoOf(ObjectList).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(ObjectList).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(ObjectList).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(ObjectList).get_lastIndex_tk4gr1_k$ = function () {
    return this._size_1 - 1 | 0;
  };
  protoOf(ObjectList).get_indices_xelk8u_k$ = function () {
    return until(0, this._size_1);
  };
  protoOf(ObjectList).none_20lko_k$ = function () {
    return this.isEmpty_y1axqb_k$();
  };
  protoOf(ObjectList).any_22ng_k$ = function () {
    return this.isNotEmpty_cjxbwk_k$();
  };
  protoOf(ObjectList).any_sdadih_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.ObjectList.any.<anonymous>' call
        var tmp = content[i];
        if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(ObjectList).reversedAny_mbz2vb_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ObjectList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.ObjectList.reversedAny.<anonymous>' call
        var tmp = content[i];
        if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
          return true;
        }
      }
       while (0 <= inductionVariable);
    return false;
  };
  protoOf(ObjectList).contains_aljjnj_k$ = function (element) {
    return this.indexOf_si1fv9_k$(element) >= 0;
  };
  protoOf(ObjectList).containsAll_efq1hl_k$ = function (elements) {
    var inductionVariable = 0;
    var last = elements.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!this.contains_aljjnj_k$(elements[i]))
          return false;
      }
       while (inductionVariable <= last);
    return true;
  };
  protoOf(ObjectList).containsAll_7te9tz_k$ = function (elements) {
    var inductionVariable = 0;
    var last = elements.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!this.contains_aljjnj_k$(elements.get_c1px32_k$(i)))
          return false;
      }
       while (inductionVariable <= last);
    return true;
  };
  protoOf(ObjectList).containsAll_eacz6z_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.ObjectList.containsAll.<anonymous>' call
      if (!this.contains_aljjnj_k$(element))
        return false;
    }
    return true;
  };
  protoOf(ObjectList).containsAll_e0ndmb_k$ = function (elements) {
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = elements.content_1;
    var inductionVariable = 0;
    var last = elements._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.ObjectList.containsAll.<anonymous>' call
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (!this.contains_aljjnj_k$(element))
          return false;
      }
       while (inductionVariable < last);
    return true;
  };
  protoOf(ObjectList).count_1kgzrj_k$ = function () {
    return this._size_1;
  };
  protoOf(ObjectList).count_6qetho_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var count = 0;
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.ObjectList.count.<anonymous>' call
        var tmp = content[i];
        if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
          count = count + 1 | 0;
        }
      }
       while (inductionVariable < last);
    return count;
  };
  protoOf(ObjectList).first_1m0hio_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('ObjectList is empty.');
    }
    var tmp = this.content_1[0];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(ObjectList).first_uh2rtf_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.ObjectList.first.<anonymous>' call
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (predicate(element))
          return element;
      }
       while (inductionVariable < last);
    throw NoSuchElementException_init_$Create$('ObjectList contains no element matching the predicate.');
  };
  protoOf(ObjectList).firstOrNull_j0zfvq_k$ = function () {
    return this.isEmpty_y1axqb_k$() ? null : this.get_c1px32_k$(0);
  };
  protoOf(ObjectList).firstOrNull_ctf0yx_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.ObjectList.firstOrNull.<anonymous>' call
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (predicate(element))
          return element;
      }
       while (inductionVariable < last);
    return null;
  };
  protoOf(ObjectList).fold_vrc0gz_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.ObjectList.fold.<anonymous>' call
        var tmp = content[i];
        acc = operation(acc, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
      }
       while (inductionVariable < last);
    return acc;
  };
  protoOf(ObjectList).foldIndexed_s6ghkz_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.ObjectList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.ObjectList.foldIndexed.<anonymous>' call
        var tmp = content[i];
        acc = operation(i, acc, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
      }
       while (inductionVariable < last);
    return acc;
  };
  protoOf(ObjectList).foldRight_i80xs9_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.ObjectList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.ObjectList.foldRight.<anonymous>' call
        var tmp = content[i];
        acc = operation((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), acc);
      }
       while (0 <= inductionVariable);
    return acc;
  };
  protoOf(ObjectList).foldRightIndexed_lz8ze1_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    // Inline function 'androidx.collection.ObjectList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.ObjectList.foldRightIndexed.<anonymous>' call
        var tmp = content[i];
        acc = operation(i, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), acc);
      }
       while (0 <= inductionVariable);
    return acc;
  };
  protoOf(ObjectList).forEach_5rham0_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = content[i];
        block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
      }
       while (inductionVariable < last);
  };
  protoOf(ObjectList).forEachIndexed_wzw8ia_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = content[i];
        block(i, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
      }
       while (inductionVariable < last);
  };
  protoOf(ObjectList).forEachReversed_6o48wq_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp = content[i];
        block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
      }
       while (0 <= inductionVariable);
  };
  protoOf(ObjectList).forEachReversedIndexed_jtazrk_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp = content[i];
        block(i, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
      }
       while (0 <= inductionVariable);
  };
  protoOf(ObjectList).get_c1px32_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.ObjectList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    var tmp = this.content_1[index];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(ObjectList).elementAt_i1qdw7_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.ObjectList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    var tmp = this.content_1[index];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(ObjectList).elementAtOrElse_4ka3rx_k$ = function (index, defaultValue) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      return defaultValue(index);
    }
    var tmp = this.content_1[index];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(ObjectList).indexOf_si1fv9_k$ = function (element) {
    if (element == null) {
      // Inline function 'androidx.collection.ObjectList.forEachIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content = this.content_1;
      var inductionVariable = 0;
      var last = this._size_1;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.collection.ObjectList.indexOf.<anonymous>' call
          var tmp = content[i];
          if (((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()) == null) {
            return i;
          }
        }
         while (inductionVariable < last);
    } else {
      // Inline function 'androidx.collection.ObjectList.forEachIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content_0 = this.content_1;
      var inductionVariable_0 = 0;
      var last_0 = this._size_1;
      if (inductionVariable_0 < last_0)
        do {
          var i_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          // Inline function 'androidx.collection.ObjectList.indexOf.<anonymous>' call
          var tmp_0 = content_0[i_0];
          var item = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
          if (equals(element, item)) {
            return i_0;
          }
        }
         while (inductionVariable_0 < last_0);
    }
    return -1;
  };
  protoOf(ObjectList).indexOfFirst_n94ckk_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ObjectList.forEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.ObjectList.indexOfFirst.<anonymous>' call
        var tmp = content[i];
        if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
          return i;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(ObjectList).indexOfLast_digm64_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ObjectList.forEachReversedIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.ObjectList.indexOfLast.<anonymous>' call
        var tmp = content[i];
        if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
          return i;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  };
  protoOf(ObjectList).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ObjectList).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ObjectList).last_1z1cm_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('ObjectList is empty.');
    }
    var tmp = this.content_1;
    // Inline function 'androidx.collection.ObjectList.lastIndex' call
    var tmp_0 = tmp[this._size_1 - 1 | 0];
    return (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
  };
  protoOf(ObjectList).last_4wlssz_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ObjectList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.ObjectList.last.<anonymous>' call
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (predicate(element)) {
          return element;
        }
      }
       while (0 <= inductionVariable);
    throw NoSuchElementException_init_$Create$('ObjectList contains no element matching the predicate.');
  };
  protoOf(ObjectList).lastOrNull_u4yjpc_k$ = function () {
    var tmp;
    if (this.isEmpty_y1axqb_k$()) {
      tmp = null;
    } else {
      var tmp_0 = this.content_1;
      // Inline function 'androidx.collection.ObjectList.lastIndex' call
      var tmp_1 = tmp_0[this._size_1 - 1 | 0];
      tmp = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
    }
    return tmp;
  };
  protoOf(ObjectList).lastOrNull_akt9vh_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ObjectList.forEachReversed' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.collection.ObjectList.lastOrNull.<anonymous>' call
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (predicate(element)) {
          return element;
        }
      }
       while (0 <= inductionVariable);
    return null;
  };
  protoOf(ObjectList).lastIndexOf_v2p1fv_k$ = function (element) {
    if (element == null) {
      // Inline function 'androidx.collection.ObjectList.forEachReversedIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content = this.content_1;
      var inductionVariable = this._size_1 - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          // Inline function 'androidx.collection.ObjectList.lastIndexOf.<anonymous>' call
          var tmp = content[i];
          if (((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()) == null) {
            return i;
          }
        }
         while (0 <= inductionVariable);
    } else {
      // Inline function 'androidx.collection.ObjectList.forEachReversedIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content_0 = this.content_1;
      var inductionVariable_0 = this._size_1 - 1 | 0;
      if (0 <= inductionVariable_0)
        do {
          var i_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + -1 | 0;
          // Inline function 'androidx.collection.ObjectList.lastIndexOf.<anonymous>' call
          var tmp_0 = content_0[i_0];
          var item = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
          if (equals(element, item)) {
            return i_0;
          }
        }
         while (0 <= inductionVariable_0);
    }
    return -1;
  };
  protoOf(ObjectList).joinToString_349p9o_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.ObjectList.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      // Inline function 'androidx.collection.ObjectList.forEachIndexed' call
      // Inline function 'kotlin.contracts.contract' call
      var content = this.content_1;
      var inductionVariable = 0;
      var last = this._size_1;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.collection.ObjectList.joinToString.<anonymous>.<anonymous>' call
          var tmp = content[i];
          var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
          if (i === limit) {
            this_0.append_jgojdo_k$(truncated);
            break $l$block;
          }
          if (!(i === 0)) {
            this_0.append_jgojdo_k$(separator);
          }
          if (transform == null) {
            this_0.append_t8pm91_k$(element);
          } else {
            this_0.append_jgojdo_k$(transform(element));
          }
        }
         while (inductionVariable < last);
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(ObjectList).joinToString$default_n4qfmr_k$ = function (separator, prefix, postfix, limit, truncated, transform, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    return $super === VOID ? this.joinToString_349p9o_k$(separator, prefix, postfix, limit, truncated, transform) : $super.joinToString_349p9o_k$.call(this, separator, prefix, postfix, limit, truncated, transform);
  };
  protoOf(ObjectList).hashCode = function () {
    var hashCode_0 = 0;
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = this.content_1;
    var inductionVariable = 0;
    var last = this._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.ObjectList.hashCode.<anonymous>' call
        var tmp = content[i];
        var tmp_0 = hashCode_0;
        // Inline function 'kotlin.hashCode' call
        var tmp0_safe_receiver = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
        var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
        hashCode_0 = tmp_0 + imul(31, tmp$ret$0) | 0;
      }
       while (inductionVariable < last);
    return hashCode_0;
  };
  protoOf(ObjectList).equals = function (other) {
    var tmp;
    if (!(other instanceof ObjectList)) {
      tmp = true;
    } else {
      tmp = !(other._size_1 === this._size_1);
    }
    if (tmp) {
      return false;
    }
    var content = this.content_1;
    var otherContent = other.content_1;
    // Inline function 'androidx.collection.ObjectList.indices' call
    var progression = until(0, this._size_1);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(content[i], otherContent[i])) {
          return false;
        }
      }
       while (!(i === last));
    return true;
  };
  protoOf(ObjectList).toString = function () {
    return this.joinToString$default_n4qfmr_k$(VOID, '[', ']', VOID, VOID, ObjectList$toString$lambda(this));
  };
  function _get_list__d9tsa5($this) {
    return $this.list_1;
  }
  function _set_prevIndex__4e164m($this, _set____db54di) {
    $this.prevIndex_1 = _set____db54di;
  }
  function _get_prevIndex__xovmj6($this) {
    return $this.prevIndex_1;
  }
  function _get_objectList__if0him($this) {
    return $this.objectList_1;
  }
  function _get_list__d9tsa5_0($this) {
    return $this.list_1;
  }
  function _get_start__b8zdqp($this) {
    return $this.start_1;
  }
  function _set_end__4w58cq($this, _set____db54di) {
    $this.end_1 = _set____db54di;
  }
  function _get_end__e67thy($this) {
    return $this.end_1;
  }
  function _set_list__9q1sop($this, _set____db54di) {
    $this.list_1 = _set____db54di;
  }
  function _get_list__d9tsa5_1($this) {
    return $this.list_1;
  }
  function MutableObjectListIterator(list, index) {
    this.list_1 = list;
    this.prevIndex_1 = index - 1 | 0;
  }
  protoOf(MutableObjectListIterator).hasNext_bitz1p_k$ = function () {
    return this.prevIndex_1 < (this.list_1.get_size_woubt6_k$() - 1 | 0);
  };
  protoOf(MutableObjectListIterator).next_20eer_k$ = function () {
    this.prevIndex_1 = this.prevIndex_1 + 1 | 0;
    return this.list_1.get_c1px32_k$(this.prevIndex_1);
  };
  protoOf(MutableObjectListIterator).remove_ldkf9o_k$ = function () {
    this.list_1.removeAt_6niowx_k$(this.prevIndex_1);
    this.prevIndex_1 = this.prevIndex_1 - 1 | 0;
  };
  protoOf(MutableObjectListIterator).hasPrevious_qh0629_k$ = function () {
    return this.prevIndex_1 >= 0;
  };
  protoOf(MutableObjectListIterator).nextIndex_jshxun_k$ = function () {
    return this.prevIndex_1 + 1 | 0;
  };
  protoOf(MutableObjectListIterator).previous_l2dfd5_k$ = function () {
    var tmp1 = this.prevIndex_1;
    this.prevIndex_1 = tmp1 - 1 | 0;
    return this.list_1.get_c1px32_k$(tmp1);
  };
  protoOf(MutableObjectListIterator).previousIndex_4qtyw5_k$ = function () {
    return this.prevIndex_1;
  };
  protoOf(MutableObjectListIterator).add_jcyd1a_k$ = function (element) {
    this.prevIndex_1 = this.prevIndex_1 + 1 | 0;
    this.list_1.add_dl6gt3_k$(this.prevIndex_1, element);
  };
  protoOf(MutableObjectListIterator).set_tg4fwj_k$ = function (element) {
    this.list_1.set_82063s_k$(this.prevIndex_1, element);
  };
  function ObjectListMutableList(objectList) {
    this.objectList_1 = objectList;
  }
  protoOf(ObjectListMutableList).get_size_woubt6_k$ = function () {
    return this.objectList_1.get_size_woubt6_k$();
  };
  protoOf(ObjectListMutableList).contains_ccp5tc_k$ = function (element) {
    return this.objectList_1.contains_aljjnj_k$(element);
  };
  protoOf(ObjectListMutableList).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_ccp5tc_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(ObjectListMutableList).containsAll_70schq_k$ = function (elements) {
    return this.objectList_1.containsAll_eacz6z_k$(elements);
  };
  protoOf(ObjectListMutableList).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_70schq_k$(elements);
  };
  protoOf(ObjectListMutableList).get_c1px32_k$ = function (index) {
    checkIndex(this, index);
    return this.objectList_1.get_c1px32_k$(index);
  };
  protoOf(ObjectListMutableList).indexOf_u97212_k$ = function (element) {
    return this.objectList_1.indexOf_si1fv9_k$(element);
  };
  protoOf(ObjectListMutableList).indexOf_si1fv9_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.indexOf_u97212_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(ObjectListMutableList).isEmpty_y1axqb_k$ = function () {
    return this.objectList_1.isEmpty_y1axqb_k$();
  };
  protoOf(ObjectListMutableList).iterator_jk1svi_k$ = function () {
    return new MutableObjectListIterator(this, 0);
  };
  protoOf(ObjectListMutableList).lastIndexOf_wtunlo_k$ = function (element) {
    return this.objectList_1.lastIndexOf_v2p1fv_k$(element);
  };
  protoOf(ObjectListMutableList).lastIndexOf_v2p1fv_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.lastIndexOf_wtunlo_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(ObjectListMutableList).add_wl2rvy_k$ = function (element) {
    return this.objectList_1.add_utx5q5_k$(element);
  };
  protoOf(ObjectListMutableList).add_utx5q5_k$ = function (element) {
    return this.add_wl2rvy_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(ObjectListMutableList).add_gaf1mg_k$ = function (index, element) {
    return this.objectList_1.add_dl6gt3_k$(index, element);
  };
  protoOf(ObjectListMutableList).add_dl6gt3_k$ = function (index, element) {
    return this.add_gaf1mg_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(ObjectListMutableList).addAll_4lnftk_k$ = function (index, elements) {
    return this.objectList_1.addAll_lxodh3_k$(index, elements);
  };
  protoOf(ObjectListMutableList).addAll_lxodh3_k$ = function (index, elements) {
    return this.addAll_4lnftk_k$(index, elements);
  };
  protoOf(ObjectListMutableList).addAll_v4m9z4_k$ = function (elements) {
    return this.objectList_1.addAll_6nk5ih_k$(elements);
  };
  protoOf(ObjectListMutableList).addAll_4lagoh_k$ = function (elements) {
    return this.addAll_v4m9z4_k$(elements);
  };
  protoOf(ObjectListMutableList).clear_j9egeb_k$ = function () {
    return this.objectList_1.clear_j9egeb_k$();
  };
  protoOf(ObjectListMutableList).listIterator_xjshxw_k$ = function () {
    return new MutableObjectListIterator(this, 0);
  };
  protoOf(ObjectListMutableList).listIterator_70e65o_k$ = function (index) {
    return new MutableObjectListIterator(this, index);
  };
  protoOf(ObjectListMutableList).remove_an8aut_k$ = function (element) {
    return this.objectList_1.remove_cedx0m_k$(element);
  };
  protoOf(ObjectListMutableList).remove_cedx0m_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.remove_an8aut_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(ObjectListMutableList).removeAll_7hnfer_k$ = function (elements) {
    return this.objectList_1.removeAll_wwkcme_k$(elements);
  };
  protoOf(ObjectListMutableList).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_7hnfer_k$(elements);
  };
  protoOf(ObjectListMutableList).removeAt_6niowx_k$ = function (index) {
    checkIndex(this, index);
    return this.objectList_1.removeAt_6niowx_k$(index);
  };
  protoOf(ObjectListMutableList).retainAll_h3uasc_k$ = function (elements) {
    return this.objectList_1.retainAll_9fhiib_k$(elements);
  };
  protoOf(ObjectListMutableList).retainAll_9fhiib_k$ = function (elements) {
    return this.retainAll_h3uasc_k$(elements);
  };
  protoOf(ObjectListMutableList).set_9t5s9l_k$ = function (index, element) {
    checkIndex(this, index);
    return this.objectList_1.set_82063s_k$(index, element);
  };
  protoOf(ObjectListMutableList).set_82063s_k$ = function (index, element) {
    return this.set_9t5s9l_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(ObjectListMutableList).subList_xle3r2_k$ = function (fromIndex, toIndex) {
    checkSubIndex(this, fromIndex, toIndex);
    return new SubList(this, fromIndex, toIndex);
  };
  function SubList(list, start, end) {
    this.list_1 = list;
    this.start_1 = start;
    this.end_1 = end;
  }
  protoOf(SubList).get_size_woubt6_k$ = function () {
    return this.end_1 - this.start_1 | 0;
  };
  protoOf(SubList).contains_ccp5tc_k$ = function (element) {
    var inductionVariable = this.start_1;
    var last = this.end_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(this.list_1.get_c1px32_k$(i), element)) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(SubList).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_ccp5tc_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).containsAll_70schq_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.SubList.containsAll.<anonymous>' call
      if (!this.contains_ccp5tc_k$(element)) {
        return false;
      }
    }
    return true;
  };
  protoOf(SubList).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_70schq_k$(elements);
  };
  protoOf(SubList).get_c1px32_k$ = function (index) {
    checkIndex(this, index);
    return this.list_1.get_c1px32_k$(index + this.start_1 | 0);
  };
  protoOf(SubList).indexOf_u97212_k$ = function (element) {
    var inductionVariable = this.start_1;
    var last = this.end_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(this.list_1.get_c1px32_k$(i), element)) {
          return i - this.start_1 | 0;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(SubList).indexOf_si1fv9_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.indexOf_u97212_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).isEmpty_y1axqb_k$ = function () {
    return this.end_1 === this.start_1;
  };
  protoOf(SubList).iterator_jk1svi_k$ = function () {
    return new MutableObjectListIterator(this, 0);
  };
  protoOf(SubList).lastIndexOf_wtunlo_k$ = function (element) {
    var inductionVariable = this.end_1 - 1 | 0;
    var last = this.start_1;
    if (last <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        if (equals(this.list_1.get_c1px32_k$(i), element)) {
          return i - this.start_1 | 0;
        }
      }
       while (!(i === last));
    return -1;
  };
  protoOf(SubList).lastIndexOf_v2p1fv_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.lastIndexOf_wtunlo_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).add_wl2rvy_k$ = function (element) {
    var tmp1 = this.end_1;
    this.end_1 = tmp1 + 1 | 0;
    this.list_1.add_dl6gt3_k$(tmp1, element);
    return true;
  };
  protoOf(SubList).add_utx5q5_k$ = function (element) {
    return this.add_wl2rvy_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).add_gaf1mg_k$ = function (index, element) {
    this.list_1.add_dl6gt3_k$(index + this.start_1 | 0, element);
    this.end_1 = this.end_1 + 1 | 0;
  };
  protoOf(SubList).add_dl6gt3_k$ = function (index, element) {
    return this.add_gaf1mg_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).addAll_4lnftk_k$ = function (index, elements) {
    this.list_1.addAll_lxodh3_k$(index + this.start_1 | 0, elements);
    this.end_1 = this.end_1 + elements.get_size_woubt6_k$() | 0;
    return elements.get_size_woubt6_k$() > 0;
  };
  protoOf(SubList).addAll_lxodh3_k$ = function (index, elements) {
    return this.addAll_4lnftk_k$(index, elements);
  };
  protoOf(SubList).addAll_v4m9z4_k$ = function (elements) {
    this.list_1.addAll_lxodh3_k$(this.end_1, elements);
    this.end_1 = this.end_1 + elements.get_size_woubt6_k$() | 0;
    return elements.get_size_woubt6_k$() > 0;
  };
  protoOf(SubList).addAll_4lagoh_k$ = function (elements) {
    return this.addAll_v4m9z4_k$(elements);
  };
  protoOf(SubList).clear_j9egeb_k$ = function () {
    var inductionVariable = this.end_1 - 1 | 0;
    var last = this.start_1;
    if (last <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        this.list_1.removeAt_6niowx_k$(i);
      }
       while (!(i === last));
    this.end_1 = this.start_1;
  };
  protoOf(SubList).listIterator_xjshxw_k$ = function () {
    return new MutableObjectListIterator(this, 0);
  };
  protoOf(SubList).listIterator_70e65o_k$ = function (index) {
    return new MutableObjectListIterator(this, index);
  };
  protoOf(SubList).remove_an8aut_k$ = function (element) {
    var inductionVariable = this.start_1;
    var last = this.end_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(this.list_1.get_c1px32_k$(i), element)) {
          this.list_1.removeAt_6niowx_k$(i);
          this.end_1 = this.end_1 - 1 | 0;
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(SubList).remove_cedx0m_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.remove_an8aut_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).removeAll_7hnfer_k$ = function (elements) {
    var originalEnd = this.end_1;
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.SubList.removeAll.<anonymous>' call
      this.remove_an8aut_k$(element);
    }
    return !(originalEnd === this.end_1);
  };
  protoOf(SubList).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_7hnfer_k$(elements);
  };
  protoOf(SubList).removeAt_6niowx_k$ = function (index) {
    checkIndex(this, index);
    var element = this.list_1.removeAt_6niowx_k$(index + this.start_1 | 0);
    this.end_1 = this.end_1 - 1 | 0;
    return element;
  };
  protoOf(SubList).retainAll_h3uasc_k$ = function (elements) {
    var originalEnd = this.end_1;
    var inductionVariable = this.end_1 - 1 | 0;
    var last = this.start_1;
    if (last <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var element = this.list_1.get_c1px32_k$(i);
        if (!elements.contains_aljjnj_k$(element)) {
          this.list_1.removeAt_6niowx_k$(i);
          this.end_1 = this.end_1 - 1 | 0;
        }
      }
       while (!(i === last));
    return !(originalEnd === this.end_1);
  };
  protoOf(SubList).retainAll_9fhiib_k$ = function (elements) {
    return this.retainAll_h3uasc_k$(elements);
  };
  protoOf(SubList).set_9t5s9l_k$ = function (index, element) {
    checkIndex(this, index);
    return this.list_1.set_82063s_k$(index + this.start_1 | 0, element);
  };
  protoOf(SubList).set_82063s_k$ = function (index, element) {
    return this.set_9t5s9l_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).subList_xle3r2_k$ = function (fromIndex, toIndex) {
    checkSubIndex(this, fromIndex, toIndex);
    return new SubList(this, fromIndex, toIndex);
  };
  function MutableObjectList(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? 16 : initialCapacity;
    ObjectList.call(this, initialCapacity);
    this.list_1 = null;
  }
  protoOf(MutableObjectList).get_capacity_wxbgcd_k$ = function () {
    return this.content_1.length;
  };
  protoOf(MutableObjectList).add_utx5q5_k$ = function (element) {
    this.ensureCapacity_wr7980_k$(this._size_1 + 1 | 0);
    this.content_1[this._size_1] = element;
    this._size_1 = this._size_1 + 1 | 0;
    return true;
  };
  protoOf(MutableObjectList).add_dl6gt3_k$ = function (index, element) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    this.ensureCapacity_wr7980_k$(this._size_1 + 1 | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + 1 | 0;
      var endIndex = this._size_1;
      arrayCopy(content, content, destinationOffset, index, endIndex);
    }
    content[index] = element;
    this._size_1 = this._size_1 + 1 | 0;
  };
  protoOf(MutableObjectList).addAll_xlsbhd_k$ = function (index, elements) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    // Inline function 'kotlin.collections.isEmpty' call
    if (elements.length === 0)
      return false;
    this.ensureCapacity_wr7980_k$(this._size_1 + elements.length | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements.length | 0;
      var endIndex = this._size_1;
      arrayCopy(content, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.copyInto' call
    var endIndex_0 = elements.length;
    arrayCopy(elements, content, index, 0, endIndex_0);
    this._size_1 = this._size_1 + elements.length | 0;
    return true;
  };
  protoOf(MutableObjectList).addAll_lxodh3_k$ = function (index, elements) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    if (elements.isEmpty_y1axqb_k$())
      return false;
    this.ensureCapacity_wr7980_k$(this._size_1 + elements.get_size_woubt6_k$() | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements.get_size_woubt6_k$() | 0;
      var endIndex = this._size_1;
      arrayCopy(content, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index_0 = 0;
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var item = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableObjectList.addAll.<anonymous>' call
      var tmp1 = index_0;
      index_0 = tmp1 + 1 | 0;
      content[index + checkIndexOverflow(tmp1) | 0] = item;
    }
    this._size_1 = this._size_1 + elements.get_size_woubt6_k$() | 0;
    return true;
  };
  protoOf(MutableObjectList).addAll_2aqdlp_k$ = function (index, elements) {
    if (!(0 <= index ? index <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + this._size_1);
    }
    if (elements.isEmpty_y1axqb_k$())
      return false;
    this.ensureCapacity_wr7980_k$(this._size_1 + elements._size_1 | 0);
    var content = this.content_1;
    if (!(index === this._size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements._size_1 | 0;
      var endIndex = this._size_1;
      arrayCopy(content, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = elements.content_1;
    var endIndex_0 = elements._size_1;
    arrayCopy(this_0, content, index, 0, endIndex_0);
    this._size_1 = this._size_1 + elements._size_1 | 0;
    return true;
  };
  protoOf(MutableObjectList).addAll_l8uguj_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_5cokx0_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableObjectList).addAll_cozwho_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_lokrvn_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableObjectList).addAll_vsf5kp_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_ryh080_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableObjectList).addAll_8llkr_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_e710ym_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableObjectList).addAll_6nk5ih_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_yu9f42_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableObjectList).addAll_l4o7c5_k$ = function (elements) {
    var oldSize = this._size_1;
    this.plusAssign_lk6778_k$(elements);
    return !(oldSize === this._size_1);
  };
  protoOf(MutableObjectList).plusAssign_5cokx0_k$ = function (elements) {
    if (elements.isEmpty_y1axqb_k$())
      return Unit_getInstance();
    this.ensureCapacity_wr7980_k$(this._size_1 + elements._size_1 | 0);
    var content = this.content_1;
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = elements.content_1;
    var destinationOffset = this._size_1;
    var endIndex = elements._size_1;
    arrayCopy(this_0, content, destinationOffset, 0, endIndex);
    this._size_1 = this._size_1 + elements._size_1 | 0;
  };
  protoOf(MutableObjectList).plusAssign_lokrvn_k$ = function (elements) {
    if (elements.isEmpty_y1axqb_k$())
      return Unit_getInstance();
    this.ensureCapacity_wr7980_k$(this._size_1 + elements.get_size_woubt6_k$() | 0);
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableObjectList.plusAssign.<anonymous>' call
                  var tmp = k[index];
                  // Inline function 'androidx.collection.MutableObjectList.plusAssign' call
                  var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.add_utx5q5_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectList).plusAssign_ryh080_k$ = function (elements) {
    // Inline function 'kotlin.collections.isEmpty' call
    if (elements.length === 0)
      return Unit_getInstance();
    this.ensureCapacity_wr7980_k$(this._size_1 + elements.length | 0);
    var content = this.content_1;
    // Inline function 'kotlin.collections.copyInto' call
    var destinationOffset = this._size_1;
    var endIndex = elements.length;
    arrayCopy(elements, content, destinationOffset, 0, endIndex);
    this._size_1 = this._size_1 + elements.length | 0;
  };
  protoOf(MutableObjectList).plusAssign_e710ym_k$ = function (elements) {
    if (elements.isEmpty_y1axqb_k$())
      return Unit_getInstance();
    var size = this._size_1;
    this.ensureCapacity_wr7980_k$(size + elements.get_size_woubt6_k$() | 0);
    var content = this.content_1;
    var inductionVariable = 0;
    var last = elements.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        content[i + size | 0] = elements.get_c1px32_k$(i);
      }
       while (inductionVariable <= last);
    this._size_1 = this._size_1 + elements.get_size_woubt6_k$() | 0;
  };
  protoOf(MutableObjectList).plusAssign_yu9f42_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableObjectList.plusAssign.<anonymous>' call
      // Inline function 'androidx.collection.MutableObjectList.plusAssign' call
      this.add_utx5q5_k$(element);
    }
  };
  protoOf(MutableObjectList).plusAssign_lk6778_k$ = function (elements) {
    // Inline function 'kotlin.sequences.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableObjectList.plusAssign.<anonymous>' call
      // Inline function 'androidx.collection.MutableObjectList.plusAssign' call
      this.add_utx5q5_k$(element);
    }
  };
  protoOf(MutableObjectList).clear_j9egeb_k$ = function () {
    fill_0(this.content_1, null, 0, this._size_1);
    this._size_1 = 0;
  };
  protoOf(MutableObjectList).trim_d6sije_k$ = function (minCapacity) {
    // Inline function 'kotlin.comparisons.maxOf' call
    var b = this._size_1;
    var minSize = Math.max(minCapacity, b);
    // Inline function 'androidx.collection.MutableObjectList.capacity' call
    if (this.content_1.length > minSize) {
      this.content_1 = copyOf_2(this.content_1, minSize);
    }
  };
  protoOf(MutableObjectList).trim$default_x99zg2_k$ = function (minCapacity, $super) {
    minCapacity = minCapacity === VOID ? this._size_1 : minCapacity;
    var tmp;
    if ($super === VOID) {
      this.trim_d6sije_k$(minCapacity);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.trim_d6sije_k$.call(this, minCapacity);
    }
    return tmp;
  };
  protoOf(MutableObjectList).ensureCapacity_wr7980_k$ = function (capacity) {
    var oldContent = this.content_1;
    if (oldContent.length < capacity) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = imul(oldContent.length, 3) / 2 | 0;
      var newSize = Math.max(capacity, b);
      this.content_1 = copyOf_2(oldContent, newSize);
    }
  };
  protoOf(MutableObjectList).plusAssign_3eqo3f_k$ = function (element) {
    this.add_utx5q5_k$(element);
  };
  protoOf(MutableObjectList).minusAssign_7yer0x_k$ = function (element) {
    this.remove_cedx0m_k$(element);
  };
  protoOf(MutableObjectList).remove_cedx0m_k$ = function (element) {
    var index = this.indexOf_si1fv9_k$(element);
    if (index >= 0) {
      this.removeAt_6niowx_k$(index);
      return true;
    }
    return false;
  };
  protoOf(MutableObjectList).removeIf_3serzi_k$ = function (predicate) {
    var gap = 0;
    var size = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.ObjectList.indices' call
    var progression = until(0, this._size_1);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        content[i - gap | 0] = content[i];
        var tmp = content[i];
        if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
          gap = gap + 1 | 0;
        }
      }
       while (!(i === last));
    fill_0(content, null, size - gap | 0, size);
    this._size_1 = this._size_1 - gap | 0;
  };
  protoOf(MutableObjectList).removeAll_p7lzmk_k$ = function (elements) {
    var initialSize = this._size_1;
    var inductionVariable = 0;
    var last = elements.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.remove_cedx0m_k$(elements[i]);
      }
       while (inductionVariable <= last);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).removeAll_hsk74o_k$ = function (elements) {
    var initialSize = this._size_1;
    this.minusAssign_q26a2i_k$(elements);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).removeAll_japhi9_k$ = function (elements) {
    var initialSize = this._size_1;
    this.minusAssign_z32q5_k$(elements);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).removeAll_yrubi6_k$ = function (elements) {
    var initialSize = this._size_1;
    this.minusAssign_eobvkc_k$(elements);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).removeAll_wwkcme_k$ = function (elements) {
    var initialSize = this._size_1;
    this.minusAssign_mt30iw_k$(elements);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).removeAll_6m56ag_k$ = function (elements) {
    var initialSize = this._size_1;
    this.minusAssign_u5y3zq_k$(elements);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).minusAssign_fjp66i_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableObjectList.minusAssign.<anonymous>' call
      // Inline function 'androidx.collection.MutableObjectList.minusAssign' call
      this.remove_cedx0m_k$(element);
    }
  };
  protoOf(MutableObjectList).minusAssign_q26a2i_k$ = function (elements) {
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = elements.content_1;
    var inductionVariable = 0;
    var last = elements._size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableObjectList.minusAssign.<anonymous>' call
        var tmp = content[i];
        // Inline function 'androidx.collection.MutableObjectList.minusAssign' call
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        this.remove_cedx0m_k$(element);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableObjectList).minusAssign_z32q5_k$ = function (elements) {
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableObjectList.minusAssign.<anonymous>' call
                  var tmp = k[index];
                  // Inline function 'androidx.collection.MutableObjectList.minusAssign' call
                  var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.remove_cedx0m_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectList).minusAssign_eobvkc_k$ = function (elements) {
    var inductionVariable = 0;
    var last = elements.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableObjectList.minusAssign' call
        var element = elements.get_c1px32_k$(i);
        this.remove_cedx0m_k$(element);
      }
       while (inductionVariable <= last);
  };
  protoOf(MutableObjectList).minusAssign_mt30iw_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableObjectList.minusAssign.<anonymous>' call
      // Inline function 'androidx.collection.MutableObjectList.minusAssign' call
      this.remove_cedx0m_k$(element);
    }
  };
  protoOf(MutableObjectList).minusAssign_u5y3zq_k$ = function (elements) {
    // Inline function 'kotlin.sequences.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableObjectList.minusAssign.<anonymous>' call
      // Inline function 'androidx.collection.MutableObjectList.minusAssign' call
      this.remove_cedx0m_k$(element);
    }
  };
  protoOf(MutableObjectList).removeAt_6niowx_k$ = function (index) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.ObjectList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' must be in 0..' + tmp$ret$0);
    }
    var content = this.content_1;
    var element = content[index];
    // Inline function 'androidx.collection.ObjectList.lastIndex' call
    if (!(index === (this._size_1 - 1 | 0))) {
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex = index + 1 | 0;
      var endIndex = this._size_1;
      arrayCopy(content, content, index, startIndex, endIndex);
    }
    this._size_1 = this._size_1 - 1 | 0;
    content[this._size_1] = null;
    return (element == null ? true : !(element == null)) ? element : THROW_CCE();
  };
  protoOf(MutableObjectList).removeRange_sm1kzt_k$ = function (start, end) {
    if (!(0 <= start ? start <= this._size_1 : false) ? true : !(0 <= end ? end <= this._size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Start (' + start + ') and end (' + end + ') must be in 0..' + this._size_1);
    }
    if (end < start) {
      throw IllegalArgumentException_init_$Create$('Start (' + start + ') is more than end (' + end + ')');
    }
    if (!(end === start)) {
      if (end < this._size_1) {
        // Inline function 'kotlin.collections.copyInto' call
        var this_0 = this.content_1;
        var destination = this.content_1;
        var endIndex = this._size_1;
        arrayCopy(this_0, destination, start, end, endIndex);
      }
      var newSize = this._size_1 - (end - start | 0) | 0;
      fill_0(this.content_1, null, newSize, this._size_1);
      this._size_1 = newSize;
    }
  };
  protoOf(MutableObjectList).retainAll_2l7t7n_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.ObjectList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var element = content[i];
        if (indexOf(elements, element) < 0) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).retainAll_xxymp3_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.ObjectList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (!elements.contains_aljjnj_k$(element)) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).retainAll_9fhiib_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.ObjectList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (!elements.contains_aljjnj_k$(element)) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).retainAll_b0u4fv_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.ObjectList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (!contains(elements, element)) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).retainAll_blfsaf_k$ = function (elements) {
    var initialSize = this._size_1;
    var content = this.content_1;
    // Inline function 'androidx.collection.ObjectList.lastIndex' call
    var inductionVariable = this._size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (!contains_0(elements, element)) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this._size_1);
  };
  protoOf(MutableObjectList).set_82063s_k$ = function (index, element) {
    if (!(0 <= index ? index < this._size_1 : false)) {
      // Inline function 'androidx.collection.ObjectList.lastIndex' call
      var tmp$ret$0 = this._size_1 - 1 | 0;
      throw IndexOutOfBoundsException_init_$Create$('set index ' + index + ' must be between 0 .. ' + tmp$ret$0);
    }
    var content = this.content_1;
    var old = content[index];
    content[index] = element;
    return (old == null ? true : !(old == null)) ? old : THROW_CCE();
  };
  protoOf(MutableObjectList).asList_nb3lsg_k$ = function () {
    return this.asMutableList_ecsrla_k$();
  };
  protoOf(MutableObjectList).asMutableList_ecsrla_k$ = function () {
    var tmp0_elvis_lhs = this.list_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = new ObjectListMutableList(this);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableObjectList.asMutableList.<anonymous>' call
      this.list_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  function checkIndex(_this__u8e3s4, index) {
    _init_properties_ObjectList_kt__fnapct();
    var size = _this__u8e3s4.get_size_woubt6_k$();
    if (index < 0 ? true : index >= size) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' is out of bounds. ' + ('The list has ' + size + ' elements.'));
    }
  }
  function checkSubIndex(_this__u8e3s4, fromIndex, toIndex) {
    _init_properties_ObjectList_kt__fnapct();
    var size = _this__u8e3s4.get_size_woubt6_k$();
    if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$('Indices are out of order. fromIndex (' + fromIndex + ') is ' + ('greater than toIndex (' + toIndex + ').'));
    }
    if (fromIndex < 0) {
      throw IndexOutOfBoundsException_init_$Create$('fromIndex (' + fromIndex + ') is less than 0.');
    }
    if (toIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('toIndex (' + toIndex + ') is more than than the list size (' + size + ')');
    }
  }
  var properties_initialized_ObjectList_kt_7isazj;
  function _init_properties_ObjectList_kt__fnapct() {
    if (!properties_initialized_ObjectList_kt_7isazj) {
      properties_initialized_ObjectList_kt_7isazj = true;
      // Inline function 'kotlin.arrayOfNulls' call
      EmptyArray = fillArrayVal(Array(0), null);
      EmptyObjectList = new MutableObjectList(0);
    }
  }
  function get_EmptyObjectLongMap() {
    _init_properties_ObjectLongMap_kt__vrjyfj();
    return EmptyObjectLongMap;
  }
  var EmptyObjectLongMap;
  function _set_growthLimit__kpjhht_16($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_16($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_16($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_16($this, newCapacity);
    var tmp_0 = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_0.keys_1 = fillArrayVal(Array(newCapacity), null);
    $this.values_1 = longArray(newCapacity);
  }
  function initializeMetadata_16($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableObjectLongMap.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_16($this);
  }
  function initializeGrowth_16($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findIndex_1($this, key) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals($this.keys_1[index], key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_16($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_16($this);
      index_0 = findFirstAvailableSlot_16($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableObjectLongMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  }
  function findFirstAvailableSlot_16($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_16($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_16($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_16($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_16($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_16($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          // Inline function 'kotlin.hashCode' call
          var tmp1_elvis_lhs = previousKey == null ? null : hashCode(previousKey);
          var tmp$ret$2 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
          var hash = imul(tmp$ret$2, get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$4 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_16($this, tmp$ret$4);
          // Inline function 'androidx.collection.MutableObjectLongMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$5 = hash_0 & 127;
          var value = toLong(tmp$ret$5);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_16($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableObjectLongMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    ObjectLongMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableObjectLongMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_16(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableObjectLongMap).getOrPut_vh4g1u_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    var value = defaultValue();
    this.set_2ksaz8_k$(key, value);
    return value;
  };
  protoOf(MutableObjectLongMap).set_2ksaz8_k$ = function (key, value) {
    var index = findIndex_1(this, key);
    if (index < 0)
      index = ~index;
    this.keys_1[index] = key;
    this.values_1[index] = value;
  };
  protoOf(MutableObjectLongMap).put_3wbik9_k$ = function (key, value) {
    this.set_2ksaz8_k$(key, value);
  };
  protoOf(MutableObjectLongMap).put_umzw3t_k$ = function (key, value, default_0) {
    var index = findIndex_1(this, key);
    var previous = default_0;
    if (index < 0) {
      index = ~index;
    } else {
      previous = this.values_1[index];
    }
    this.keys_1[index] = key;
    this.values_1[index] = value;
    return previous;
  };
  protoOf(MutableObjectLongMap).putAll_vznlg3_k$ = function (from) {
    // Inline function 'androidx.collection.ObjectLongMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableObjectLongMap.putAll.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var value = v[index];
                  this.set_2ksaz8_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectLongMap).plusAssign_r29fek_k$ = function (from) {
    return this.putAll_vznlg3_k$(from);
  };
  protoOf(MutableObjectLongMap).remove_cykeqk_k$ = function (key) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      this.removeValueAt_egicdk_k$(index);
    }
  };
  protoOf(MutableObjectLongMap).remove_j1i9z2_k$ = function (key, value) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      if (this.values_1[index].equals(value)) {
        this.removeValueAt_egicdk_k$(index);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableObjectLongMap).removeIf_7yyvt5_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableObjectLongMap.removeIf.<anonymous>' call
                  var tmp = this.keys_1[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), this.values_1[index])) {
                    this.removeValueAt_egicdk_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectLongMap).minusAssign_5p857b_k$ = function (key) {
    this.remove_cykeqk_k$(key);
  };
  protoOf(MutableObjectLongMap).minusAssign_te3e0y_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_cykeqk_k$(key);
    }
  };
  protoOf(MutableObjectLongMap).minusAssign_p29mci_k$ = function (keys) {
    var tmp0_iterator = keys.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var key = tmp0_iterator.next_20eer_k$();
      this.remove_cykeqk_k$(key);
    }
  };
  protoOf(MutableObjectLongMap).minusAssign_wf4ptc_k$ = function (keys) {
    var tmp0_iterator = keys.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var key = tmp0_iterator.next_20eer_k$();
      this.remove_cykeqk_k$(key);
    }
  };
  protoOf(MutableObjectLongMap).minusAssign_1a3j3h_k$ = function (keys) {
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableObjectLongMap.minusAssign.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.remove_cykeqk_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableObjectLongMap).removeValueAt_egicdk_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableObjectLongMap.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    this.keys_1[index] = null;
  };
  protoOf(MutableObjectLongMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    fill_0(this.keys_1, null, 0, this._capacity_1);
    initializeGrowth_16(this);
  };
  protoOf(MutableObjectLongMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_16(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  function ObjectLongMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EMPTY_OBJECTS();
    this.values_1 = get_EmptyLongArray();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(ObjectLongMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(ObjectLongMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(ObjectLongMap).set_keys_dii73h_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(ObjectLongMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(ObjectLongMap).set_values_h45qot_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(ObjectLongMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(ObjectLongMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(ObjectLongMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ObjectLongMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ObjectLongMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(ObjectLongMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(ObjectLongMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(ObjectLongMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ObjectLongMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ObjectLongMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ObjectLongMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ObjectLongMap).get_wei43m_k$ = function (key) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index < 0) {
      throw NoSuchElementException_init_$Create$('There is no key ' + key + ' in the map');
    }
    return this.values_1[index];
  };
  protoOf(ObjectLongMap).getOrDefault_al3tb6_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue;
  };
  protoOf(ObjectLongMap).getOrElse_6s4ayi_k$ = function (key, defaultValue) {
    var index = this.findKeyIndex_dzbr78_k$(key);
    if (index >= 0) {
      return this.values_1[index];
    }
    return defaultValue();
  };
  protoOf(ObjectLongMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(ObjectLongMap).forEach_9bedbn_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                  var tmp = k[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ObjectLongMap).forEachKey_til62r_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEachKey.<anonymous>' call
                  var tmp = k[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ObjectLongMap).forEachValue_qhpe6o_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEachValue.<anonymous>' call
                  block(v[index]);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ObjectLongMap).all_lyo189_k$ = function (predicate) {
    // Inline function 'androidx.collection.ObjectLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectLongMap.all.<anonymous>' call
                  var tmp = k[index];
                  if (!predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index]))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ObjectLongMap).any_lyp8ak_k$ = function (predicate) {
    // Inline function 'androidx.collection.ObjectLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectLongMap.any.<anonymous>' call
                  var tmp = k[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index]))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(ObjectLongMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(ObjectLongMap).count_gr3lcp_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.ObjectLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectLongMap.count.<anonymous>' call
                  var tmp = k[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), v[index])) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(ObjectLongMap).contains_vbgn2f_k$ = function (key) {
    return this.findKeyIndex_dzbr78_k$(key) >= 0;
  };
  protoOf(ObjectLongMap).containsKey_aw81wo_k$ = function (key) {
    return this.findKeyIndex_dzbr78_k$(key) >= 0;
  };
  protoOf(ObjectLongMap).containsValue_38h4m4_k$ = function (value) {
    // Inline function 'androidx.collection.ObjectLongMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectLongMap.containsValue.<anonymous>' call
                  var v_0 = v[index];
                  if (value.equals(v_0))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(ObjectLongMap).joinToString_vyo8qc_k$ = function (separator, prefix, postfix, limit, truncated) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.ObjectLongMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.ObjectLongMap.joinToString.<anonymous>.<anonymous>' call
                    var tmp = k[index_0];
                    var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_t8pm91_k$(key);
                    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                    this_0.append_8gl4h8_k$(value);
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(ObjectLongMap).joinToString$default_unkryy_k$ = function (separator, prefix, postfix, limit, truncated, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    return $super === VOID ? this.joinToString_vyo8qc_k$(separator, prefix, postfix, limit, truncated) : $super.joinToString_vyo8qc_k$.call(this, separator, prefix, postfix, limit, truncated);
  };
  protoOf(ObjectLongMap).joinToString_wy4v3i_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.ObjectLongMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.ObjectLongMap.joinToString.<anonymous>.<anonymous>' call
                    var tmp = k[index_0];
                    var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    var value = v[index_0];
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    this_0.append_jgojdo_k$(transform(key, value));
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(ObjectLongMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.ObjectLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectLongMap.hashCode.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = hash;
                  // Inline function 'kotlin.hashCode' call
                  var tmp1_elvis_lhs = key == null ? null : hashCode(key);
                  hash = tmp_0 + ((tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) ^ v[index].hashCode()) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(ObjectLongMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof ObjectLongMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    var o = other instanceof ObjectLongMap ? other : THROW_CCE();
    // Inline function 'androidx.collection.ObjectLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectLongMap.equals.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (!v[index].equals(o.get_wei43m_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ObjectLongMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.ObjectLongMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ObjectLongMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.ObjectLongMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ObjectLongMap.toString.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var value = v[index];
                  s.append_t8pm91_k$(key === this ? '(this)' : key);
                  s.append_22ad7x_k$('=');
                  s.append_8gl4h8_k$(value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(ObjectLongMap).findKeyIndex_dzbr78_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals(this.keys_1[index], key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  var properties_initialized_ObjectLongMap_kt_gtq5v3;
  function _init_properties_ObjectLongMap_kt__vrjyfj() {
    if (!properties_initialized_ObjectLongMap_kt_gtq5v3) {
      properties_initialized_ObjectLongMap_kt_gtq5v3 = true;
      EmptyObjectLongMap = new MutableObjectLongMap(0);
    }
  }
  function get_EmptyGroup() {
    _init_properties_ScatterMap_kt__cygxb2();
    return EmptyGroup;
  }
  var EmptyGroup;
  function get_EmptyScatterMap() {
    _init_properties_ScatterMap_kt__cygxb2();
    return EmptyScatterMap;
  }
  var EmptyScatterMap;
  function get_DefaultScatterCapacity() {
    return DefaultScatterCapacity;
  }
  var DefaultScatterCapacity;
  function unloadedCapacity(capacity) {
    _init_properties_ScatterMap_kt__cygxb2();
    if (capacity === 7) {
      return 8;
    }
    return capacity + ((capacity - 1 | 0) / 7 | 0) | 0;
  }
  function normalizeCapacity(n) {
    _init_properties_ScatterMap_kt__cygxb2();
    var tmp;
    if (n > 0) {
      // Inline function 'kotlin.countLeadingZeroBits' call
      tmp = -1 >>> clz32(n) | 0;
    } else {
      tmp = 0;
    }
    return tmp;
  }
  function get_ClonedMetadataCount() {
    return ClonedMetadataCount;
  }
  var ClonedMetadataCount;
  function get_AllEmpty() {
    return AllEmpty;
  }
  var AllEmpty;
  function writeRawMetadata(data, offset, value) {
    _init_properties_ScatterMap_kt__cygxb2();
    var i = offset >> 3;
    var b = (offset & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
  }
  function get_Sentinel() {
    return Sentinel;
  }
  var Sentinel;
  function loadedCapacity(capacity) {
    _init_properties_ScatterMap_kt__cygxb2();
    if (capacity === 7) {
      return 6;
    }
    return capacity - (capacity / 8 | 0) | 0;
  }
  function get_Deleted() {
    return Deleted;
  }
  var Deleted;
  function h1(hash) {
    _init_properties_ScatterMap_kt__cygxb2();
    return hash >>> 7 | 0;
  }
  function h2(hash) {
    _init_properties_ScatterMap_kt__cygxb2();
    return hash & 127;
  }
  function group(metadata, offset) {
    _init_properties_ScatterMap_kt__cygxb2();
    var i = offset >> 3;
    var b = (offset & 7) << 3;
    return metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
  }
  function match(_this__u8e3s4, m) {
    _init_properties_ScatterMap_kt__cygxb2();
    // Inline function 'kotlin.Long.times' call
    var tmp$ret$0 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(m));
    var x = _this__u8e3s4.xor_qzz94j_k$(tmp$ret$0);
    return x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
  }
  function get(_this__u8e3s4) {
    _init_properties_ScatterMap_kt__cygxb2();
    // Inline function 'androidx.collection.lowestBitSet' call
    return countTrailingZeroBits(_this__u8e3s4) >> 3;
  }
  function next(_this__u8e3s4) {
    _init_properties_ScatterMap_kt__cygxb2();
    return _this__u8e3s4.and_4spn93_k$(_this__u8e3s4.minus_mfbszm_k$(new Long(1, 0)));
  }
  function hasNext(_this__u8e3s4) {
    _init_properties_ScatterMap_kt__cygxb2();
    return !_this__u8e3s4.equals(new Long(0, 0));
  }
  function maskEmpty(_this__u8e3s4) {
    _init_properties_ScatterMap_kt__cygxb2();
    return _this__u8e3s4.and_4spn93_k$(_this__u8e3s4.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144));
  }
  function get_GroupWidth() {
    return GroupWidth;
  }
  var GroupWidth;
  function isDeleted(metadata, index) {
    _init_properties_ScatterMap_kt__cygxb2();
    // Inline function 'androidx.collection.readRawMetadata' call
    return metadata[index >> 3].shr_9fl3wl_k$((index & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(new Long(254, 0));
  }
  function isEmpty(metadata, index) {
    _init_properties_ScatterMap_kt__cygxb2();
    // Inline function 'androidx.collection.readRawMetadata' call
    return metadata[index >> 3].shr_9fl3wl_k$((index & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(new Long(128, 0));
  }
  function maskEmptyOrDeleted(_this__u8e3s4) {
    _init_properties_ScatterMap_kt__cygxb2();
    return _this__u8e3s4.and_4spn93_k$(_this__u8e3s4.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144));
  }
  function lowestBitSet(_this__u8e3s4) {
    _init_properties_ScatterMap_kt__cygxb2();
    return countTrailingZeroBits(_this__u8e3s4) >> 3;
  }
  function nextCapacity(capacity) {
    _init_properties_ScatterMap_kt__cygxb2();
    var tmp;
    if (capacity === 0) {
      tmp = 6;
    } else {
      tmp = imul(capacity, 2) + 1 | 0;
    }
    return tmp;
  }
  function isFull(metadata, index) {
    _init_properties_ScatterMap_kt__cygxb2();
    // Inline function 'androidx.collection.readRawMetadata' call
    return metadata[index >> 3].shr_9fl3wl_k$((index & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0;
  }
  function get_BitmaskMsb() {
    return BitmaskMsb;
  }
  var BitmaskMsb;
  function isFull_0(value) {
    _init_properties_ScatterMap_kt__cygxb2();
    return value.compareTo_9jj042_k$(new Long(128, 0)) < 0;
  }
  function get_MurmurHashC1() {
    return MurmurHashC1;
  }
  var MurmurHashC1;
  function hash_2(k) {
    _init_properties_ScatterMap_kt__cygxb2();
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = k == null ? null : hashCode(k);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, -862048943);
    return hash ^ hash << 16;
  }
  function MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa(this$0, this$1, resultContinuation) {
    this.this$0__1 = this$0;
    this.this$1__1 = this$1;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa).invoke_qbgnyi_k$ = function ($this$iterator, $completion) {
    var tmp = this.create_ojuhwy_k$($this$iterator, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_qbgnyi_k$(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $completion);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(11);
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            var tmp_0 = this;
            tmp_0.this1__1 = this.this$0__1;
            this.m2__1 = this.this1__1.metadata_1;
            this.lastIndex3__1 = this.m2__1.length - 2 | 0;
            this.tmp0_iterator4__1 = numberRangeToNumber(0, this.lastIndex3__1).iterator_jk1svi_k$();
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 2:
            if (!this.tmp0_iterator4__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(9);
              continue $sm;
            }

            this.i5__1 = this.tmp0_iterator4__1.next_20eer_k$();
            this.slot6__1 = this.m2__1[this.i5__1];
            var this_0 = this.slot6__1;
            if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
              this.bitCount7__1 = 8 - (~(this.i5__1 - this.lastIndex3__1 | 0) >>> 31 | 0) | 0;
              this.tmp1_iterator8__1 = until(0, this.bitCount7__1).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(8);
              continue $sm;
            }

          case 3:
            if (!this.tmp1_iterator8__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(6);
              continue $sm;
            }

            this.j9__1 = this.tmp1_iterator8__1.next_20eer_k$();
            if (this.slot6__1.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
              this.index10__1 = (this.i5__1 << 3) + this.j9__1 | 0;
              var tmp_1 = this;
              tmp_1.index11__1 = this.index10__1;
              this.this$1__1.current_1 = this.index11__1;
              this.set_state_rjd8d0_k$(4);
              suspendResult = this.$this$iterator_1.yield_3xhcex_k$(new MutableMapEntry(this.this$0__1.keys_1, this.this$0__1.values_1, this.this$1__1.current_1), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

          case 4:
            this.set_state_rjd8d0_k$(5);
            continue $sm;
          case 5:
            this.slot6__1 = this.slot6__1.shr_9fl3wl_k$(8);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 6:
            if (!(this.bitCount7__1 === 8)) {
              this.tmp$ret$00__1 = Unit_getInstance();
              this.set_state_rjd8d0_k$(10);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(7);
              continue $sm;
            }

          case 7:
            this.set_state_rjd8d0_k$(8);
            continue $sm;
          case 8:
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 9:
            if (false) {
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(10);
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 11) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa).create_ojuhwy_k$ = function ($this$iterator, completion) {
    var i = new MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa(this.this$0__1, this.this$1__1, completion);
    i.$this$iterator_1 = $this$iterator;
    return i;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa).create_wyq9v6_k$ = function (value, completion) {
    return this.create_ojuhwy_k$(value instanceof SequenceScope ? value : THROW_CCE(), completion);
  };
  function MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa_0(this$0, this$1, resultContinuation) {
    var i = new MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa(this$0, this$1, resultContinuation);
    var l = function ($this$iterator, $completion) {
      return i.invoke_qbgnyi_k$($this$iterator, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function MutableScatterMap$MutableMapWrapper$entries$1$iterator$1(this$0) {
    this.this$0__1 = this$0;
    this.current_1 = -1;
    var tmp = this;
    tmp.iterator_1 = iterator(MutableScatterMap$MutableMapWrapper$_get_entries_$o$iterator$o$slambda_nzlmqa_0(this$0, this, null));
  }
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1$iterator$1).set_iterator_c1e6w4_k$ = function (_set____db54di) {
    this.iterator_1 = _set____db54di;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1$iterator$1).get_iterator_c8vxs9_k$ = function () {
    return this.iterator_1;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1$iterator$1).set_current_hihfh0_k$ = function (_set____db54di) {
    this.current_1 = _set____db54di;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1$iterator$1).get_current_jwi6j4_k$ = function () {
    return this.current_1;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1$iterator$1).hasNext_bitz1p_k$ = function () {
    return this.iterator_1.hasNext_bitz1p_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1$iterator$1).next_20eer_k$ = function () {
    return this.iterator_1.next_20eer_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1$iterator$1).remove_ldkf9o_k$ = function () {
    if (!(this.current_1 === -1)) {
      this.this$0__1.removeValueAt_lclkw8_k$(this.current_1);
      this.current_1 = -1;
    }
  };
  function _get_iterator__8i7rvn($this) {
    return $this.iterator_1;
  }
  function _set_current__qj3kk($this, _set____db54di) {
    $this.current_1 = _set____db54di;
  }
  function _get_current__qcrdxk($this) {
    return $this.current_1;
  }
  function MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4(this$0, resultContinuation) {
    this.this$0__1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4).invoke_pgsqqr_k$ = function ($this$iterator, $completion) {
    var tmp = this.create_rkcuc7_k$($this$iterator, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_pgsqqr_k$(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $completion);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(11);
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            var tmp_0 = this;
            tmp_0.this1__1 = this.this$0__1;
            this.m2__1 = this.this1__1.metadata_1;
            this.lastIndex3__1 = this.m2__1.length - 2 | 0;
            this.tmp0_iterator4__1 = numberRangeToNumber(0, this.lastIndex3__1).iterator_jk1svi_k$();
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 2:
            if (!this.tmp0_iterator4__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(9);
              continue $sm;
            }

            this.i5__1 = this.tmp0_iterator4__1.next_20eer_k$();
            this.slot6__1 = this.m2__1[this.i5__1];
            var this_0 = this.slot6__1;
            if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
              this.bitCount7__1 = 8 - (~(this.i5__1 - this.lastIndex3__1 | 0) >>> 31 | 0) | 0;
              this.tmp1_iterator8__1 = until(0, this.bitCount7__1).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(8);
              continue $sm;
            }

          case 3:
            if (!this.tmp1_iterator8__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(6);
              continue $sm;
            }

            this.j9__1 = this.tmp1_iterator8__1.next_20eer_k$();
            if (this.slot6__1.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
              this.index10__1 = (this.i5__1 << 3) + this.j9__1 | 0;
              var tmp_1 = this;
              tmp_1.index11__1 = this.index10__1;
              this.set_state_rjd8d0_k$(4);
              suspendResult = this.$this$iterator_1.yield_3xhcex_k$(this.index11__1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

          case 4:
            this.set_state_rjd8d0_k$(5);
            continue $sm;
          case 5:
            this.slot6__1 = this.slot6__1.shr_9fl3wl_k$(8);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 6:
            if (!(this.bitCount7__1 === 8)) {
              this.tmp$ret$00__1 = Unit_getInstance();
              this.set_state_rjd8d0_k$(10);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(7);
              continue $sm;
            }

          case 7:
            this.set_state_rjd8d0_k$(8);
            continue $sm;
          case 8:
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 9:
            if (false) {
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(10);
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 11) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4).create_rkcuc7_k$ = function ($this$iterator, completion) {
    var i = new MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4(this.this$0__1, completion);
    i.$this$iterator_1 = $this$iterator;
    return i;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4).create_wyq9v6_k$ = function (value, completion) {
    return this.create_rkcuc7_k$(value instanceof SequenceScope ? value : THROW_CCE(), completion);
  };
  function MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4_0(this$0, resultContinuation) {
    var i = new MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4(this$0, resultContinuation);
    var l = function ($this$iterator, $completion) {
      return i.invoke_pgsqqr_k$($this$iterator, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function MutableScatterMap$MutableMapWrapper$keys$1$iterator$1(this$0) {
    this.this$0__1 = this$0;
    var tmp = this;
    tmp.iterator_1 = iterator(MutableScatterMap$MutableMapWrapper$_get_keys_$o$iterator$o$iterator$slambda_p6ook4_0(this$0, null));
    this.current_1 = -1;
  }
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1$iterator$1).hasNext_bitz1p_k$ = function () {
    return this.iterator_1.hasNext_bitz1p_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1$iterator$1).next_20eer_k$ = function () {
    this.current_1 = this.iterator_1.next_20eer_k$();
    var tmp = this.this$0__1.keys_1[this.current_1];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1$iterator$1).remove_ldkf9o_k$ = function () {
    if (this.current_1 >= 0) {
      this.this$0__1.removeValueAt_lclkw8_k$(this.current_1);
      this.current_1 = -1;
    }
  };
  function _get_iterator__8i7rvn_0($this) {
    return $this.iterator_1;
  }
  function _set_current__qj3kk_0($this, _set____db54di) {
    $this.current_1 = _set____db54di;
  }
  function _get_current__qcrdxk_0($this) {
    return $this.current_1;
  }
  function MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu(this$0, resultContinuation) {
    this.this$0__1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu).invoke_pgsqqr_k$ = function ($this$iterator, $completion) {
    var tmp = this.create_rkcuc7_k$($this$iterator, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_pgsqqr_k$(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $completion);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(11);
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            var tmp_0 = this;
            tmp_0.this1__1 = this.this$0__1;
            this.m2__1 = this.this1__1.metadata_1;
            this.lastIndex3__1 = this.m2__1.length - 2 | 0;
            this.tmp0_iterator4__1 = numberRangeToNumber(0, this.lastIndex3__1).iterator_jk1svi_k$();
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 2:
            if (!this.tmp0_iterator4__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(9);
              continue $sm;
            }

            this.i5__1 = this.tmp0_iterator4__1.next_20eer_k$();
            this.slot6__1 = this.m2__1[this.i5__1];
            var this_0 = this.slot6__1;
            if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
              this.bitCount7__1 = 8 - (~(this.i5__1 - this.lastIndex3__1 | 0) >>> 31 | 0) | 0;
              this.tmp1_iterator8__1 = until(0, this.bitCount7__1).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(8);
              continue $sm;
            }

          case 3:
            if (!this.tmp1_iterator8__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(6);
              continue $sm;
            }

            this.j9__1 = this.tmp1_iterator8__1.next_20eer_k$();
            if (this.slot6__1.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
              this.index10__1 = (this.i5__1 << 3) + this.j9__1 | 0;
              var tmp_1 = this;
              tmp_1.index11__1 = this.index10__1;
              this.set_state_rjd8d0_k$(4);
              suspendResult = this.$this$iterator_1.yield_3xhcex_k$(this.index11__1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

          case 4:
            this.set_state_rjd8d0_k$(5);
            continue $sm;
          case 5:
            this.slot6__1 = this.slot6__1.shr_9fl3wl_k$(8);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 6:
            if (!(this.bitCount7__1 === 8)) {
              this.tmp$ret$00__1 = Unit_getInstance();
              this.set_state_rjd8d0_k$(10);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(7);
              continue $sm;
            }

          case 7:
            this.set_state_rjd8d0_k$(8);
            continue $sm;
          case 8:
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 9:
            if (false) {
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(10);
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 11) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu).create_rkcuc7_k$ = function ($this$iterator, completion) {
    var i = new MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu(this.this$0__1, completion);
    i.$this$iterator_1 = $this$iterator;
    return i;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu).create_wyq9v6_k$ = function (value, completion) {
    return this.create_rkcuc7_k$(value instanceof SequenceScope ? value : THROW_CCE(), completion);
  };
  function MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu_0(this$0, resultContinuation) {
    var i = new MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu(this$0, resultContinuation);
    var l = function ($this$iterator, $completion) {
      return i.invoke_pgsqqr_k$($this$iterator, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function MutableScatterMap$MutableMapWrapper$values$1$iterator$1(this$0) {
    this.this$0__1 = this$0;
    var tmp = this;
    tmp.iterator_1 = iterator(MutableScatterMap$MutableMapWrapper$_get_values_$o$iterator$o$iterator$slambda_9p7afu_0(this$0, null));
    this.current_1 = -1;
  }
  protoOf(MutableScatterMap$MutableMapWrapper$values$1$iterator$1).hasNext_bitz1p_k$ = function () {
    return this.iterator_1.hasNext_bitz1p_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1$iterator$1).next_20eer_k$ = function () {
    this.current_1 = this.iterator_1.next_20eer_k$();
    var tmp = this.this$0__1.values_1[this.current_1];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1$iterator$1).remove_ldkf9o_k$ = function () {
    if (this.current_1 >= 0) {
      this.this$0__1.removeValueAt_lclkw8_k$(this.current_1);
      this.current_1 = -1;
    }
  };
  function MutableScatterMap$MutableMapWrapper$entries$1(this$0) {
    this.this$0__1 = this$0;
  }
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).get_size_woubt6_k$ = function () {
    return this.this$0__1._size_1;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).isEmpty_y1axqb_k$ = function () {
    return this.this$0__1.isEmpty_y1axqb_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).iterator_jk1svi_k$ = function () {
    return new MutableScatterMap$MutableMapWrapper$entries$1$iterator$1(this.this$0__1);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).clear_j9egeb_k$ = function () {
    this.this$0__1.clear_j9egeb_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).containsAll_f8f5d5_k$ = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_y1axqb_k$();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.collection.<no name provided>.containsAll.<anonymous>' call
        if (!equals(this.this$0__1.get_wei43m_k$(element.get_key_18j28a_k$()), element.get_value_j01efc_k$())) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_f8f5d5_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).contains_ffg18u_k$ = function (element) {
    return equals(this.this$0__1.get_wei43m_k$(element.get_key_18j28a_k$()), element.get_value_j01efc_k$());
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).contains_aljjnj_k$ = function (element) {
    if (!(!(element == null) ? isInterface(element, MutableEntry) : false))
      return false;
    return this.contains_ffg18u_k$((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).addAll_sufe3v_k$ = function (elements) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).addAll_4lagoh_k$ = function (elements) {
    return this.addAll_sufe3v_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).add_i4n90_k$ = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).add_utx5q5_k$ = function (element) {
    return this.add_i4n90_k$((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).retainAll_815nu9_k$ = function (elements) {
    var changed = false;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.this$0__1.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.<no name provided>.retainAll.<anonymous>' call
                  var found = false;
                  var tmp0_iterator = elements.iterator_jk1svi_k$();
                  $l$loop: while (tmp0_iterator.hasNext_bitz1p_k$()) {
                    var entry = tmp0_iterator.next_20eer_k$();
                    if (equals(entry.get_key_18j28a_k$(), this.this$0__1.keys_1[index]) ? equals(entry.get_value_j01efc_k$(), this.this$0__1.values_1[index]) : false) {
                      found = true;
                      break $l$loop;
                    }
                  }
                  if (!found) {
                    this.this$0__1.removeValueAt_lclkw8_k$(index);
                    changed = true;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return changed;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).retainAll_9fhiib_k$ = function (elements) {
    return this.retainAll_815nu9_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).removeAll_l0we36_k$ = function (elements) {
    var changed = false;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.this$0__1.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.<no name provided>.removeAll.<anonymous>' call
                  var tmp0_iterator = elements.iterator_jk1svi_k$();
                  $l$loop: while (tmp0_iterator.hasNext_bitz1p_k$()) {
                    var entry = tmp0_iterator.next_20eer_k$();
                    if (equals(entry.get_key_18j28a_k$(), this.this$0__1.keys_1[index]) ? equals(entry.get_value_j01efc_k$(), this.this$0__1.values_1[index]) : false) {
                      this.this$0__1.removeValueAt_lclkw8_k$(index);
                      changed = true;
                      break $l$loop;
                    }
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return changed;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_l0we36_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).remove_bqjv3d_k$ = function (element) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.findKeyIndex' call
      var this_0 = this.this$0__1;
      var key = element.get_key_18j28a_k$();
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = key == null ? null : hashCode(key);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, -862048943);
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this_0._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this_0.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_1 = m;
          var index = (tmp + (countTrailingZeroBits(this_1) >> 3) | 0) & probeMask;
          if (equals(this_0.keys_1[index], key)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_2 = m;
          m = this_2.and_4spn93_k$(this_2.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + 8 | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    var index_0 = tmp$ret$10;
    if (index_0 >= 0 ? equals(this.this$0__1.values_1[index_0], element.get_value_j01efc_k$()) : false) {
      this.this$0__1.removeValueAt_lclkw8_k$(index_0);
      return true;
    }
    return false;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$entries$1).remove_cedx0m_k$ = function (element) {
    if (!(!(element == null) ? isInterface(element, MutableEntry) : false))
      return false;
    return this.remove_bqjv3d_k$((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  function MutableScatterMap$MutableMapWrapper$keys$1(this$0) {
    this.this$0__1 = this$0;
  }
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).get_size_woubt6_k$ = function () {
    return this.this$0__1._size_1;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).isEmpty_y1axqb_k$ = function () {
    return this.this$0__1.isEmpty_y1axqb_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).iterator_jk1svi_k$ = function () {
    return new MutableScatterMap$MutableMapWrapper$keys$1$iterator$1(this.this$0__1);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).clear_j9egeb_k$ = function () {
    this.this$0__1.clear_j9egeb_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).addAll_zzz7b_k$ = function (elements) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).addAll_4lagoh_k$ = function (elements) {
    return this.addAll_zzz7b_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).add_b330zt_k$ = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).add_utx5q5_k$ = function (element) {
    return this.add_b330zt_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).retainAll_d0rzzh_k$ = function (elements) {
    var changed = false;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.this$0__1.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.<no name provided>.retainAll.<anonymous>' call
                  if (!contains(elements, this.this$0__1.keys_1[index])) {
                    this.this$0__1.removeValueAt_lclkw8_k$(index);
                    changed = true;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return changed;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).retainAll_9fhiib_k$ = function (elements) {
    return this.retainAll_d0rzzh_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).removeAll_xeubsk_k$ = function (elements) {
    var changed = false;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.this$0__1.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.<no name provided>.removeAll.<anonymous>' call
                  if (contains(elements, this.this$0__1.keys_1[index])) {
                    this.this$0__1.removeValueAt_lclkw8_k$(index);
                    changed = true;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return changed;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_xeubsk_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).remove_gppy8k_k$ = function (element) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.findKeyIndex' call
      var this_0 = this.this$0__1;
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = element == null ? null : hashCode(element);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, -862048943);
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this_0._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this_0.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_1 = m;
          var index = (tmp + (countTrailingZeroBits(this_1) >> 3) | 0) & probeMask;
          if (equals(this_0.keys_1[index], element)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_2 = m;
          m = this_2.and_4spn93_k$(this_2.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + 8 | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    var index_0 = tmp$ret$10;
    if (index_0 >= 0) {
      this.this$0__1.removeValueAt_lclkw8_k$(index_0);
      return true;
    }
    return false;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).remove_cedx0m_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.remove_gppy8k_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).containsAll_xvpepl_k$ = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_y1axqb_k$();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.collection.<no name provided>.containsAll.<anonymous>' call
        if (!this.this$0__1.containsKey_aw81wo_k$(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_xvpepl_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).contains_vbgn2f_k$ = function (element) {
    return this.this$0__1.containsKey_aw81wo_k$(element);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$keys$1).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_vbgn2f_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  function MutableScatterMap$MutableMapWrapper$values$1(this$0) {
    this.this$0__1 = this$0;
  }
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).get_size_woubt6_k$ = function () {
    return this.this$0__1._size_1;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).isEmpty_y1axqb_k$ = function () {
    return this.this$0__1.isEmpty_y1axqb_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).iterator_jk1svi_k$ = function () {
    return new MutableScatterMap$MutableMapWrapper$values$1$iterator$1(this.this$0__1);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).clear_j9egeb_k$ = function () {
    this.this$0__1.clear_j9egeb_k$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).addAll_txis5e_k$ = function (elements) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).addAll_4lagoh_k$ = function (elements) {
    return this.addAll_txis5e_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).add_sqnzo4_k$ = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).add_utx5q5_k$ = function (element) {
    return this.add_sqnzo4_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).retainAll_fwqsym_k$ = function (elements) {
    var changed = false;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.this$0__1.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.<no name provided>.retainAll.<anonymous>' call
                  if (!contains(elements, this.this$0__1.values_1[index])) {
                    this.this$0__1.removeValueAt_lclkw8_k$(index);
                    changed = true;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return changed;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).retainAll_9fhiib_k$ = function (elements) {
    return this.retainAll_fwqsym_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).removeAll_8oqx8h_k$ = function (elements) {
    var changed = false;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.this$0__1.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.<no name provided>.removeAll.<anonymous>' call
                  if (contains(elements, this.this$0__1.values_1[index])) {
                    this.this$0__1.removeValueAt_lclkw8_k$(index);
                    changed = true;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return changed;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_8oqx8h_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).remove_xv0fr_k$ = function (element) {
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.this$0__1.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.<no name provided>.remove.<anonymous>' call
                  if (equals(this.this$0__1.values_1[index], element)) {
                    this.this$0__1.removeValueAt_lclkw8_k$(index);
                    return true;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).remove_cedx0m_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.remove_xv0fr_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).containsAll_87vubg_k$ = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_y1axqb_k$();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.collection.<no name provided>.containsAll.<anonymous>' call
        if (!this.this$0__1.containsValue_yf2ykl_k$(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_87vubg_k$(elements);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).contains_m22g8e_k$ = function (element) {
    return this.this$0__1.containsValue_yf2ykl_k$(element);
  };
  protoOf(MutableScatterMap$MutableMapWrapper$values$1).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_m22g8e_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  function _set_growthLimit__kpjhht_17($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_17($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_17($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.math.max' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_17($this, newCapacity);
    var tmp_0 = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_0.keys_1 = fillArrayVal(Array(newCapacity), null);
    var tmp_1 = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_1.values_1 = fillArrayVal(Array(newCapacity), null);
  }
  function initializeMetadata_17($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + 7 | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableScatterMap.initializeMetadata.<anonymous>' call
      fill(this_0, new Long(-2139062144, -2139062144));
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = new Long(255, 0);
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_17($this);
  }
  function initializeGrowth_17($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findFirstAvailableSlot_17($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144));
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + 8 | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_17($this) {
    var tmp;
    if ($this._capacity_1 > 8) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_17($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_17($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_17($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousKeys = $this.keys_1;
    var previousValues = $this.values_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_17($this, newCapacity);
    var newKeys = $this.keys_1;
    var newValues = $this.values_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousKey = previousKeys[i];
          // Inline function 'androidx.collection.hash' call
          // Inline function 'kotlin.hashCode' call
          var tmp1_elvis_lhs = previousKey == null ? null : hashCode(previousKey);
          var tmp$ret$2 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
          var hash = imul(tmp$ret$2, -862048943);
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$4 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_17($this, tmp$ret$4);
          // Inline function 'androidx.collection.MutableScatterMap.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$5 = hash_0 & 127;
          var value = toLong(tmp$ret$5);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - 7 | 0) & c) + (7 & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newKeys[index] = previousKey;
          newValues[index] = previousValues[i];
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_17($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - 7 | 0) & c) + (7 & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableMapWrapper($outer) {
    this.$this_2 = $outer;
    MapWrapper.call(this, $outer);
  }
  protoOf(MutableMapWrapper).get_entries_p20ztl_k$ = function () {
    return new MutableScatterMap$MutableMapWrapper$entries$1(this.$this_2);
  };
  protoOf(MutableMapWrapper).get_keys_wop4xp_k$ = function () {
    return new MutableScatterMap$MutableMapWrapper$keys$1(this.$this_2);
  };
  protoOf(MutableMapWrapper).get_values_ksazhn_k$ = function () {
    return new MutableScatterMap$MutableMapWrapper$values$1(this.$this_2);
  };
  protoOf(MutableMapWrapper).clear_j9egeb_k$ = function () {
    this.$this_2.clear_j9egeb_k$();
  };
  protoOf(MutableMapWrapper).remove_gppy8k_k$ = function (key) {
    return this.$this_2.remove_gppy8k_k$(key);
  };
  protoOf(MutableMapWrapper).putAll_wgg6cj_k$ = function (from) {
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = from.get_entries_p20ztl_k$().iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableMapWrapper.putAll.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var key = element.get_key_18j28a_k$();
      // Inline function 'kotlin.collections.component2' call
      var value = element.get_value_j01efc_k$();
      // Inline function 'kotlin.collections.set' call
      this.put_4fpzoq_k$(key, value);
    }
  };
  protoOf(MutableMapWrapper).put_4fpzoq_k$ = function (key, value) {
    return this.$this_2.put_4fpzoq_k$(key, value);
  };
  function MutableScatterMap(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? 6 : initialCapacity;
    ScatterMap.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableScatterMap.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_17(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableScatterMap).getOrPut_ppgj9u_k$ = function (key, defaultValue) {
    var tmp0_elvis_lhs = this.get_wei43m_k$(key);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = defaultValue();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableScatterMap.getOrPut.<anonymous>' call
      this.set_b9w55f_k$(key, this_0);
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(MutableScatterMap).compute_c0p1gt_k$ = function (key, computeBlock) {
    var index = this.findInsertIndex_p7hsl4_k$(key);
    var inserting = index < 0;
    var tmp;
    if (inserting) {
      tmp = null;
    } else {
      var tmp_0 = this.values_1[index];
      tmp = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    }
    var computedValue = computeBlock(key, tmp);
    if (inserting) {
      var insertionIndex = ~index;
      this.keys_1[insertionIndex] = key;
      this.values_1[insertionIndex] = computedValue;
    } else {
      this.values_1[index] = computedValue;
    }
    return computedValue;
  };
  protoOf(MutableScatterMap).set_b9w55f_k$ = function (key, value) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.MutableScatterMap.set.<anonymous>' call
    var index = this.findInsertIndex_p7hsl4_k$(key);
    var index_0 = index < 0 ? ~index : index;
    this.keys_1[index_0] = key;
    this.values_1[index_0] = value;
  };
  protoOf(MutableScatterMap).put_4fpzoq_k$ = function (key, value) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.MutableScatterMap.put.<anonymous>' call
    var index = this.findInsertIndex_p7hsl4_k$(key);
    var index_0 = index < 0 ? ~index : index;
    var oldValue = this.values_1[index_0];
    this.keys_1[index_0] = key;
    this.values_1[index_0] = value;
    return (oldValue == null ? true : !(oldValue == null)) ? oldValue : THROW_CCE();
  };
  protoOf(MutableScatterMap).putAll_ssgwx3_k$ = function (pairs) {
    var inductionVariable = 0;
    var last = pairs.length;
    while (inductionVariable < last) {
      var tmp1_loop_parameter = pairs[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var key = tmp1_loop_parameter.component1_7eebsc_k$();
      var value = tmp1_loop_parameter.component2_7eebsb_k$();
      this.set_b9w55f_k$(key, value);
    }
  };
  protoOf(MutableScatterMap).putAll_8hmqtb_k$ = function (pairs) {
    var tmp0_iterator = pairs.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var tmp1_loop_parameter = tmp0_iterator.next_20eer_k$();
      var key = tmp1_loop_parameter.component1_7eebsc_k$();
      var value = tmp1_loop_parameter.component2_7eebsb_k$();
      this.set_b9w55f_k$(key, value);
    }
  };
  protoOf(MutableScatterMap).putAll_744jyn_k$ = function (pairs) {
    var tmp0_iterator = pairs.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var tmp1_loop_parameter = tmp0_iterator.next_20eer_k$();
      var key = tmp1_loop_parameter.component1_7eebsc_k$();
      var value = tmp1_loop_parameter.component2_7eebsb_k$();
      this.set_b9w55f_k$(key, value);
    }
  };
  protoOf(MutableScatterMap).putAll_mbn033_k$ = function (from) {
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = from.get_entries_p20ztl_k$().iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableScatterMap.putAll.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var key = element.get_key_18j28a_k$();
      // Inline function 'kotlin.collections.component2' call
      var value = element.get_value_j01efc_k$();
      this.set_b9w55f_k$(key, value);
    }
  };
  protoOf(MutableScatterMap).putAll_6wg4e4_k$ = function (from) {
    // Inline function 'androidx.collection.ScatterMap.forEach' call
    var k = from.keys_1;
    var v = from.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = from.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableScatterMap.putAll.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = v[index];
                  var value = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
                  this.set_b9w55f_k$(key, value);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableScatterMap).plusAssign_l3fhk5_k$ = function (pair) {
    this.set_b9w55f_k$(pair.get_first_irdx8n_k$(), pair.get_second_jf7fjx_k$());
  };
  protoOf(MutableScatterMap).plusAssign_qq5dvi_k$ = function (pairs) {
    return this.putAll_ssgwx3_k$(pairs);
  };
  protoOf(MutableScatterMap).plusAssign_bdlmyy_k$ = function (pairs) {
    return this.putAll_8hmqtb_k$(pairs);
  };
  protoOf(MutableScatterMap).plusAssign_b4d9ew_k$ = function (pairs) {
    return this.putAll_744jyn_k$(pairs);
  };
  protoOf(MutableScatterMap).plusAssign_z88q14_k$ = function (from) {
    return this.putAll_mbn033_k$(from);
  };
  protoOf(MutableScatterMap).plusAssign_4qj7x_k$ = function (from) {
    return this.putAll_6wg4e4_k$(from);
  };
  protoOf(MutableScatterMap).remove_gppy8k_k$ = function (key) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = key == null ? null : hashCode(key);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, -862048943);
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (equals(this.keys_1[index], key)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + 8 | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    var index_0 = tmp$ret$10;
    if (index_0 >= 0) {
      return this.removeValueAt_lclkw8_k$(index_0);
    }
    return null;
  };
  protoOf(MutableScatterMap).remove_tnklb3_k$ = function (key, value) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = key == null ? null : hashCode(key);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, -862048943);
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (equals(this.keys_1[index], key)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + 8 | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    var index_0 = tmp$ret$10;
    if (index_0 >= 0) {
      if (equals(this.values_1[index_0], value)) {
        this.removeValueAt_lclkw8_k$(index_0);
        return true;
      }
    }
    return false;
  };
  protoOf(MutableScatterMap).removeIf_gfqb8d_k$ = function (predicate) {
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableScatterMap.removeIf.<anonymous>' call
                  var tmp = this.keys_1[index];
                  var tmp_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_1 = this.values_1[index];
                  if (predicate(tmp_0, (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE())) {
                    this.removeValueAt_lclkw8_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableScatterMap).minusAssign_5p857b_k$ = function (key) {
    this.remove_gppy8k_k$(key);
  };
  protoOf(MutableScatterMap).minusAssign_te3e0y_k$ = function (keys) {
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      this.remove_gppy8k_k$(key);
    }
  };
  protoOf(MutableScatterMap).minusAssign_p29mci_k$ = function (keys) {
    var tmp0_iterator = keys.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var key = tmp0_iterator.next_20eer_k$();
      this.remove_gppy8k_k$(key);
    }
  };
  protoOf(MutableScatterMap).minusAssign_wf4ptc_k$ = function (keys) {
    var tmp0_iterator = keys.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var key = tmp0_iterator.next_20eer_k$();
      this.remove_gppy8k_k$(key);
    }
  };
  protoOf(MutableScatterMap).minusAssign_1a3j3h_k$ = function (keys) {
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = keys.get_elements_vxwh8g_k$();
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = keys.get_metadata_vs95vc_k$();
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableScatterMap.minusAssign.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.remove_gppy8k_k$(key);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableScatterMap).minusAssign_sbcvw4_k$ = function (keys) {
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = keys.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = keys.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableScatterMap.minusAssign.<anonymous>' call
        var tmp = content[i];
        var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        this.remove_gppy8k_k$(key);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableScatterMap).removeValueAt_lclkw8_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableScatterMap.writeMetadata' call
    var value = new Long(254, 0);
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - 7 | 0) & c) + (7 & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    this.keys_1[index] = null;
    var oldValue = this.values_1[index];
    this.values_1[index] = null;
    return (oldValue == null ? true : !(oldValue == null)) ? oldValue : THROW_CCE();
  };
  protoOf(MutableScatterMap).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, new Long(-2139062144, -2139062144));
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = new Long(255, 0);
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    fill_0(this.values_1, null, 0, this._capacity_1);
    fill_0(this.keys_1, null, 0, this._capacity_1);
    initializeGrowth_17(this);
  };
  protoOf(MutableScatterMap).findInsertIndex_p7hsl4_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, -862048943);
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals(this.keys_1[index], key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + 8 | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_17(this, hash1);
    var tmp_0;
    if (this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(new Long(254, 0));
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_17(this);
      index_0 = findFirstAvailableSlot_17(this, hash1);
    }
    this._size_1 = this._size_1 + 1 | 0;
    var tmp_1 = this;
    var tmp_2 = this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if (this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(new Long(128, 0))) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableScatterMap.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = this._capacity_1;
    var cloneIndex = ((index_1 - 7 | 0) & c) + (7 & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return ~index_0;
  };
  protoOf(MutableScatterMap).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_17(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  protoOf(MutableScatterMap).asMutableMap_bx3w0o_k$ = function () {
    return new MutableMapWrapper(this);
  };
  function get_BitmaskLsb() {
    return BitmaskLsb;
  }
  var BitmaskLsb;
  function readRawMetadata(data, offset) {
    _init_properties_ScatterMap_kt__cygxb2();
    return data[offset >> 3].shr_9fl3wl_k$((offset & 7) << 3).and_4spn93_k$(new Long(255, 0));
  }
  function get_Empty() {
    return Empty;
  }
  var Empty;
  function ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd(this$0, resultContinuation) {
    this.this$0__1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd).invoke_so7z82_k$ = function ($this$iterator, $completion) {
    var tmp = this.create_iume0i_k$($this$iterator, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_so7z82_k$(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $completion);
  };
  protoOf(ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(11);
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            var tmp_0 = this;
            tmp_0.this1__1 = this.this$0__1;
            this.m2__1 = this.this1__1.metadata_1;
            this.lastIndex3__1 = this.m2__1.length - 2 | 0;
            this.tmp0_iterator4__1 = numberRangeToNumber(0, this.lastIndex3__1).iterator_jk1svi_k$();
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 2:
            if (!this.tmp0_iterator4__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(9);
              continue $sm;
            }

            this.i5__1 = this.tmp0_iterator4__1.next_20eer_k$();
            this.slot6__1 = this.m2__1[this.i5__1];
            var this_0 = this.slot6__1;
            if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
              this.bitCount7__1 = 8 - (~(this.i5__1 - this.lastIndex3__1 | 0) >>> 31 | 0) | 0;
              this.tmp1_iterator8__1 = until(0, this.bitCount7__1).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(8);
              continue $sm;
            }

          case 3:
            if (!this.tmp1_iterator8__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(6);
              continue $sm;
            }

            this.j9__1 = this.tmp1_iterator8__1.next_20eer_k$();
            if (this.slot6__1.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
              this.index10__1 = (this.i5__1 << 3) + this.j9__1 | 0;
              var tmp_1 = this;
              tmp_1.index11__1 = this.index10__1;
              this.set_state_rjd8d0_k$(4);
              var tmp_2 = this.this$0__1.keys_1[this.index11__1];
              var tmp_3 = (tmp_2 == null ? true : !(tmp_2 == null)) ? tmp_2 : THROW_CCE();
              var tmp_4 = this.this$0__1.values_1[this.index11__1];
              suspendResult = this.$this$iterator_1.yield_3xhcex_k$(new MapEntry(tmp_3, (tmp_4 == null ? true : !(tmp_4 == null)) ? tmp_4 : THROW_CCE()), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

          case 4:
            this.set_state_rjd8d0_k$(5);
            continue $sm;
          case 5:
            this.slot6__1 = this.slot6__1.shr_9fl3wl_k$(8);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 6:
            if (!(this.bitCount7__1 === 8)) {
              this.tmp$ret$00__1 = Unit_getInstance();
              this.set_state_rjd8d0_k$(10);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(7);
              continue $sm;
            }

          case 7:
            this.set_state_rjd8d0_k$(8);
            continue $sm;
          case 8:
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 9:
            if (false) {
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(10);
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 11) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd).create_iume0i_k$ = function ($this$iterator, completion) {
    var i = new ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd(this.this$0__1, completion);
    i.$this$iterator_1 = $this$iterator;
    return i;
  };
  protoOf(ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd).create_wyq9v6_k$ = function (value, completion) {
    return this.create_iume0i_k$(value instanceof SequenceScope ? value : THROW_CCE(), completion);
  };
  function ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd_0(this$0, resultContinuation) {
    var i = new ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd(this$0, resultContinuation);
    var l = function ($this$iterator, $completion) {
      return i.invoke_so7z82_k$($this$iterator, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj(this$0, resultContinuation) {
    this.this$0__1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj).invoke_u1joes_k$ = function ($this$iterator, $completion) {
    var tmp = this.create_by7lio_k$($this$iterator, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_u1joes_k$(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $completion);
  };
  protoOf(ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(11);
            var tmp_0 = this;
            tmp_0.this0__1 = this.this$0__1;
            this.k1__1 = this.this0__1.keys_1;
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            var tmp_1 = this;
            tmp_1.this3__1 = this.this0__1;
            this.m4__1 = this.this3__1.metadata_1;
            this.lastIndex5__1 = this.m4__1.length - 2 | 0;
            this.tmp0_iterator6__1 = numberRangeToNumber(0, this.lastIndex5__1).iterator_jk1svi_k$();
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 2:
            if (!this.tmp0_iterator6__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(9);
              continue $sm;
            }

            this.i7__1 = this.tmp0_iterator6__1.next_20eer_k$();
            this.slot8__1 = this.m4__1[this.i7__1];
            var this_0 = this.slot8__1;
            if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
              this.bitCount9__1 = 8 - (~(this.i7__1 - this.lastIndex5__1 | 0) >>> 31 | 0) | 0;
              this.tmp1_iterator10__1 = until(0, this.bitCount9__1).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(8);
              continue $sm;
            }

          case 3:
            if (!this.tmp1_iterator10__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(6);
              continue $sm;
            }

            this.j11__1 = this.tmp1_iterator10__1.next_20eer_k$();
            if (this.slot8__1.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
              this.index12__1 = (this.i7__1 << 3) + this.j11__1 | 0;
              var tmp_2 = this;
              tmp_2.index13__1 = this.index12__1;
              var tmp_3 = this;
              var tmp_4 = this.k1__1[this.index13__1];
              tmp_3.key14__1 = (tmp_4 == null ? true : !(tmp_4 == null)) ? tmp_4 : THROW_CCE();
              this.set_state_rjd8d0_k$(4);
              suspendResult = this.$this$iterator_1.yield_3xhcex_k$(this.key14__1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

          case 4:
            this.set_state_rjd8d0_k$(5);
            continue $sm;
          case 5:
            this.slot8__1 = this.slot8__1.shr_9fl3wl_k$(8);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 6:
            if (!(this.bitCount9__1 === 8)) {
              this.tmp$ret$02__1 = Unit_getInstance();
              this.set_state_rjd8d0_k$(10);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(7);
              continue $sm;
            }

          case 7:
            this.set_state_rjd8d0_k$(8);
            continue $sm;
          case 8:
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 9:
            if (false) {
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(10);
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 11) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj).create_by7lio_k$ = function ($this$iterator, completion) {
    var i = new ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj(this.this$0__1, completion);
    i.$this$iterator_1 = $this$iterator;
    return i;
  };
  protoOf(ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj).create_wyq9v6_k$ = function (value, completion) {
    return this.create_by7lio_k$(value instanceof SequenceScope ? value : THROW_CCE(), completion);
  };
  function ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj_0(this$0, resultContinuation) {
    var i = new ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj(this$0, resultContinuation);
    var l = function ($this$iterator, $completion) {
      return i.invoke_u1joes_k$($this$iterator, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil(this$0, resultContinuation) {
    this.this$0__1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil).invoke_a9lyll_k$ = function ($this$iterator, $completion) {
    var tmp = this.create_80hv8b_k$($this$iterator, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_a9lyll_k$(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $completion);
  };
  protoOf(ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(11);
            var tmp_0 = this;
            tmp_0.this0__1 = this.this$0__1;
            this.v1__1 = this.this0__1.values_1;
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            var tmp_1 = this;
            tmp_1.this3__1 = this.this0__1;
            this.m4__1 = this.this3__1.metadata_1;
            this.lastIndex5__1 = this.m4__1.length - 2 | 0;
            this.tmp0_iterator6__1 = numberRangeToNumber(0, this.lastIndex5__1).iterator_jk1svi_k$();
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 2:
            if (!this.tmp0_iterator6__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(9);
              continue $sm;
            }

            this.i7__1 = this.tmp0_iterator6__1.next_20eer_k$();
            this.slot8__1 = this.m4__1[this.i7__1];
            var this_0 = this.slot8__1;
            if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
              this.bitCount9__1 = 8 - (~(this.i7__1 - this.lastIndex5__1 | 0) >>> 31 | 0) | 0;
              this.tmp1_iterator10__1 = until(0, this.bitCount9__1).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(8);
              continue $sm;
            }

          case 3:
            if (!this.tmp1_iterator10__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(6);
              continue $sm;
            }

            this.j11__1 = this.tmp1_iterator10__1.next_20eer_k$();
            if (this.slot8__1.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
              this.index12__1 = (this.i7__1 << 3) + this.j11__1 | 0;
              var tmp_2 = this;
              tmp_2.index13__1 = this.index12__1;
              var tmp_3 = this;
              var tmp_4 = this.v1__1[this.index13__1];
              tmp_3.value14__1 = (tmp_4 == null ? true : !(tmp_4 == null)) ? tmp_4 : THROW_CCE();
              this.set_state_rjd8d0_k$(4);
              suspendResult = this.$this$iterator_1.yield_3xhcex_k$(this.value14__1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

          case 4:
            this.set_state_rjd8d0_k$(5);
            continue $sm;
          case 5:
            this.slot8__1 = this.slot8__1.shr_9fl3wl_k$(8);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 6:
            if (!(this.bitCount9__1 === 8)) {
              this.tmp$ret$02__1 = Unit_getInstance();
              this.set_state_rjd8d0_k$(10);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(7);
              continue $sm;
            }

          case 7:
            this.set_state_rjd8d0_k$(8);
            continue $sm;
          case 8:
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 9:
            if (false) {
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(10);
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 11) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil).create_80hv8b_k$ = function ($this$iterator, completion) {
    var i = new ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil(this.this$0__1, completion);
    i.$this$iterator_1 = $this$iterator;
    return i;
  };
  protoOf(ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil).create_wyq9v6_k$ = function (value, completion) {
    return this.create_80hv8b_k$(value instanceof SequenceScope ? value : THROW_CCE(), completion);
  };
  function ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil_0(this$0, resultContinuation) {
    var i = new ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil(this$0, resultContinuation);
    var l = function ($this$iterator, $completion) {
      return i.invoke_a9lyll_k$($this$iterator, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function ScatterMap$MapWrapper$entries$1(this$0) {
    this.this$0__1 = this$0;
  }
  protoOf(ScatterMap$MapWrapper$entries$1).get_size_woubt6_k$ = function () {
    return this.this$0__1._size_1;
  };
  protoOf(ScatterMap$MapWrapper$entries$1).isEmpty_y1axqb_k$ = function () {
    return this.this$0__1.isEmpty_y1axqb_k$();
  };
  protoOf(ScatterMap$MapWrapper$entries$1).iterator_jk1svi_k$ = function () {
    return iterator(ScatterMap$MapWrapper$_get_entries_$o$iterator$slambda_43uqsd_0(this.this$0__1, null));
  };
  protoOf(ScatterMap$MapWrapper$entries$1).containsAll_n1141n_k$ = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_y1axqb_k$();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.collection.<no name provided>.containsAll.<anonymous>' call
        if (!equals(this.this$0__1.get_wei43m_k$(element.get_key_18j28a_k$()), element.get_value_j01efc_k$())) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(ScatterMap$MapWrapper$entries$1).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_n1141n_k$(elements);
  };
  protoOf(ScatterMap$MapWrapper$entries$1).contains_4vad6e_k$ = function (element) {
    return equals(this.this$0__1.get_wei43m_k$(element.get_key_18j28a_k$()), element.get_value_j01efc_k$());
  };
  protoOf(ScatterMap$MapWrapper$entries$1).contains_aljjnj_k$ = function (element) {
    if (!(!(element == null) ? isInterface(element, Entry) : false))
      return false;
    return this.contains_4vad6e_k$((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
  };
  function ScatterMap$MapWrapper$keys$1(this$0) {
    this.this$0__1 = this$0;
  }
  protoOf(ScatterMap$MapWrapper$keys$1).get_size_woubt6_k$ = function () {
    return this.this$0__1._size_1;
  };
  protoOf(ScatterMap$MapWrapper$keys$1).isEmpty_y1axqb_k$ = function () {
    return this.this$0__1.isEmpty_y1axqb_k$();
  };
  protoOf(ScatterMap$MapWrapper$keys$1).iterator_jk1svi_k$ = function () {
    return iterator(ScatterMap$MapWrapper$_get_keys_$o$iterator$slambda_966gbj_0(this.this$0__1, null));
  };
  protoOf(ScatterMap$MapWrapper$keys$1).containsAll_xvpepl_k$ = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_y1axqb_k$();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.collection.<no name provided>.containsAll.<anonymous>' call
        if (!this.this$0__1.containsKey_aw81wo_k$(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(ScatterMap$MapWrapper$keys$1).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_xvpepl_k$(elements);
  };
  protoOf(ScatterMap$MapWrapper$keys$1).contains_vbgn2f_k$ = function (element) {
    return this.this$0__1.containsKey_aw81wo_k$(element);
  };
  protoOf(ScatterMap$MapWrapper$keys$1).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_vbgn2f_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  function ScatterMap$MapWrapper$values$1(this$0) {
    this.this$0__1 = this$0;
  }
  protoOf(ScatterMap$MapWrapper$values$1).get_size_woubt6_k$ = function () {
    return this.this$0__1._size_1;
  };
  protoOf(ScatterMap$MapWrapper$values$1).isEmpty_y1axqb_k$ = function () {
    return this.this$0__1.isEmpty_y1axqb_k$();
  };
  protoOf(ScatterMap$MapWrapper$values$1).iterator_jk1svi_k$ = function () {
    return iterator(ScatterMap$MapWrapper$_get_values_$o$iterator$slambda_vu6zil_0(this.this$0__1, null));
  };
  protoOf(ScatterMap$MapWrapper$values$1).containsAll_87vubg_k$ = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_y1axqb_k$();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.collection.<no name provided>.containsAll.<anonymous>' call
        if (!this.this$0__1.containsValue_yf2ykl_k$(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(ScatterMap$MapWrapper$values$1).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_87vubg_k$(elements);
  };
  protoOf(ScatterMap$MapWrapper$values$1).contains_m22g8e_k$ = function (element) {
    return this.this$0__1.containsValue_yf2ykl_k$(element);
  };
  protoOf(ScatterMap$MapWrapper$values$1).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_m22g8e_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  function MapWrapper($outer) {
    this.$this_1 = $outer;
  }
  protoOf(MapWrapper).get_entries_p20ztl_k$ = function () {
    return new ScatterMap$MapWrapper$entries$1(this.$this_1);
  };
  protoOf(MapWrapper).get_keys_wop4xp_k$ = function () {
    return new ScatterMap$MapWrapper$keys$1(this.$this_1);
  };
  protoOf(MapWrapper).get_values_ksazhn_k$ = function () {
    return new ScatterMap$MapWrapper$values$1(this.$this_1);
  };
  protoOf(MapWrapper).get_size_woubt6_k$ = function () {
    return this.$this_1._size_1;
  };
  protoOf(MapWrapper).isEmpty_y1axqb_k$ = function () {
    return this.$this_1.isEmpty_y1axqb_k$();
  };
  protoOf(MapWrapper).get_wei43m_k$ = function (key) {
    return this.$this_1.get_wei43m_k$(key);
  };
  protoOf(MapWrapper).containsValue_yf2ykl_k$ = function (value) {
    return this.$this_1.containsValue_yf2ykl_k$(value);
  };
  protoOf(MapWrapper).containsKey_aw81wo_k$ = function (key) {
    return this.$this_1.containsKey_aw81wo_k$(key);
  };
  function ScatterMap() {
    this.metadata_1 = get_EmptyGroup();
    this.keys_1 = get_EMPTY_OBJECTS();
    this.values_1 = get_EMPTY_OBJECTS();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(ScatterMap).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(ScatterMap).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(ScatterMap).set_keys_dii73h_k$ = function (_set____db54di) {
    this.keys_1 = _set____db54di;
  };
  protoOf(ScatterMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(ScatterMap).set_values_y0cw4b_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(ScatterMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(ScatterMap).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(ScatterMap).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ScatterMap).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ScatterMap).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(ScatterMap).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(ScatterMap).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(ScatterMap).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ScatterMap).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ScatterMap).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ScatterMap).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ScatterMap).get_wei43m_k$ = function (key) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = key == null ? null : hashCode(key);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, -862048943);
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (equals(this.keys_1[index], key)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + 8 | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    var index_0 = tmp$ret$10;
    var tmp_0;
    if (index_0 >= 0) {
      var tmp_1 = this.values_1[index_0];
      tmp_0 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
    } else {
      tmp_0 = null;
    }
    return tmp_0;
  };
  protoOf(ScatterMap).getOrDefault_6hkvp9_k$ = function (key, defaultValue) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = key == null ? null : hashCode(key);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, -862048943);
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (equals(this.keys_1[index], key)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + 8 | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    var index_0 = tmp$ret$10;
    if (index_0 >= 0) {
      var tmp_0 = this.values_1[index_0];
      return (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    }
    return defaultValue;
  };
  protoOf(ScatterMap).getOrElse_kxitzi_k$ = function (key, defaultValue) {
    var tmp0_elvis_lhs = this.get_wei43m_k$(key);
    return tmp0_elvis_lhs == null ? defaultValue() : tmp0_elvis_lhs;
  };
  protoOf(ScatterMap).forEachIndexed_zcfskm_k$ = function (block) {
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(ScatterMap).forEach_fcz7g9_k$ = function (block) {
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEach.<anonymous>' call
                  var tmp = k[index];
                  var tmp_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_1 = v[index];
                  block(tmp_0, (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ScatterMap).forEachKey_til62r_k$ = function (block) {
    var k = this.keys_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEachKey.<anonymous>' call
                  var tmp = k[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ScatterMap).forEachValue_h2meh0_k$ = function (block) {
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEachValue.<anonymous>' call
                  var tmp = v[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ScatterMap).all_jwoagj_k$ = function (predicate) {
    // Inline function 'androidx.collection.ScatterMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterMap.all.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = v[index];
                  if (!predicate(key, (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE()))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ScatterMap).any_j90620_k$ = function (predicate) {
    // Inline function 'androidx.collection.ScatterMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterMap.any.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = v[index];
                  if (predicate(key, (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE()))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(ScatterMap).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(ScatterMap).count_14mf7f_k$ = function (predicate) {
    var count = 0;
    // Inline function 'androidx.collection.ScatterMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterMap.count.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = v[index];
                  if (predicate(key, (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE())) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(ScatterMap).contains_vbgn2f_k$ = function (key) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = key == null ? null : hashCode(key);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, -862048943);
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (equals(this.keys_1[index], key)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + 8 | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    return tmp$ret$10 >= 0;
  };
  protoOf(ScatterMap).containsKey_aw81wo_k$ = function (key) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.findKeyIndex' call
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = key == null ? null : hashCode(key);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, -862048943);
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (equals(this.keys_1[index], key)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + 8 | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    return tmp$ret$10 >= 0;
  };
  protoOf(ScatterMap).containsValue_yf2ykl_k$ = function (value) {
    // Inline function 'androidx.collection.ScatterMap.forEachValue' call
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEachValue.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterMap.containsValue.<anonymous>' call
                  var tmp = v[index];
                  var v_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (equals(value, v_0))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(ScatterMap).joinToString_hejvcr_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.ScatterMap.forEach' call
      var k = this.keys_1;
      var v = this.values_1;
      $l$block_0: {
        // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.ScatterMap.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.ScatterMap.joinToString.<anonymous>.<anonymous>' call
                    var tmp = k[index_0];
                    var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    var tmp_0 = v[index_0];
                    var value = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    if (transform == null) {
                      this_0.append_t8pm91_k$(key);
                      this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(61));
                      this_0.append_t8pm91_k$(value);
                    } else {
                      this_0.append_jgojdo_k$(transform(key, value));
                    }
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(ScatterMap).joinToString$default_g3837n_k$ = function (separator, prefix, postfix, limit, truncated, transform, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    return $super === VOID ? this.joinToString_hejvcr_k$(separator, prefix, postfix, limit, truncated, transform) : $super.joinToString_hejvcr_k$.call(this, separator, prefix, postfix, limit, truncated, transform);
  };
  protoOf(ScatterMap).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.ScatterMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterMap.hashCode.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = v[index];
                  var tmp_1 = hash;
                  // Inline function 'kotlin.hashCode' call
                  var tmp1_elvis_lhs = key == null ? null : hashCode(key);
                  var tmp_2 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
                  // Inline function 'kotlin.hashCode' call
                  var tmp0_safe_receiver = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
                  var tmp1_elvis_lhs_0 = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
                  hash = tmp_1 + (tmp_2 ^ (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0)) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(ScatterMap).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof ScatterMap)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    var o = other instanceof ScatterMap ? other : THROW_CCE();
    // Inline function 'androidx.collection.ScatterMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterMap.equals.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = v[index];
                  var value = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
                  if (value == null) {
                    if (!(o.get_wei43m_k$(key) == null) ? true : !o.containsKey_aw81wo_k$(key)) {
                      return false;
                    }
                  } else if (!equals(value, o.get_wei43m_k$(key))) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ScatterMap).toString = function () {
    if (this.isEmpty_y1axqb_k$()) {
      return '{}';
    }
    var s = StringBuilder_init_$Create$().append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    var i = 0;
    // Inline function 'androidx.collection.ScatterMap.forEach' call
    var k = this.keys_1;
    var v = this.values_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterMap.forEachIndexed' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i_0];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(-2139062144, -2139062144))) {
            var bitCount = 8 - (~(i_0 - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i_0 << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterMap.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterMap.toString.<anonymous>' call
                  var tmp = k[index];
                  var key = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp_0 = v[index];
                  var value = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
                  s.append_t8pm91_k$(key === this ? '(this)' : key);
                  s.append_22ad7x_k$('=');
                  s.append_t8pm91_k$(value === this ? '(this)' : value);
                  i = i + 1 | 0;
                  if (i < this._size_1) {
                    s.append_am5a4z_k$(_Char___init__impl__6a9atx(44)).append_am5a4z_k$(_Char___init__impl__6a9atx(32));
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i_0 === lastIndex));
    }
    return s.append_am5a4z_k$(_Char___init__impl__6a9atx(125)).toString();
  };
  protoOf(ScatterMap).asDebugString_a86eku_k$ = function () {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ScatterMap.asDebugString.<anonymous>' call
    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(123));
    this_0.append_22ad7x_k$('metadata=[');
    var inductionVariable = 0;
    var last = this.get_capacity_wxbgcd_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.readRawMetadata' call
        var metadata = this.metadata_1[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0));
        if (metadata.equals(new Long(128, 0))) {
          this_0.append_22ad7x_k$('Empty');
        } else if (metadata.equals(new Long(254, 0))) {
          this_0.append_22ad7x_k$('Deleted');
        } else {
          this_0.append_8gl4h8_k$(metadata);
        }
        this_0.append_22ad7x_k$(', ');
      }
       while (inductionVariable < last);
    this_0.append_22ad7x_k$('], ');
    this_0.append_22ad7x_k$('keys=[');
    var inductionVariable_0 = 0;
    var last_0 = this.keys_1.length - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        this_0.append_t8pm91_k$(this.keys_1[i_0]);
        this_0.append_22ad7x_k$(', ');
      }
       while (inductionVariable_0 <= last_0);
    this_0.append_22ad7x_k$('], ');
    this_0.append_22ad7x_k$('values=[');
    var inductionVariable_1 = 0;
    var last_1 = this.values_1.length - 1 | 0;
    if (inductionVariable_1 <= last_1)
      do {
        var i_1 = inductionVariable_1;
        inductionVariable_1 = inductionVariable_1 + 1 | 0;
        this_0.append_t8pm91_k$(this.values_1[i_1]);
        this_0.append_22ad7x_k$(', ');
      }
       while (inductionVariable_1 <= last_1);
    this_0.append_22ad7x_k$(']');
    this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(125));
    return this_0.toString();
  };
  protoOf(ScatterMap).findKeyIndex_dzbr78_k$ = function (key) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, -862048943);
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = (new Long(16843009, 16843009)).times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(new Long(16843009, 16843009)).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(new Long(-2139062144, -2139062144));
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals(this.keys_1[index], key)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(new Long(-2139062144, -2139062144)).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + 8 | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  protoOf(ScatterMap).asMap_1jf4ju_k$ = function () {
    return new MapWrapper(this);
  };
  function MutableMapEntry(keys, values, index) {
    this.keys_1 = keys;
    this.values_1 = values;
    this.index_1 = index;
  }
  protoOf(MutableMapEntry).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(MutableMapEntry).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(MutableMapEntry).get_index_it478p_k$ = function () {
    return this.index_1;
  };
  protoOf(MutableMapEntry).setValue_9cjski_k$ = function (newValue) {
    var oldValue = this.values_1[this.index_1];
    this.values_1[this.index_1] = newValue;
    return (oldValue == null ? true : !(oldValue == null)) ? oldValue : THROW_CCE();
  };
  protoOf(MutableMapEntry).get_key_18j28a_k$ = function () {
    var tmp = this.keys_1[this.index_1];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(MutableMapEntry).get_value_j01efc_k$ = function () {
    var tmp = this.values_1[this.index_1];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  function MapEntry(key, value) {
    this.key_1 = key;
    this.value_1 = value;
  }
  protoOf(MapEntry).get_key_18j28a_k$ = function () {
    return this.key_1;
  };
  protoOf(MapEntry).get_value_j01efc_k$ = function () {
    return this.value_1;
  };
  function mutableScatterMapOf() {
    _init_properties_ScatterMap_kt__cygxb2();
    return new MutableScatterMap();
  }
  var properties_initialized_ScatterMap_kt_apzngg;
  function _init_properties_ScatterMap_kt__cygxb2() {
    if (!properties_initialized_ScatterMap_kt_apzngg) {
      properties_initialized_ScatterMap_kt_apzngg = true;
      // Inline function 'kotlin.longArrayOf' call
      EmptyGroup = longArrayOf([new Long(-2139062017, -2139062144), new Long(-1, -1)]);
      EmptyScatterMap = new MutableScatterMap(0);
    }
  }
  function get_EmptyScatterSet() {
    _init_properties_ScatterSet_kt__vy48mc();
    return EmptyScatterSet;
  }
  var EmptyScatterSet;
  function ScatterSet$SetWrapper$iterator$slambda(this$0, resultContinuation) {
    this.this$0__1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(ScatterSet$SetWrapper$iterator$slambda).invoke_hab2ee_k$ = function ($this$iterator, $completion) {
    var tmp = this.create_xgwk16_k$($this$iterator, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(ScatterSet$SetWrapper$iterator$slambda).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_hab2ee_k$(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $completion);
  };
  protoOf(ScatterSet$SetWrapper$iterator$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(11);
            var tmp_0 = this;
            tmp_0.this0__1 = this.this$0__1;
            this.k1__1 = this.this0__1.elements_1;
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            var tmp_1 = this;
            tmp_1.this3__1 = this.this0__1;
            this.m4__1 = this.this3__1.metadata_1;
            this.lastIndex5__1 = this.m4__1.length - 2 | 0;
            this.tmp0_iterator6__1 = numberRangeToNumber(0, this.lastIndex5__1).iterator_jk1svi_k$();
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 2:
            if (!this.tmp0_iterator6__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(9);
              continue $sm;
            }

            this.i7__1 = this.tmp0_iterator6__1.next_20eer_k$();
            this.slot8__1 = this.m4__1[this.i7__1];
            var this_0 = this.slot8__1;
            if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              this.bitCount9__1 = 8 - (~(this.i7__1 - this.lastIndex5__1 | 0) >>> 31 | 0) | 0;
              this.tmp1_iterator10__1 = until(0, this.bitCount9__1).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(8);
              continue $sm;
            }

          case 3:
            if (!this.tmp1_iterator10__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(6);
              continue $sm;
            }

            this.j11__1 = this.tmp1_iterator10__1.next_20eer_k$();
            if (this.slot8__1.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
              this.index12__1 = (this.i7__1 << 3) + this.j11__1 | 0;
              var tmp_2 = this;
              tmp_2.index13__1 = this.index12__1;
              var tmp_3 = this;
              var tmp_4 = this.k1__1[this.index13__1];
              tmp_3.element14__1 = (tmp_4 == null ? true : !(tmp_4 == null)) ? tmp_4 : THROW_CCE();
              this.set_state_rjd8d0_k$(4);
              suspendResult = this.$this$iterator_1.yield_3xhcex_k$(this.element14__1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

          case 4:
            this.set_state_rjd8d0_k$(5);
            continue $sm;
          case 5:
            this.slot8__1 = this.slot8__1.shr_9fl3wl_k$(8);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 6:
            if (!(this.bitCount9__1 === 8)) {
              this.tmp$ret$02__1 = Unit_getInstance();
              this.set_state_rjd8d0_k$(10);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(7);
              continue $sm;
            }

          case 7:
            this.set_state_rjd8d0_k$(8);
            continue $sm;
          case 8:
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 9:
            if (false) {
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(10);
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 11) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(ScatterSet$SetWrapper$iterator$slambda).create_xgwk16_k$ = function ($this$iterator, completion) {
    var i = new ScatterSet$SetWrapper$iterator$slambda(this.this$0__1, completion);
    i.$this$iterator_1 = $this$iterator;
    return i;
  };
  protoOf(ScatterSet$SetWrapper$iterator$slambda).create_wyq9v6_k$ = function (value, completion) {
    return this.create_xgwk16_k$(value instanceof SequenceScope ? value : THROW_CCE(), completion);
  };
  function ScatterSet$SetWrapper$iterator$slambda_0(this$0, resultContinuation) {
    var i = new ScatterSet$SetWrapper$iterator$slambda(this$0, resultContinuation);
    var l = function ($this$iterator, $completion) {
      return i.invoke_hab2ee_k$($this$iterator, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function SetWrapper($outer) {
    this.$this_1 = $outer;
  }
  protoOf(SetWrapper).get_size_woubt6_k$ = function () {
    return this.$this_1._size_1;
  };
  protoOf(SetWrapper).containsAll_xk45sd_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.SetWrapper.containsAll.<anonymous>' call
      if (!this.$this_1.contains_aljjnj_k$(element)) {
        return false;
      }
    }
    return true;
  };
  protoOf(SetWrapper).contains_aljjnj_k$ = function (element) {
    return this.$this_1.contains_aljjnj_k$(element);
  };
  protoOf(SetWrapper).isEmpty_y1axqb_k$ = function () {
    return this.$this_1.isEmpty_y1axqb_k$();
  };
  protoOf(SetWrapper).iterator_jk1svi_k$ = function () {
    return iterator(ScatterSet$SetWrapper$iterator$slambda_0(this.$this_1, null));
  };
  function ScatterSet$toString$lambda(this$0) {
    return function (element) {
      var tmp;
      if (element === this$0) {
        tmp = '(this)';
      } else {
        tmp = toString_0(element);
      }
      return tmp;
    };
  }
  function ScatterSet() {
    this.metadata_1 = get_EmptyGroup();
    this.elements_1 = get_EMPTY_OBJECTS();
    this._capacity_1 = 0;
    this._size_1 = 0;
  }
  protoOf(ScatterSet).set_metadata_adz28g_k$ = function (_set____db54di) {
    this.metadata_1 = _set____db54di;
  };
  protoOf(ScatterSet).get_metadata_vs95vc_k$ = function () {
    return this.metadata_1;
  };
  protoOf(ScatterSet).set_elements_1jj7qo_k$ = function (_set____db54di) {
    this.elements_1 = _set____db54di;
  };
  protoOf(ScatterSet).get_elements_vxwh8g_k$ = function () {
    return this.elements_1;
  };
  protoOf(ScatterSet).set__capacity_d0ho4_k$ = function (_set____db54di) {
    this._capacity_1 = _set____db54di;
  };
  protoOf(ScatterSet).get__capacity_8w17jk_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ScatterSet).get_capacity_wxbgcd_k$ = function () {
    return this._capacity_1;
  };
  protoOf(ScatterSet).set__size_yixcpn_k$ = function (_set____db54di) {
    this._size_1 = _set____db54di;
  };
  protoOf(ScatterSet).get__size_inpkfr_k$ = function () {
    return this._size_1;
  };
  protoOf(ScatterSet).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(ScatterSet).any_22ng_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ScatterSet).none_20lko_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ScatterSet).isEmpty_y1axqb_k$ = function () {
    return this._size_1 === 0;
  };
  protoOf(ScatterSet).isNotEmpty_cjxbwk_k$ = function () {
    return !(this._size_1 === 0);
  };
  protoOf(ScatterSet).first_1m0hio_k$ = function () {
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterSet.first.<anonymous>' call
                  var tmp = k[index];
                  return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    throw NoSuchElementException_init_$Create$('The ScatterSet is empty');
  };
  protoOf(ScatterSet).first_uh2rtf_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterSet.first.<anonymous>' call
                  var tmp = k[index];
                  var it = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (predicate(it))
                    return it;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    throw NoSuchElementException_init_$Create$('Could not find a match');
  };
  protoOf(ScatterSet).firstOrNull_ctf0yx_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterSet.firstOrNull.<anonymous>' call
                  var tmp = k[index];
                  var it = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (predicate(it))
                    return it;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return null;
  };
  protoOf(ScatterSet).forEachIndex_oi22yj_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var m = this.metadata_1;
    var lastIndex = m.length - 2 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var slot = m[i];
        // Inline function 'androidx.collection.maskEmptyOrDeleted' call
        var this_0 = slot;
        if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
          var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < bitCount)
            do {
              var j = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'androidx.collection.isFull' call
              if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                var index = (i << 3) + j | 0;
                block(index);
              }
              slot = slot.shr_9fl3wl_k$(8);
            }
             while (inductionVariable_0 < bitCount);
          if (!(bitCount === 8))
            return Unit_getInstance();
        }
      }
       while (!(i === lastIndex));
  };
  protoOf(ScatterSet).forEach_5rham0_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  var tmp = k[index];
                  block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(ScatterSet).all_koj4ke_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterSet.all.<anonymous>' call
                  var tmp = k[index];
                  if (!predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()))
                    return false;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ScatterSet).any_sdadih_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterSet.any.<anonymous>' call
                  var tmp = k[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE()))
                    return true;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return false;
  };
  protoOf(ScatterSet).count_1kgzrj_k$ = function () {
    return this.get_size_woubt6_k$();
  };
  protoOf(ScatterSet).count_6qetho_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var count = 0;
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterSet.count.<anonymous>' call
                  var tmp = k[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
                    count = count + 1 | 0;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return count;
  };
  protoOf(ScatterSet).contains_aljjnj_k$ = function (element) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = element == null ? null : hashCode(element);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (equals(this.elements_1[index], element)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    return tmp$ret$10 >= 0;
  };
  protoOf(ScatterSet).joinToString_349p9o_k$ = function (separator, prefix, postfix, limit, truncated, transform) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.joinToString.<anonymous>' call
      this_0.append_jgojdo_k$(prefix);
      var index = 0;
      // Inline function 'androidx.collection.ScatterSet.forEach' call
      // Inline function 'kotlin.contracts.contract' call
      var k = this.elements_1;
      $l$block_0: {
        // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
        // Inline function 'kotlin.contracts.contract' call
        var m = this.metadata_1;
        var lastIndex = m.length - 2 | 0;
        var inductionVariable = 0;
        if (inductionVariable <= lastIndex)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var slot = m[i];
            // Inline function 'androidx.collection.maskEmptyOrDeleted' call
            var this_1 = slot;
            if (!this_1.and_4spn93_k$(this_1.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
              var inductionVariable_0 = 0;
              if (inductionVariable_0 < bitCount)
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.collection.isFull' call
                  if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                    var index_0 = (i << 3) + j | 0;
                    // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                    // Inline function 'androidx.collection.ScatterSet.joinToString.<anonymous>.<anonymous>' call
                    var tmp = k[index_0];
                    var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                    if (index === limit) {
                      this_0.append_jgojdo_k$(truncated);
                      break $l$block;
                    }
                    if (!(index === 0)) {
                      this_0.append_jgojdo_k$(separator);
                    }
                    if (transform == null) {
                      this_0.append_t8pm91_k$(element);
                    } else {
                      this_0.append_jgojdo_k$(transform(element));
                    }
                    index = index + 1 | 0;
                  }
                  slot = slot.shr_9fl3wl_k$(8);
                }
                 while (inductionVariable_0 < bitCount);
              if (!(bitCount === 8)) {
                break $l$block_0;
              }
            }
          }
           while (!(i === lastIndex));
      }
      this_0.append_jgojdo_k$(postfix);
    }
    return this_0.toString();
  };
  protoOf(ScatterSet).joinToString$default_9t73i4_k$ = function (separator, prefix, postfix, limit, truncated, transform, $super) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    return $super === VOID ? this.joinToString_349p9o_k$(separator, prefix, postfix, limit, truncated, transform) : $super.joinToString_349p9o_k$.call(this, separator, prefix, postfix, limit, truncated, transform);
  };
  protoOf(ScatterSet).hashCode = function () {
    var hash = 0;
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterSet.hashCode.<anonymous>' call
                  var tmp = k[index];
                  var tmp_0 = hash;
                  // Inline function 'kotlin.hashCode' call
                  var tmp0_safe_receiver = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
                  hash = tmp_0 + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return hash;
  };
  protoOf(ScatterSet).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof ScatterSet)) {
      return false;
    }
    if (!(other.get_size_woubt6_k$() === this.get_size_woubt6_k$())) {
      return false;
    }
    var o = other instanceof ScatterSet ? other : THROW_CCE();
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.ScatterSet.equals.<anonymous>' call
                  var tmp = k[index];
                  var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (!o.contains_aljjnj_k$(element)) {
                    return false;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return true;
  };
  protoOf(ScatterSet).toString = function () {
    return this.joinToString$default_9t73i4_k$(VOID, '[', ']', VOID, VOID, ScatterSet$toString$lambda(this));
  };
  protoOf(ScatterSet).findElementIndex_n54u29_k$ = function (element) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = element == null ? null : hashCode(element);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = this._capacity_1;
    // Inline function 'androidx.collection.h1' call
    var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals(this.elements_1[index], element)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    return -1;
  };
  protoOf(ScatterSet).asSet_1jf93k_k$ = function () {
    return new SetWrapper(this);
  };
  function MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda(this$0, this$1, resultContinuation) {
    this.this$0__1 = this$0;
    this.this$1__1 = this$1;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda).invoke_hab2ee_k$ = function ($this$iterator, $completion) {
    var tmp = this.create_xgwk16_k$($this$iterator, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_hab2ee_k$(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $completion);
  };
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(11);
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            var tmp_0 = this;
            tmp_0.this1__1 = this.this$0__1;
            this.m2__1 = this.this1__1.metadata_1;
            this.lastIndex3__1 = this.m2__1.length - 2 | 0;
            this.tmp0_iterator4__1 = numberRangeToNumber(0, this.lastIndex3__1).iterator_jk1svi_k$();
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 2:
            if (!this.tmp0_iterator4__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(9);
              continue $sm;
            }

            this.i5__1 = this.tmp0_iterator4__1.next_20eer_k$();
            this.slot6__1 = this.m2__1[this.i5__1];
            var this_0 = this.slot6__1;
            if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
              this.bitCount7__1 = 8 - (~(this.i5__1 - this.lastIndex3__1 | 0) >>> 31 | 0) | 0;
              this.tmp1_iterator8__1 = until(0, this.bitCount7__1).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(8);
              continue $sm;
            }

          case 3:
            if (!this.tmp1_iterator8__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(6);
              continue $sm;
            }

            this.j9__1 = this.tmp1_iterator8__1.next_20eer_k$();
            if (this.slot6__1.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
              this.index10__1 = (this.i5__1 << 3) + this.j9__1 | 0;
              var tmp_1 = this;
              tmp_1.index11__1 = this.index10__1;
              this.this$1__1.current_1 = this.index11__1;
              this.set_state_rjd8d0_k$(4);
              var tmp_2 = this.this$0__1.elements_1[this.index11__1];
              suspendResult = this.$this$iterator_1.yield_3xhcex_k$((tmp_2 == null ? true : !(tmp_2 == null)) ? tmp_2 : THROW_CCE(), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

          case 4:
            this.set_state_rjd8d0_k$(5);
            continue $sm;
          case 5:
            this.slot6__1 = this.slot6__1.shr_9fl3wl_k$(8);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 6:
            if (!(this.bitCount7__1 === 8)) {
              this.tmp$ret$00__1 = Unit_getInstance();
              this.set_state_rjd8d0_k$(10);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(7);
              continue $sm;
            }

          case 7:
            this.set_state_rjd8d0_k$(8);
            continue $sm;
          case 8:
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 9:
            if (false) {
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(10);
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 11) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda).create_xgwk16_k$ = function ($this$iterator, completion) {
    var i = new MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda(this.this$0__1, this.this$1__1, completion);
    i.$this$iterator_1 = $this$iterator;
    return i;
  };
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda).create_wyq9v6_k$ = function (value, completion) {
    return this.create_xgwk16_k$(value instanceof SequenceScope ? value : THROW_CCE(), completion);
  };
  function MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda_0(this$0, this$1, resultContinuation) {
    var i = new MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda(this$0, this$1, resultContinuation);
    var l = function ($this$iterator, $completion) {
      return i.invoke_hab2ee_k$($this$iterator, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function MutableScatterSet$MutableSetWrapper$iterator$1(this$0) {
    this.this$0__1 = this$0;
    this.current_1 = -1;
    var tmp = this;
    tmp.iterator_1 = iterator(MutableScatterSet$MutableSetWrapper$iterator$o$iterator$slambda_0(this$0, this, null));
  }
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$1).set_current_hihfh0_k$ = function (_set____db54di) {
    this.current_1 = _set____db54di;
  };
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$1).get_current_jwi6j4_k$ = function () {
    return this.current_1;
  };
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$1).get_iterator_c8vxs9_k$ = function () {
    return this.iterator_1;
  };
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$1).hasNext_bitz1p_k$ = function () {
    return this.iterator_1.hasNext_bitz1p_k$();
  };
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$1).next_20eer_k$ = function () {
    return this.iterator_1.next_20eer_k$();
  };
  protoOf(MutableScatterSet$MutableSetWrapper$iterator$1).remove_ldkf9o_k$ = function () {
    if (!(this.current_1 === -1)) {
      this.this$0__1.removeElementAt_nbmdj1_k$(this.current_1);
      this.current_1 = -1;
    }
  };
  function _set_growthLimit__kpjhht_18($this, _set____db54di) {
    $this.growthLimit_1 = _set____db54di;
  }
  function _get_growthLimit__k16e5f_18($this) {
    return $this.growthLimit_1;
  }
  function initializeStorage_18($this, initialCapacity) {
    var tmp;
    if (initialCapacity > 0) {
      // Inline function 'kotlin.comparisons.maxOf' call
      var b = normalizeCapacity(initialCapacity);
      tmp = Math.max(7, b);
    } else {
      tmp = 0;
    }
    var newCapacity = tmp;
    $this._capacity_1 = newCapacity;
    initializeMetadata_18($this, newCapacity);
    var tmp_0 = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_0.elements_1 = fillArrayVal(Array(newCapacity), null);
  }
  function initializeMetadata_18($this, capacity) {
    var tmp = $this;
    var tmp_0;
    if (capacity === 0) {
      tmp_0 = get_EmptyGroup();
    } else {
      var size = ((((capacity + 1 | 0) + get_ClonedMetadataCount() | 0) + 7 | 0) & -8) >> 3;
      // Inline function 'kotlin.apply' call
      var this_0 = longArray(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.collection.MutableScatterSet.initializeMetadata.<anonymous>' call
      fill(this_0, get_AllEmpty());
      tmp_0 = this_0;
    }
    tmp.metadata_1 = tmp_0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var data = $this.metadata_1;
    var value = get_Sentinel();
    var i = capacity >> 3;
    var b = (capacity & 7) << 3;
    data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    initializeGrowth_18($this);
  }
  function initializeGrowth_18($this) {
    $this.growthLimit_1 = loadedCapacity($this.get_capacity_wxbgcd_k$()) - $this._size_1 | 0;
  }
  function findAbsoluteInsertIndex_5($this, element) {
    // Inline function 'androidx.collection.hash' call
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = element == null ? null : hashCode(element);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var hash = imul(tmp$ret$0, get_MurmurHashC1());
    var hash_0 = hash ^ hash << 16;
    // Inline function 'androidx.collection.h1' call
    var hash1 = hash_0 >>> 7 | 0;
    // Inline function 'androidx.collection.h2' call
    var hash2 = hash_0 & 127;
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    $l$loop_0: while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.match' call
      // Inline function 'kotlin.Long.times' call
      var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
      var x = g.xor_qzz94j_k$(tmp$ret$5);
      var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
      $l$loop: while (true) {
        // Inline function 'androidx.collection.hasNext' call
        if (!!m.equals(new Long(0, 0))) {
          break $l$loop;
        }
        var tmp = probeOffset;
        // Inline function 'androidx.collection.get' call
        // Inline function 'androidx.collection.lowestBitSet' call
        var this_0 = m;
        var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
        if (equals($this.elements_1[index], element)) {
          return index;
        }
        // Inline function 'androidx.collection.next' call
        var this_1 = m;
        m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
      }
      // Inline function 'androidx.collection.maskEmpty' call
      if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
        break $l$loop_0;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
    var index_0 = findFirstAvailableSlot_18($this, hash1);
    var tmp_0;
    if ($this.growthLimit_1 === 0) {
      // Inline function 'androidx.collection.isDeleted' call
      // Inline function 'androidx.collection.readRawMetadata' call
      var offset_0 = index_0;
      tmp_0 = !$this.metadata_1[offset_0 >> 3].shr_9fl3wl_k$((offset_0 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Deleted());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      adjustStorage_18($this);
      index_0 = findFirstAvailableSlot_18($this, hash1);
    }
    $this._size_1 = $this._size_1 + 1 | 0;
    var tmp_1 = $this;
    var tmp_2 = $this.growthLimit_1;
    var tmp_3;
    // Inline function 'androidx.collection.isEmpty' call
    // Inline function 'androidx.collection.readRawMetadata' call
    var offset_1 = index_0;
    if ($this.metadata_1[offset_1 >> 3].shr_9fl3wl_k$((offset_1 & 7) << 3).and_4spn93_k$(new Long(255, 0)).equals(get_Empty())) {
      tmp_3 = 1;
    } else {
      tmp_3 = 0;
    }
    tmp_1.growthLimit_1 = tmp_2 - tmp_3 | 0;
    // Inline function 'androidx.collection.MutableScatterSet.writeMetadata' call
    var index_1 = index_0;
    var value = toLong(hash2);
    var m_0 = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = index_1 >> 3;
    var b_0 = (index_1 & 7) << 3;
    m_0[i_0] = m_0[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    var c = $this._capacity_1;
    var cloneIndex = ((index_1 - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_1 = cloneIndex >> 3;
    var b_1 = (cloneIndex & 7) << 3;
    m_0[i_1] = m_0[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_1).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_1));
    return index_0;
  }
  function findFirstAvailableSlot_18($this, hash1) {
    var probeMask = $this._capacity_1;
    var probeOffset = hash1 & probeMask;
    var probeIndex = 0;
    while (true) {
      // Inline function 'androidx.collection.group' call
      var metadata = $this.metadata_1;
      var offset = probeOffset;
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
      // Inline function 'androidx.collection.maskEmptyOrDeleted' call
      var m = g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb());
      if (!m.equals(new Long(0, 0))) {
        var tmp = probeOffset;
        // Inline function 'androidx.collection.lowestBitSet' call
        return (tmp + (countTrailingZeroBits(m) >> 3) | 0) & probeMask;
      }
      probeIndex = probeIndex + get_GroupWidth() | 0;
      probeOffset = (probeOffset + probeIndex | 0) & probeMask;
    }
  }
  function adjustStorage_18($this) {
    var tmp;
    if ($this._capacity_1 > get_GroupWidth()) {
      // Inline function 'kotlin.ULong.compareTo' call
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_0 = $this._size_1;
      var this_1 = _ULong___init__impl__c78o9k(toLong(this_0));
      var other = _ULong___init__impl__c78o9k(new Long(32, 0));
      var this_2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_1).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other)));
      // Inline function 'kotlin.ULong.times' call
      // Inline function 'kotlin.toULong' call
      var this_3 = $this._capacity_1;
      var this_4 = _ULong___init__impl__c78o9k(toLong(this_3));
      var other_0 = _ULong___init__impl__c78o9k(new Long(25, 0));
      var other_1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_4).times_nfzjiw_k$(_ULong___get_data__impl__fggpzb(other_0)));
      tmp = ulongCompare(_ULong___get_data__impl__fggpzb(this_2), _ULong___get_data__impl__fggpzb(other_1)) <= 0;
    } else {
      tmp = false;
    }
    if (tmp) {
      resizeStorage_18($this, nextCapacity($this._capacity_1));
    } else {
      resizeStorage_18($this, nextCapacity($this._capacity_1));
    }
  }
  function resizeStorage_18($this, newCapacity) {
    var previousMetadata = $this.metadata_1;
    var previousElements = $this.elements_1;
    var previousCapacity = $this._capacity_1;
    initializeStorage_18($this, newCapacity);
    var newElements = $this.elements_1;
    var inductionVariable = 0;
    if (inductionVariable < previousCapacity)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.isFull' call
        // Inline function 'androidx.collection.readRawMetadata' call
        if (previousMetadata[i >> 3].shr_9fl3wl_k$((i & 7) << 3).and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
          var previousElement = previousElements[i];
          // Inline function 'androidx.collection.hash' call
          // Inline function 'kotlin.hashCode' call
          var tmp1_elvis_lhs = previousElement == null ? null : hashCode(previousElement);
          var tmp$ret$2 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
          var hash = imul(tmp$ret$2, get_MurmurHashC1());
          var hash_0 = hash ^ hash << 16;
          // Inline function 'androidx.collection.h1' call
          var tmp$ret$4 = hash_0 >>> 7 | 0;
          var index = findFirstAvailableSlot_18($this, tmp$ret$4);
          // Inline function 'androidx.collection.MutableScatterSet.writeMetadata' call
          // Inline function 'androidx.collection.h2' call
          var tmp$ret$5 = hash_0 & 127;
          var value = toLong(tmp$ret$5);
          var m = $this.metadata_1;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_0 = index >> 3;
          var b = (index & 7) << 3;
          m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
          var c = $this._capacity_1;
          var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
          // Inline function 'androidx.collection.writeRawMetadata' call
          var i_1 = cloneIndex >> 3;
          var b_0 = (cloneIndex & 7) << 3;
          m[i_1] = m[i_1].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
          newElements[index] = previousElement;
        }
      }
       while (inductionVariable < previousCapacity);
  }
  function writeMetadata_18($this, index, value) {
    var m = $this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = $this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
  }
  function MutableSetWrapper($outer) {
    this.$this_2 = $outer;
    SetWrapper.call(this, $outer);
  }
  protoOf(MutableSetWrapper).add_utx5q5_k$ = function (element) {
    return this.$this_2.add_utx5q5_k$(element);
  };
  protoOf(MutableSetWrapper).addAll_4lagoh_k$ = function (elements) {
    return this.$this_2.addAll_6nk5ih_k$(elements);
  };
  protoOf(MutableSetWrapper).clear_j9egeb_k$ = function () {
    this.$this_2.clear_j9egeb_k$();
  };
  protoOf(MutableSetWrapper).iterator_jk1svi_k$ = function () {
    return new MutableScatterSet$MutableSetWrapper$iterator$1(this.$this_2);
  };
  protoOf(MutableSetWrapper).remove_cedx0m_k$ = function (element) {
    return this.$this_2.remove_cedx0m_k$(element);
  };
  protoOf(MutableSetWrapper).retainAll_9fhiib_k$ = function (elements) {
    var changed = false;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.$this_2.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableSetWrapper.retainAll.<anonymous>' call
                  var tmp = this.$this_2.elements_1[index];
                  var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  if (!elements.contains_aljjnj_k$(element)) {
                    this.$this_2.removeElementAt_nbmdj1_k$(index);
                    changed = true;
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
    return changed;
  };
  protoOf(MutableSetWrapper).removeAll_y0z8pe_k$ = function (elements) {
    var oldSize = this.$this_2.get_size_woubt6_k$();
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      this.$this_2.minusAssign_7yer0x_k$(element);
    }
    return !(oldSize === this.$this_2.get_size_woubt6_k$());
  };
  function MutableScatterSet(initialCapacity) {
    initialCapacity = initialCapacity === VOID ? get_DefaultScatterCapacity() : initialCapacity;
    ScatterSet.call(this);
    this.growthLimit_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'androidx.collection.MutableScatterSet.<anonymous>' call
      var message = 'Capacity must be a positive value.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    initializeStorage_18(this, unloadedCapacity(initialCapacity));
  }
  protoOf(MutableScatterSet).add_utx5q5_k$ = function (element) {
    var oldSize = this.get_size_woubt6_k$();
    var index = findAbsoluteInsertIndex_5(this, element);
    this.elements_1[index] = element;
    return !(this.get_size_woubt6_k$() === oldSize);
  };
  protoOf(MutableScatterSet).plusAssign_3eqo3f_k$ = function (element) {
    var index = findAbsoluteInsertIndex_5(this, element);
    this.elements_1[index] = element;
  };
  protoOf(MutableScatterSet).addAll_e39stj_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.plusAssign_q47c8i_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).addAll_6nk5ih_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.plusAssign_yu9f42_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).addAll_l4o7c5_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.plusAssign_lk6778_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).addAll_cozwho_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.plusAssign_lokrvn_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).addAll_l8uguj_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.plusAssign_5cokx0_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).plusAssign_q47c8i_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableScatterSet.plusAssign.<anonymous>' call
      this.plusAssign_3eqo3f_k$(element);
    }
  };
  protoOf(MutableScatterSet).plusAssign_yu9f42_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableScatterSet.plusAssign.<anonymous>' call
      this.plusAssign_3eqo3f_k$(element);
    }
  };
  protoOf(MutableScatterSet).plusAssign_lk6778_k$ = function (elements) {
    // Inline function 'kotlin.sequences.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableScatterSet.plusAssign.<anonymous>' call
      this.plusAssign_3eqo3f_k$(element);
    }
  };
  protoOf(MutableScatterSet).plusAssign_lokrvn_k$ = function (elements) {
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableScatterSet.plusAssign.<anonymous>' call
                  var tmp = k[index];
                  var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.plusAssign_3eqo3f_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableScatterSet).plusAssign_5cokx0_k$ = function (elements) {
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = elements.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = elements.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableScatterSet.plusAssign.<anonymous>' call
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        this.plusAssign_3eqo3f_k$(element);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableScatterSet).remove_cedx0m_k$ = function (element) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = element == null ? null : hashCode(element);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (equals(this.elements_1[index], element)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    var index_0 = tmp$ret$10;
    var exists = index_0 >= 0;
    if (exists) {
      this.removeElementAt_nbmdj1_k$(index_0);
    }
    return exists;
  };
  protoOf(MutableScatterSet).minusAssign_7yer0x_k$ = function (element) {
    var tmp$ret$10;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.findElementIndex' call
      // Inline function 'androidx.collection.hash' call
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = element == null ? null : hashCode(element);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      var hash = imul(tmp$ret$0, get_MurmurHashC1());
      var hash_0 = hash ^ hash << 16;
      // Inline function 'androidx.collection.h2' call
      var hash2 = hash_0 & 127;
      var probeMask = this._capacity_1;
      // Inline function 'androidx.collection.h1' call
      var probeOffset = (hash_0 >>> 7 | 0) & probeMask;
      var probeIndex = 0;
      $l$loop_0: while (true) {
        // Inline function 'androidx.collection.group' call
        var metadata = this.metadata_1;
        var offset = probeOffset;
        var i = offset >> 3;
        var b = (offset & 7) << 3;
        var g = metadata[i].ushr_z7nmq8_k$(b).or_v7fvkl_k$(metadata[i + 1 | 0].shl_bg8if3_k$(64 - b | 0).and_4spn93_k$(toLong(b).unaryMinus_6uz0qp_k$().shr_9fl3wl_k$(63)));
        // Inline function 'androidx.collection.match' call
        // Inline function 'kotlin.Long.times' call
        var tmp$ret$5 = get_BitmaskLsb().times_nfzjiw_k$(toLong(hash2));
        var x = g.xor_qzz94j_k$(tmp$ret$5);
        var m = x.minus_mfbszm_k$(get_BitmaskLsb()).and_4spn93_k$(x.inv_28kx_k$()).and_4spn93_k$(get_BitmaskMsb());
        $l$loop: while (true) {
          // Inline function 'androidx.collection.hasNext' call
          if (!!m.equals(new Long(0, 0))) {
            break $l$loop;
          }
          var tmp = probeOffset;
          // Inline function 'androidx.collection.get' call
          // Inline function 'androidx.collection.lowestBitSet' call
          var this_0 = m;
          var index = (tmp + (countTrailingZeroBits(this_0) >> 3) | 0) & probeMask;
          if (equals(this.elements_1[index], element)) {
            tmp$ret$10 = index;
            break $l$block;
          }
          // Inline function 'androidx.collection.next' call
          var this_1 = m;
          m = this_1.and_4spn93_k$(this_1.minus_mfbszm_k$(new Long(1, 0)));
        }
        // Inline function 'androidx.collection.maskEmpty' call
        if (!g.and_4spn93_k$(g.inv_28kx_k$().shl_bg8if3_k$(6)).and_4spn93_k$(get_BitmaskMsb()).equals(new Long(0, 0))) {
          break $l$loop_0;
        }
        probeIndex = probeIndex + get_GroupWidth() | 0;
        probeOffset = (probeOffset + probeIndex | 0) & probeMask;
      }
      tmp$ret$10 = -1;
    }
    var index_0 = tmp$ret$10;
    if (index_0 >= 0) {
      this.removeElementAt_nbmdj1_k$(index_0);
    }
  };
  protoOf(MutableScatterSet).removeAll_r8bmtm_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.minusAssign_r4ws7c_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).removeAll_6m56ag_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.minusAssign_u5y3zq_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).removeAll_wwkcme_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.minusAssign_mt30iw_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).removeAll_japhi9_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.minusAssign_z32q5_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).removeAll_hsk74o_k$ = function (elements) {
    var oldSize = this.get_size_woubt6_k$();
    this.minusAssign_q26a2i_k$(elements);
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(MutableScatterSet).minusAssign_r4ws7c_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = elements.length;
    while (inductionVariable < last) {
      var element = elements[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.collection.MutableScatterSet.minusAssign.<anonymous>' call
      this.minusAssign_7yer0x_k$(element);
    }
  };
  protoOf(MutableScatterSet).minusAssign_u5y3zq_k$ = function (elements) {
    // Inline function 'kotlin.sequences.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableScatterSet.minusAssign.<anonymous>' call
      this.minusAssign_7yer0x_k$(element);
    }
  };
  protoOf(MutableScatterSet).minusAssign_mt30iw_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.collection.MutableScatterSet.minusAssign.<anonymous>' call
      this.minusAssign_7yer0x_k$(element);
    }
  };
  protoOf(MutableScatterSet).minusAssign_z32q5_k$ = function (elements) {
    // Inline function 'androidx.collection.ScatterSet.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var k = elements.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = elements.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.ScatterSet.forEach.<anonymous>' call
                  // Inline function 'androidx.collection.MutableScatterSet.minusAssign.<anonymous>' call
                  var tmp = k[index];
                  var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
                  this.minusAssign_7yer0x_k$(element);
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableScatterSet).minusAssign_q26a2i_k$ = function (elements) {
    // Inline function 'androidx.collection.ObjectList.forEach' call
    // Inline function 'kotlin.contracts.contract' call
    var content = elements.get_content_h02jrk_k$();
    var inductionVariable = 0;
    var last = elements.get__size_inpkfr_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.collection.MutableScatterSet.minusAssign.<anonymous>' call
        var tmp = content[i];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        this.minusAssign_7yer0x_k$(element);
      }
       while (inductionVariable < last);
  };
  protoOf(MutableScatterSet).removeIf_3serzi_k$ = function (predicate) {
    var elements = this.elements_1;
    $l$block: {
      // Inline function 'androidx.collection.ScatterSet.forEachIndex' call
      // Inline function 'kotlin.contracts.contract' call
      var m = this.metadata_1;
      var lastIndex = m.length - 2 | 0;
      var inductionVariable = 0;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var slot = m[i];
          // Inline function 'androidx.collection.maskEmptyOrDeleted' call
          var this_0 = slot;
          if (!this_0.and_4spn93_k$(this_0.inv_28kx_k$().shl_bg8if3_k$(7)).and_4spn93_k$(get_BitmaskMsb()).equals(get_BitmaskMsb())) {
            var bitCount = 8 - (~(i - lastIndex | 0) >>> 31 | 0) | 0;
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < bitCount)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.collection.isFull' call
                if (slot.and_4spn93_k$(new Long(255, 0)).compareTo_9jj042_k$(new Long(128, 0)) < 0) {
                  var index = (i << 3) + j | 0;
                  // Inline function 'androidx.collection.MutableScatterSet.removeIf.<anonymous>' call
                  var tmp = elements[index];
                  if (predicate((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
                    this.removeElementAt_nbmdj1_k$(index);
                  }
                }
                slot = slot.shr_9fl3wl_k$(8);
              }
               while (inductionVariable_0 < bitCount);
            if (!(bitCount === 8)) {
              break $l$block;
            }
          }
        }
         while (!(i === lastIndex));
    }
  };
  protoOf(MutableScatterSet).removeElementAt_nbmdj1_k$ = function (index) {
    this._size_1 = this._size_1 - 1 | 0;
    // Inline function 'androidx.collection.MutableScatterSet.writeMetadata' call
    var value = get_Deleted();
    var m = this.metadata_1;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i = index >> 3;
    var b = (index & 7) << 3;
    m[i] = m[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    var c = this._capacity_1;
    var cloneIndex = ((index - get_ClonedMetadataCount() | 0) & c) + (get_ClonedMetadataCount() & c) | 0;
    // Inline function 'androidx.collection.writeRawMetadata' call
    var i_0 = cloneIndex >> 3;
    var b_0 = (cloneIndex & 7) << 3;
    m[i_0] = m[i_0].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b_0).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b_0));
    this.elements_1[index] = null;
  };
  protoOf(MutableScatterSet).clear_j9egeb_k$ = function () {
    this._size_1 = 0;
    if (!(this.metadata_1 === get_EmptyGroup())) {
      fill(this.metadata_1, get_AllEmpty());
      // Inline function 'androidx.collection.writeRawMetadata' call
      var data = this.metadata_1;
      var offset = this._capacity_1;
      var value = get_Sentinel();
      var i = offset >> 3;
      var b = (offset & 7) << 3;
      data[i] = data[i].and_4spn93_k$((new Long(255, 0)).shl_bg8if3_k$(b).inv_28kx_k$()).or_v7fvkl_k$(value.shl_bg8if3_k$(b));
    }
    fill_0(this.elements_1, null, 0, this._capacity_1);
    initializeGrowth_18(this);
  };
  protoOf(MutableScatterSet).trim_24hlu_k$ = function () {
    var previousCapacity = this._capacity_1;
    var newCapacity = normalizeCapacity(unloadedCapacity(this._size_1));
    if (newCapacity < previousCapacity) {
      resizeStorage_18(this, newCapacity);
      return previousCapacity - this._capacity_1 | 0;
    }
    return 0;
  };
  protoOf(MutableScatterSet).asMutableSet_bx3rgy_k$ = function () {
    return new MutableSetWrapper(this);
  };
  function mutableScatterSetOf() {
    _init_properties_ScatterSet_kt__vy48mc();
    return new MutableScatterSet();
  }
  var properties_initialized_ScatterSet_kt_dmj456;
  function _init_properties_ScatterSet_kt__vy48mc() {
    if (!properties_initialized_ScatterSet_kt_dmj456) {
      properties_initialized_ScatterSet_kt_dmj456 = true;
      EmptyScatterSet = new MutableScatterSet(0);
    }
  }
  function get_DELETED_0() {
    _init_properties_SparseArrayCompat_kt__9he7pl();
    return DELETED_0;
  }
  var DELETED_0;
  var properties_initialized_SparseArrayCompat_kt_h7ddor;
  function _init_properties_SparseArrayCompat_kt__9he7pl() {
    if (!properties_initialized_SparseArrayCompat_kt_h7ddor) {
      properties_initialized_SparseArrayCompat_kt_h7ddor = true;
      DELETED_0 = new Object();
    }
  }
  function get_EMPTY_INTS() {
    _init_properties_ContainerHelpers_kt__6fon4s();
    return EMPTY_INTS;
  }
  var EMPTY_INTS;
  function get_EMPTY_LONGS() {
    _init_properties_ContainerHelpers_kt__6fon4s();
    return EMPTY_LONGS;
  }
  var EMPTY_LONGS;
  function get_EMPTY_OBJECTS() {
    _init_properties_ContainerHelpers_kt__6fon4s();
    return EMPTY_OBJECTS;
  }
  var EMPTY_OBJECTS;
  var properties_initialized_ContainerHelpers_kt_9fe6be;
  function _init_properties_ContainerHelpers_kt__6fon4s() {
    if (!properties_initialized_ContainerHelpers_kt_9fe6be) {
      properties_initialized_ContainerHelpers_kt_9fe6be = true;
      EMPTY_INTS = new Int32Array(0);
      EMPTY_LONGS = longArray(0);
      // Inline function 'kotlin.arrayOfNulls' call
      EMPTY_OBJECTS = fillArrayVal(Array(0), null);
    }
  }
  //region block: init
  DefaultScatterCapacity = 6;
  ClonedMetadataCount = 7;
  AllEmpty = new Long(-2139062144, -2139062144);
  Sentinel = new Long(255, 0);
  Deleted = new Long(254, 0);
  GroupWidth = 8;
  BitmaskMsb = new Long(-2139062144, -2139062144);
  MurmurHashC1 = -862048943;
  BitmaskLsb = new Long(16843009, 16843009);
  Empty = new Long(128, 0);
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = get_BitmaskMsb;
  _.$_$.b = MutableIntIntMap;
  _.$_$.c = MutableObjectIntMap;
  _.$_$.d = MutableScatterMap;
  _.$_$.e = MutableScatterSet;
  _.$_$.f = mutableScatterMapOf;
  _.$_$.g = mutableScatterSetOf;
  //endregion
  return _;
}));
